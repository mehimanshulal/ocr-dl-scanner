{
  "version": 3,
  "sources": ["../../../../../../node_modules/omggif/omggif.js", "../../../../../../node_modules/gifwrap/src/bitmapimage.js", "../../../../../../node_modules/gifwrap/src/gif.js", "../../../../../../node_modules/image-q/dist/cjs/image-q.cjs", "../../../../../../node_modules/gifwrap/src/gifframe.js", "../../../../../../node_modules/gifwrap/src/gifutil.js", "../../../../../../node_modules/gifwrap/src/gifcodec.js", "../../../../../../node_modules/gifwrap/src/index.js", "../../../../../../node_modules/jpeg-js/lib/encoder.js", "../../../../../../node_modules/jpeg-js/lib/decoder.js", "../../../../../../node_modules/jpeg-js/index.js", "../../../../../../node_modules/pngjs/lib/chunkstream.js", "../../../../../../node_modules/pngjs/lib/interlace.js", "../../../../../../node_modules/pngjs/lib/paeth-predictor.js", "../../../../../../node_modules/pngjs/lib/filter-parse.js", "../../../../../../node_modules/pngjs/lib/filter-parse-async.js", "../../../../../../node_modules/pngjs/lib/constants.js", "../../../../../../node_modules/pngjs/lib/crc.js", "../../../../../../node_modules/pngjs/lib/parser.js", "../../../../../../node_modules/pngjs/lib/bitmapper.js", "../../../../../../node_modules/pngjs/lib/format-normaliser.js", "../../../../../../node_modules/pngjs/lib/parser-async.js", "../../../../../../node_modules/pngjs/lib/bitpacker.js", "../../../../../../node_modules/pngjs/lib/filter-pack.js", "../../../../../../node_modules/pngjs/lib/packer.js", "../../../../../../node_modules/pngjs/lib/packer-async.js", "../../../../../../node_modules/pngjs/lib/sync-inflate.js", "../../../../../../node_modules/pngjs/lib/sync-reader.js", "../../../../../../node_modules/pngjs/lib/filter-parse-sync.js", "../../../../../../node_modules/pngjs/lib/parser-sync.js", "../../../../../../node_modules/pngjs/lib/packer-sync.js", "../../../../../../node_modules/pngjs/lib/png-sync.js", "../../../../../../node_modules/pngjs/lib/png.js", "../../../../../../node_modules/pako/lib/utils/common.js", "../../../../../../node_modules/pako/lib/zlib/trees.js", "../../../../../../node_modules/pako/lib/zlib/adler32.js", "../../../../../../node_modules/pako/lib/zlib/crc32.js", "../../../../../../node_modules/pako/lib/zlib/messages.js", "../../../../../../node_modules/pako/lib/zlib/deflate.js", "../../../../../../node_modules/pako/lib/utils/strings.js", "../../../../../../node_modules/pako/lib/zlib/zstream.js", "../../../../../../node_modules/pako/lib/deflate.js", "../../../../../../node_modules/pako/lib/zlib/inffast.js", "../../../../../../node_modules/pako/lib/zlib/inftrees.js", "../../../../../../node_modules/pako/lib/zlib/inflate.js", "../../../../../../node_modules/pako/lib/zlib/constants.js", "../../../../../../node_modules/pako/lib/zlib/gzheader.js", "../../../../../../node_modules/pako/lib/inflate.js", "../../../../../../node_modules/pako/index.js", "../../../../../../node_modules/utif2/UTIF.js", "../../../../../../node_modules/ieee754/index.js", "../../../../../../node_modules/token-types/lib/index.js", "../../../../../../node_modules/peek-readable/lib/EndOfFileStream.js", "../../../../../../node_modules/peek-readable/lib/Deferred.js", "../../../../../../node_modules/peek-readable/lib/StreamReader.js", "../../../../../../node_modules/peek-readable/lib/index.js", "../../../../../../node_modules/strtok3/lib/AbstractTokenizer.js", "../../../../../../node_modules/strtok3/lib/ReadStreamTokenizer.js", "../../../../../../node_modules/strtok3/lib/BufferTokenizer.js", "../../../../../../node_modules/strtok3/lib/core.js", "../../../../../../node_modules/file-type/util.js", "../../../../../../node_modules/file-type/supported.js", "../../../../../../node_modules/file-type/core.js", "../../../../../../node_modules/mime/Mime.js", "../../../../../../node_modules/mime/types/standard.js", "../../../../../../node_modules/mime/lite.js", "../../../../../../node_modules/exif-parser/lib/jpeg.js", "../../../../../../node_modules/exif-parser/lib/exif.js", "../../../../../../node_modules/exif-parser/lib/date.js", "../../../../../../node_modules/exif-parser/lib/simplify.js", "../../../../../../node_modules/exif-parser/lib/exif-tags.js", "../../../../../../node_modules/exif-parser/lib/parser.js", "../../../../../../node_modules/exif-parser/lib/dom-bufferstream.js", "../../../../../../node_modules/exif-parser/lib/bufferstream.js", "../../../../../../node_modules/exif-parser/index.js", "../../../../../../node_modules/any-base/src/converter.js", "../../../../../../node_modules/any-base/index.js", "../../../../../../node_modules/parse-bmfont-ascii/index.js", "../../../../../../node_modules/xml2js/lib/defaults.js", "../../../../../../node_modules/xmlbuilder/lib/Utility.js", "../../../../../../node_modules/xmlbuilder/lib/XMLDOMImplementation.js", "../../../../../../node_modules/xmlbuilder/lib/XMLDOMErrorHandler.js", "../../../../../../node_modules/xmlbuilder/lib/XMLDOMStringList.js", "../../../../../../node_modules/xmlbuilder/lib/XMLDOMConfiguration.js", "../../../../../../node_modules/xmlbuilder/lib/NodeType.js", "../../../../../../node_modules/xmlbuilder/lib/XMLAttribute.js", "../../../../../../node_modules/xmlbuilder/lib/XMLNamedNodeMap.js", "../../../../../../node_modules/xmlbuilder/lib/XMLElement.js", "../../../../../../node_modules/xmlbuilder/lib/XMLCharacterData.js", "../../../../../../node_modules/xmlbuilder/lib/XMLCData.js", "../../../../../../node_modules/xmlbuilder/lib/XMLComment.js", "../../../../../../node_modules/xmlbuilder/lib/XMLDeclaration.js", "../../../../../../node_modules/xmlbuilder/lib/XMLDTDAttList.js", "../../../../../../node_modules/xmlbuilder/lib/XMLDTDEntity.js", "../../../../../../node_modules/xmlbuilder/lib/XMLDTDElement.js", "../../../../../../node_modules/xmlbuilder/lib/XMLDTDNotation.js", "../../../../../../node_modules/xmlbuilder/lib/XMLDocType.js", "../../../../../../node_modules/xmlbuilder/lib/XMLRaw.js", "../../../../../../node_modules/xmlbuilder/lib/XMLText.js", "../../../../../../node_modules/xmlbuilder/lib/XMLProcessingInstruction.js", "../../../../../../node_modules/xmlbuilder/lib/XMLDummy.js", "../../../../../../node_modules/xmlbuilder/lib/XMLNodeList.js", "../../../../../../node_modules/xmlbuilder/lib/DocumentPosition.js", "../../../../../../node_modules/xmlbuilder/lib/XMLNode.js", "../../../../../../node_modules/xmlbuilder/lib/XMLStringifier.js", "../../../../../../node_modules/xmlbuilder/lib/WriterState.js", "../../../../../../node_modules/xmlbuilder/lib/XMLWriterBase.js", "../../../../../../node_modules/xmlbuilder/lib/XMLStringWriter.js", "../../../../../../node_modules/xmlbuilder/lib/XMLDocument.js", "../../../../../../node_modules/xmlbuilder/lib/XMLDocumentCB.js", "../../../../../../node_modules/xmlbuilder/lib/XMLStreamWriter.js", "../../../../../../node_modules/xmlbuilder/lib/index.js", "../../../../../../node_modules/xml2js/lib/builder.js", "../../../../../../node_modules/sax/lib/sax.js", "../../../../../../node_modules/xml2js/lib/bom.js", "../../../../../../node_modules/xml2js/lib/processors.js", "../../../../../../node_modules/xml2js/lib/parser.js", "../../../../../../node_modules/xml2js/lib/xml2js.js", "../../../../../../node_modules/parse-bmfont-xml/lib/parse-attribs.js", "../../../../../../node_modules/parse-bmfont-xml/lib/index.js", "../../../../../../node_modules/parse-bmfont-binary/index.js", "../../../../../../node_modules/simple-xml-to-json/lib/simpleXmlToJson.min.js", "../../../../../../node_modules/pixelmatch/index.js", "../../../../../../node_modules/bmp-ts/dist/esm/header-types.js", "../../../../../../node_modules/bmp-ts/dist/esm/mask-color.js", "../../../../../../node_modules/bmp-ts/dist/esm/types.js", "../../../../../../node_modules/bmp-ts/dist/esm/decoder.js", "../../../../../../node_modules/bmp-ts/dist/esm/encoder.js", "../../../../../../node_modules/bmp-ts/dist/esm/index.js", "../../../../../../node_modules/tinycolor2/esm/tinycolor.js", "../../../../../../node_modules/@jimp/utils/dist/esm/index.js", "../../../../../../node_modules/@jimp/js-bmp/dist/esm/index.js", "../../../../../../node_modules/@jimp/js-gif/dist/esm/index.js", "../../../../../../node_modules/@jimp/js-jpeg/dist/esm/index.js", "../../../../../../node_modules/@jimp/js-png/dist/esm/index.js", "../../../../../../node_modules/@jimp/js-png/dist/esm/constants.js", "../../../../../../node_modules/@jimp/js-tiff/dist/esm/index.js", "../../../../../../node_modules/zod/lib/index.mjs", "../../../../../../node_modules/@jimp/types/dist/esm/index.js", "../../../../../../node_modules/@jimp/plugin-blit/dist/esm/index.js", "../../../../../../node_modules/@jimp/plugin-blur/dist/esm/blur-tables.js", "../../../../../../node_modules/@jimp/plugin-blur/dist/esm/index.js", "../../../../../../node_modules/@jimp/plugin-circle/dist/esm/index.js", "../../../../../../node_modules/@jimp/plugin-color/dist/esm/index.js", "../../../../../../node_modules/@jimp/core/dist/esm/index.js", "../../../../../../node_modules/await-to-js/dist/await-to-js.es5.js", "../../../../../../node_modules/@jimp/file-ops/dist/esm/index.js", "../../../../../../node_modules/@jimp/core/dist/esm/utils/constants.js", "../../../../../../node_modules/@jimp/core/dist/esm/utils/composite-modes.js", "../../../../../../node_modules/@jimp/core/dist/esm/utils/composite.js", "../../../../../../node_modules/@jimp/core/dist/esm/utils/image-bitmap.js", "../../../../../../node_modules/@jimp/plugin-resize/dist/esm/constants.js", "../../../../../../node_modules/@jimp/plugin-resize/dist/esm/modules/resize.js", "../../../../../../node_modules/@jimp/plugin-resize/dist/esm/modules/resize2.js", "../../../../../../node_modules/@jimp/plugin-resize/dist/esm/index.js", "../../../../../../node_modules/@jimp/plugin-contain/dist/esm/index.js", "../../../../../../node_modules/@jimp/plugin-crop/dist/esm/index.js", "../../../../../../node_modules/@jimp/plugin-cover/dist/esm/index.js", "../../../../../../node_modules/@jimp/plugin-displace/dist/esm/index.js", "../../../../../../node_modules/@jimp/plugin-dither/dist/esm/index.js", "../../../../../../node_modules/@jimp/plugin-fisheye/dist/esm/index.js", "../../../../../../node_modules/@jimp/plugin-flip/dist/esm/index.js", "../../../../../../node_modules/@jimp/plugin-hash/dist/esm/index.js", "../../../../../../node_modules/@jimp/plugin-hash/dist/esm/phash.js", "../../../../../../node_modules/@jimp/plugin-mask/dist/esm/index.js", "../../../../../../node_modules/@jimp/plugin-print/dist/esm/measure-text.js", "../../../../../../node_modules/@jimp/plugin-print/dist/esm/index.js", "../../../../../../node_modules/@jimp/plugin-rotate/dist/esm/index.js", "../../../../../../node_modules/@jimp/plugin-threshold/dist/esm/index.js", "../../../../../../node_modules/image-q/dist/esm/image-q.mjs", "../../../../../../node_modules/@jimp/plugin-quantize/dist/esm/index.js", "../../../../../../node_modules/@jimp/plugin-print/dist/esm/load-bitmap-font.js", "../../../../../../node_modules/@jimp/plugin-print/dist/esm/load-font.js", "../../../../../../node_modules/@jimp/diff/dist/esm/index.js", "../../../../../../node_modules/jimp/dist/esm/index.js"],
  "sourcesContent": ["// (c) Dean McNamee <dean@gmail.com>, 2013.\n//\n// https://github.com/deanm/omggif\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n//\n// omggif is a JavaScript implementation of a GIF 89a encoder and decoder,\n// including animation and compression.  It does not rely on any specific\n// underlying system, so should run in the browser, Node, or Plask.\n\n\"use strict\";\n\nfunction GifWriter(buf, width, height, gopts) {\n  var p = 0;\n  var gopts = gopts === undefined ? {} : gopts;\n  var loop_count = gopts.loop === undefined ? null : gopts.loop;\n  var global_palette = gopts.palette === undefined ? null : gopts.palette;\n  if (width <= 0 || height <= 0 || width > 65535 || height > 65535) throw new Error(\"Width/Height invalid.\");\n  function check_palette_and_num_colors(palette) {\n    var num_colors = palette.length;\n    if (num_colors < 2 || num_colors > 256 || num_colors & num_colors - 1) {\n      throw new Error(\"Invalid code/color length, must be power of 2 and 2 .. 256.\");\n    }\n    return num_colors;\n  }\n\n  // - Header.\n  buf[p++] = 0x47;\n  buf[p++] = 0x49;\n  buf[p++] = 0x46; // GIF\n  buf[p++] = 0x38;\n  buf[p++] = 0x39;\n  buf[p++] = 0x61; // 89a\n\n  // Handling of Global Color Table (palette) and background index.\n  var gp_num_colors_pow2 = 0;\n  var background = 0;\n  if (global_palette !== null) {\n    var gp_num_colors = check_palette_and_num_colors(global_palette);\n    while (gp_num_colors >>= 1) ++gp_num_colors_pow2;\n    gp_num_colors = 1 << gp_num_colors_pow2;\n    --gp_num_colors_pow2;\n    if (gopts.background !== undefined) {\n      background = gopts.background;\n      if (background >= gp_num_colors) throw new Error(\"Background index out of range.\");\n      // The GIF spec states that a background index of 0 should be ignored, so\n      // this is probably a mistake and you really want to set it to another\n      // slot in the palette.  But actually in the end most browsers, etc end\n      // up ignoring this almost completely (including for dispose background).\n      if (background === 0) throw new Error(\"Background index explicitly passed as 0.\");\n    }\n  }\n\n  // - Logical Screen Descriptor.\n  // NOTE(deanm): w/h apparently ignored by implementations, but set anyway.\n  buf[p++] = width & 0xff;\n  buf[p++] = width >> 8 & 0xff;\n  buf[p++] = height & 0xff;\n  buf[p++] = height >> 8 & 0xff;\n  // NOTE: Indicates 0-bpp original color resolution (unused?).\n  buf[p++] = (global_palette !== null ? 0x80 : 0) |\n  // Global Color Table Flag.\n  gp_num_colors_pow2; // NOTE: No sort flag (unused?).\n  buf[p++] = background; // Background Color Index.\n  buf[p++] = 0; // Pixel aspect ratio (unused?).\n\n  // - Global Color Table\n  if (global_palette !== null) {\n    for (var i = 0, il = global_palette.length; i < il; ++i) {\n      var rgb = global_palette[i];\n      buf[p++] = rgb >> 16 & 0xff;\n      buf[p++] = rgb >> 8 & 0xff;\n      buf[p++] = rgb & 0xff;\n    }\n  }\n  if (loop_count !== null) {\n    // Netscape block for looping.\n    if (loop_count < 0 || loop_count > 65535) throw new Error(\"Loop count invalid.\");\n    // Extension code, label, and length.\n    buf[p++] = 0x21;\n    buf[p++] = 0xff;\n    buf[p++] = 0x0b;\n    // NETSCAPE2.0\n    buf[p++] = 0x4e;\n    buf[p++] = 0x45;\n    buf[p++] = 0x54;\n    buf[p++] = 0x53;\n    buf[p++] = 0x43;\n    buf[p++] = 0x41;\n    buf[p++] = 0x50;\n    buf[p++] = 0x45;\n    buf[p++] = 0x32;\n    buf[p++] = 0x2e;\n    buf[p++] = 0x30;\n    // Sub-block\n    buf[p++] = 0x03;\n    buf[p++] = 0x01;\n    buf[p++] = loop_count & 0xff;\n    buf[p++] = loop_count >> 8 & 0xff;\n    buf[p++] = 0x00; // Terminator.\n  }\n  var ended = false;\n  this.addFrame = function (x, y, w, h, indexed_pixels, opts) {\n    if (ended === true) {\n      --p;\n      ended = false;\n    } // Un-end.\n\n    opts = opts === undefined ? {} : opts;\n\n    // TODO(deanm): Bounds check x, y.  Do they need to be within the virtual\n    // canvas width/height, I imagine?\n    if (x < 0 || y < 0 || x > 65535 || y > 65535) throw new Error(\"x/y invalid.\");\n    if (w <= 0 || h <= 0 || w > 65535 || h > 65535) throw new Error(\"Width/Height invalid.\");\n    if (indexed_pixels.length < w * h) throw new Error(\"Not enough pixels for the frame size.\");\n    var using_local_palette = true;\n    var palette = opts.palette;\n    if (palette === undefined || palette === null) {\n      using_local_palette = false;\n      palette = global_palette;\n    }\n    if (palette === undefined || palette === null) throw new Error(\"Must supply either a local or global palette.\");\n    var num_colors = check_palette_and_num_colors(palette);\n\n    // Compute the min_code_size (power of 2), destroying num_colors.\n    var min_code_size = 0;\n    while (num_colors >>= 1) ++min_code_size;\n    num_colors = 1 << min_code_size; // Now we can easily get it back.\n\n    var delay = opts.delay === undefined ? 0 : opts.delay;\n\n    // From the spec:\n    //     0 -   No disposal specified. The decoder is\n    //           not required to take any action.\n    //     1 -   Do not dispose. The graphic is to be left\n    //           in place.\n    //     2 -   Restore to background color. The area used by the\n    //           graphic must be restored to the background color.\n    //     3 -   Restore to previous. The decoder is required to\n    //           restore the area overwritten by the graphic with\n    //           what was there prior to rendering the graphic.\n    //  4-7 -    To be defined.\n    // NOTE(deanm): Dispose background doesn't really work, apparently most\n    // browsers ignore the background palette index and clear to transparency.\n    var disposal = opts.disposal === undefined ? 0 : opts.disposal;\n    if (disposal < 0 || disposal > 3)\n      // 4-7 is reserved.\n      throw new Error(\"Disposal out of range.\");\n    var use_transparency = false;\n    var transparent_index = 0;\n    if (opts.transparent !== undefined && opts.transparent !== null) {\n      use_transparency = true;\n      transparent_index = opts.transparent;\n      if (transparent_index < 0 || transparent_index >= num_colors) throw new Error(\"Transparent color index.\");\n    }\n    if (disposal !== 0 || use_transparency || delay !== 0) {\n      // - Graphics Control Extension\n      buf[p++] = 0x21;\n      buf[p++] = 0xf9; // Extension / Label.\n      buf[p++] = 4; // Byte size.\n\n      buf[p++] = disposal << 2 | (use_transparency === true ? 1 : 0);\n      buf[p++] = delay & 0xff;\n      buf[p++] = delay >> 8 & 0xff;\n      buf[p++] = transparent_index; // Transparent color index.\n      buf[p++] = 0; // Block Terminator.\n    }\n\n    // - Image Descriptor\n    buf[p++] = 0x2c; // Image Seperator.\n    buf[p++] = x & 0xff;\n    buf[p++] = x >> 8 & 0xff; // Left.\n    buf[p++] = y & 0xff;\n    buf[p++] = y >> 8 & 0xff; // Top.\n    buf[p++] = w & 0xff;\n    buf[p++] = w >> 8 & 0xff;\n    buf[p++] = h & 0xff;\n    buf[p++] = h >> 8 & 0xff;\n    // NOTE: No sort flag (unused?).\n    // TODO(deanm): Support interlace.\n    buf[p++] = using_local_palette === true ? 0x80 | min_code_size - 1 : 0;\n\n    // - Local Color Table\n    if (using_local_palette === true) {\n      for (var i = 0, il = palette.length; i < il; ++i) {\n        var rgb = palette[i];\n        buf[p++] = rgb >> 16 & 0xff;\n        buf[p++] = rgb >> 8 & 0xff;\n        buf[p++] = rgb & 0xff;\n      }\n    }\n    p = GifWriterOutputLZWCodeStream(buf, p, min_code_size < 2 ? 2 : min_code_size, indexed_pixels);\n    return p;\n  };\n  this.end = function () {\n    if (ended === false) {\n      buf[p++] = 0x3b; // Trailer.\n      ended = true;\n    }\n    return p;\n  };\n  this.getOutputBuffer = function () {\n    return buf;\n  };\n  this.setOutputBuffer = function (v) {\n    buf = v;\n  };\n  this.getOutputBufferPosition = function () {\n    return p;\n  };\n  this.setOutputBufferPosition = function (v) {\n    p = v;\n  };\n}\n\n// Main compression routine, palette indexes -> LZW code stream.\n// |index_stream| must have at least one entry.\nfunction GifWriterOutputLZWCodeStream(buf, p, min_code_size, index_stream) {\n  buf[p++] = min_code_size;\n  var cur_subblock = p++; // Pointing at the length field.\n\n  var clear_code = 1 << min_code_size;\n  var code_mask = clear_code - 1;\n  var eoi_code = clear_code + 1;\n  var next_code = eoi_code + 1;\n  var cur_code_size = min_code_size + 1; // Number of bits per code.\n  var cur_shift = 0;\n  // We have at most 12-bit codes, so we should have to hold a max of 19\n  // bits here (and then we would write out).\n  var cur = 0;\n  function emit_bytes_to_buffer(bit_block_size) {\n    while (cur_shift >= bit_block_size) {\n      buf[p++] = cur & 0xff;\n      cur >>= 8;\n      cur_shift -= 8;\n      if (p === cur_subblock + 256) {\n        // Finished a subblock.\n        buf[cur_subblock] = 255;\n        cur_subblock = p++;\n      }\n    }\n  }\n  function emit_code(c) {\n    cur |= c << cur_shift;\n    cur_shift += cur_code_size;\n    emit_bytes_to_buffer(8);\n  }\n\n  // I am not an expert on the topic, and I don't want to write a thesis.\n  // However, it is good to outline here the basic algorithm and the few data\n  // structures and optimizations here that make this implementation fast.\n  // The basic idea behind LZW is to build a table of previously seen runs\n  // addressed by a short id (herein called output code).  All data is\n  // referenced by a code, which represents one or more values from the\n  // original input stream.  All input bytes can be referenced as the same\n  // value as an output code.  So if you didn't want any compression, you\n  // could more or less just output the original bytes as codes (there are\n  // some details to this, but it is the idea).  In order to achieve\n  // compression, values greater then the input range (codes can be up to\n  // 12-bit while input only 8-bit) represent a sequence of previously seen\n  // inputs.  The decompressor is able to build the same mapping while\n  // decoding, so there is always a shared common knowledge between the\n  // encoding and decoder, which is also important for \"timing\" aspects like\n  // how to handle variable bit width code encoding.\n  //\n  // One obvious but very important consequence of the table system is there\n  // is always a unique id (at most 12-bits) to map the runs.  'A' might be\n  // 4, then 'AA' might be 10, 'AAA' 11, 'AAAA' 12, etc.  This relationship\n  // can be used for an effecient lookup strategy for the code mapping.  We\n  // need to know if a run has been seen before, and be able to map that run\n  // to the output code.  Since we start with known unique ids (input bytes),\n  // and then from those build more unique ids (table entries), we can\n  // continue this chain (almost like a linked list) to always have small\n  // integer values that represent the current byte chains in the encoder.\n  // This means instead of tracking the input bytes (AAAABCD) to know our\n  // current state, we can track the table entry for AAAABC (it is guaranteed\n  // to exist by the nature of the algorithm) and the next character D.\n  // Therefor the tuple of (table_entry, byte) is guaranteed to also be\n  // unique.  This allows us to create a simple lookup key for mapping input\n  // sequences to codes (table indices) without having to store or search\n  // any of the code sequences.  So if 'AAAA' has a table entry of 12, the\n  // tuple of ('AAAA', K) for any input byte K will be unique, and can be our\n  // key.  This leads to a integer value at most 20-bits, which can always\n  // fit in an SMI value and be used as a fast sparse array / object key.\n\n  // Output code for the current contents of the index buffer.\n  var ib_code = index_stream[0] & code_mask; // Load first input index.\n  var code_table = {}; // Key'd on our 20-bit \"tuple\".\n\n  emit_code(clear_code); // Spec says first code should be a clear code.\n\n  // First index already loaded, process the rest of the stream.\n  for (var i = 1, il = index_stream.length; i < il; ++i) {\n    var k = index_stream[i] & code_mask;\n    var cur_key = ib_code << 8 | k; // (prev, k) unique tuple.\n    var cur_code = code_table[cur_key]; // buffer + k.\n\n    // Check if we have to create a new code table entry.\n    if (cur_code === undefined) {\n      // We don't have buffer + k.\n      // Emit index buffer (without k).\n      // This is an inline version of emit_code, because this is the core\n      // writing routine of the compressor (and V8 cannot inline emit_code\n      // because it is a closure here in a different context).  Additionally\n      // we can call emit_byte_to_buffer less often, because we can have\n      // 30-bits (from our 31-bit signed SMI), and we know our codes will only\n      // be 12-bits, so can safely have 18-bits there without overflow.\n      // emit_code(ib_code);\n      cur |= ib_code << cur_shift;\n      cur_shift += cur_code_size;\n      while (cur_shift >= 8) {\n        buf[p++] = cur & 0xff;\n        cur >>= 8;\n        cur_shift -= 8;\n        if (p === cur_subblock + 256) {\n          // Finished a subblock.\n          buf[cur_subblock] = 255;\n          cur_subblock = p++;\n        }\n      }\n      if (next_code === 4096) {\n        // Table full, need a clear.\n        emit_code(clear_code);\n        next_code = eoi_code + 1;\n        cur_code_size = min_code_size + 1;\n        code_table = {};\n      } else {\n        // Table not full, insert a new entry.\n        // Increase our variable bit code sizes if necessary.  This is a bit\n        // tricky as it is based on \"timing\" between the encoding and\n        // decoder.  From the encoders perspective this should happen after\n        // we've already emitted the index buffer and are about to create the\n        // first table entry that would overflow our current code bit size.\n        if (next_code >= 1 << cur_code_size) ++cur_code_size;\n        code_table[cur_key] = next_code++; // Insert into code table.\n      }\n      ib_code = k; // Index buffer to single input k.\n    } else {\n      ib_code = cur_code; // Index buffer to sequence in code table.\n    }\n  }\n  emit_code(ib_code); // There will still be something in the index buffer.\n  emit_code(eoi_code); // End Of Information.\n\n  // Flush / finalize the sub-blocks stream to the buffer.\n  emit_bytes_to_buffer(1);\n\n  // Finish the sub-blocks, writing out any unfinished lengths and\n  // terminating with a sub-block of length 0.  If we have already started\n  // but not yet used a sub-block it can just become the terminator.\n  if (cur_subblock + 1 === p) {\n    // Started but unused.\n    buf[cur_subblock] = 0;\n  } else {\n    // Started and used, write length and additional terminator block.\n    buf[cur_subblock] = p - cur_subblock - 1;\n    buf[p++] = 0;\n  }\n  return p;\n}\nfunction GifReader(buf) {\n  var p = 0;\n\n  // - Header (GIF87a or GIF89a).\n  if (buf[p++] !== 0x47 || buf[p++] !== 0x49 || buf[p++] !== 0x46 || buf[p++] !== 0x38 || (buf[p++] + 1 & 0xfd) !== 0x38 || buf[p++] !== 0x61) {\n    throw new Error(\"Invalid GIF 87a/89a header.\");\n  }\n\n  // - Logical Screen Descriptor.\n  var width = buf[p++] | buf[p++] << 8;\n  var height = buf[p++] | buf[p++] << 8;\n  var pf0 = buf[p++]; // <Packed Fields>.\n  var global_palette_flag = pf0 >> 7;\n  var num_global_colors_pow2 = pf0 & 0x7;\n  var num_global_colors = 1 << num_global_colors_pow2 + 1;\n  var background = buf[p++];\n  buf[p++]; // Pixel aspect ratio (unused?).\n\n  var global_palette_offset = null;\n  var global_palette_size = null;\n  if (global_palette_flag) {\n    global_palette_offset = p;\n    global_palette_size = num_global_colors;\n    p += num_global_colors * 3; // Seek past palette.\n  }\n  var no_eof = true;\n  var frames = [];\n  var delay = 0;\n  var transparent_index = null;\n  var disposal = 0; // 0 - No disposal specified.\n  var loop_count = null;\n  this.width = width;\n  this.height = height;\n  while (no_eof && p < buf.length) {\n    switch (buf[p++]) {\n      case 0x21:\n        // Graphics Control Extension Block\n        switch (buf[p++]) {\n          case 0xff:\n            // Application specific block\n            // Try if it's a Netscape block (with animation loop counter).\n            if (buf[p] !== 0x0b ||\n            // 21 FF already read, check block size.\n            // NETSCAPE2.0\n            buf[p + 1] == 0x4e && buf[p + 2] == 0x45 && buf[p + 3] == 0x54 && buf[p + 4] == 0x53 && buf[p + 5] == 0x43 && buf[p + 6] == 0x41 && buf[p + 7] == 0x50 && buf[p + 8] == 0x45 && buf[p + 9] == 0x32 && buf[p + 10] == 0x2e && buf[p + 11] == 0x30 &&\n            // Sub-block\n            buf[p + 12] == 0x03 && buf[p + 13] == 0x01 && buf[p + 16] == 0) {\n              p += 14;\n              loop_count = buf[p++] | buf[p++] << 8;\n              p++; // Skip terminator.\n            } else {\n              // We don't know what it is, just try to get past it.\n              p += 12;\n              while (true) {\n                // Seek through subblocks.\n                var block_size = buf[p++];\n                // Bad block size (ex: undefined from an out of bounds read).\n                if (!(block_size >= 0)) throw Error(\"Invalid block size\");\n                if (block_size === 0) break; // 0 size is terminator\n                p += block_size;\n              }\n            }\n            break;\n          case 0xf9:\n            // Graphics Control Extension\n            if (buf[p++] !== 0x4 || buf[p + 4] !== 0) throw new Error(\"Invalid graphics extension block.\");\n            var pf1 = buf[p++];\n            delay = buf[p++] | buf[p++] << 8;\n            transparent_index = buf[p++];\n            if ((pf1 & 1) === 0) transparent_index = null;\n            disposal = pf1 >> 2 & 0x7;\n            p++; // Skip terminator.\n            break;\n          case 0xfe:\n            // Comment Extension.\n            while (true) {\n              // Seek through subblocks.\n              var block_size = buf[p++];\n              // Bad block size (ex: undefined from an out of bounds read).\n              if (!(block_size >= 0)) throw Error(\"Invalid block size\");\n              if (block_size === 0) break; // 0 size is terminator\n              // console.log(buf.slice(p, p+block_size).toString('ascii'));\n              p += block_size;\n            }\n            break;\n          default:\n            throw new Error(\"Unknown graphic control label: 0x\" + buf[p - 1].toString(16));\n        }\n        break;\n      case 0x2c:\n        // Image Descriptor.\n        var x = buf[p++] | buf[p++] << 8;\n        var y = buf[p++] | buf[p++] << 8;\n        var w = buf[p++] | buf[p++] << 8;\n        var h = buf[p++] | buf[p++] << 8;\n        var pf2 = buf[p++];\n        var local_palette_flag = pf2 >> 7;\n        var interlace_flag = pf2 >> 6 & 1;\n        var num_local_colors_pow2 = pf2 & 0x7;\n        var num_local_colors = 1 << num_local_colors_pow2 + 1;\n        var palette_offset = global_palette_offset;\n        var palette_size = global_palette_size;\n        var has_local_palette = false;\n        if (local_palette_flag) {\n          var has_local_palette = true;\n          palette_offset = p; // Override with local palette.\n          palette_size = num_local_colors;\n          p += num_local_colors * 3; // Seek past palette.\n        }\n        var data_offset = p;\n        p++; // codesize\n        while (true) {\n          var block_size = buf[p++];\n          // Bad block size (ex: undefined from an out of bounds read).\n          if (!(block_size >= 0)) throw Error(\"Invalid block size\");\n          if (block_size === 0) break; // 0 size is terminator\n          p += block_size;\n        }\n        frames.push({\n          x: x,\n          y: y,\n          width: w,\n          height: h,\n          has_local_palette: has_local_palette,\n          palette_offset: palette_offset,\n          palette_size: palette_size,\n          data_offset: data_offset,\n          data_length: p - data_offset,\n          transparent_index: transparent_index,\n          interlaced: !!interlace_flag,\n          delay: delay,\n          disposal: disposal\n        });\n        break;\n      case 0x3b:\n        // Trailer Marker (end of file).\n        no_eof = false;\n        break;\n      default:\n        throw new Error(\"Unknown gif block: 0x\" + buf[p - 1].toString(16));\n        break;\n    }\n  }\n  this.numFrames = function () {\n    return frames.length;\n  };\n  this.loopCount = function () {\n    return loop_count;\n  };\n  this.frameInfo = function (frame_num) {\n    if (frame_num < 0 || frame_num >= frames.length) throw new Error(\"Frame index out of range.\");\n    return frames[frame_num];\n  };\n  this.decodeAndBlitFrameBGRA = function (frame_num, pixels) {\n    var frame = this.frameInfo(frame_num);\n    var num_pixels = frame.width * frame.height;\n    var index_stream = new Uint8Array(num_pixels); // At most 8-bit indices.\n    GifReaderLZWOutputIndexStream(buf, frame.data_offset, index_stream, num_pixels);\n    var palette_offset = frame.palette_offset;\n\n    // NOTE(deanm): It seems to be much faster to compare index to 256 than\n    // to === null.  Not sure why, but CompareStub_EQ_STRICT shows up high in\n    // the profile, not sure if it's related to using a Uint8Array.\n    var trans = frame.transparent_index;\n    if (trans === null) trans = 256;\n\n    // We are possibly just blitting to a portion of the entire frame.\n    // That is a subrect within the framerect, so the additional pixels\n    // must be skipped over after we finished a scanline.\n    var framewidth = frame.width;\n    var framestride = width - framewidth;\n    var xleft = framewidth; // Number of subrect pixels left in scanline.\n\n    // Output indicies of the top left and bottom right corners of the subrect.\n    var opbeg = (frame.y * width + frame.x) * 4;\n    var opend = ((frame.y + frame.height) * width + frame.x) * 4;\n    var op = opbeg;\n    var scanstride = framestride * 4;\n\n    // Use scanstride to skip past the rows when interlacing.  This is skipping\n    // 7 rows for the first two passes, then 3 then 1.\n    if (frame.interlaced === true) {\n      scanstride += width * 4 * 7; // Pass 1.\n    }\n    var interlaceskip = 8; // Tracking the row interval in the current pass.\n\n    for (var i = 0, il = index_stream.length; i < il; ++i) {\n      var index = index_stream[i];\n      if (xleft === 0) {\n        // Beginning of new scan line\n        op += scanstride;\n        xleft = framewidth;\n        if (op >= opend) {\n          // Catch the wrap to switch passes when interlacing.\n          scanstride = framestride * 4 + width * 4 * (interlaceskip - 1);\n          // interlaceskip / 2 * 4 is interlaceskip << 1.\n          op = opbeg + (framewidth + framestride) * (interlaceskip << 1);\n          interlaceskip >>= 1;\n        }\n      }\n      if (index === trans) {\n        op += 4;\n      } else {\n        var r = buf[palette_offset + index * 3];\n        var g = buf[palette_offset + index * 3 + 1];\n        var b = buf[palette_offset + index * 3 + 2];\n        pixels[op++] = b;\n        pixels[op++] = g;\n        pixels[op++] = r;\n        pixels[op++] = 255;\n      }\n      --xleft;\n    }\n  };\n\n  // I will go to copy and paste hell one day...\n  this.decodeAndBlitFrameRGBA = function (frame_num, pixels) {\n    var frame = this.frameInfo(frame_num);\n    var num_pixels = frame.width * frame.height;\n    var index_stream = new Uint8Array(num_pixels); // At most 8-bit indices.\n    GifReaderLZWOutputIndexStream(buf, frame.data_offset, index_stream, num_pixels);\n    var palette_offset = frame.palette_offset;\n\n    // NOTE(deanm): It seems to be much faster to compare index to 256 than\n    // to === null.  Not sure why, but CompareStub_EQ_STRICT shows up high in\n    // the profile, not sure if it's related to using a Uint8Array.\n    var trans = frame.transparent_index;\n    if (trans === null) trans = 256;\n\n    // We are possibly just blitting to a portion of the entire frame.\n    // That is a subrect within the framerect, so the additional pixels\n    // must be skipped over after we finished a scanline.\n    var framewidth = frame.width;\n    var framestride = width - framewidth;\n    var xleft = framewidth; // Number of subrect pixels left in scanline.\n\n    // Output indicies of the top left and bottom right corners of the subrect.\n    var opbeg = (frame.y * width + frame.x) * 4;\n    var opend = ((frame.y + frame.height) * width + frame.x) * 4;\n    var op = opbeg;\n    var scanstride = framestride * 4;\n\n    // Use scanstride to skip past the rows when interlacing.  This is skipping\n    // 7 rows for the first two passes, then 3 then 1.\n    if (frame.interlaced === true) {\n      scanstride += width * 4 * 7; // Pass 1.\n    }\n    var interlaceskip = 8; // Tracking the row interval in the current pass.\n\n    for (var i = 0, il = index_stream.length; i < il; ++i) {\n      var index = index_stream[i];\n      if (xleft === 0) {\n        // Beginning of new scan line\n        op += scanstride;\n        xleft = framewidth;\n        if (op >= opend) {\n          // Catch the wrap to switch passes when interlacing.\n          scanstride = framestride * 4 + width * 4 * (interlaceskip - 1);\n          // interlaceskip / 2 * 4 is interlaceskip << 1.\n          op = opbeg + (framewidth + framestride) * (interlaceskip << 1);\n          interlaceskip >>= 1;\n        }\n      }\n      if (index === trans) {\n        op += 4;\n      } else {\n        var r = buf[palette_offset + index * 3];\n        var g = buf[palette_offset + index * 3 + 1];\n        var b = buf[palette_offset + index * 3 + 2];\n        pixels[op++] = r;\n        pixels[op++] = g;\n        pixels[op++] = b;\n        pixels[op++] = 255;\n      }\n      --xleft;\n    }\n  };\n}\nfunction GifReaderLZWOutputIndexStream(code_stream, p, output, output_length) {\n  var min_code_size = code_stream[p++];\n  var clear_code = 1 << min_code_size;\n  var eoi_code = clear_code + 1;\n  var next_code = eoi_code + 1;\n  var cur_code_size = min_code_size + 1; // Number of bits per code.\n  // NOTE: This shares the same name as the encoder, but has a different\n  // meaning here.  Here this masks each code coming from the code stream.\n  var code_mask = (1 << cur_code_size) - 1;\n  var cur_shift = 0;\n  var cur = 0;\n  var op = 0; // Output pointer.\n\n  var subblock_size = code_stream[p++];\n\n  // TODO(deanm): Would using a TypedArray be any faster?  At least it would\n  // solve the fast mode / backing store uncertainty.\n  // var code_table = Array(4096);\n  var code_table = new Int32Array(4096); // Can be signed, we only use 20 bits.\n\n  var prev_code = null; // Track code-1.\n\n  while (true) {\n    // Read up to two bytes, making sure we always 12-bits for max sized code.\n    while (cur_shift < 16) {\n      if (subblock_size === 0) break; // No more data to be read.\n\n      cur |= code_stream[p++] << cur_shift;\n      cur_shift += 8;\n      if (subblock_size === 1) {\n        // Never let it get to 0 to hold logic above.\n        subblock_size = code_stream[p++]; // Next subblock.\n      } else {\n        --subblock_size;\n      }\n    }\n\n    // TODO(deanm): We should never really get here, we should have received\n    // and EOI.\n    if (cur_shift < cur_code_size) break;\n    var code = cur & code_mask;\n    cur >>= cur_code_size;\n    cur_shift -= cur_code_size;\n\n    // TODO(deanm): Maybe should check that the first code was a clear code,\n    // at least this is what you're supposed to do.  But actually our encoder\n    // now doesn't emit a clear code first anyway.\n    if (code === clear_code) {\n      // We don't actually have to clear the table.  This could be a good idea\n      // for greater error checking, but we don't really do any anyway.  We\n      // will just track it with next_code and overwrite old entries.\n\n      next_code = eoi_code + 1;\n      cur_code_size = min_code_size + 1;\n      code_mask = (1 << cur_code_size) - 1;\n\n      // Don't update prev_code ?\n      prev_code = null;\n      continue;\n    } else if (code === eoi_code) {\n      break;\n    }\n\n    // We have a similar situation as the decoder, where we want to store\n    // variable length entries (code table entries), but we want to do in a\n    // faster manner than an array of arrays.  The code below stores sort of a\n    // linked list within the code table, and then \"chases\" through it to\n    // construct the dictionary entries.  When a new entry is created, just the\n    // last byte is stored, and the rest (prefix) of the entry is only\n    // referenced by its table entry.  Then the code chases through the\n    // prefixes until it reaches a single byte code.  We have to chase twice,\n    // first to compute the length, and then to actually copy the data to the\n    // output (backwards, since we know the length).  The alternative would be\n    // storing something in an intermediate stack, but that doesn't make any\n    // more sense.  I implemented an approach where it also stored the length\n    // in the code table, although it's a bit tricky because you run out of\n    // bits (12 + 12 + 8), but I didn't measure much improvements (the table\n    // entries are generally not the long).  Even when I created benchmarks for\n    // very long table entries the complexity did not seem worth it.\n    // The code table stores the prefix entry in 12 bits and then the suffix\n    // byte in 8 bits, so each entry is 20 bits.\n\n    var chase_code = code < next_code ? code : prev_code;\n\n    // Chase what we will output, either {CODE} or {CODE-1}.\n    var chase_length = 0;\n    var chase = chase_code;\n    while (chase > clear_code) {\n      chase = code_table[chase] >> 8;\n      ++chase_length;\n    }\n    var k = chase;\n    var op_end = op + chase_length + (chase_code !== code ? 1 : 0);\n    if (op_end > output_length) {\n      console.log(\"Warning, gif stream longer than expected.\");\n      return;\n    }\n\n    // Already have the first byte from the chase, might as well write it fast.\n    output[op++] = k;\n    op += chase_length;\n    var b = op; // Track pointer, writing backwards.\n\n    if (chase_code !== code)\n      // The case of emitting {CODE-1} + k.\n      output[op++] = k;\n    chase = chase_code;\n    while (chase_length--) {\n      chase = code_table[chase];\n      output[--b] = chase & 0xff; // Write backwards.\n      chase >>= 8; // Pull down to the prefix code.\n    }\n    if (prev_code !== null && next_code < 4096) {\n      code_table[next_code++] = prev_code << 8 | k;\n      // TODO(deanm): Figure out this clearing vs code growth logic better.  I\n      // have an feeling that it should just happen somewhere else, for now it\n      // is awkward between when we grow past the max and then hit a clear code.\n      // For now just check if we hit the max 12-bits (then a clear code should\n      // follow, also of course encoded in 12-bits).\n      if (next_code >= code_mask + 1 && cur_code_size < 12) {\n        ++cur_code_size;\n        code_mask = code_mask << 1 | 1;\n      }\n    }\n    prev_code = code;\n  }\n  if (op !== output_length) {\n    console.log(\"Warning, gif stream shorter than expected.\");\n  }\n  return output;\n}\n\n// CommonJS.\ntry {\n  exports.GifWriter = GifWriter;\n  exports.GifReader = GifReader;\n} catch (e) {}", "'use strict';\n\n/** @class BitmapImage */\nclass BitmapImage {\n  /**\n   * BitmapImage is a class that hold an RGBA (red, green, blue, alpha) representation of an image. It's shape is borrowed from the Jimp package to make it easy to transfer GIF image frames into Jimp and Jimp images into GIF image frames. Each instance has a `bitmap` property having the following properties:\n   * \n   * Property | Description\n   * --- | ---\n   * bitmap.width | width of image in pixels\n   * bitmap.height | height of image in pixels\n   * bitmap.data | a Buffer whose every four bytes represents a pixel, each sequential byte of a pixel corresponding to the red, green, blue, and alpha values of the pixel\n   *\n   * Its constructor supports the following signatures:\n   *\n   * * new BitmapImage(bitmap: { width: number, height: number, data: Buffer })\n   * * new BitmapImage(bitmapImage: BitmapImage)\n   * * new BitmapImage(width: number, height: number, buffer: Buffer)\n   * * new BitmapImage(width: number, height: number, backgroundRGBA?: number)\n   * \n   * When a `BitmapImage` is provided, the constructed `BitmapImage` is a deep clone of the provided one, so that each image's pixel data can subsequently be modified without affecting each other.\n   *\n   * `backgroundRGBA` is an optional parameter representing a pixel as a single number. In hex, the number is as follows: 0xRRGGBBAA, where RR is the red byte, GG the green byte, BB, the blue byte, and AA the alpha value. An AA of 0x00 is considered transparent, and all non-zero AA values are treated as opaque.\n   */\n\n  constructor(...args) {\n    // don't confirm the number of args, because a subclass may have\n    // additional args and pass them all to the superclass\n    if (args.length === 0) {\n      throw new Error(\"constructor requires parameters\");\n    }\n    const firstArg = args[0];\n    if (firstArg !== null && typeof firstArg === 'object') {\n      if (firstArg instanceof BitmapImage) {\n        // copy a provided BitmapImage\n        const sourceBitmap = firstArg.bitmap;\n        this.bitmap = {\n          width: sourceBitmap.width,\n          height: sourceBitmap.height,\n          data: new Buffer(sourceBitmap.width * sourceBitmap.height * 4)\n        };\n        sourceBitmap.data.copy(this.bitmap.data);\n      } else if (firstArg.width && firstArg.height && firstArg.data) {\n        // share a provided bitmap\n        this.bitmap = firstArg;\n      } else {\n        throw new Error(\"unrecognized constructor parameters\");\n      }\n    } else if (typeof firstArg === 'number' && typeof args[1] === 'number') {\n      const width = firstArg;\n      const height = args[1];\n      const thirdArg = args[2];\n      this.bitmap = {\n        width,\n        height\n      };\n      if (Buffer.isBuffer(thirdArg)) {\n        this.bitmap.data = thirdArg;\n      } else {\n        this.bitmap.data = new Buffer(width * height * 4);\n        if (typeof thirdArg === 'number') {\n          this.fillRGBA(thirdArg);\n        }\n      }\n    } else {\n      throw new Error(\"unrecognized constructor parameters\");\n    }\n  }\n\n  /**\n   * Copy a square portion of this image into another image. \n   * \n   * @param {BitmapImage} toImage Image into which to copy the square\n   * @param {number} toX x-coord in toImage of upper-left corner of receiving square\n   * @param {number} toY y-coord in toImage of upper-left corner of receiving square\n   * @param {number} fromX x-coord in this image of upper-left corner of source square\n   * @param {number} fromY y-coord in this image of upper-left corner of source square\n   * @return {BitmapImage} The present image to allow for chaining.\n   */\n\n  blit(toImage, toX, toY, fromX, fromY, fromWidth, fromHeight) {\n    if (fromX + fromWidth > this.bitmap.width) {\n      throw new Error(\"copy exceeds width of source bitmap\");\n    }\n    if (toX + fromWidth > toImage.bitmap.width) {\n      throw new Error(\"copy exceeds width of target bitmap\");\n    }\n    if (fromY + fromHeight > this.bitmap.height) {\n      throw new Error(\"copy exceeds height of source bitmap\");\n    }\n    if (toY + fromHeight > toImage.bitmap.height) {\n      throw new Erro(\"copy exceeds height of target bitmap\");\n    }\n    const sourceBuf = this.bitmap.data;\n    const targetBuf = toImage.bitmap.data;\n    const sourceByteWidth = this.bitmap.width * 4;\n    const targetByteWidth = toImage.bitmap.width * 4;\n    const copyByteWidth = fromWidth * 4;\n    let si = fromY * sourceByteWidth + fromX * 4;\n    let ti = toY * targetByteWidth + toX * 4;\n    while (--fromHeight >= 0) {\n      sourceBuf.copy(targetBuf, ti, si, si + copyByteWidth);\n      si += sourceByteWidth;\n      ti += targetByteWidth;\n    }\n    return this;\n  }\n\n  /**\n   * Fills the image with a single color.\n   * \n   * @param {number} rgba Color with which to fill image, expressed as a singlenumber in the form 0xRRGGBBAA, where AA is 0x00 for transparent and any other value for opaque.\n   * @return {BitmapImage} The present image to allow for chaining.\n   */\n\n  fillRGBA(rgba) {\n    const buf = this.bitmap.data;\n    const bufByteWidth = this.bitmap.height * 4;\n    let bi = 0;\n    while (bi < bufByteWidth) {\n      buf.writeUInt32BE(rgba, bi);\n      bi += 4;\n    }\n    while (bi < buf.length) {\n      buf.copy(buf, bi, 0, bufByteWidth);\n      bi += bufByteWidth;\n    }\n    return this;\n  }\n\n  /**\n   * Gets the RGBA number of the pixel at the given coordinate in the form 0xRRGGBBAA, where AA is the alpha value, with alpha 0x00 encoding to transparency in GIFs.\n   * \n   * @param {number} x x-coord of pixel\n   * @param {number} y y-coord of pixel\n   * @return {number} RGBA of pixel in 0xRRGGBBAA form\n   */\n\n  getRGBA(x, y) {\n    const bi = (y * this.bitmap.width + x) * 4;\n    return this.bitmap.data.readUInt32BE(bi);\n  }\n\n  /**\n   * Gets a set of all RGBA colors found within the image.\n   * \n   * @return {Set} Set of all RGBA colors that the image contains.\n   */\n\n  getRGBASet() {\n    const rgbaSet = new Set();\n    const buf = this.bitmap.data;\n    for (let bi = 0; bi < buf.length; bi += 4) {\n      rgbaSet.add(buf.readUInt32BE(bi, true));\n    }\n    return rgbaSet;\n  }\n\n  /**\n   * Converts the image to greyscale using inferred Adobe metrics.\n   * \n   * @return {BitmapImage} The present image to allow for chaining.\n   */\n\n  greyscale() {\n    const buf = this.bitmap.data;\n    this.scan(0, 0, this.bitmap.width, this.bitmap.height, (x, y, idx) => {\n      const grey = Math.round(0.299 * buf[idx] + 0.587 * buf[idx + 1] + 0.114 * buf[idx + 2]);\n      buf[idx] = grey;\n      buf[idx + 1] = grey;\n      buf[idx + 2] = grey;\n    });\n    return this;\n  }\n\n  /**\n   * Reframes the image as if placing a frame around the original image and replacing the original image with the newly framed image. When the new frame is strictly within the boundaries of the original image, this method crops the image. When any of the new boundaries exceed those of the original image, the `fillRGBA` must be provided to indicate the color with which to fill the extra space added to the image.\n   * \n   * @param {number} xOffset The x-coord offset of the upper-left pixel of the desired image relative to the present image.\n   * @param {number} yOffset The y-coord offset of the upper-left pixel of the desired image relative to the present image.\n   * @param {number} width The width of the new image after reframing\n   * @param {number} height The height of the new image after reframing\n   * @param {number} fillRGBA The color with which to fill space added to the image as a result of the reframing, in 0xRRGGBBAA format, where AA is 0x00 to indicate transparent and a non-zero value to indicate opaque. This parameter is only required when the reframing exceeds the original boundaries (i.e. does not simply perform a crop).\n   * @return {BitmapImage} The present image to allow for chaining.\n   */\n\n  reframe(xOffset, yOffset, width, height, fillRGBA) {\n    const cropX = xOffset < 0 ? 0 : xOffset;\n    const cropY = yOffset < 0 ? 0 : yOffset;\n    const cropWidth = width + cropX > this.bitmap.width ? this.bitmap.width - cropX : width;\n    const cropHeight = height + cropY > this.bitmap.height ? this.bitmap.height - cropY : height;\n    const newX = xOffset < 0 ? -xOffset : 0;\n    const newY = yOffset < 0 ? -yOffset : 0;\n    let image;\n    if (fillRGBA === undefined) {\n      if (cropX !== xOffset || cropY != yOffset || cropWidth !== width || cropHeight !== height) {\n        throw new GifError(`fillRGBA required for this reframing`);\n      }\n      image = new BitmapImage(width, height);\n    } else {\n      image = new BitmapImage(width, height, fillRGBA);\n    }\n    this.blit(image, newX, newY, cropX, cropY, cropWidth, cropHeight);\n    this.bitmap = image.bitmap;\n    return this;\n  }\n\n  /**\n   * Scales the image size up by an integer factor. Each pixel of the original image becomes a square of the same color in the new image having a size of `factor` x `factor` pixels.\n   * \n   * @param {number} factor The factor by which to scale up the image. Must be an integer >= 1.\n   * @return {BitmapImage} The present image to allow for chaining.\n   */\n\n  scale(factor) {\n    if (factor === 1) {\n      return;\n    }\n    if (!Number.isInteger(factor) || factor < 1) {\n      throw new Error(\"the scale must be an integer >= 1\");\n    }\n    const sourceWidth = this.bitmap.width;\n    const sourceHeight = this.bitmap.height;\n    const destByteWidth = sourceWidth * factor * 4;\n    const sourceBuf = this.bitmap.data;\n    const destBuf = new Buffer(sourceHeight * destByteWidth * factor);\n    let sourceIndex = 0;\n    let priorDestRowIndex;\n    let destIndex = 0;\n    for (let y = 0; y < sourceHeight; ++y) {\n      priorDestRowIndex = destIndex;\n      for (let x = 0; x < sourceWidth; ++x) {\n        const color = sourceBuf.readUInt32BE(sourceIndex, true);\n        for (let cx = 0; cx < factor; ++cx) {\n          destBuf.writeUInt32BE(color, destIndex);\n          destIndex += 4;\n        }\n        sourceIndex += 4;\n      }\n      for (let cy = 1; cy < factor; ++cy) {\n        destBuf.copy(destBuf, destIndex, priorDestRowIndex, destIndex);\n        destIndex += destByteWidth;\n        priorDestRowIndex += destByteWidth;\n      }\n    }\n    this.bitmap = {\n      width: sourceWidth * factor,\n      height: sourceHeight * factor,\n      data: destBuf\n    };\n    return this;\n  }\n\n  /**\n   * Scans all coordinates of the image, handing each in turn to the provided handler function.\n   *\n   * @param {function} scanHandler A function(x: number, y: number, bi: number) to be called for each pixel of the image with that pixel's x-coord, y-coord, and index into the `data` buffer. The function accesses the pixel at this coordinate by accessing the `this.data` at index `bi`.\n   * @see scanAllIndexes\n   */\n\n  scanAllCoords(scanHandler) {\n    const width = this.bitmap.width;\n    const bufferLength = this.bitmap.data.length;\n    let x = 0;\n    let y = 0;\n    for (let bi = 0; bi < bufferLength; bi += 4) {\n      scanHandler(x, y, bi);\n      if (++x === width) {\n        x = 0;\n        ++y;\n      }\n    }\n  }\n\n  /**\n   * Scans all pixels of the image, handing the index of each in turn to the provided handler function. Runs a bit faster than `scanAllCoords()`, should the handler not need pixel coordinates.\n   *\n   * @param {function} scanHandler A function(bi: number) to be called for each pixel of the image with that pixel's index into the `data` buffer. The pixels is found at index 'bi' within `this.data`.\n   * @see scanAllCoords\n   */\n\n  scanAllIndexes(scanHandler) {\n    const bufferLength = this.bitmap.data.length;\n    for (let bi = 0; bi < bufferLength; bi += 4) {\n      scanHandler(bi);\n    }\n  }\n}\nmodule.exports = BitmapImage;", "'use strict';\n\n/** @class Gif */\nclass Gif {\n  // width - width of GIF in pixels\n  // height - height of GIF in pixels\n  // loops - 0 = unending; (n > 0) = iterate n times\n  // usesTransparency - whether any frames have transparent pixels\n  // colorScope - scope of color tables in GIF\n  // frames - array of frames\n  // buffer - GIF-formatted data\n\n  /**\n   * Gif is a class representing an encoded GIF. It is intended to be a read-only representation of a byte-encoded GIF. Only encoders and decoders should be creating instances of this class.\n   * \n   * Property | Description\n   * --- | ---\n   * width | width of the GIF at its widest\n   * height | height of the GIF at its highest\n   * loops | the number of times the GIF should loop before stopping; 0 => loop indefinitely\n   * usesTransparency | boolean indicating whether at least one frame contains at least one transparent pixel\n   * colorScope | the scope of the color tables as encoded within the GIF; either Gif.GlobalColorsOnly (== 1) or Gif.LocalColorsOnly (== 2).\n   * frames | a array of GifFrame instances, one for each frame of the GIF\n   * buffer | a Buffer holding the encoding's byte data\n   * \n   * Its constructor should only ever be called by the GIF encoder or decoder.\n   *\n   * @param {Buffer} buffer A Buffer containing the encoded bytes\n   * @param {GifFrame[]} frames Array of frames found in the encoding\n   * @param {object} spec Properties of the encoding as listed above\n   */\n\n  constructor(buffer, frames, spec) {\n    this.width = spec.width;\n    this.height = spec.height;\n    this.loops = spec.loops;\n    this.usesTransparency = spec.usesTransparency;\n    this.colorScope = spec.colorScope;\n    this.frames = frames;\n    this.buffer = buffer;\n  }\n}\nGif.GlobalColorsPreferred = 0;\nGif.GlobalColorsOnly = 1;\nGif.LocalColorsOnly = 2;\n\n/** @class GifError */\n\nclass GifError extends Error {\n  /**\n   * GifError is a class representing a GIF-related error\n   * \n   * @param {string|Error} messageOrError\n   */\n\n  constructor(messageOrError) {\n    super(messageOrError);\n    if (messageOrError instanceof Error) {\n      this.stack = 'Gif' + messageOrError.stack;\n    }\n  }\n}\nexports.Gif = Gif;\nexports.GifError = GifError;", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __markAsModule = target => __defProp(target, \"__esModule\", {\n  value: true\n});\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __reExport = (target, module2, copyDefault, desc) => {\n  if (module2 && typeof module2 === \"object\" || typeof module2 === \"function\") {\n    for (let key of __getOwnPropNames(module2)) if (!__hasOwnProp.call(target, key) && (copyDefault || key !== \"default\")) __defProp(target, key, {\n      get: () => module2[key],\n      enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable\n    });\n  }\n  return target;\n};\nvar __toCommonJS = /* @__PURE__ */(cache => {\n  return (module2, temp) => {\n    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);\n  };\n})(typeof WeakMap !== \"undefined\" ? /* @__PURE__ */new WeakMap() : 0);\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  applyPalette: () => applyPalette,\n  applyPaletteSync: () => applyPaletteSync,\n  buildPalette: () => buildPalette,\n  buildPaletteSync: () => buildPaletteSync,\n  constants: () => constants_exports,\n  conversion: () => conversion_exports,\n  distance: () => distance_exports,\n  image: () => image_exports,\n  palette: () => palette_exports,\n  quality: () => quality_exports,\n  utils: () => utils_exports\n});\n\n// src/constants/index.ts\nvar constants_exports = {};\n__export(constants_exports, {\n  bt709: () => bt709_exports\n});\n\n// src/constants/bt709.ts\nvar bt709_exports = {};\n__export(bt709_exports, {\n  Y: () => Y,\n  x: () => x,\n  y: () => y\n});\nvar Y = /* @__PURE__ */(Y2 => {\n  Y2[Y2[\"RED\"] = 0.2126] = \"RED\";\n  Y2[Y2[\"GREEN\"] = 0.7152] = \"GREEN\";\n  Y2[Y2[\"BLUE\"] = 0.0722] = \"BLUE\";\n  Y2[Y2[\"WHITE\"] = 1] = \"WHITE\";\n  return Y2;\n})(Y || {});\nvar x = /* @__PURE__ */(x2 => {\n  x2[x2[\"RED\"] = 0.64] = \"RED\";\n  x2[x2[\"GREEN\"] = 0.3] = \"GREEN\";\n  x2[x2[\"BLUE\"] = 0.15] = \"BLUE\";\n  x2[x2[\"WHITE\"] = 0.3127] = \"WHITE\";\n  return x2;\n})(x || {});\nvar y = /* @__PURE__ */(y2 => {\n  y2[y2[\"RED\"] = 0.33] = \"RED\";\n  y2[y2[\"GREEN\"] = 0.6] = \"GREEN\";\n  y2[y2[\"BLUE\"] = 0.06] = \"BLUE\";\n  y2[y2[\"WHITE\"] = 0.329] = \"WHITE\";\n  return y2;\n})(y || {});\n\n// src/conversion/index.ts\nvar conversion_exports = {};\n__export(conversion_exports, {\n  lab2rgb: () => lab2rgb,\n  lab2xyz: () => lab2xyz,\n  rgb2hsl: () => rgb2hsl,\n  rgb2lab: () => rgb2lab,\n  rgb2xyz: () => rgb2xyz,\n  xyz2lab: () => xyz2lab,\n  xyz2rgb: () => xyz2rgb\n});\n\n// src/conversion/rgb2xyz.ts\nfunction correctGamma(n) {\n  return n > 0.04045 ? ((n + 0.055) / 1.055) ** 2.4 : n / 12.92;\n}\nfunction rgb2xyz(r, g, b) {\n  r = correctGamma(r / 255);\n  g = correctGamma(g / 255);\n  b = correctGamma(b / 255);\n  return {\n    x: r * 0.4124 + g * 0.3576 + b * 0.1805,\n    y: r * 0.2126 + g * 0.7152 + b * 0.0722,\n    z: r * 0.0193 + g * 0.1192 + b * 0.9505\n  };\n}\n\n// src/utils/arithmetic.ts\nvar arithmetic_exports = {};\n__export(arithmetic_exports, {\n  degrees2radians: () => degrees2radians,\n  inRange0to255: () => inRange0to255,\n  inRange0to255Rounded: () => inRange0to255Rounded,\n  intInRange: () => intInRange,\n  max3: () => max3,\n  min3: () => min3,\n  stableSort: () => stableSort\n});\nfunction degrees2radians(n) {\n  return n * (Math.PI / 180);\n}\nfunction max3(a, b, c) {\n  let m = a;\n  if (m < b) m = b;\n  if (m < c) m = c;\n  return m;\n}\nfunction min3(a, b, c) {\n  let m = a;\n  if (m > b) m = b;\n  if (m > c) m = c;\n  return m;\n}\nfunction intInRange(value, low, high) {\n  if (value > high) value = high;\n  if (value < low) value = low;\n  return value | 0;\n}\nfunction inRange0to255Rounded(n) {\n  n = Math.round(n);\n  if (n > 255) n = 255;else if (n < 0) n = 0;\n  return n;\n}\nfunction inRange0to255(n) {\n  if (n > 255) n = 255;else if (n < 0) n = 0;\n  return n;\n}\nfunction stableSort(arrayToSort, callback) {\n  const type = typeof arrayToSort[0];\n  let sorted;\n  if (type === \"number\" || type === \"string\") {\n    const ord = /* @__PURE__ */Object.create(null);\n    for (let i = 0, l = arrayToSort.length; i < l; i++) {\n      const val = arrayToSort[i];\n      if (ord[val] || ord[val] === 0) continue;\n      ord[val] = i;\n    }\n    sorted = arrayToSort.sort((a, b) => callback(a, b) || ord[a] - ord[b]);\n  } else {\n    const ord2 = arrayToSort.slice(0);\n    sorted = arrayToSort.sort((a, b) => callback(a, b) || ord2.indexOf(a) - ord2.indexOf(b));\n  }\n  return sorted;\n}\n\n// src/conversion/rgb2hsl.ts\nfunction rgb2hsl(r, g, b) {\n  const min = min3(r, g, b);\n  const max = max3(r, g, b);\n  const delta = max - min;\n  const l = (min + max) / 510;\n  let s = 0;\n  if (l > 0 && l < 1) s = delta / (l < 0.5 ? max + min : 510 - max - min);\n  let h = 0;\n  if (delta > 0) {\n    if (max === r) {\n      h = (g - b) / delta;\n    } else if (max === g) {\n      h = 2 + (b - r) / delta;\n    } else {\n      h = 4 + (r - g) / delta;\n    }\n    h *= 60;\n    if (h < 0) h += 360;\n  }\n  return {\n    h,\n    s,\n    l\n  };\n}\n\n// src/conversion/xyz2lab.ts\nvar refX = 0.95047;\nvar refY = 1;\nvar refZ = 1.08883;\nfunction pivot(n) {\n  return n > 8856e-6 ? n ** (1 / 3) : 7.787 * n + 16 / 116;\n}\nfunction xyz2lab(x2, y2, z) {\n  x2 = pivot(x2 / refX);\n  y2 = pivot(y2 / refY);\n  z = pivot(z / refZ);\n  if (116 * y2 - 16 < 0) throw new Error(\"xxx\");\n  return {\n    L: Math.max(0, 116 * y2 - 16),\n    a: 500 * (x2 - y2),\n    b: 200 * (y2 - z)\n  };\n}\n\n// src/conversion/rgb2lab.ts\nfunction rgb2lab(r, g, b) {\n  const xyz = rgb2xyz(r, g, b);\n  return xyz2lab(xyz.x, xyz.y, xyz.z);\n}\n\n// src/conversion/lab2xyz.ts\nvar refX2 = 0.95047;\nvar refY2 = 1;\nvar refZ2 = 1.08883;\nfunction pivot2(n) {\n  return n > 0.206893034 ? n ** 3 : (n - 16 / 116) / 7.787;\n}\nfunction lab2xyz(L, a, b) {\n  const y2 = (L + 16) / 116;\n  const x2 = a / 500 + y2;\n  const z = y2 - b / 200;\n  return {\n    x: refX2 * pivot2(x2),\n    y: refY2 * pivot2(y2),\n    z: refZ2 * pivot2(z)\n  };\n}\n\n// src/conversion/xyz2rgb.ts\nfunction correctGamma2(n) {\n  return n > 31308e-7 ? 1.055 * n ** (1 / 2.4) - 0.055 : 12.92 * n;\n}\nfunction xyz2rgb(x2, y2, z) {\n  const r = correctGamma2(x2 * 3.2406 + y2 * -1.5372 + z * -0.4986);\n  const g = correctGamma2(x2 * -0.9689 + y2 * 1.8758 + z * 0.0415);\n  const b = correctGamma2(x2 * 0.0557 + y2 * -0.204 + z * 1.057);\n  return {\n    r: inRange0to255Rounded(r * 255),\n    g: inRange0to255Rounded(g * 255),\n    b: inRange0to255Rounded(b * 255)\n  };\n}\n\n// src/conversion/lab2rgb.ts\nfunction lab2rgb(L, a, b) {\n  const xyz = lab2xyz(L, a, b);\n  return xyz2rgb(xyz.x, xyz.y, xyz.z);\n}\n\n// src/distance/index.ts\nvar distance_exports = {};\n__export(distance_exports, {\n  AbstractDistanceCalculator: () => AbstractDistanceCalculator,\n  AbstractEuclidean: () => AbstractEuclidean,\n  AbstractManhattan: () => AbstractManhattan,\n  CIE94GraphicArts: () => CIE94GraphicArts,\n  CIE94Textiles: () => CIE94Textiles,\n  CIEDE2000: () => CIEDE2000,\n  CMetric: () => CMetric,\n  Euclidean: () => Euclidean,\n  EuclideanBT709: () => EuclideanBT709,\n  EuclideanBT709NoAlpha: () => EuclideanBT709NoAlpha,\n  Manhattan: () => Manhattan,\n  ManhattanBT709: () => ManhattanBT709,\n  ManhattanNommyde: () => ManhattanNommyde,\n  PNGQuant: () => PNGQuant\n});\n\n// src/distance/distanceCalculator.ts\nvar AbstractDistanceCalculator = class {\n  constructor() {\n    __publicField(this, \"_maxDistance\");\n    __publicField(this, \"_whitePoint\");\n    this._setDefaults();\n    this.setWhitePoint(255, 255, 255, 255);\n  }\n  setWhitePoint(r, g, b, a) {\n    this._whitePoint = {\n      r: r > 0 ? 255 / r : 0,\n      g: g > 0 ? 255 / g : 0,\n      b: b > 0 ? 255 / b : 0,\n      a: a > 0 ? 255 / a : 0\n    };\n    this._maxDistance = this.calculateRaw(r, g, b, a, 0, 0, 0, 0);\n  }\n  calculateNormalized(colorA, colorB) {\n    return this.calculateRaw(colorA.r, colorA.g, colorA.b, colorA.a, colorB.r, colorB.g, colorB.b, colorB.a) / this._maxDistance;\n  }\n};\n\n// src/distance/cie94.ts\nvar AbstractCIE94 = class extends AbstractDistanceCalculator {\n  calculateRaw(r1, g1, b1, a1, r2, g2, b2, a2) {\n    const lab1 = rgb2lab(inRange0to255(r1 * this._whitePoint.r), inRange0to255(g1 * this._whitePoint.g), inRange0to255(b1 * this._whitePoint.b));\n    const lab2 = rgb2lab(inRange0to255(r2 * this._whitePoint.r), inRange0to255(g2 * this._whitePoint.g), inRange0to255(b2 * this._whitePoint.b));\n    const dL = lab1.L - lab2.L;\n    const dA = lab1.a - lab2.a;\n    const dB = lab1.b - lab2.b;\n    const c1 = Math.sqrt(lab1.a * lab1.a + lab1.b * lab1.b);\n    const c2 = Math.sqrt(lab2.a * lab2.a + lab2.b * lab2.b);\n    const dC = c1 - c2;\n    let deltaH = dA * dA + dB * dB - dC * dC;\n    deltaH = deltaH < 0 ? 0 : Math.sqrt(deltaH);\n    const dAlpha = (a2 - a1) * this._whitePoint.a * this._kA;\n    return Math.sqrt((dL / this._Kl) ** 2 + (dC / (1 + this._K1 * c1)) ** 2 + (deltaH / (1 + this._K2 * c1)) ** 2 + dAlpha ** 2);\n  }\n};\nvar CIE94Textiles = class extends AbstractCIE94 {\n  _setDefaults() {\n    this._Kl = 2;\n    this._K1 = 0.048;\n    this._K2 = 0.014;\n    this._kA = 0.25 * 50 / 255;\n  }\n};\nvar CIE94GraphicArts = class extends AbstractCIE94 {\n  _setDefaults() {\n    this._Kl = 1;\n    this._K1 = 0.045;\n    this._K2 = 0.015;\n    this._kA = 0.25 * 100 / 255;\n  }\n};\n\n// src/distance/ciede2000.ts\nvar _CIEDE2000 = class extends AbstractDistanceCalculator {\n  _setDefaults() {}\n  static _calculatehp(b, ap) {\n    const hp = Math.atan2(b, ap);\n    if (hp >= 0) return hp;\n    return hp + _CIEDE2000._deg360InRad;\n  }\n  static _calculateRT(ahp, aCp) {\n    const aCp_to_7 = aCp ** 7;\n    const R_C = 2 * Math.sqrt(aCp_to_7 / (aCp_to_7 + _CIEDE2000._pow25to7));\n    const delta_theta = _CIEDE2000._deg30InRad * Math.exp(-(((ahp - _CIEDE2000._deg275InRad) / _CIEDE2000._deg25InRad) ** 2));\n    return -Math.sin(2 * delta_theta) * R_C;\n  }\n  static _calculateT(ahp) {\n    return 1 - 0.17 * Math.cos(ahp - _CIEDE2000._deg30InRad) + 0.24 * Math.cos(ahp * 2) + 0.32 * Math.cos(ahp * 3 + _CIEDE2000._deg6InRad) - 0.2 * Math.cos(ahp * 4 - _CIEDE2000._deg63InRad);\n  }\n  static _calculate_ahp(C1pC2p, h_bar, h1p, h2p) {\n    const hpSum = h1p + h2p;\n    if (C1pC2p === 0) return hpSum;\n    if (h_bar <= _CIEDE2000._deg180InRad) return hpSum / 2;\n    if (hpSum < _CIEDE2000._deg360InRad) {\n      return (hpSum + _CIEDE2000._deg360InRad) / 2;\n    }\n    return (hpSum - _CIEDE2000._deg360InRad) / 2;\n  }\n  static _calculate_dHp(C1pC2p, h_bar, h2p, h1p) {\n    let dhp;\n    if (C1pC2p === 0) {\n      dhp = 0;\n    } else if (h_bar <= _CIEDE2000._deg180InRad) {\n      dhp = h2p - h1p;\n    } else if (h2p <= h1p) {\n      dhp = h2p - h1p + _CIEDE2000._deg360InRad;\n    } else {\n      dhp = h2p - h1p - _CIEDE2000._deg360InRad;\n    }\n    return 2 * Math.sqrt(C1pC2p) * Math.sin(dhp / 2);\n  }\n  calculateRaw(r1, g1, b1, a1, r2, g2, b2, a2) {\n    const lab1 = rgb2lab(inRange0to255(r1 * this._whitePoint.r), inRange0to255(g1 * this._whitePoint.g), inRange0to255(b1 * this._whitePoint.b));\n    const lab2 = rgb2lab(inRange0to255(r2 * this._whitePoint.r), inRange0to255(g2 * this._whitePoint.g), inRange0to255(b2 * this._whitePoint.b));\n    const dA = (a2 - a1) * this._whitePoint.a * _CIEDE2000._kA;\n    const dE2 = this.calculateRawInLab(lab1, lab2);\n    return Math.sqrt(dE2 + dA * dA);\n  }\n  calculateRawInLab(Lab1, Lab2) {\n    const L1 = Lab1.L;\n    const a1 = Lab1.a;\n    const b1 = Lab1.b;\n    const L2 = Lab2.L;\n    const a2 = Lab2.a;\n    const b2 = Lab2.b;\n    const C1 = Math.sqrt(a1 * a1 + b1 * b1);\n    const C2 = Math.sqrt(a2 * a2 + b2 * b2);\n    const pow_a_C1_C2_to_7 = ((C1 + C2) / 2) ** 7;\n    const G = 0.5 * (1 - Math.sqrt(pow_a_C1_C2_to_7 / (pow_a_C1_C2_to_7 + _CIEDE2000._pow25to7)));\n    const a1p = (1 + G) * a1;\n    const a2p = (1 + G) * a2;\n    const C1p = Math.sqrt(a1p * a1p + b1 * b1);\n    const C2p = Math.sqrt(a2p * a2p + b2 * b2);\n    const C1pC2p = C1p * C2p;\n    const h1p = _CIEDE2000._calculatehp(b1, a1p);\n    const h2p = _CIEDE2000._calculatehp(b2, a2p);\n    const h_bar = Math.abs(h1p - h2p);\n    const dLp = L2 - L1;\n    const dCp = C2p - C1p;\n    const dHp = _CIEDE2000._calculate_dHp(C1pC2p, h_bar, h2p, h1p);\n    const ahp = _CIEDE2000._calculate_ahp(C1pC2p, h_bar, h1p, h2p);\n    const T = _CIEDE2000._calculateT(ahp);\n    const aCp = (C1p + C2p) / 2;\n    const aLp_minus_50_square = ((L1 + L2) / 2 - 50) ** 2;\n    const S_L = 1 + 0.015 * aLp_minus_50_square / Math.sqrt(20 + aLp_minus_50_square);\n    const S_C = 1 + 0.045 * aCp;\n    const S_H = 1 + 0.015 * T * aCp;\n    const R_T = _CIEDE2000._calculateRT(ahp, aCp);\n    const dLpSL = dLp / S_L;\n    const dCpSC = dCp / S_C;\n    const dHpSH = dHp / S_H;\n    return dLpSL ** 2 + dCpSC ** 2 + dHpSH ** 2 + R_T * dCpSC * dHpSH;\n  }\n};\nvar CIEDE2000 = _CIEDE2000;\n__publicField(CIEDE2000, \"_kA\", 0.25 * 100 / 255);\n__publicField(CIEDE2000, \"_pow25to7\", 25 ** 7);\n__publicField(CIEDE2000, \"_deg360InRad\", degrees2radians(360));\n__publicField(CIEDE2000, \"_deg180InRad\", degrees2radians(180));\n__publicField(CIEDE2000, \"_deg30InRad\", degrees2radians(30));\n__publicField(CIEDE2000, \"_deg6InRad\", degrees2radians(6));\n__publicField(CIEDE2000, \"_deg63InRad\", degrees2radians(63));\n__publicField(CIEDE2000, \"_deg275InRad\", degrees2radians(275));\n__publicField(CIEDE2000, \"_deg25InRad\", degrees2radians(25));\n\n// src/distance/cmetric.ts\nvar CMetric = class extends AbstractDistanceCalculator {\n  calculateRaw(r1, g1, b1, a1, r2, g2, b2, a2) {\n    const rmean = (r1 + r2) / 2 * this._whitePoint.r;\n    const r = (r1 - r2) * this._whitePoint.r;\n    const g = (g1 - g2) * this._whitePoint.g;\n    const b = (b1 - b2) * this._whitePoint.b;\n    const dE = ((512 + rmean) * r * r >> 8) + 4 * g * g + ((767 - rmean) * b * b >> 8);\n    const dA = (a2 - a1) * this._whitePoint.a;\n    return Math.sqrt(dE + dA * dA);\n  }\n  _setDefaults() {}\n};\n\n// src/distance/euclidean.ts\nvar AbstractEuclidean = class extends AbstractDistanceCalculator {\n  calculateRaw(r1, g1, b1, a1, r2, g2, b2, a2) {\n    const dR = r2 - r1;\n    const dG = g2 - g1;\n    const dB = b2 - b1;\n    const dA = a2 - a1;\n    return Math.sqrt(this._kR * dR * dR + this._kG * dG * dG + this._kB * dB * dB + this._kA * dA * dA);\n  }\n};\nvar Euclidean = class extends AbstractEuclidean {\n  _setDefaults() {\n    this._kR = 1;\n    this._kG = 1;\n    this._kB = 1;\n    this._kA = 1;\n  }\n};\nvar EuclideanBT709 = class extends AbstractEuclidean {\n  _setDefaults() {\n    this._kR = 0.2126 /* RED */;\n    this._kG = 0.7152 /* GREEN */;\n    this._kB = 0.0722 /* BLUE */;\n    this._kA = 1;\n  }\n};\nvar EuclideanBT709NoAlpha = class extends AbstractEuclidean {\n  _setDefaults() {\n    this._kR = 0.2126 /* RED */;\n    this._kG = 0.7152 /* GREEN */;\n    this._kB = 0.0722 /* BLUE */;\n    this._kA = 0;\n  }\n};\n\n// src/distance/manhattan.ts\nvar AbstractManhattan = class extends AbstractDistanceCalculator {\n  calculateRaw(r1, g1, b1, a1, r2, g2, b2, a2) {\n    let dR = r2 - r1;\n    let dG = g2 - g1;\n    let dB = b2 - b1;\n    let dA = a2 - a1;\n    if (dR < 0) dR = 0 - dR;\n    if (dG < 0) dG = 0 - dG;\n    if (dB < 0) dB = 0 - dB;\n    if (dA < 0) dA = 0 - dA;\n    return this._kR * dR + this._kG * dG + this._kB * dB + this._kA * dA;\n  }\n};\nvar Manhattan = class extends AbstractManhattan {\n  _setDefaults() {\n    this._kR = 1;\n    this._kG = 1;\n    this._kB = 1;\n    this._kA = 1;\n  }\n};\nvar ManhattanNommyde = class extends AbstractManhattan {\n  _setDefaults() {\n    this._kR = 0.4984;\n    this._kG = 0.8625;\n    this._kB = 0.2979;\n    this._kA = 1;\n  }\n};\nvar ManhattanBT709 = class extends AbstractManhattan {\n  _setDefaults() {\n    this._kR = 0.2126 /* RED */;\n    this._kG = 0.7152 /* GREEN */;\n    this._kB = 0.0722 /* BLUE */;\n    this._kA = 1;\n  }\n};\n\n// src/distance/pngQuant.ts\nvar PNGQuant = class extends AbstractDistanceCalculator {\n  calculateRaw(r1, g1, b1, a1, r2, g2, b2, a2) {\n    const alphas = (a2 - a1) * this._whitePoint.a;\n    return this._colordifferenceCh(r1 * this._whitePoint.r, r2 * this._whitePoint.r, alphas) + this._colordifferenceCh(g1 * this._whitePoint.g, g2 * this._whitePoint.g, alphas) + this._colordifferenceCh(b1 * this._whitePoint.b, b2 * this._whitePoint.b, alphas);\n  }\n  _colordifferenceCh(x2, y2, alphas) {\n    const black = x2 - y2;\n    const white = black + alphas;\n    return black * black + white * white;\n  }\n  _setDefaults() {}\n};\n\n// src/palette/index.ts\nvar palette_exports = {};\n__export(palette_exports, {\n  AbstractPaletteQuantizer: () => AbstractPaletteQuantizer,\n  ColorHistogram: () => ColorHistogram,\n  NeuQuant: () => NeuQuant,\n  NeuQuantFloat: () => NeuQuantFloat,\n  RGBQuant: () => RGBQuant,\n  WuColorCube: () => WuColorCube,\n  WuQuant: () => WuQuant\n});\n\n// src/palette/paletteQuantizer.ts\nvar AbstractPaletteQuantizer = class {\n  quantizeSync() {\n    for (const value of this.quantize()) {\n      if (value.palette) {\n        return value.palette;\n      }\n    }\n    throw new Error(\"unreachable\");\n  }\n};\n\n// src/utils/point.ts\nvar Point = class {\n  constructor() {\n    __publicField(this, \"r\");\n    __publicField(this, \"g\");\n    __publicField(this, \"b\");\n    __publicField(this, \"a\");\n    __publicField(this, \"uint32\");\n    __publicField(this, \"rgba\");\n    this.uint32 = -1 >>> 0;\n    this.r = this.g = this.b = this.a = 0;\n    this.rgba = new Array(4);\n    this.rgba[0] = 0;\n    this.rgba[1] = 0;\n    this.rgba[2] = 0;\n    this.rgba[3] = 0;\n  }\n  static createByQuadruplet(quadruplet) {\n    const point = new Point();\n    point.r = quadruplet[0] | 0;\n    point.g = quadruplet[1] | 0;\n    point.b = quadruplet[2] | 0;\n    point.a = quadruplet[3] | 0;\n    point._loadUINT32();\n    point._loadQuadruplet();\n    return point;\n  }\n  static createByRGBA(red, green, blue, alpha) {\n    const point = new Point();\n    point.r = red | 0;\n    point.g = green | 0;\n    point.b = blue | 0;\n    point.a = alpha | 0;\n    point._loadUINT32();\n    point._loadQuadruplet();\n    return point;\n  }\n  static createByUint32(uint32) {\n    const point = new Point();\n    point.uint32 = uint32 >>> 0;\n    point._loadRGBA();\n    point._loadQuadruplet();\n    return point;\n  }\n  from(point) {\n    this.r = point.r;\n    this.g = point.g;\n    this.b = point.b;\n    this.a = point.a;\n    this.uint32 = point.uint32;\n    this.rgba[0] = point.r;\n    this.rgba[1] = point.g;\n    this.rgba[2] = point.b;\n    this.rgba[3] = point.a;\n  }\n  getLuminosity(useAlphaChannel) {\n    let r = this.r;\n    let g = this.g;\n    let b = this.b;\n    if (useAlphaChannel) {\n      r = Math.min(255, 255 - this.a + this.a * r / 255);\n      g = Math.min(255, 255 - this.a + this.a * g / 255);\n      b = Math.min(255, 255 - this.a + this.a * b / 255);\n    }\n    return r * 0.2126 /* RED */ + g * 0.7152 /* GREEN */ + b * 0.0722 /* BLUE */;\n  }\n  _loadUINT32() {\n    this.uint32 = (this.a << 24 | this.b << 16 | this.g << 8 | this.r) >>> 0;\n  }\n  _loadRGBA() {\n    this.r = this.uint32 & 255;\n    this.g = this.uint32 >>> 8 & 255;\n    this.b = this.uint32 >>> 16 & 255;\n    this.a = this.uint32 >>> 24 & 255;\n  }\n  _loadQuadruplet() {\n    this.rgba[0] = this.r;\n    this.rgba[1] = this.g;\n    this.rgba[2] = this.b;\n    this.rgba[3] = this.a;\n  }\n};\n\n// src/utils/pointContainer.ts\nvar PointContainer = class {\n  constructor() {\n    __publicField(this, \"_pointArray\");\n    __publicField(this, \"_width\");\n    __publicField(this, \"_height\");\n    this._width = 0;\n    this._height = 0;\n    this._pointArray = [];\n  }\n  getWidth() {\n    return this._width;\n  }\n  getHeight() {\n    return this._height;\n  }\n  setWidth(width) {\n    this._width = width;\n  }\n  setHeight(height) {\n    this._height = height;\n  }\n  getPointArray() {\n    return this._pointArray;\n  }\n  clone() {\n    const clone = new PointContainer();\n    clone._width = this._width;\n    clone._height = this._height;\n    for (let i = 0, l = this._pointArray.length; i < l; i++) {\n      clone._pointArray[i] = Point.createByUint32(this._pointArray[i].uint32 | 0);\n    }\n    return clone;\n  }\n  toUint32Array() {\n    const l = this._pointArray.length;\n    const uint32Array = new Uint32Array(l);\n    for (let i = 0; i < l; i++) {\n      uint32Array[i] = this._pointArray[i].uint32;\n    }\n    return uint32Array;\n  }\n  toUint8Array() {\n    return new Uint8Array(this.toUint32Array().buffer);\n  }\n  static fromHTMLImageElement(img) {\n    const width = img.naturalWidth;\n    const height = img.naturalHeight;\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0, width, height, 0, 0, width, height);\n    return PointContainer.fromHTMLCanvasElement(canvas);\n  }\n  static fromHTMLCanvasElement(canvas) {\n    const width = canvas.width;\n    const height = canvas.height;\n    const ctx = canvas.getContext(\"2d\");\n    const imgData = ctx.getImageData(0, 0, width, height);\n    return PointContainer.fromImageData(imgData);\n  }\n  static fromImageData(imageData) {\n    const width = imageData.width;\n    const height = imageData.height;\n    return PointContainer.fromUint8Array(imageData.data, width, height);\n  }\n  static fromUint8Array(uint8Array, width, height) {\n    switch (Object.prototype.toString.call(uint8Array)) {\n      case \"[object Uint8ClampedArray]\":\n      case \"[object Uint8Array]\":\n        break;\n      default:\n        uint8Array = new Uint8Array(uint8Array);\n    }\n    const uint32Array = new Uint32Array(uint8Array.buffer);\n    return PointContainer.fromUint32Array(uint32Array, width, height);\n  }\n  static fromUint32Array(uint32Array, width, height) {\n    const container = new PointContainer();\n    container._width = width;\n    container._height = height;\n    for (let i = 0, l = uint32Array.length; i < l; i++) {\n      container._pointArray[i] = Point.createByUint32(uint32Array[i] | 0);\n    }\n    return container;\n  }\n  static fromBuffer(buffer, width, height) {\n    const uint32Array = new Uint32Array(buffer.buffer, buffer.byteOffset, buffer.byteLength / Uint32Array.BYTES_PER_ELEMENT);\n    return PointContainer.fromUint32Array(uint32Array, width, height);\n  }\n};\n\n// src/utils/palette.ts\nvar hueGroups = 10;\nfunction hueGroup(hue, segmentsNumber) {\n  const maxHue = 360;\n  const seg = maxHue / segmentsNumber;\n  const half = seg / 2;\n  for (let i = 1, mid = seg - half; i < segmentsNumber; i++, mid += seg) {\n    if (hue >= mid && hue < mid + seg) return i;\n  }\n  return 0;\n}\nvar Palette = class {\n  constructor() {\n    __publicField(this, \"_pointContainer\");\n    __publicField(this, \"_pointArray\", []);\n    __publicField(this, \"_i32idx\", {});\n    this._pointContainer = new PointContainer();\n    this._pointContainer.setHeight(1);\n    this._pointArray = this._pointContainer.getPointArray();\n  }\n  add(color) {\n    this._pointArray.push(color);\n    this._pointContainer.setWidth(this._pointArray.length);\n  }\n  has(color) {\n    for (let i = this._pointArray.length - 1; i >= 0; i--) {\n      if (color.uint32 === this._pointArray[i].uint32) return true;\n    }\n    return false;\n  }\n  getNearestColor(colorDistanceCalculator, color) {\n    return this._pointArray[this._getNearestIndex(colorDistanceCalculator, color) | 0];\n  }\n  getPointContainer() {\n    return this._pointContainer;\n  }\n  _nearestPointFromCache(key) {\n    return typeof this._i32idx[key] === \"number\" ? this._i32idx[key] : -1;\n  }\n  _getNearestIndex(colorDistanceCalculator, point) {\n    let idx = this._nearestPointFromCache(\"\" + point.uint32);\n    if (idx >= 0) return idx;\n    let minimalDistance = Number.MAX_VALUE;\n    idx = 0;\n    for (let i = 0, l = this._pointArray.length; i < l; i++) {\n      const p = this._pointArray[i];\n      const distance = colorDistanceCalculator.calculateRaw(point.r, point.g, point.b, point.a, p.r, p.g, p.b, p.a);\n      if (distance < minimalDistance) {\n        minimalDistance = distance;\n        idx = i;\n      }\n    }\n    this._i32idx[point.uint32] = idx;\n    return idx;\n  }\n  sort() {\n    this._i32idx = {};\n    this._pointArray.sort((a, b) => {\n      const hslA = rgb2hsl(a.r, a.g, a.b);\n      const hslB = rgb2hsl(b.r, b.g, b.b);\n      const hueA = a.r === a.g && a.g === a.b ? 0 : 1 + hueGroup(hslA.h, hueGroups);\n      const hueB = b.r === b.g && b.g === b.b ? 0 : 1 + hueGroup(hslB.h, hueGroups);\n      const hueDiff = hueB - hueA;\n      if (hueDiff) return -hueDiff;\n      const lA = a.getLuminosity(true);\n      const lB = b.getLuminosity(true);\n      if (lB - lA !== 0) return lB - lA;\n      const satDiff = (hslB.s * 100 | 0) - (hslA.s * 100 | 0);\n      if (satDiff) return -satDiff;\n      return 0;\n    });\n  }\n};\n\n// src/utils/index.ts\nvar utils_exports = {};\n__export(utils_exports, {\n  HueStatistics: () => HueStatistics,\n  Palette: () => Palette,\n  Point: () => Point,\n  PointContainer: () => PointContainer,\n  ProgressTracker: () => ProgressTracker,\n  arithmetic: () => arithmetic_exports\n});\n\n// src/utils/hueStatistics.ts\nvar HueGroup = class {\n  constructor() {\n    __publicField(this, \"num\", 0);\n    __publicField(this, \"cols\", []);\n  }\n};\nvar HueStatistics = class {\n  constructor(numGroups, minCols) {\n    __publicField(this, \"_numGroups\");\n    __publicField(this, \"_minCols\");\n    __publicField(this, \"_stats\");\n    __publicField(this, \"_groupsFull\");\n    this._numGroups = numGroups;\n    this._minCols = minCols;\n    this._stats = [];\n    for (let i = 0; i <= numGroups; i++) {\n      this._stats[i] = new HueGroup();\n    }\n    this._groupsFull = 0;\n  }\n  check(i32) {\n    if (this._groupsFull === this._numGroups + 1) {\n      this.check = () => {};\n    }\n    const r = i32 & 255;\n    const g = i32 >>> 8 & 255;\n    const b = i32 >>> 16 & 255;\n    const hg = r === g && g === b ? 0 : 1 + hueGroup(rgb2hsl(r, g, b).h, this._numGroups);\n    const gr = this._stats[hg];\n    const min = this._minCols;\n    gr.num++;\n    if (gr.num > min) {\n      return;\n    }\n    if (gr.num === min) {\n      this._groupsFull++;\n    }\n    if (gr.num <= min) {\n      this._stats[hg].cols.push(i32);\n    }\n  }\n  injectIntoDictionary(histG) {\n    for (let i = 0; i <= this._numGroups; i++) {\n      if (this._stats[i].num <= this._minCols) {\n        this._stats[i].cols.forEach(col => {\n          if (!histG[col]) {\n            histG[col] = 1;\n          } else {\n            histG[col]++;\n          }\n        });\n      }\n    }\n  }\n  injectIntoArray(histG) {\n    for (let i = 0; i <= this._numGroups; i++) {\n      if (this._stats[i].num <= this._minCols) {\n        this._stats[i].cols.forEach(col => {\n          if (histG.indexOf(col) === -1) {\n            histG.push(col);\n          }\n        });\n      }\n    }\n  }\n};\n\n// src/utils/progressTracker.ts\nvar _ProgressTracker = class {\n  constructor(valueRange, progressRange) {\n    __publicField(this, \"progress\");\n    __publicField(this, \"_step\");\n    __publicField(this, \"_range\");\n    __publicField(this, \"_last\");\n    __publicField(this, \"_progressRange\");\n    this._range = valueRange;\n    this._progressRange = progressRange;\n    this._step = Math.max(1, this._range / (_ProgressTracker.steps + 1) | 0);\n    this._last = -this._step;\n    this.progress = 0;\n  }\n  shouldNotify(current) {\n    if (current - this._last >= this._step) {\n      this._last = current;\n      this.progress = Math.min(this._progressRange * this._last / this._range, this._progressRange);\n      return true;\n    }\n    return false;\n  }\n};\nvar ProgressTracker = _ProgressTracker;\n__publicField(ProgressTracker, \"steps\", 100);\n\n// src/palette/neuquant/neuquant.ts\nvar networkBiasShift = 3;\nvar Neuron = class {\n  constructor(defaultValue) {\n    __publicField(this, \"r\");\n    __publicField(this, \"g\");\n    __publicField(this, \"b\");\n    __publicField(this, \"a\");\n    this.r = this.g = this.b = this.a = defaultValue;\n  }\n  toPoint() {\n    return Point.createByRGBA(this.r >> networkBiasShift, this.g >> networkBiasShift, this.b >> networkBiasShift, this.a >> networkBiasShift);\n  }\n  subtract(r, g, b, a) {\n    this.r -= r | 0;\n    this.g -= g | 0;\n    this.b -= b | 0;\n    this.a -= a | 0;\n  }\n};\nvar _NeuQuant = class extends AbstractPaletteQuantizer {\n  constructor(colorDistanceCalculator, colors = 256) {\n    super();\n    __publicField(this, \"_pointArray\");\n    __publicField(this, \"_networkSize\");\n    __publicField(this, \"_network\");\n    __publicField(this, \"_sampleFactor\");\n    __publicField(this, \"_radPower\");\n    __publicField(this, \"_freq\");\n    __publicField(this, \"_bias\");\n    __publicField(this, \"_distance\");\n    this._distance = colorDistanceCalculator;\n    this._pointArray = [];\n    this._sampleFactor = 1;\n    this._networkSize = colors;\n    this._distance.setWhitePoint(255 << networkBiasShift, 255 << networkBiasShift, 255 << networkBiasShift, 255 << networkBiasShift);\n  }\n  sample(pointContainer) {\n    this._pointArray = this._pointArray.concat(pointContainer.getPointArray());\n  }\n  *quantize() {\n    this._init();\n    yield* this._learn();\n    yield {\n      palette: this._buildPalette(),\n      progress: 100\n    };\n  }\n  _init() {\n    this._freq = [];\n    this._bias = [];\n    this._radPower = [];\n    this._network = [];\n    for (let i = 0; i < this._networkSize; i++) {\n      this._network[i] = new Neuron((i << networkBiasShift + 8) / this._networkSize | 0);\n      this._freq[i] = _NeuQuant._initialBias / this._networkSize | 0;\n      this._bias[i] = 0;\n    }\n  }\n  *_learn() {\n    let sampleFactor = this._sampleFactor;\n    const pointsNumber = this._pointArray.length;\n    if (pointsNumber < _NeuQuant._minpicturebytes) sampleFactor = 1;\n    const alphadec = 30 + (sampleFactor - 1) / 3 | 0;\n    const pointsToSample = pointsNumber / sampleFactor | 0;\n    let delta = pointsToSample / _NeuQuant._nCycles | 0;\n    let alpha = _NeuQuant._initAlpha;\n    let radius = (this._networkSize >> 3) * _NeuQuant._radiusBias;\n    let rad = radius >> _NeuQuant._radiusBiasShift;\n    if (rad <= 1) rad = 0;\n    for (let i = 0; i < rad; i++) {\n      this._radPower[i] = alpha * ((rad * rad - i * i) * _NeuQuant._radBias / (rad * rad)) >>> 0;\n    }\n    let step;\n    if (pointsNumber < _NeuQuant._minpicturebytes) {\n      step = 1;\n    } else if (pointsNumber % _NeuQuant._prime1 !== 0) {\n      step = _NeuQuant._prime1;\n    } else if (pointsNumber % _NeuQuant._prime2 !== 0) {\n      step = _NeuQuant._prime2;\n    } else if (pointsNumber % _NeuQuant._prime3 !== 0) {\n      step = _NeuQuant._prime3;\n    } else {\n      step = _NeuQuant._prime4;\n    }\n    const tracker = new ProgressTracker(pointsToSample, 99);\n    for (let i = 0, pointIndex = 0; i < pointsToSample;) {\n      if (tracker.shouldNotify(i)) {\n        yield {\n          progress: tracker.progress\n        };\n      }\n      const point = this._pointArray[pointIndex];\n      const b = point.b << networkBiasShift;\n      const g = point.g << networkBiasShift;\n      const r = point.r << networkBiasShift;\n      const a = point.a << networkBiasShift;\n      const neuronIndex = this._contest(b, g, r, a);\n      this._alterSingle(alpha, neuronIndex, b, g, r, a);\n      if (rad !== 0) this._alterNeighbour(rad, neuronIndex, b, g, r, a);\n      pointIndex += step;\n      if (pointIndex >= pointsNumber) pointIndex -= pointsNumber;\n      i++;\n      if (delta === 0) delta = 1;\n      if (i % delta === 0) {\n        alpha -= alpha / alphadec | 0;\n        radius -= radius / _NeuQuant._radiusDecrease | 0;\n        rad = radius >> _NeuQuant._radiusBiasShift;\n        if (rad <= 1) rad = 0;\n        for (let j = 0; j < rad; j++) {\n          this._radPower[j] = alpha * ((rad * rad - j * j) * _NeuQuant._radBias / (rad * rad)) >>> 0;\n        }\n      }\n    }\n  }\n  _buildPalette() {\n    const palette = new Palette();\n    this._network.forEach(neuron => {\n      palette.add(neuron.toPoint());\n    });\n    palette.sort();\n    return palette;\n  }\n  _alterNeighbour(rad, i, b, g, r, al) {\n    let lo = i - rad;\n    if (lo < -1) lo = -1;\n    let hi = i + rad;\n    if (hi > this._networkSize) hi = this._networkSize;\n    let j = i + 1;\n    let k = i - 1;\n    let m = 1;\n    while (j < hi || k > lo) {\n      const a = this._radPower[m++] / _NeuQuant._alphaRadBias;\n      if (j < hi) {\n        const p = this._network[j++];\n        p.subtract(a * (p.r - r), a * (p.g - g), a * (p.b - b), a * (p.a - al));\n      }\n      if (k > lo) {\n        const p = this._network[k--];\n        p.subtract(a * (p.r - r), a * (p.g - g), a * (p.b - b), a * (p.a - al));\n      }\n    }\n  }\n  _alterSingle(alpha, i, b, g, r, a) {\n    alpha /= _NeuQuant._initAlpha;\n    const n = this._network[i];\n    n.subtract(alpha * (n.r - r), alpha * (n.g - g), alpha * (n.b - b), alpha * (n.a - a));\n  }\n  _contest(b, g, r, a) {\n    const multiplier = 255 * 4 << networkBiasShift;\n    let bestd = ~(1 << 31);\n    let bestbiasd = bestd;\n    let bestpos = -1;\n    let bestbiaspos = bestpos;\n    for (let i = 0; i < this._networkSize; i++) {\n      const n = this._network[i];\n      const dist = this._distance.calculateNormalized(n, {\n        r,\n        g,\n        b,\n        a\n      }) * multiplier | 0;\n      if (dist < bestd) {\n        bestd = dist;\n        bestpos = i;\n      }\n      const biasdist = dist - (this._bias[i] >> _NeuQuant._initialBiasShift - networkBiasShift);\n      if (biasdist < bestbiasd) {\n        bestbiasd = biasdist;\n        bestbiaspos = i;\n      }\n      const betafreq = this._freq[i] >> _NeuQuant._betaShift;\n      this._freq[i] -= betafreq;\n      this._bias[i] += betafreq << _NeuQuant._gammaShift;\n    }\n    this._freq[bestpos] += _NeuQuant._beta;\n    this._bias[bestpos] -= _NeuQuant._betaGamma;\n    return bestbiaspos;\n  }\n};\nvar NeuQuant = _NeuQuant;\n__publicField(NeuQuant, \"_prime1\", 499);\n__publicField(NeuQuant, \"_prime2\", 491);\n__publicField(NeuQuant, \"_prime3\", 487);\n__publicField(NeuQuant, \"_prime4\", 503);\n__publicField(NeuQuant, \"_minpicturebytes\", _NeuQuant._prime4);\n__publicField(NeuQuant, \"_nCycles\", 100);\n__publicField(NeuQuant, \"_initialBiasShift\", 16);\n__publicField(NeuQuant, \"_initialBias\", 1 << _NeuQuant._initialBiasShift);\n__publicField(NeuQuant, \"_gammaShift\", 10);\n__publicField(NeuQuant, \"_betaShift\", 10);\n__publicField(NeuQuant, \"_beta\", _NeuQuant._initialBias >> _NeuQuant._betaShift);\n__publicField(NeuQuant, \"_betaGamma\", _NeuQuant._initialBias << _NeuQuant._gammaShift - _NeuQuant._betaShift);\n__publicField(NeuQuant, \"_radiusBiasShift\", 6);\n__publicField(NeuQuant, \"_radiusBias\", 1 << _NeuQuant._radiusBiasShift);\n__publicField(NeuQuant, \"_radiusDecrease\", 30);\n__publicField(NeuQuant, \"_alphaBiasShift\", 10);\n__publicField(NeuQuant, \"_initAlpha\", 1 << _NeuQuant._alphaBiasShift);\n__publicField(NeuQuant, \"_radBiasShift\", 8);\n__publicField(NeuQuant, \"_radBias\", 1 << _NeuQuant._radBiasShift);\n__publicField(NeuQuant, \"_alphaRadBiasShift\", _NeuQuant._alphaBiasShift + _NeuQuant._radBiasShift);\n__publicField(NeuQuant, \"_alphaRadBias\", 1 << _NeuQuant._alphaRadBiasShift);\n\n// src/palette/neuquant/neuquantFloat.ts\nvar networkBiasShift2 = 3;\nvar NeuronFloat = class {\n  constructor(defaultValue) {\n    __publicField(this, \"r\");\n    __publicField(this, \"g\");\n    __publicField(this, \"b\");\n    __publicField(this, \"a\");\n    this.r = this.g = this.b = this.a = defaultValue;\n  }\n  toPoint() {\n    return Point.createByRGBA(this.r >> networkBiasShift2, this.g >> networkBiasShift2, this.b >> networkBiasShift2, this.a >> networkBiasShift2);\n  }\n  subtract(r, g, b, a) {\n    this.r -= r;\n    this.g -= g;\n    this.b -= b;\n    this.a -= a;\n  }\n};\nvar _NeuQuantFloat = class extends AbstractPaletteQuantizer {\n  constructor(colorDistanceCalculator, colors = 256) {\n    super();\n    __publicField(this, \"_pointArray\");\n    __publicField(this, \"_networkSize\");\n    __publicField(this, \"_network\");\n    __publicField(this, \"_sampleFactor\");\n    __publicField(this, \"_radPower\");\n    __publicField(this, \"_freq\");\n    __publicField(this, \"_bias\");\n    __publicField(this, \"_distance\");\n    this._distance = colorDistanceCalculator;\n    this._pointArray = [];\n    this._sampleFactor = 1;\n    this._networkSize = colors;\n    this._distance.setWhitePoint(255 << networkBiasShift2, 255 << networkBiasShift2, 255 << networkBiasShift2, 255 << networkBiasShift2);\n  }\n  sample(pointContainer) {\n    this._pointArray = this._pointArray.concat(pointContainer.getPointArray());\n  }\n  *quantize() {\n    this._init();\n    yield* this._learn();\n    yield {\n      palette: this._buildPalette(),\n      progress: 100\n    };\n  }\n  _init() {\n    this._freq = [];\n    this._bias = [];\n    this._radPower = [];\n    this._network = [];\n    for (let i = 0; i < this._networkSize; i++) {\n      this._network[i] = new NeuronFloat((i << networkBiasShift2 + 8) / this._networkSize);\n      this._freq[i] = _NeuQuantFloat._initialBias / this._networkSize;\n      this._bias[i] = 0;\n    }\n  }\n  *_learn() {\n    let sampleFactor = this._sampleFactor;\n    const pointsNumber = this._pointArray.length;\n    if (pointsNumber < _NeuQuantFloat._minpicturebytes) sampleFactor = 1;\n    const alphadec = 30 + (sampleFactor - 1) / 3;\n    const pointsToSample = pointsNumber / sampleFactor;\n    let delta = pointsToSample / _NeuQuantFloat._nCycles | 0;\n    let alpha = _NeuQuantFloat._initAlpha;\n    let radius = (this._networkSize >> 3) * _NeuQuantFloat._radiusBias;\n    let rad = radius >> _NeuQuantFloat._radiusBiasShift;\n    if (rad <= 1) rad = 0;\n    for (let i = 0; i < rad; i++) {\n      this._radPower[i] = alpha * ((rad * rad - i * i) * _NeuQuantFloat._radBias / (rad * rad));\n    }\n    let step;\n    if (pointsNumber < _NeuQuantFloat._minpicturebytes) {\n      step = 1;\n    } else if (pointsNumber % _NeuQuantFloat._prime1 !== 0) {\n      step = _NeuQuantFloat._prime1;\n    } else if (pointsNumber % _NeuQuantFloat._prime2 !== 0) {\n      step = _NeuQuantFloat._prime2;\n    } else if (pointsNumber % _NeuQuantFloat._prime3 !== 0) {\n      step = _NeuQuantFloat._prime3;\n    } else {\n      step = _NeuQuantFloat._prime4;\n    }\n    const tracker = new ProgressTracker(pointsToSample, 99);\n    for (let i = 0, pointIndex = 0; i < pointsToSample;) {\n      if (tracker.shouldNotify(i)) {\n        yield {\n          progress: tracker.progress\n        };\n      }\n      const point = this._pointArray[pointIndex];\n      const b = point.b << networkBiasShift2;\n      const g = point.g << networkBiasShift2;\n      const r = point.r << networkBiasShift2;\n      const a = point.a << networkBiasShift2;\n      const neuronIndex = this._contest(b, g, r, a);\n      this._alterSingle(alpha, neuronIndex, b, g, r, a);\n      if (rad !== 0) this._alterNeighbour(rad, neuronIndex, b, g, r, a);\n      pointIndex += step;\n      if (pointIndex >= pointsNumber) pointIndex -= pointsNumber;\n      i++;\n      if (delta === 0) delta = 1;\n      if (i % delta === 0) {\n        alpha -= alpha / alphadec;\n        radius -= radius / _NeuQuantFloat._radiusDecrease;\n        rad = radius >> _NeuQuantFloat._radiusBiasShift;\n        if (rad <= 1) rad = 0;\n        for (let j = 0; j < rad; j++) {\n          this._radPower[j] = alpha * ((rad * rad - j * j) * _NeuQuantFloat._radBias / (rad * rad));\n        }\n      }\n    }\n  }\n  _buildPalette() {\n    const palette = new Palette();\n    this._network.forEach(neuron => {\n      palette.add(neuron.toPoint());\n    });\n    palette.sort();\n    return palette;\n  }\n  _alterNeighbour(rad, i, b, g, r, al) {\n    let lo = i - rad;\n    if (lo < -1) lo = -1;\n    let hi = i + rad;\n    if (hi > this._networkSize) hi = this._networkSize;\n    let j = i + 1;\n    let k = i - 1;\n    let m = 1;\n    while (j < hi || k > lo) {\n      const a = this._radPower[m++] / _NeuQuantFloat._alphaRadBias;\n      if (j < hi) {\n        const p = this._network[j++];\n        p.subtract(a * (p.r - r), a * (p.g - g), a * (p.b - b), a * (p.a - al));\n      }\n      if (k > lo) {\n        const p = this._network[k--];\n        p.subtract(a * (p.r - r), a * (p.g - g), a * (p.b - b), a * (p.a - al));\n      }\n    }\n  }\n  _alterSingle(alpha, i, b, g, r, a) {\n    alpha /= _NeuQuantFloat._initAlpha;\n    const n = this._network[i];\n    n.subtract(alpha * (n.r - r), alpha * (n.g - g), alpha * (n.b - b), alpha * (n.a - a));\n  }\n  _contest(b, g, r, al) {\n    const multiplier = 255 * 4 << networkBiasShift2;\n    let bestd = ~(1 << 31);\n    let bestbiasd = bestd;\n    let bestpos = -1;\n    let bestbiaspos = bestpos;\n    for (let i = 0; i < this._networkSize; i++) {\n      const n = this._network[i];\n      const dist = this._distance.calculateNormalized(n, {\n        r,\n        g,\n        b,\n        a: al\n      }) * multiplier;\n      if (dist < bestd) {\n        bestd = dist;\n        bestpos = i;\n      }\n      const biasdist = dist - (this._bias[i] >> _NeuQuantFloat._initialBiasShift - networkBiasShift2);\n      if (biasdist < bestbiasd) {\n        bestbiasd = biasdist;\n        bestbiaspos = i;\n      }\n      const betafreq = this._freq[i] >> _NeuQuantFloat._betaShift;\n      this._freq[i] -= betafreq;\n      this._bias[i] += betafreq << _NeuQuantFloat._gammaShift;\n    }\n    this._freq[bestpos] += _NeuQuantFloat._beta;\n    this._bias[bestpos] -= _NeuQuantFloat._betaGamma;\n    return bestbiaspos;\n  }\n};\nvar NeuQuantFloat = _NeuQuantFloat;\n__publicField(NeuQuantFloat, \"_prime1\", 499);\n__publicField(NeuQuantFloat, \"_prime2\", 491);\n__publicField(NeuQuantFloat, \"_prime3\", 487);\n__publicField(NeuQuantFloat, \"_prime4\", 503);\n__publicField(NeuQuantFloat, \"_minpicturebytes\", _NeuQuantFloat._prime4);\n__publicField(NeuQuantFloat, \"_nCycles\", 100);\n__publicField(NeuQuantFloat, \"_initialBiasShift\", 16);\n__publicField(NeuQuantFloat, \"_initialBias\", 1 << _NeuQuantFloat._initialBiasShift);\n__publicField(NeuQuantFloat, \"_gammaShift\", 10);\n__publicField(NeuQuantFloat, \"_betaShift\", 10);\n__publicField(NeuQuantFloat, \"_beta\", _NeuQuantFloat._initialBias >> _NeuQuantFloat._betaShift);\n__publicField(NeuQuantFloat, \"_betaGamma\", _NeuQuantFloat._initialBias << _NeuQuantFloat._gammaShift - _NeuQuantFloat._betaShift);\n__publicField(NeuQuantFloat, \"_radiusBiasShift\", 6);\n__publicField(NeuQuantFloat, \"_radiusBias\", 1 << _NeuQuantFloat._radiusBiasShift);\n__publicField(NeuQuantFloat, \"_radiusDecrease\", 30);\n__publicField(NeuQuantFloat, \"_alphaBiasShift\", 10);\n__publicField(NeuQuantFloat, \"_initAlpha\", 1 << _NeuQuantFloat._alphaBiasShift);\n__publicField(NeuQuantFloat, \"_radBiasShift\", 8);\n__publicField(NeuQuantFloat, \"_radBias\", 1 << _NeuQuantFloat._radBiasShift);\n__publicField(NeuQuantFloat, \"_alphaRadBiasShift\", _NeuQuantFloat._alphaBiasShift + _NeuQuantFloat._radBiasShift);\n__publicField(NeuQuantFloat, \"_alphaRadBias\", 1 << _NeuQuantFloat._alphaRadBiasShift);\n\n// src/palette/rgbquant/colorHistogram.ts\nvar _ColorHistogram = class {\n  constructor(method, colors) {\n    __publicField(this, \"_method\");\n    __publicField(this, \"_hueStats\");\n    __publicField(this, \"_histogram\");\n    __publicField(this, \"_initColors\");\n    __publicField(this, \"_minHueCols\");\n    this._method = method;\n    this._minHueCols = colors << 2;\n    this._initColors = colors << 2;\n    this._hueStats = new HueStatistics(_ColorHistogram._hueGroups, this._minHueCols);\n    this._histogram = /* @__PURE__ */Object.create(null);\n  }\n  sample(pointContainer) {\n    switch (this._method) {\n      case 1:\n        this._colorStats1D(pointContainer);\n        break;\n      case 2:\n        this._colorStats2D(pointContainer);\n        break;\n    }\n  }\n  getImportanceSortedColorsIDXI32() {\n    const sorted = stableSort(Object.keys(this._histogram), (a, b) => this._histogram[b] - this._histogram[a]);\n    if (sorted.length === 0) {\n      return [];\n    }\n    let idxi32;\n    switch (this._method) {\n      case 1:\n        const initialColorsLimit = Math.min(sorted.length, this._initColors);\n        const last = sorted[initialColorsLimit - 1];\n        const freq = this._histogram[last];\n        idxi32 = sorted.slice(0, initialColorsLimit);\n        let pos = initialColorsLimit;\n        const len = sorted.length;\n        while (pos < len && this._histogram[sorted[pos]] === freq) {\n          idxi32.push(sorted[pos++]);\n        }\n        this._hueStats.injectIntoArray(idxi32);\n        break;\n      case 2:\n        idxi32 = sorted;\n        break;\n      default:\n        throw new Error(\"Incorrect method\");\n    }\n    return idxi32.map(v => +v);\n  }\n  _colorStats1D(pointContainer) {\n    const histG = this._histogram;\n    const pointArray = pointContainer.getPointArray();\n    const len = pointArray.length;\n    for (let i = 0; i < len; i++) {\n      const col = pointArray[i].uint32;\n      this._hueStats.check(col);\n      if (col in histG) {\n        histG[col]++;\n      } else {\n        histG[col] = 1;\n      }\n    }\n  }\n  _colorStats2D(pointContainer) {\n    const width = pointContainer.getWidth();\n    const height = pointContainer.getHeight();\n    const pointArray = pointContainer.getPointArray();\n    const boxW = _ColorHistogram._boxSize[0];\n    const boxH = _ColorHistogram._boxSize[1];\n    const area = boxW * boxH;\n    const boxes = this._makeBoxes(width, height, boxW, boxH);\n    const histG = this._histogram;\n    boxes.forEach(box => {\n      let effc = Math.round(box.w * box.h / area) * _ColorHistogram._boxPixels;\n      if (effc < 2) effc = 2;\n      const histL = {};\n      this._iterateBox(box, width, i => {\n        const col = pointArray[i].uint32;\n        this._hueStats.check(col);\n        if (col in histG) {\n          histG[col]++;\n        } else if (col in histL) {\n          if (++histL[col] >= effc) {\n            histG[col] = histL[col];\n          }\n        } else {\n          histL[col] = 1;\n        }\n      });\n    });\n    this._hueStats.injectIntoDictionary(histG);\n  }\n  _iterateBox(bbox, wid, fn) {\n    const b = bbox;\n    const i0 = b.y * wid + b.x;\n    const i1 = (b.y + b.h - 1) * wid + (b.x + b.w - 1);\n    const incr = wid - b.w + 1;\n    let cnt = 0;\n    let i = i0;\n    do {\n      fn.call(this, i);\n      i += ++cnt % b.w === 0 ? incr : 1;\n    } while (i <= i1);\n  }\n  _makeBoxes(width, height, stepX, stepY) {\n    const wrem = width % stepX;\n    const hrem = height % stepY;\n    const xend = width - wrem;\n    const yend = height - hrem;\n    const boxesArray = [];\n    for (let y2 = 0; y2 < height; y2 += stepY) {\n      for (let x2 = 0; x2 < width; x2 += stepX) {\n        boxesArray.push({\n          x: x2,\n          y: y2,\n          w: x2 === xend ? wrem : stepX,\n          h: y2 === yend ? hrem : stepY\n        });\n      }\n    }\n    return boxesArray;\n  }\n};\nvar ColorHistogram = _ColorHistogram;\n__publicField(ColorHistogram, \"_boxSize\", [64, 64]);\n__publicField(ColorHistogram, \"_boxPixels\", 2);\n__publicField(ColorHistogram, \"_hueGroups\", 10);\n\n// src/palette/rgbquant/rgbquant.ts\nvar RemovedColor = class {\n  constructor(index, color, distance) {\n    __publicField(this, \"index\");\n    __publicField(this, \"color\");\n    __publicField(this, \"distance\");\n    this.index = index;\n    this.color = color;\n    this.distance = distance;\n  }\n};\nvar RGBQuant = class extends AbstractPaletteQuantizer {\n  constructor(colorDistanceCalculator, colors = 256, method = 2) {\n    super();\n    __publicField(this, \"_colors\");\n    __publicField(this, \"_initialDistance\");\n    __publicField(this, \"_distanceIncrement\");\n    __publicField(this, \"_histogram\");\n    __publicField(this, \"_distance\");\n    this._distance = colorDistanceCalculator;\n    this._colors = colors;\n    this._histogram = new ColorHistogram(method, colors);\n    this._initialDistance = 0.01;\n    this._distanceIncrement = 5e-3;\n  }\n  sample(image) {\n    this._histogram.sample(image);\n  }\n  *quantize() {\n    const idxi32 = this._histogram.getImportanceSortedColorsIDXI32();\n    if (idxi32.length === 0) {\n      throw new Error(\"No colors in image\");\n    }\n    yield* this._buildPalette(idxi32);\n  }\n  *_buildPalette(idxi32) {\n    const palette = new Palette();\n    const colorArray = palette.getPointContainer().getPointArray();\n    const usageArray = new Array(idxi32.length);\n    for (let i = 0; i < idxi32.length; i++) {\n      colorArray.push(Point.createByUint32(idxi32[i]));\n      usageArray[i] = 1;\n    }\n    const len = colorArray.length;\n    const memDist = [];\n    let palLen = len;\n    let thold = this._initialDistance;\n    const tracker = new ProgressTracker(palLen - this._colors, 99);\n    while (palLen > this._colors) {\n      memDist.length = 0;\n      for (let i = 0; i < len; i++) {\n        if (tracker.shouldNotify(len - palLen)) {\n          yield {\n            progress: tracker.progress\n          };\n        }\n        if (usageArray[i] === 0) continue;\n        const pxi = colorArray[i];\n        for (let j = i + 1; j < len; j++) {\n          if (usageArray[j] === 0) continue;\n          const pxj = colorArray[j];\n          const dist = this._distance.calculateNormalized(pxi, pxj);\n          if (dist < thold) {\n            memDist.push(new RemovedColor(j, pxj, dist));\n            usageArray[j] = 0;\n            palLen--;\n          }\n        }\n      }\n      thold += palLen > this._colors * 3 ? this._initialDistance : this._distanceIncrement;\n    }\n    if (palLen < this._colors) {\n      stableSort(memDist, (a, b) => b.distance - a.distance);\n      let k = 0;\n      while (palLen < this._colors && k < memDist.length) {\n        const removedColor = memDist[k];\n        usageArray[removedColor.index] = 1;\n        palLen++;\n        k++;\n      }\n    }\n    let colors = colorArray.length;\n    for (let colorIndex = colors - 1; colorIndex >= 0; colorIndex--) {\n      if (usageArray[colorIndex] === 0) {\n        if (colorIndex !== colors - 1) {\n          colorArray[colorIndex] = colorArray[colors - 1];\n        }\n        --colors;\n      }\n    }\n    colorArray.length = colors;\n    palette.sort();\n    yield {\n      palette,\n      progress: 100\n    };\n  }\n};\n\n// src/palette/wu/wuQuant.ts\nfunction createArray1D(dimension1) {\n  const a = [];\n  for (let k = 0; k < dimension1; k++) {\n    a[k] = 0;\n  }\n  return a;\n}\nfunction createArray4D(dimension1, dimension2, dimension3, dimension4) {\n  const a = new Array(dimension1);\n  for (let i = 0; i < dimension1; i++) {\n    a[i] = new Array(dimension2);\n    for (let j = 0; j < dimension2; j++) {\n      a[i][j] = new Array(dimension3);\n      for (let k = 0; k < dimension3; k++) {\n        a[i][j][k] = new Array(dimension4);\n        for (let l = 0; l < dimension4; l++) {\n          a[i][j][k][l] = 0;\n        }\n      }\n    }\n  }\n  return a;\n}\nfunction createArray3D(dimension1, dimension2, dimension3) {\n  const a = new Array(dimension1);\n  for (let i = 0; i < dimension1; i++) {\n    a[i] = new Array(dimension2);\n    for (let j = 0; j < dimension2; j++) {\n      a[i][j] = new Array(dimension3);\n      for (let k = 0; k < dimension3; k++) {\n        a[i][j][k] = 0;\n      }\n    }\n  }\n  return a;\n}\nfunction fillArray3D(a, dimension1, dimension2, dimension3, value) {\n  for (let i = 0; i < dimension1; i++) {\n    a[i] = [];\n    for (let j = 0; j < dimension2; j++) {\n      a[i][j] = [];\n      for (let k = 0; k < dimension3; k++) {\n        a[i][j][k] = value;\n      }\n    }\n  }\n}\nfunction fillArray1D(a, dimension1, value) {\n  for (let i = 0; i < dimension1; i++) {\n    a[i] = value;\n  }\n}\nvar WuColorCube = class {\n  constructor() {\n    __publicField(this, \"redMinimum\");\n    __publicField(this, \"redMaximum\");\n    __publicField(this, \"greenMinimum\");\n    __publicField(this, \"greenMaximum\");\n    __publicField(this, \"blueMinimum\");\n    __publicField(this, \"blueMaximum\");\n    __publicField(this, \"volume\");\n    __publicField(this, \"alphaMinimum\");\n    __publicField(this, \"alphaMaximum\");\n  }\n};\nvar _WuQuant = class extends AbstractPaletteQuantizer {\n  constructor(colorDistanceCalculator, colors = 256, significantBitsPerChannel = 5) {\n    super();\n    __publicField(this, \"_reds\");\n    __publicField(this, \"_greens\");\n    __publicField(this, \"_blues\");\n    __publicField(this, \"_alphas\");\n    __publicField(this, \"_sums\");\n    __publicField(this, \"_weights\");\n    __publicField(this, \"_momentsRed\");\n    __publicField(this, \"_momentsGreen\");\n    __publicField(this, \"_momentsBlue\");\n    __publicField(this, \"_momentsAlpha\");\n    __publicField(this, \"_moments\");\n    __publicField(this, \"_table\");\n    __publicField(this, \"_pixels\");\n    __publicField(this, \"_cubes\");\n    __publicField(this, \"_colors\");\n    __publicField(this, \"_significantBitsPerChannel\");\n    __publicField(this, \"_maxSideIndex\");\n    __publicField(this, \"_alphaMaxSideIndex\");\n    __publicField(this, \"_sideSize\");\n    __publicField(this, \"_alphaSideSize\");\n    __publicField(this, \"_distance\");\n    this._distance = colorDistanceCalculator;\n    this._setQuality(significantBitsPerChannel);\n    this._initialize(colors);\n  }\n  sample(image) {\n    const pointArray = image.getPointArray();\n    for (let i = 0, l = pointArray.length; i < l; i++) {\n      this._addColor(pointArray[i]);\n    }\n    this._pixels = this._pixels.concat(pointArray);\n  }\n  *quantize() {\n    yield* this._preparePalette();\n    const palette = new Palette();\n    for (let paletteIndex = 0; paletteIndex < this._colors; paletteIndex++) {\n      if (this._sums[paletteIndex] > 0) {\n        const sum = this._sums[paletteIndex];\n        const r = this._reds[paletteIndex] / sum;\n        const g = this._greens[paletteIndex] / sum;\n        const b = this._blues[paletteIndex] / sum;\n        const a = this._alphas[paletteIndex] / sum;\n        const color = Point.createByRGBA(r | 0, g | 0, b | 0, a | 0);\n        palette.add(color);\n      }\n    }\n    palette.sort();\n    yield {\n      palette,\n      progress: 100\n    };\n  }\n  *_preparePalette() {\n    yield* this._calculateMoments();\n    let next = 0;\n    const volumeVariance = createArray1D(this._colors);\n    for (let cubeIndex = 1; cubeIndex < this._colors; ++cubeIndex) {\n      if (this._cut(this._cubes[next], this._cubes[cubeIndex])) {\n        volumeVariance[next] = this._cubes[next].volume > 1 ? this._calculateVariance(this._cubes[next]) : 0;\n        volumeVariance[cubeIndex] = this._cubes[cubeIndex].volume > 1 ? this._calculateVariance(this._cubes[cubeIndex]) : 0;\n      } else {\n        volumeVariance[next] = 0;\n        cubeIndex--;\n      }\n      next = 0;\n      let temp = volumeVariance[0];\n      for (let index = 1; index <= cubeIndex; ++index) {\n        if (volumeVariance[index] > temp) {\n          temp = volumeVariance[index];\n          next = index;\n        }\n      }\n      if (temp <= 0) {\n        this._colors = cubeIndex + 1;\n        break;\n      }\n    }\n    const lookupRed = [];\n    const lookupGreen = [];\n    const lookupBlue = [];\n    const lookupAlpha = [];\n    for (let k = 0; k < this._colors; ++k) {\n      const weight = _WuQuant._volume(this._cubes[k], this._weights);\n      if (weight > 0) {\n        lookupRed[k] = _WuQuant._volume(this._cubes[k], this._momentsRed) / weight | 0;\n        lookupGreen[k] = _WuQuant._volume(this._cubes[k], this._momentsGreen) / weight | 0;\n        lookupBlue[k] = _WuQuant._volume(this._cubes[k], this._momentsBlue) / weight | 0;\n        lookupAlpha[k] = _WuQuant._volume(this._cubes[k], this._momentsAlpha) / weight | 0;\n      } else {\n        lookupRed[k] = 0;\n        lookupGreen[k] = 0;\n        lookupBlue[k] = 0;\n        lookupAlpha[k] = 0;\n      }\n    }\n    this._reds = createArray1D(this._colors + 1);\n    this._greens = createArray1D(this._colors + 1);\n    this._blues = createArray1D(this._colors + 1);\n    this._alphas = createArray1D(this._colors + 1);\n    this._sums = createArray1D(this._colors + 1);\n    for (let index = 0, l = this._pixels.length; index < l; index++) {\n      const color = this._pixels[index];\n      const match = -1;\n      let bestMatch = match;\n      let bestDistance = Number.MAX_VALUE;\n      for (let lookup = 0; lookup < this._colors; lookup++) {\n        const foundRed = lookupRed[lookup];\n        const foundGreen = lookupGreen[lookup];\n        const foundBlue = lookupBlue[lookup];\n        const foundAlpha = lookupAlpha[lookup];\n        const distance = this._distance.calculateRaw(foundRed, foundGreen, foundBlue, foundAlpha, color.r, color.g, color.b, color.a);\n        if (distance < bestDistance) {\n          bestDistance = distance;\n          bestMatch = lookup;\n        }\n      }\n      this._reds[bestMatch] += color.r;\n      this._greens[bestMatch] += color.g;\n      this._blues[bestMatch] += color.b;\n      this._alphas[bestMatch] += color.a;\n      this._sums[bestMatch]++;\n    }\n  }\n  _addColor(color) {\n    const bitsToRemove = 8 - this._significantBitsPerChannel;\n    const indexRed = (color.r >> bitsToRemove) + 1;\n    const indexGreen = (color.g >> bitsToRemove) + 1;\n    const indexBlue = (color.b >> bitsToRemove) + 1;\n    const indexAlpha = (color.a >> bitsToRemove) + 1;\n    this._weights[indexAlpha][indexRed][indexGreen][indexBlue]++;\n    this._momentsRed[indexAlpha][indexRed][indexGreen][indexBlue] += color.r;\n    this._momentsGreen[indexAlpha][indexRed][indexGreen][indexBlue] += color.g;\n    this._momentsBlue[indexAlpha][indexRed][indexGreen][indexBlue] += color.b;\n    this._momentsAlpha[indexAlpha][indexRed][indexGreen][indexBlue] += color.a;\n    this._moments[indexAlpha][indexRed][indexGreen][indexBlue] += this._table[color.r] + this._table[color.g] + this._table[color.b] + this._table[color.a];\n  }\n  *_calculateMoments() {\n    const area = [];\n    const areaRed = [];\n    const areaGreen = [];\n    const areaBlue = [];\n    const areaAlpha = [];\n    const area2 = [];\n    const xarea = createArray3D(this._sideSize, this._sideSize, this._sideSize);\n    const xareaRed = createArray3D(this._sideSize, this._sideSize, this._sideSize);\n    const xareaGreen = createArray3D(this._sideSize, this._sideSize, this._sideSize);\n    const xareaBlue = createArray3D(this._sideSize, this._sideSize, this._sideSize);\n    const xareaAlpha = createArray3D(this._sideSize, this._sideSize, this._sideSize);\n    const xarea2 = createArray3D(this._sideSize, this._sideSize, this._sideSize);\n    let trackerProgress = 0;\n    const tracker = new ProgressTracker(this._alphaMaxSideIndex * this._maxSideIndex, 99);\n    for (let alphaIndex = 1; alphaIndex <= this._alphaMaxSideIndex; ++alphaIndex) {\n      fillArray3D(xarea, this._sideSize, this._sideSize, this._sideSize, 0);\n      fillArray3D(xareaRed, this._sideSize, this._sideSize, this._sideSize, 0);\n      fillArray3D(xareaGreen, this._sideSize, this._sideSize, this._sideSize, 0);\n      fillArray3D(xareaBlue, this._sideSize, this._sideSize, this._sideSize, 0);\n      fillArray3D(xareaAlpha, this._sideSize, this._sideSize, this._sideSize, 0);\n      fillArray3D(xarea2, this._sideSize, this._sideSize, this._sideSize, 0);\n      for (let redIndex = 1; redIndex <= this._maxSideIndex; ++redIndex, ++trackerProgress) {\n        if (tracker.shouldNotify(trackerProgress)) {\n          yield {\n            progress: tracker.progress\n          };\n        }\n        fillArray1D(area, this._sideSize, 0);\n        fillArray1D(areaRed, this._sideSize, 0);\n        fillArray1D(areaGreen, this._sideSize, 0);\n        fillArray1D(areaBlue, this._sideSize, 0);\n        fillArray1D(areaAlpha, this._sideSize, 0);\n        fillArray1D(area2, this._sideSize, 0);\n        for (let greenIndex = 1; greenIndex <= this._maxSideIndex; ++greenIndex) {\n          let line = 0;\n          let lineRed = 0;\n          let lineGreen = 0;\n          let lineBlue = 0;\n          let lineAlpha = 0;\n          let line2 = 0;\n          for (let blueIndex = 1; blueIndex <= this._maxSideIndex; ++blueIndex) {\n            line += this._weights[alphaIndex][redIndex][greenIndex][blueIndex];\n            lineRed += this._momentsRed[alphaIndex][redIndex][greenIndex][blueIndex];\n            lineGreen += this._momentsGreen[alphaIndex][redIndex][greenIndex][blueIndex];\n            lineBlue += this._momentsBlue[alphaIndex][redIndex][greenIndex][blueIndex];\n            lineAlpha += this._momentsAlpha[alphaIndex][redIndex][greenIndex][blueIndex];\n            line2 += this._moments[alphaIndex][redIndex][greenIndex][blueIndex];\n            area[blueIndex] += line;\n            areaRed[blueIndex] += lineRed;\n            areaGreen[blueIndex] += lineGreen;\n            areaBlue[blueIndex] += lineBlue;\n            areaAlpha[blueIndex] += lineAlpha;\n            area2[blueIndex] += line2;\n            xarea[redIndex][greenIndex][blueIndex] = xarea[redIndex - 1][greenIndex][blueIndex] + area[blueIndex];\n            xareaRed[redIndex][greenIndex][blueIndex] = xareaRed[redIndex - 1][greenIndex][blueIndex] + areaRed[blueIndex];\n            xareaGreen[redIndex][greenIndex][blueIndex] = xareaGreen[redIndex - 1][greenIndex][blueIndex] + areaGreen[blueIndex];\n            xareaBlue[redIndex][greenIndex][blueIndex] = xareaBlue[redIndex - 1][greenIndex][blueIndex] + areaBlue[blueIndex];\n            xareaAlpha[redIndex][greenIndex][blueIndex] = xareaAlpha[redIndex - 1][greenIndex][blueIndex] + areaAlpha[blueIndex];\n            xarea2[redIndex][greenIndex][blueIndex] = xarea2[redIndex - 1][greenIndex][blueIndex] + area2[blueIndex];\n            this._weights[alphaIndex][redIndex][greenIndex][blueIndex] = this._weights[alphaIndex - 1][redIndex][greenIndex][blueIndex] + xarea[redIndex][greenIndex][blueIndex];\n            this._momentsRed[alphaIndex][redIndex][greenIndex][blueIndex] = this._momentsRed[alphaIndex - 1][redIndex][greenIndex][blueIndex] + xareaRed[redIndex][greenIndex][blueIndex];\n            this._momentsGreen[alphaIndex][redIndex][greenIndex][blueIndex] = this._momentsGreen[alphaIndex - 1][redIndex][greenIndex][blueIndex] + xareaGreen[redIndex][greenIndex][blueIndex];\n            this._momentsBlue[alphaIndex][redIndex][greenIndex][blueIndex] = this._momentsBlue[alphaIndex - 1][redIndex][greenIndex][blueIndex] + xareaBlue[redIndex][greenIndex][blueIndex];\n            this._momentsAlpha[alphaIndex][redIndex][greenIndex][blueIndex] = this._momentsAlpha[alphaIndex - 1][redIndex][greenIndex][blueIndex] + xareaAlpha[redIndex][greenIndex][blueIndex];\n            this._moments[alphaIndex][redIndex][greenIndex][blueIndex] = this._moments[alphaIndex - 1][redIndex][greenIndex][blueIndex] + xarea2[redIndex][greenIndex][blueIndex];\n          }\n        }\n      }\n    }\n  }\n  static _volumeFloat(cube, moment) {\n    return moment[cube.alphaMaximum][cube.redMaximum][cube.greenMaximum][cube.blueMaximum] - moment[cube.alphaMaximum][cube.redMaximum][cube.greenMinimum][cube.blueMaximum] - moment[cube.alphaMaximum][cube.redMinimum][cube.greenMaximum][cube.blueMaximum] + moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][cube.blueMaximum] - moment[cube.alphaMinimum][cube.redMaximum][cube.greenMaximum][cube.blueMaximum] + moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][cube.blueMaximum] + moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][cube.blueMaximum] - moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][cube.blueMaximum] - (moment[cube.alphaMaximum][cube.redMaximum][cube.greenMaximum][cube.blueMinimum] - moment[cube.alphaMinimum][cube.redMaximum][cube.greenMaximum][cube.blueMinimum] - moment[cube.alphaMaximum][cube.redMaximum][cube.greenMinimum][cube.blueMinimum] + moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][cube.blueMinimum] - moment[cube.alphaMaximum][cube.redMinimum][cube.greenMaximum][cube.blueMinimum] + moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][cube.blueMinimum] + moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][cube.blueMinimum] - moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][cube.blueMinimum]);\n  }\n  static _volume(cube, moment) {\n    return _WuQuant._volumeFloat(cube, moment) | 0;\n  }\n  static _top(cube, direction, position, moment) {\n    let result;\n    switch (direction) {\n      case _WuQuant._alpha:\n        result = moment[position][cube.redMaximum][cube.greenMaximum][cube.blueMaximum] - moment[position][cube.redMaximum][cube.greenMinimum][cube.blueMaximum] - moment[position][cube.redMinimum][cube.greenMaximum][cube.blueMaximum] + moment[position][cube.redMinimum][cube.greenMinimum][cube.blueMaximum] - (moment[position][cube.redMaximum][cube.greenMaximum][cube.blueMinimum] - moment[position][cube.redMaximum][cube.greenMinimum][cube.blueMinimum] - moment[position][cube.redMinimum][cube.greenMaximum][cube.blueMinimum] + moment[position][cube.redMinimum][cube.greenMinimum][cube.blueMinimum]);\n        break;\n      case _WuQuant._red:\n        result = moment[cube.alphaMaximum][position][cube.greenMaximum][cube.blueMaximum] - moment[cube.alphaMaximum][position][cube.greenMinimum][cube.blueMaximum] - moment[cube.alphaMinimum][position][cube.greenMaximum][cube.blueMaximum] + moment[cube.alphaMinimum][position][cube.greenMinimum][cube.blueMaximum] - (moment[cube.alphaMaximum][position][cube.greenMaximum][cube.blueMinimum] - moment[cube.alphaMaximum][position][cube.greenMinimum][cube.blueMinimum] - moment[cube.alphaMinimum][position][cube.greenMaximum][cube.blueMinimum] + moment[cube.alphaMinimum][position][cube.greenMinimum][cube.blueMinimum]);\n        break;\n      case _WuQuant._green:\n        result = moment[cube.alphaMaximum][cube.redMaximum][position][cube.blueMaximum] - moment[cube.alphaMaximum][cube.redMinimum][position][cube.blueMaximum] - moment[cube.alphaMinimum][cube.redMaximum][position][cube.blueMaximum] + moment[cube.alphaMinimum][cube.redMinimum][position][cube.blueMaximum] - (moment[cube.alphaMaximum][cube.redMaximum][position][cube.blueMinimum] - moment[cube.alphaMaximum][cube.redMinimum][position][cube.blueMinimum] - moment[cube.alphaMinimum][cube.redMaximum][position][cube.blueMinimum] + moment[cube.alphaMinimum][cube.redMinimum][position][cube.blueMinimum]);\n        break;\n      case _WuQuant._blue:\n        result = moment[cube.alphaMaximum][cube.redMaximum][cube.greenMaximum][position] - moment[cube.alphaMaximum][cube.redMaximum][cube.greenMinimum][position] - moment[cube.alphaMaximum][cube.redMinimum][cube.greenMaximum][position] + moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][position] - (moment[cube.alphaMinimum][cube.redMaximum][cube.greenMaximum][position] - moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][position] - moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][position] + moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][position]);\n        break;\n      default:\n        throw new Error(\"impossible\");\n    }\n    return result | 0;\n  }\n  static _bottom(cube, direction, moment) {\n    switch (direction) {\n      case _WuQuant._alpha:\n        return -moment[cube.alphaMinimum][cube.redMaximum][cube.greenMaximum][cube.blueMaximum] + moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][cube.blueMaximum] + moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][cube.blueMaximum] - moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][cube.blueMaximum] - (-moment[cube.alphaMinimum][cube.redMaximum][cube.greenMaximum][cube.blueMinimum] + moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][cube.blueMinimum] + moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][cube.blueMinimum] - moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][cube.blueMinimum]);\n      case _WuQuant._red:\n        return -moment[cube.alphaMaximum][cube.redMinimum][cube.greenMaximum][cube.blueMaximum] + moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][cube.blueMaximum] + moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][cube.blueMaximum] - moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][cube.blueMaximum] - (-moment[cube.alphaMaximum][cube.redMinimum][cube.greenMaximum][cube.blueMinimum] + moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][cube.blueMinimum] + moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][cube.blueMinimum] - moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][cube.blueMinimum]);\n      case _WuQuant._green:\n        return -moment[cube.alphaMaximum][cube.redMaximum][cube.greenMinimum][cube.blueMaximum] + moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][cube.blueMaximum] + moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][cube.blueMaximum] - moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][cube.blueMaximum] - (-moment[cube.alphaMaximum][cube.redMaximum][cube.greenMinimum][cube.blueMinimum] + moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][cube.blueMinimum] + moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][cube.blueMinimum] - moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][cube.blueMinimum]);\n      case _WuQuant._blue:\n        return -moment[cube.alphaMaximum][cube.redMaximum][cube.greenMaximum][cube.blueMinimum] + moment[cube.alphaMaximum][cube.redMaximum][cube.greenMinimum][cube.blueMinimum] + moment[cube.alphaMaximum][cube.redMinimum][cube.greenMaximum][cube.blueMinimum] - moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][cube.blueMinimum] - (-moment[cube.alphaMinimum][cube.redMaximum][cube.greenMaximum][cube.blueMinimum] + moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][cube.blueMinimum] + moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][cube.blueMinimum] - moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][cube.blueMinimum]);\n      default:\n        return 0;\n    }\n  }\n  _calculateVariance(cube) {\n    const volumeRed = _WuQuant._volume(cube, this._momentsRed);\n    const volumeGreen = _WuQuant._volume(cube, this._momentsGreen);\n    const volumeBlue = _WuQuant._volume(cube, this._momentsBlue);\n    const volumeAlpha = _WuQuant._volume(cube, this._momentsAlpha);\n    const volumeMoment = _WuQuant._volumeFloat(cube, this._moments);\n    const volumeWeight = _WuQuant._volume(cube, this._weights);\n    const distance = volumeRed * volumeRed + volumeGreen * volumeGreen + volumeBlue * volumeBlue + volumeAlpha * volumeAlpha;\n    return volumeMoment - distance / volumeWeight;\n  }\n  _maximize(cube, direction, first, last, wholeRed, wholeGreen, wholeBlue, wholeAlpha, wholeWeight) {\n    const bottomRed = _WuQuant._bottom(cube, direction, this._momentsRed) | 0;\n    const bottomGreen = _WuQuant._bottom(cube, direction, this._momentsGreen) | 0;\n    const bottomBlue = _WuQuant._bottom(cube, direction, this._momentsBlue) | 0;\n    const bottomAlpha = _WuQuant._bottom(cube, direction, this._momentsAlpha) | 0;\n    const bottomWeight = _WuQuant._bottom(cube, direction, this._weights) | 0;\n    let result = 0;\n    let cutPosition = -1;\n    for (let position = first; position < last; ++position) {\n      let halfRed = bottomRed + _WuQuant._top(cube, direction, position, this._momentsRed);\n      let halfGreen = bottomGreen + _WuQuant._top(cube, direction, position, this._momentsGreen);\n      let halfBlue = bottomBlue + _WuQuant._top(cube, direction, position, this._momentsBlue);\n      let halfAlpha = bottomAlpha + _WuQuant._top(cube, direction, position, this._momentsAlpha);\n      let halfWeight = bottomWeight + _WuQuant._top(cube, direction, position, this._weights);\n      if (halfWeight !== 0) {\n        let halfDistance = halfRed * halfRed + halfGreen * halfGreen + halfBlue * halfBlue + halfAlpha * halfAlpha;\n        let temp = halfDistance / halfWeight;\n        halfRed = wholeRed - halfRed;\n        halfGreen = wholeGreen - halfGreen;\n        halfBlue = wholeBlue - halfBlue;\n        halfAlpha = wholeAlpha - halfAlpha;\n        halfWeight = wholeWeight - halfWeight;\n        if (halfWeight !== 0) {\n          halfDistance = halfRed * halfRed + halfGreen * halfGreen + halfBlue * halfBlue + halfAlpha * halfAlpha;\n          temp += halfDistance / halfWeight;\n          if (temp > result) {\n            result = temp;\n            cutPosition = position;\n          }\n        }\n      }\n    }\n    return {\n      max: result,\n      position: cutPosition\n    };\n  }\n  _cut(first, second) {\n    let direction;\n    const wholeRed = _WuQuant._volume(first, this._momentsRed);\n    const wholeGreen = _WuQuant._volume(first, this._momentsGreen);\n    const wholeBlue = _WuQuant._volume(first, this._momentsBlue);\n    const wholeAlpha = _WuQuant._volume(first, this._momentsAlpha);\n    const wholeWeight = _WuQuant._volume(first, this._weights);\n    const red = this._maximize(first, _WuQuant._red, first.redMinimum + 1, first.redMaximum, wholeRed, wholeGreen, wholeBlue, wholeAlpha, wholeWeight);\n    const green = this._maximize(first, _WuQuant._green, first.greenMinimum + 1, first.greenMaximum, wholeRed, wholeGreen, wholeBlue, wholeAlpha, wholeWeight);\n    const blue = this._maximize(first, _WuQuant._blue, first.blueMinimum + 1, first.blueMaximum, wholeRed, wholeGreen, wholeBlue, wholeAlpha, wholeWeight);\n    const alpha = this._maximize(first, _WuQuant._alpha, first.alphaMinimum + 1, first.alphaMaximum, wholeRed, wholeGreen, wholeBlue, wholeAlpha, wholeWeight);\n    if (alpha.max >= red.max && alpha.max >= green.max && alpha.max >= blue.max) {\n      direction = _WuQuant._alpha;\n      if (alpha.position < 0) return false;\n    } else if (red.max >= alpha.max && red.max >= green.max && red.max >= blue.max) {\n      direction = _WuQuant._red;\n    } else if (green.max >= alpha.max && green.max >= red.max && green.max >= blue.max) {\n      direction = _WuQuant._green;\n    } else {\n      direction = _WuQuant._blue;\n    }\n    second.redMaximum = first.redMaximum;\n    second.greenMaximum = first.greenMaximum;\n    second.blueMaximum = first.blueMaximum;\n    second.alphaMaximum = first.alphaMaximum;\n    switch (direction) {\n      case _WuQuant._red:\n        second.redMinimum = first.redMaximum = red.position;\n        second.greenMinimum = first.greenMinimum;\n        second.blueMinimum = first.blueMinimum;\n        second.alphaMinimum = first.alphaMinimum;\n        break;\n      case _WuQuant._green:\n        second.greenMinimum = first.greenMaximum = green.position;\n        second.redMinimum = first.redMinimum;\n        second.blueMinimum = first.blueMinimum;\n        second.alphaMinimum = first.alphaMinimum;\n        break;\n      case _WuQuant._blue:\n        second.blueMinimum = first.blueMaximum = blue.position;\n        second.redMinimum = first.redMinimum;\n        second.greenMinimum = first.greenMinimum;\n        second.alphaMinimum = first.alphaMinimum;\n        break;\n      case _WuQuant._alpha:\n        second.alphaMinimum = first.alphaMaximum = alpha.position;\n        second.blueMinimum = first.blueMinimum;\n        second.redMinimum = first.redMinimum;\n        second.greenMinimum = first.greenMinimum;\n        break;\n    }\n    first.volume = (first.redMaximum - first.redMinimum) * (first.greenMaximum - first.greenMinimum) * (first.blueMaximum - first.blueMinimum) * (first.alphaMaximum - first.alphaMinimum);\n    second.volume = (second.redMaximum - second.redMinimum) * (second.greenMaximum - second.greenMinimum) * (second.blueMaximum - second.blueMinimum) * (second.alphaMaximum - second.alphaMinimum);\n    return true;\n  }\n  _initialize(colors) {\n    this._colors = colors;\n    this._cubes = [];\n    for (let cubeIndex = 0; cubeIndex < colors; cubeIndex++) {\n      this._cubes[cubeIndex] = new WuColorCube();\n    }\n    this._cubes[0].redMinimum = 0;\n    this._cubes[0].greenMinimum = 0;\n    this._cubes[0].blueMinimum = 0;\n    this._cubes[0].alphaMinimum = 0;\n    this._cubes[0].redMaximum = this._maxSideIndex;\n    this._cubes[0].greenMaximum = this._maxSideIndex;\n    this._cubes[0].blueMaximum = this._maxSideIndex;\n    this._cubes[0].alphaMaximum = this._alphaMaxSideIndex;\n    this._weights = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\n    this._momentsRed = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\n    this._momentsGreen = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\n    this._momentsBlue = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\n    this._momentsAlpha = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\n    this._moments = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\n    this._table = [];\n    for (let tableIndex = 0; tableIndex < 256; ++tableIndex) {\n      this._table[tableIndex] = tableIndex * tableIndex;\n    }\n    this._pixels = [];\n  }\n  _setQuality(significantBitsPerChannel = 5) {\n    this._significantBitsPerChannel = significantBitsPerChannel;\n    this._maxSideIndex = 1 << this._significantBitsPerChannel;\n    this._alphaMaxSideIndex = this._maxSideIndex;\n    this._sideSize = this._maxSideIndex + 1;\n    this._alphaSideSize = this._alphaMaxSideIndex + 1;\n  }\n};\nvar WuQuant = _WuQuant;\n__publicField(WuQuant, \"_alpha\", 3);\n__publicField(WuQuant, \"_red\", 2);\n__publicField(WuQuant, \"_green\", 1);\n__publicField(WuQuant, \"_blue\", 0);\n\n// src/image/index.ts\nvar image_exports = {};\n__export(image_exports, {\n  AbstractImageQuantizer: () => AbstractImageQuantizer,\n  ErrorDiffusionArray: () => ErrorDiffusionArray,\n  ErrorDiffusionArrayKernel: () => ErrorDiffusionArrayKernel,\n  ErrorDiffusionRiemersma: () => ErrorDiffusionRiemersma,\n  NearestColor: () => NearestColor\n});\n\n// src/image/imageQuantizer.ts\nvar AbstractImageQuantizer = class {\n  quantizeSync(pointContainer, palette) {\n    for (const value of this.quantize(pointContainer, palette)) {\n      if (value.pointContainer) {\n        return value.pointContainer;\n      }\n    }\n    throw new Error(\"unreachable\");\n  }\n};\n\n// src/image/nearestColor.ts\nvar NearestColor = class extends AbstractImageQuantizer {\n  constructor(colorDistanceCalculator) {\n    super();\n    __publicField(this, \"_distance\");\n    this._distance = colorDistanceCalculator;\n  }\n  *quantize(pointContainer, palette) {\n    const pointArray = pointContainer.getPointArray();\n    const width = pointContainer.getWidth();\n    const height = pointContainer.getHeight();\n    const tracker = new ProgressTracker(height, 99);\n    for (let y2 = 0; y2 < height; y2++) {\n      if (tracker.shouldNotify(y2)) {\n        yield {\n          progress: tracker.progress\n        };\n      }\n      for (let x2 = 0, idx = y2 * width; x2 < width; x2++, idx++) {\n        const point = pointArray[idx];\n        point.from(palette.getNearestColor(this._distance, point));\n      }\n    }\n    yield {\n      pointContainer,\n      progress: 100\n    };\n  }\n};\n\n// src/image/array.ts\nvar ErrorDiffusionArrayKernel = /* @__PURE__ */(ErrorDiffusionArrayKernel2 => {\n  ErrorDiffusionArrayKernel2[ErrorDiffusionArrayKernel2[\"FloydSteinberg\"] = 0] = \"FloydSteinberg\";\n  ErrorDiffusionArrayKernel2[ErrorDiffusionArrayKernel2[\"FalseFloydSteinberg\"] = 1] = \"FalseFloydSteinberg\";\n  ErrorDiffusionArrayKernel2[ErrorDiffusionArrayKernel2[\"Stucki\"] = 2] = \"Stucki\";\n  ErrorDiffusionArrayKernel2[ErrorDiffusionArrayKernel2[\"Atkinson\"] = 3] = \"Atkinson\";\n  ErrorDiffusionArrayKernel2[ErrorDiffusionArrayKernel2[\"Jarvis\"] = 4] = \"Jarvis\";\n  ErrorDiffusionArrayKernel2[ErrorDiffusionArrayKernel2[\"Burkes\"] = 5] = \"Burkes\";\n  ErrorDiffusionArrayKernel2[ErrorDiffusionArrayKernel2[\"Sierra\"] = 6] = \"Sierra\";\n  ErrorDiffusionArrayKernel2[ErrorDiffusionArrayKernel2[\"TwoSierra\"] = 7] = \"TwoSierra\";\n  ErrorDiffusionArrayKernel2[ErrorDiffusionArrayKernel2[\"SierraLite\"] = 8] = \"SierraLite\";\n  return ErrorDiffusionArrayKernel2;\n})(ErrorDiffusionArrayKernel || {});\nvar ErrorDiffusionArray = class extends AbstractImageQuantizer {\n  constructor(colorDistanceCalculator, kernel, serpentine = true, minimumColorDistanceToDither = 0, calculateErrorLikeGIMP = false) {\n    super();\n    __publicField(this, \"_minColorDistance\");\n    __publicField(this, \"_serpentine\");\n    __publicField(this, \"_kernel\");\n    __publicField(this, \"_calculateErrorLikeGIMP\");\n    __publicField(this, \"_distance\");\n    this._setKernel(kernel);\n    this._distance = colorDistanceCalculator;\n    this._minColorDistance = minimumColorDistanceToDither;\n    this._serpentine = serpentine;\n    this._calculateErrorLikeGIMP = calculateErrorLikeGIMP;\n  }\n  *quantize(pointContainer, palette) {\n    const pointArray = pointContainer.getPointArray();\n    const originalPoint = new Point();\n    const width = pointContainer.getWidth();\n    const height = pointContainer.getHeight();\n    const errorLines = [];\n    let dir = 1;\n    let maxErrorLines = 1;\n    for (const kernel of this._kernel) {\n      const kernelErrorLines = kernel[2] + 1;\n      if (maxErrorLines < kernelErrorLines) maxErrorLines = kernelErrorLines;\n    }\n    for (let i = 0; i < maxErrorLines; i++) {\n      this._fillErrorLine(errorLines[i] = [], width);\n    }\n    const tracker = new ProgressTracker(height, 99);\n    for (let y2 = 0; y2 < height; y2++) {\n      if (tracker.shouldNotify(y2)) {\n        yield {\n          progress: tracker.progress\n        };\n      }\n      if (this._serpentine) dir *= -1;\n      const lni = y2 * width;\n      const xStart = dir === 1 ? 0 : width - 1;\n      const xEnd = dir === 1 ? width : -1;\n      this._fillErrorLine(errorLines[0], width);\n      errorLines.push(errorLines.shift());\n      const errorLine = errorLines[0];\n      for (let x2 = xStart, idx = lni + xStart; x2 !== xEnd; x2 += dir, idx += dir) {\n        const point = pointArray[idx];\n        const error = errorLine[x2];\n        originalPoint.from(point);\n        const correctedPoint = Point.createByRGBA(inRange0to255Rounded(point.r + error[0]), inRange0to255Rounded(point.g + error[1]), inRange0to255Rounded(point.b + error[2]), inRange0to255Rounded(point.a + error[3]));\n        const palettePoint = palette.getNearestColor(this._distance, correctedPoint);\n        point.from(palettePoint);\n        if (this._minColorDistance) {\n          const dist = this._distance.calculateNormalized(originalPoint, palettePoint);\n          if (dist < this._minColorDistance) continue;\n        }\n        let er;\n        let eg;\n        let eb;\n        let ea;\n        if (this._calculateErrorLikeGIMP) {\n          er = correctedPoint.r - palettePoint.r;\n          eg = correctedPoint.g - palettePoint.g;\n          eb = correctedPoint.b - palettePoint.b;\n          ea = correctedPoint.a - palettePoint.a;\n        } else {\n          er = originalPoint.r - palettePoint.r;\n          eg = originalPoint.g - palettePoint.g;\n          eb = originalPoint.b - palettePoint.b;\n          ea = originalPoint.a - palettePoint.a;\n        }\n        const dStart = dir === 1 ? 0 : this._kernel.length - 1;\n        const dEnd = dir === 1 ? this._kernel.length : -1;\n        for (let i = dStart; i !== dEnd; i += dir) {\n          const x1 = this._kernel[i][1] * dir;\n          const y1 = this._kernel[i][2];\n          if (x1 + x2 >= 0 && x1 + x2 < width && y1 + y2 >= 0 && y1 + y2 < height) {\n            const d = this._kernel[i][0];\n            const e = errorLines[y1][x1 + x2];\n            e[0] += er * d;\n            e[1] += eg * d;\n            e[2] += eb * d;\n            e[3] += ea * d;\n          }\n        }\n      }\n    }\n    yield {\n      pointContainer,\n      progress: 100\n    };\n  }\n  _fillErrorLine(errorLine, width) {\n    if (errorLine.length > width) {\n      errorLine.length = width;\n    }\n    const l = errorLine.length;\n    for (let i = 0; i < l; i++) {\n      const error = errorLine[i];\n      error[0] = error[1] = error[2] = error[3] = 0;\n    }\n    for (let i = l; i < width; i++) {\n      errorLine[i] = [0, 0, 0, 0];\n    }\n  }\n  _setKernel(kernel) {\n    switch (kernel) {\n      case 0 /* FloydSteinberg */:\n        this._kernel = [[7 / 16, 1, 0], [3 / 16, -1, 1], [5 / 16, 0, 1], [1 / 16, 1, 1]];\n        break;\n      case 1 /* FalseFloydSteinberg */:\n        this._kernel = [[3 / 8, 1, 0], [3 / 8, 0, 1], [2 / 8, 1, 1]];\n        break;\n      case 2 /* Stucki */:\n        this._kernel = [[8 / 42, 1, 0], [4 / 42, 2, 0], [2 / 42, -2, 1], [4 / 42, -1, 1], [8 / 42, 0, 1], [4 / 42, 1, 1], [2 / 42, 2, 1], [1 / 42, -2, 2], [2 / 42, -1, 2], [4 / 42, 0, 2], [2 / 42, 1, 2], [1 / 42, 2, 2]];\n        break;\n      case 3 /* Atkinson */:\n        this._kernel = [[1 / 8, 1, 0], [1 / 8, 2, 0], [1 / 8, -1, 1], [1 / 8, 0, 1], [1 / 8, 1, 1], [1 / 8, 0, 2]];\n        break;\n      case 4 /* Jarvis */:\n        this._kernel = [[7 / 48, 1, 0], [5 / 48, 2, 0], [3 / 48, -2, 1], [5 / 48, -1, 1], [7 / 48, 0, 1], [5 / 48, 1, 1], [3 / 48, 2, 1], [1 / 48, -2, 2], [3 / 48, -1, 2], [5 / 48, 0, 2], [3 / 48, 1, 2], [1 / 48, 2, 2]];\n        break;\n      case 5 /* Burkes */:\n        this._kernel = [[8 / 32, 1, 0], [4 / 32, 2, 0], [2 / 32, -2, 1], [4 / 32, -1, 1], [8 / 32, 0, 1], [4 / 32, 1, 1], [2 / 32, 2, 1]];\n        break;\n      case 6 /* Sierra */:\n        this._kernel = [[5 / 32, 1, 0], [3 / 32, 2, 0], [2 / 32, -2, 1], [4 / 32, -1, 1], [5 / 32, 0, 1], [4 / 32, 1, 1], [2 / 32, 2, 1], [2 / 32, -1, 2], [3 / 32, 0, 2], [2 / 32, 1, 2]];\n        break;\n      case 7 /* TwoSierra */:\n        this._kernel = [[4 / 16, 1, 0], [3 / 16, 2, 0], [1 / 16, -2, 1], [2 / 16, -1, 1], [3 / 16, 0, 1], [2 / 16, 1, 1], [1 / 16, 2, 1]];\n        break;\n      case 8 /* SierraLite */:\n        this._kernel = [[2 / 4, 1, 0], [1 / 4, -1, 1], [1 / 4, 0, 1]];\n        break;\n      default:\n        throw new Error(`ErrorDiffusionArray: unknown kernel = ${kernel}`);\n    }\n  }\n};\n\n// src/image/spaceFillingCurves/hilbertCurve.ts\nfunction* hilbertCurve(width, height, callback) {\n  const maxBound = Math.max(width, height);\n  const level = Math.floor(Math.log(maxBound) / Math.log(2) + 1);\n  const tracker = new ProgressTracker(width * height, 99);\n  const data = {\n    width,\n    height,\n    level,\n    callback,\n    tracker,\n    index: 0,\n    x: 0,\n    y: 0\n  };\n  yield* walkHilbert(data, 1 /* UP */);\n  visit(data, 0 /* NONE */);\n}\nfunction* walkHilbert(data, direction) {\n  if (data.level < 1) return;\n  if (data.tracker.shouldNotify(data.index)) {\n    yield {\n      progress: data.tracker.progress\n    };\n  }\n  data.level--;\n  switch (direction) {\n    case 2 /* LEFT */:\n      yield* walkHilbert(data, 1 /* UP */);\n      visit(data, 3 /* RIGHT */);\n      yield* walkHilbert(data, 2 /* LEFT */);\n      visit(data, 4 /* DOWN */);\n      yield* walkHilbert(data, 2 /* LEFT */);\n      visit(data, 2 /* LEFT */);\n      yield* walkHilbert(data, 4 /* DOWN */);\n      break;\n    case 3 /* RIGHT */:\n      yield* walkHilbert(data, 4 /* DOWN */);\n      visit(data, 2 /* LEFT */);\n      yield* walkHilbert(data, 3 /* RIGHT */);\n      visit(data, 1 /* UP */);\n      yield* walkHilbert(data, 3 /* RIGHT */);\n      visit(data, 3 /* RIGHT */);\n      yield* walkHilbert(data, 1 /* UP */);\n      break;\n    case 1 /* UP */:\n      yield* walkHilbert(data, 2 /* LEFT */);\n      visit(data, 4 /* DOWN */);\n      yield* walkHilbert(data, 1 /* UP */);\n      visit(data, 3 /* RIGHT */);\n      yield* walkHilbert(data, 1 /* UP */);\n      visit(data, 1 /* UP */);\n      yield* walkHilbert(data, 3 /* RIGHT */);\n      break;\n    case 4 /* DOWN */:\n      yield* walkHilbert(data, 3 /* RIGHT */);\n      visit(data, 1 /* UP */);\n      yield* walkHilbert(data, 4 /* DOWN */);\n      visit(data, 2 /* LEFT */);\n      yield* walkHilbert(data, 4 /* DOWN */);\n      visit(data, 4 /* DOWN */);\n      yield* walkHilbert(data, 2 /* LEFT */);\n      break;\n    default:\n      break;\n  }\n  data.level++;\n}\nfunction visit(data, direction) {\n  if (data.x >= 0 && data.x < data.width && data.y >= 0 && data.y < data.height) {\n    data.callback(data.x, data.y);\n    data.index++;\n  }\n  switch (direction) {\n    case 2 /* LEFT */:\n      data.x--;\n      break;\n    case 3 /* RIGHT */:\n      data.x++;\n      break;\n    case 1 /* UP */:\n      data.y--;\n      break;\n    case 4 /* DOWN */:\n      data.y++;\n      break;\n  }\n}\n\n// src/image/riemersma.ts\nvar ErrorDiffusionRiemersma = class extends AbstractImageQuantizer {\n  constructor(colorDistanceCalculator, errorQueueSize = 16, errorPropagation = 1) {\n    super();\n    __publicField(this, \"_distance\");\n    __publicField(this, \"_weights\");\n    __publicField(this, \"_errorQueueSize\");\n    this._distance = colorDistanceCalculator;\n    this._errorQueueSize = errorQueueSize;\n    this._weights = ErrorDiffusionRiemersma._createWeights(errorPropagation, errorQueueSize);\n  }\n  *quantize(pointContainer, palette) {\n    const pointArray = pointContainer.getPointArray();\n    const width = pointContainer.getWidth();\n    const height = pointContainer.getHeight();\n    const errorQueue = [];\n    let head = 0;\n    for (let i = 0; i < this._errorQueueSize; i++) {\n      errorQueue[i] = {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 0\n      };\n    }\n    yield* hilbertCurve(width, height, (x2, y2) => {\n      const p = pointArray[x2 + y2 * width];\n      let {\n        r,\n        g,\n        b,\n        a\n      } = p;\n      for (let i = 0; i < this._errorQueueSize; i++) {\n        const weight = this._weights[i];\n        const e = errorQueue[(i + head) % this._errorQueueSize];\n        r += e.r * weight;\n        g += e.g * weight;\n        b += e.b * weight;\n        a += e.a * weight;\n      }\n      const correctedPoint = Point.createByRGBA(inRange0to255Rounded(r), inRange0to255Rounded(g), inRange0to255Rounded(b), inRange0to255Rounded(a));\n      const quantizedPoint = palette.getNearestColor(this._distance, correctedPoint);\n      head = (head + 1) % this._errorQueueSize;\n      const tail = (head + this._errorQueueSize - 1) % this._errorQueueSize;\n      errorQueue[tail].r = p.r - quantizedPoint.r;\n      errorQueue[tail].g = p.g - quantizedPoint.g;\n      errorQueue[tail].b = p.b - quantizedPoint.b;\n      errorQueue[tail].a = p.a - quantizedPoint.a;\n      p.from(quantizedPoint);\n    });\n    yield {\n      pointContainer,\n      progress: 100\n    };\n  }\n  static _createWeights(errorPropagation, errorQueueSize) {\n    const weights = [];\n    const multiplier = Math.exp(Math.log(errorQueueSize) / (errorQueueSize - 1));\n    for (let i = 0, next = 1; i < errorQueueSize; i++) {\n      weights[i] = (next + 0.5 | 0) / errorQueueSize * errorPropagation;\n      next *= multiplier;\n    }\n    return weights;\n  }\n};\n\n// src/quality/index.ts\nvar quality_exports = {};\n__export(quality_exports, {\n  ssim: () => ssim\n});\n\n// src/quality/ssim.ts\nvar K1 = 0.01;\nvar K2 = 0.03;\nfunction ssim(image1, image2) {\n  if (image1.getHeight() !== image2.getHeight() || image1.getWidth() !== image2.getWidth()) {\n    throw new Error(\"Images have different sizes!\");\n  }\n  const bitsPerComponent = 8;\n  const L = (1 << bitsPerComponent) - 1;\n  const c1 = (K1 * L) ** 2;\n  const c2 = (K2 * L) ** 2;\n  let numWindows = 0;\n  let mssim = 0;\n  iterate(image1, image2, (lumaValues1, lumaValues2, averageLumaValue1, averageLumaValue2) => {\n    let sigxy = 0;\n    let sigsqx = 0;\n    let sigsqy = 0;\n    for (let i = 0; i < lumaValues1.length; i++) {\n      sigsqx += (lumaValues1[i] - averageLumaValue1) ** 2;\n      sigsqy += (lumaValues2[i] - averageLumaValue2) ** 2;\n      sigxy += (lumaValues1[i] - averageLumaValue1) * (lumaValues2[i] - averageLumaValue2);\n    }\n    const numPixelsInWin = lumaValues1.length - 1;\n    sigsqx /= numPixelsInWin;\n    sigsqy /= numPixelsInWin;\n    sigxy /= numPixelsInWin;\n    const numerator = (2 * averageLumaValue1 * averageLumaValue2 + c1) * (2 * sigxy + c2);\n    const denominator = (averageLumaValue1 ** 2 + averageLumaValue2 ** 2 + c1) * (sigsqx + sigsqy + c2);\n    const ssim2 = numerator / denominator;\n    mssim += ssim2;\n    numWindows++;\n  });\n  return mssim / numWindows;\n}\nfunction iterate(image1, image2, callback) {\n  const windowSize = 8;\n  const width = image1.getWidth();\n  const height = image1.getHeight();\n  for (let y2 = 0; y2 < height; y2 += windowSize) {\n    for (let x2 = 0; x2 < width; x2 += windowSize) {\n      const windowWidth = Math.min(windowSize, width - x2);\n      const windowHeight = Math.min(windowSize, height - y2);\n      const lumaValues1 = calculateLumaValuesForWindow(image1, x2, y2, windowWidth, windowHeight);\n      const lumaValues2 = calculateLumaValuesForWindow(image2, x2, y2, windowWidth, windowHeight);\n      const averageLuma1 = calculateAverageLuma(lumaValues1);\n      const averageLuma2 = calculateAverageLuma(lumaValues2);\n      callback(lumaValues1, lumaValues2, averageLuma1, averageLuma2);\n    }\n  }\n}\nfunction calculateLumaValuesForWindow(image, x2, y2, width, height) {\n  const pointArray = image.getPointArray();\n  const lumaValues = [];\n  let counter = 0;\n  for (let j = y2; j < y2 + height; j++) {\n    const offset = j * image.getWidth();\n    for (let i = x2; i < x2 + width; i++) {\n      const point = pointArray[offset + i];\n      lumaValues[counter] = point.r * 0.2126 /* RED */ + point.g * 0.7152 /* GREEN */ + point.b * 0.0722 /* BLUE */;\n      counter++;\n    }\n  }\n  return lumaValues;\n}\nfunction calculateAverageLuma(lumaValues) {\n  let sumLuma = 0;\n  for (const luma of lumaValues) {\n    sumLuma += luma;\n  }\n  return sumLuma / lumaValues.length;\n}\n\n// src/basicAPI.ts\nvar setImmediateImpl = typeof setImmediate === \"function\" ? setImmediate : typeof process !== \"undefined\" && typeof (process == null ? void 0 : process.nextTick) === \"function\" ? callback => process.nextTick(callback) : callback => setTimeout(callback, 0);\nfunction buildPaletteSync(images, {\n  colorDistanceFormula,\n  paletteQuantization,\n  colors\n} = {}) {\n  const distanceCalculator = colorDistanceFormulaToColorDistance(colorDistanceFormula);\n  const paletteQuantizer = paletteQuantizationToPaletteQuantizer(distanceCalculator, paletteQuantization, colors);\n  images.forEach(image => paletteQuantizer.sample(image));\n  return paletteQuantizer.quantizeSync();\n}\nasync function buildPalette(images, {\n  colorDistanceFormula,\n  paletteQuantization,\n  colors,\n  onProgress\n} = {}) {\n  return new Promise((resolve, reject) => {\n    const distanceCalculator = colorDistanceFormulaToColorDistance(colorDistanceFormula);\n    const paletteQuantizer = paletteQuantizationToPaletteQuantizer(distanceCalculator, paletteQuantization, colors);\n    images.forEach(image => paletteQuantizer.sample(image));\n    let palette;\n    const iterator = paletteQuantizer.quantize();\n    const next = () => {\n      try {\n        const result = iterator.next();\n        if (result.done) {\n          resolve(palette);\n        } else {\n          if (result.value.palette) palette = result.value.palette;\n          if (onProgress) onProgress(result.value.progress);\n          setImmediateImpl(next);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    };\n    setImmediateImpl(next);\n  });\n}\nfunction applyPaletteSync(image, palette, {\n  colorDistanceFormula,\n  imageQuantization\n} = {}) {\n  const distanceCalculator = colorDistanceFormulaToColorDistance(colorDistanceFormula);\n  const imageQuantizer = imageQuantizationToImageQuantizer(distanceCalculator, imageQuantization);\n  return imageQuantizer.quantizeSync(image, palette);\n}\nasync function applyPalette(image, palette, {\n  colorDistanceFormula,\n  imageQuantization,\n  onProgress\n} = {}) {\n  return new Promise((resolve, reject) => {\n    const distanceCalculator = colorDistanceFormulaToColorDistance(colorDistanceFormula);\n    const imageQuantizer = imageQuantizationToImageQuantizer(distanceCalculator, imageQuantization);\n    let outPointContainer;\n    const iterator = imageQuantizer.quantize(image, palette);\n    const next = () => {\n      try {\n        const result = iterator.next();\n        if (result.done) {\n          resolve(outPointContainer);\n        } else {\n          if (result.value.pointContainer) {\n            outPointContainer = result.value.pointContainer;\n          }\n          if (onProgress) onProgress(result.value.progress);\n          setImmediateImpl(next);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    };\n    setImmediateImpl(next);\n  });\n}\nfunction colorDistanceFormulaToColorDistance(colorDistanceFormula = \"euclidean-bt709\") {\n  switch (colorDistanceFormula) {\n    case \"cie94-graphic-arts\":\n      return new CIE94GraphicArts();\n    case \"cie94-textiles\":\n      return new CIE94Textiles();\n    case \"ciede2000\":\n      return new CIEDE2000();\n    case \"color-metric\":\n      return new CMetric();\n    case \"euclidean\":\n      return new Euclidean();\n    case \"euclidean-bt709\":\n      return new EuclideanBT709();\n    case \"euclidean-bt709-noalpha\":\n      return new EuclideanBT709NoAlpha();\n    case \"manhattan\":\n      return new Manhattan();\n    case \"manhattan-bt709\":\n      return new ManhattanBT709();\n    case \"manhattan-nommyde\":\n      return new ManhattanNommyde();\n    case \"pngquant\":\n      return new PNGQuant();\n    default:\n      throw new Error(`Unknown colorDistanceFormula ${colorDistanceFormula}`);\n  }\n}\nfunction imageQuantizationToImageQuantizer(distanceCalculator, imageQuantization = \"floyd-steinberg\") {\n  switch (imageQuantization) {\n    case \"nearest\":\n      return new NearestColor(distanceCalculator);\n    case \"riemersma\":\n      return new ErrorDiffusionRiemersma(distanceCalculator);\n    case \"floyd-steinberg\":\n      return new ErrorDiffusionArray(distanceCalculator, 0 /* FloydSteinberg */);\n    case \"false-floyd-steinberg\":\n      return new ErrorDiffusionArray(distanceCalculator, 1 /* FalseFloydSteinberg */);\n    case \"stucki\":\n      return new ErrorDiffusionArray(distanceCalculator, 2 /* Stucki */);\n    case \"atkinson\":\n      return new ErrorDiffusionArray(distanceCalculator, 3 /* Atkinson */);\n    case \"jarvis\":\n      return new ErrorDiffusionArray(distanceCalculator, 4 /* Jarvis */);\n    case \"burkes\":\n      return new ErrorDiffusionArray(distanceCalculator, 5 /* Burkes */);\n    case \"sierra\":\n      return new ErrorDiffusionArray(distanceCalculator, 6 /* Sierra */);\n    case \"two-sierra\":\n      return new ErrorDiffusionArray(distanceCalculator, 7 /* TwoSierra */);\n    case \"sierra-lite\":\n      return new ErrorDiffusionArray(distanceCalculator, 8 /* SierraLite */);\n    default:\n      throw new Error(`Unknown imageQuantization ${imageQuantization}`);\n  }\n}\nfunction paletteQuantizationToPaletteQuantizer(distanceCalculator, paletteQuantization = \"wuquant\", colors = 256) {\n  switch (paletteQuantization) {\n    case \"neuquant\":\n      return new NeuQuant(distanceCalculator, colors);\n    case \"rgbquant\":\n      return new RGBQuant(distanceCalculator, colors);\n    case \"wuquant\":\n      return new WuQuant(distanceCalculator, colors);\n    case \"neuquant-float\":\n      return new NeuQuantFloat(distanceCalculator, colors);\n    default:\n      throw new Error(`Unknown paletteQuantization ${paletteQuantization}`);\n  }\n}\nmodule.exports = __toCommonJS(src_exports);\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  applyPalette,\n  applyPaletteSync,\n  buildPalette,\n  buildPaletteSync,\n  constants,\n  conversion,\n  distance,\n  image,\n  palette,\n  quality,\n  utils\n});\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * cie94.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * ciede2000.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * cmetric.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * common.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * constants.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * ditherErrorDiffusionArray.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * euclidean.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * helper.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * hueStatistics.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * iq.ts - Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * lab2rgb.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * lab2xyz.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * manhattanNeuQuant.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * nearestColor.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * palette.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * pngQuant.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * point.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * pointContainer.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * rgb2hsl.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * rgb2lab.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * rgb2xyz.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * ssim.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * wuQuant.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * xyz2lab.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * xyz2rgb.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * MIT License\n *\n * Copyright 2015-2018 Igor Bezkrovnyi\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n * riemersma.ts - part of Image Quantization Library\n */\n/**\n * @preserve TypeScript port:\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * colorHistogram.ts - part of Image Quantization Library\n */\n/**\n * @preserve TypeScript port:\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * neuquant.ts - part of Image Quantization Library\n */\n/**\n * @preserve TypeScript port:\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * rgbquant.ts - part of Image Quantization Library\n */\n", "'use strict';\n\nconst BitmapImage = require('./bitmapimage');\nconst {\n  GifError\n} = require('./gif');\n\n/** @class GifFrame */\n\nclass GifFrame extends BitmapImage {\n  // xOffset - x offset of bitmap on GIF (defaults to 0)\n  // yOffset - y offset of bitmap on GIF (defaults to 0)\n  // disposalMethod - pixel disposal method when handling partial images\n  // delayCentisecs - duration of frame in hundredths of a second\n  // interlaced - whether the image is interlaced (defaults to false)\n\n  /**\n   * GifFrame is a class representing an image frame of a GIF. GIFs contain one or more instances of GifFrame.\n   * \n   * Property | Description\n   * --- | ---\n   * xOffset | x-coord of position within GIF at which to render the image (defaults to 0)\n   * yOffset | y-coord of position within GIF at which to render the image (defaults to 0)\n   * disposalMethod | GIF disposal method; only relevant when the frames aren't all the same size (defaults to 2, disposing to background color)\n   * delayCentisecs | duration of the frame in hundreths of a second\n   * interlaced | boolean indicating whether the frame renders interlaced\n   * \n   * Its constructor supports the following signatures:\n   * \n   * * new GifFrame(bitmap: {width: number, height: number, data: Buffer}, options?)\n   * * new GifFrame(bitmapImage: BitmapImage, options?)\n   * * new GifFrame(width: number, height: number, buffer: Buffer, options?)\n   * * new GifFrame(width: number, height: number, backgroundRGBA?: number, options?)\n   * * new GifFrame(frame: GifFrame)\n   * \n   * See the base class BitmapImage for a discussion of all parameters but `options` and `frame`. `options` is an optional argument providing initial values for the above-listed GifFrame properties. Each property within option is itself optional.\n   * \n   * Provide a `frame` to the constructor to create a clone of the provided frame. The new frame includes a copy of the provided frame's pixel data so that each can subsequently be modified without affecting each other.\n   */\n\n  constructor(...args) {\n    super(...args);\n    if (args[0] instanceof GifFrame) {\n      // copy a provided GifFrame\n      const source = args[0];\n      this.xOffset = source.xOffset;\n      this.yOffset = source.yOffset;\n      this.disposalMethod = source.disposalMethod;\n      this.delayCentisecs = source.delayCentisecs;\n      this.interlaced = source.interlaced;\n    } else {\n      const lastArg = args[args.length - 1];\n      let options = {};\n      if (typeof lastArg === 'object' && !(lastArg instanceof BitmapImage)) {\n        options = lastArg;\n      }\n      this.xOffset = options.xOffset || 0;\n      this.yOffset = options.yOffset || 0;\n      this.disposalMethod = options.disposalMethod !== undefined ? options.disposalMethod : GifFrame.DisposeToBackgroundColor;\n      this.delayCentisecs = options.delayCentisecs || 8;\n      this.interlaced = options.interlaced || false;\n    }\n  }\n\n  /**\n   * Get a summary of the colors found within the frame. The return value is an object of the following form:\n   * \n   * Property | Description\n   * --- | ---\n   * colors | An array of all the opaque colors found within the frame. Each color is given as an RGB number of the form 0xRRGGBB. The array is sorted by increasing number. Will be an empty array when the image is completely transparent.\n   * usesTransparency | boolean indicating whether there are any transparent pixels within the frame. A pixel is considered transparent if its alpha value is 0x00.\n   * indexCount | The number of color indexes required to represent this palette of colors. It is equal to the number of opaque colors plus one if the image includes transparency.\n   * \n   * @return {object} An object representing a color palette as described above.\n   */\n\n  getPalette() {\n    // returns with colors sorted low to high\n    const colorSet = new Set();\n    const buf = this.bitmap.data;\n    let i = 0;\n    let usesTransparency = false;\n    while (i < buf.length) {\n      if (buf[i + 3] === 0) {\n        usesTransparency = true;\n      } else {\n        // can eliminate the bitshift by starting one byte prior\n        const color = buf.readUInt32BE(i, true) >> 8 & 0xFFFFFF;\n        colorSet.add(color);\n      }\n      i += 4; // skip alpha\n    }\n    const colors = new Array(colorSet.size);\n    const iter = colorSet.values();\n    for (i = 0; i < colors.length; ++i) {\n      colors[i] = iter.next().value;\n    }\n    colors.sort((a, b) => a - b);\n    let indexCount = colors.length;\n    if (usesTransparency) {\n      ++indexCount;\n    }\n    return {\n      colors,\n      usesTransparency,\n      indexCount\n    };\n  }\n}\nGifFrame.DisposeToAnything = 0;\nGifFrame.DisposeNothing = 1;\nGifFrame.DisposeToBackgroundColor = 2;\nGifFrame.DisposeToPrevious = 3;\nexports.GifFrame = GifFrame;", "'use strict';\n\n/** @namespace GifUtil */\nconst fs = require('fs');\nconst ImageQ = require('image-q');\nconst BitmapImage = require('./bitmapimage');\nconst {\n  GifFrame\n} = require('./gifframe');\nconst {\n  GifError\n} = require('./gif');\nconst {\n  GifCodec\n} = require('./gifcodec');\nconst INVALID_SUFFIXES = ['.jpg', '.jpeg', '.png', '.bmp'];\nconst defaultCodec = new GifCodec();\n\n/**\n * cloneFrames() clones provided frames. It's a utility method for cloning an entire array of frames at once.\n * \n * @function cloneFrames\n * @memberof GifUtil\n * @param {GifFrame[]} frames An array of GifFrame instances to clone\n * @return {GifFrame[]} An array of GifFrame clones of the provided frames.\n */\n\nexports.cloneFrames = function (frames) {\n  let clones = [];\n  frames.forEach(frame => {\n    clones.push(new GifFrame(frame));\n  });\n  return clones;\n};\n\n/**\n * getColorInfo() gets information about the colors used in the provided frames. The method is able to return an array of all colors found across all frames.\n * \n * `maxGlobalIndex` controls whether the computation short-circuits to avoid doing work that the caller doesn't need. The method only returns `colors` and `indexCount` for the colors across all frames when the number of indexes required to store the colors and transparency in a GIF (which is the value of `indexCount`) is less than or equal to `maxGlobalIndex`. Such short-circuiting is useful when the caller just needs to determine whether any frame includes transparency.\n * \n * @function getColorInfo\n * @memberof GifUtil\n * @param {GifFrame[]} frames Frames to examine for color and transparency.\n * @param {number} maxGlobalIndex Maximum number of color indexes (including one for transparency) allowed among the returned compilation of colors. `colors` and `indexCount` are not returned if the number of color indexes required to accommodate  all frames exceeds this number. Returns `colors` and `indexCount` by default.\n * @returns {object} Object containing at least `palettes` and `usesTransparency`. `palettes` is an array of all the palettes returned by GifFrame#getPalette(). `usesTransparency` indicates whether at least one frame uses transparency. If `maxGlobalIndex` is not exceeded, the object also contains `colors`, an array of all colors (RGB) found across all palettes, sorted by increasing value, and `indexCount` indicating the number of indexes required to store the colors and the transparency in a GIF.\n * @throws {GifError} When any frame requires more than 256 color indexes.\n */\n\nexports.getColorInfo = function (frames, maxGlobalIndex) {\n  let usesTransparency = false;\n  const palettes = [];\n  for (let i = 0; i < frames.length; ++i) {\n    let palette = frames[i].getPalette();\n    if (palette.usesTransparency) {\n      usesTransparency = true;\n    }\n    if (palette.indexCount > 256) {\n      throw new GifError(`Frame ${i} uses more than 256 color indexes`);\n    }\n    palettes.push(palette);\n  }\n  if (maxGlobalIndex === 0) {\n    return {\n      usesTransparency,\n      palettes\n    };\n  }\n  const globalColorSet = new Set();\n  palettes.forEach(palette => {\n    palette.colors.forEach(color => {\n      globalColorSet.add(color);\n    });\n  });\n  let indexCount = globalColorSet.size;\n  if (usesTransparency) {\n    // odd that GIF requires a color table entry at transparent index\n    ++indexCount;\n  }\n  if (maxGlobalIndex && indexCount > maxGlobalIndex) {\n    return {\n      usesTransparency,\n      palettes\n    };\n  }\n  const colors = new Array(globalColorSet.size);\n  const iter = globalColorSet.values();\n  for (let i = 0; i < colors.length; ++i) {\n    colors[i] = iter.next().value;\n  }\n  colors.sort((a, b) => a - b);\n  return {\n    colors,\n    indexCount,\n    usesTransparency,\n    palettes\n  };\n};\n\n/**\n * copyAsJimp() returns a Jimp that contains a copy of the provided bitmap image (which may be either a BitmapImage or a GifFrame). Modifying the Jimp does not affect the provided bitmap image. This method serves as a macro for simplifying working with Jimp.\n *\n * @function copyAsJimp\n * @memberof GifUtil\n * @param {object} Reference to the Jimp package, keeping this library from being dependent on Jimp.\n * @param {bitmapImageToCopy} Instance of BitmapImage (may be a GifUtil) with which to source the Jimp.\n * @return {object} An new instance of Jimp containing a copy of the image in bitmapImageToCopy.\n */\n\nexports.copyAsJimp = function (jimp, bitmapImageToCopy) {\n  return exports.shareAsJimp(jimp, new BitmapImage(bitmapImageToCopy));\n};\n\n/**\n * getMaxDimensions() returns the pixel width and height required to accommodate all of the provided frames, according to the offsets and dimensions of each frame.\n * \n * @function getMaxDimensions\n * @memberof GifUtil\n * @param {GifFrame[]} frames Frames to measure for their aggregate maximum dimensions.\n * @return {object} An object of the form {maxWidth, maxHeight} indicating the maximum width and height required to accommodate all frames.\n */\n\nexports.getMaxDimensions = function (frames) {\n  let maxWidth = 0,\n    maxHeight = 0;\n  frames.forEach(frame => {\n    const width = frame.xOffset + frame.bitmap.width;\n    if (width > maxWidth) {\n      maxWidth = width;\n    }\n    const height = frame.yOffset + frame.bitmap.height;\n    if (height > maxHeight) {\n      maxHeight = height;\n    }\n  });\n  return {\n    maxWidth,\n    maxHeight\n  };\n};\n\n/**\n * Quantizes colors so that there are at most a given number of color indexes (including transparency) across all provided images. Uses an algorithm by Anthony Dekker.\n * \n * The method treats different RGBA combinations as different colors, so if the frame has multiple alpha values or multiple RGB values for an alpha value, the caller may first want to normalize them by converting all transparent pixels to the same RGBA values.\n * \n * The method may increase the number of colors if there are fewer than the provided maximum.\n * \n * @function quantizeDekker\n * @memberof GifUtil\n * @param {BitmapImage|BitmapImage[]} imageOrImages Image or array of images (such as GifFrame instances) to be color-quantized. Quantizing across multiple images ensures color consistency from frame to frame.\n * @param {number} maxColorIndexes The maximum number of color indexes that will exist in the palette after completing quantization. Defaults to 256.\n * @param {object} dither (optional) An object configuring the dithering to apply. The properties are as followings, imported from the [`image-q` package](https://github.com/ibezkrovnyi/image-quantization) without explanation: { `ditherAlgorithm`: One of 'FloydSteinberg', 'FalseFloydSteinberg', 'Stucki', 'Atkinson', 'Jarvis', 'Burkes', 'Sierra', 'TwoSierra', 'SierraLite'; `minimumColorDistanceToDither`: (optional) A number defaulting to 0; `serpentine`: (optional) A boolean defaulting to true; `calculateErrorLikeGIMP`: (optional) A boolean defaulting to false. }\n */\n\nexports.quantizeDekker = function (imageOrImages, maxColorIndexes, dither) {\n  maxColorIndexes = maxColorIndexes || 256;\n  _quantize(imageOrImages, 'NeuQuantFloat', maxColorIndexes, 0, dither);\n};\n\n/**\n * Quantizes colors so that there are at most a given number of color indexes (including transparency) across all provided images. Uses an algorithm by Leon Sorokin. This quantization method differs from the other two by likely never increasing the number of colors, should there be fewer than the provided maximum.\n * \n * The method treats different RGBA combinations as different colors, so if the frame has multiple alpha values or multiple RGB values for an alpha value, the caller may first want to normalize them by converting all transparent pixels to the same RGBA values.\n * \n * @function quantizeSorokin\n * @memberof GifUtil\n * @param {BitmapImage|BitmapImage[]} imageOrImages Image or array of images (such as GifFrame instances) to be color-quantized. Quantizing across multiple images ensures color consistency from frame to frame.\n * @param {number} maxColorIndexes The maximum number of color indexes that will exist in the palette after completing quantization. Defaults to 256.\n * @param {string} histogram (optional) Histogram method: 'top-pop' for global top-population, 'min-pop' for minimum-population threshhold within subregions. Defaults to 'min-pop'.\n * @param {object} dither (optional) An object configuring the dithering to apply, as explained for `quantizeDekker()`.\n */\n\nexports.quantizeSorokin = function (imageOrImages, maxColorIndexes, histogram, dither) {\n  maxColorIndexes = maxColorIndexes || 256;\n  histogram = histogram || 'min-pop';\n  let histogramID;\n  switch (histogram) {\n    case 'min-pop':\n      histogramID = 2;\n      break;\n    case 'top-pop':\n      histogramID = 1;\n      break;\n    default:\n      throw new Error(`Invalid quantizeSorokin histogram '${histogram}'`);\n  }\n  _quantize(imageOrImages, 'RGBQuant', maxColorIndexes, histogramID, dither);\n};\n\n/**\n * Quantizes colors so that there are at most a given number of color indexes (including transparency) across all provided images. Uses an algorithm by Xiaolin Wu.\n * \n * The method treats different RGBA combinations as different colors, so if the frame has multiple alpha values or multiple RGB values for an alpha value, the caller may first want to normalize them by converting all transparent pixels to the same RGBA values.\n * \n * The method may increase the number of colors if there are fewer than the provided maximum.\n * \n * @function quantizeWu\n * @memberof GifUtil\n * @param {BitmapImage|BitmapImage[]} imageOrImages Image or array of images (such as GifFrame instances) to be color-quantized. Quantizing across multiple images ensures color consistency from frame to frame.\n * @param {number} maxColorIndexes The maximum number of color indexes that will exist in the palette after completing quantization. Defaults to 256.\n * @param {number} significantBits (optional) This is the number of significant high bits in each RGB color channel. Takes integer values from 1 through 8. Higher values correspond to higher quality. Defaults to 5.\n * @param {object} dither (optional) An object configuring the dithering to apply, as explained for `quantizeDekker()`.\n */\n\nexports.quantizeWu = function (imageOrImages, maxColorIndexes, significantBits, dither) {\n  maxColorIndexes = maxColorIndexes || 256;\n  significantBits = significantBits || 5;\n  if (significantBits < 1 || significantBits > 8) {\n    throw new Error(\"Invalid quantization quality\");\n  }\n  _quantize(imageOrImages, 'WuQuant', maxColorIndexes, significantBits, dither);\n};\n\n/**\n * read() decodes an encoded GIF, whether provided as a filename or as a byte buffer.\n * \n * @function read\n * @memberof GifUtil\n * @param {string|Buffer} source Source to decode. When a string, it's the GIF filename to load and parse. When a Buffer, it's an encoded GIF to parse.\n * @param {object} decoder An optional GIF decoder object implementing the `decode` method of class GifCodec. When provided, the method decodes the GIF using this decoder. When not provided, the method uses GifCodec.\n * @return {Promise} A Promise that resolves to an instance of the Gif class, representing the decoded GIF.\n */\n\nexports.read = function (source, decoder) {\n  decoder = decoder || defaultCodec;\n  if (Buffer.isBuffer(source)) {\n    return decoder.decodeGif(source);\n  }\n  return _readBinary(source).then(buffer => {\n    return decoder.decodeGif(buffer);\n  });\n};\n\n/**\n * shareAsJimp() returns a Jimp that shares a bitmap with the provided bitmap image (which may be either a BitmapImage or a GifFrame). Modifying the image in either the Jimp or the BitmapImage affects the other objects. This method serves as a macro for simplifying working with Jimp.\n *\n * @function shareAsJimp\n * @memberof GifUtil\n * @param {object} Reference to the Jimp package, keeping this library from being dependent on Jimp.\n * @param {bitmapImageToShare} Instance of BitmapImage (may be a GifUtil) with which to source the Jimp.\n * @return {object} An new instance of Jimp that shares the image in bitmapImageToShare.\n */\n\nexports.shareAsJimp = function (jimp, bitmapImageToShare) {\n  const jimpImage = new jimp(bitmapImageToShare.bitmap.width, bitmapImageToShare.bitmap.height, 0);\n  jimpImage.bitmap.data = bitmapImageToShare.bitmap.data;\n  return jimpImage;\n};\n\n/**\n * write() encodes a GIF and saves it as a file.\n * \n * @function write\n * @memberof GifUtil\n * @param {string} path Filename to write GIF out as. Will overwrite an existing file.\n * @param {GifFrame[]} frames Array of frames to be written into GIF.\n * @param {object} spec An optional object that may provide values for `loops` and `colorScope`, as defined for the Gif class. However, `colorSpace` may also take the value Gif.GlobalColorsPreferred (== 0) to indicate that the encoder should attempt to create only a global color table. `loop` defaults to 0, looping indefinitely, and `colorScope` defaults to Gif.GlobalColorsPreferred.\n * @param {object} encoder An optional GIF encoder object implementing the `encode` method of class GifCodec. When provided, the method encodes the GIF using this encoder. When not provided, the method uses GifCodec.\n * @return {Promise} A Promise that resolves to an instance of the Gif class, representing the encoded GIF.\n */\n\nexports.write = function (path, frames, spec, encoder) {\n  encoder = encoder || defaultCodec;\n  const matches = path.match(/\\.[a-zA-Z]+$/); // prevent accidents\n  if (matches !== null && INVALID_SUFFIXES.includes(matches[0].toLowerCase())) {\n    throw new Error(`GIF '${path}' has an unexpected suffix`);\n  }\n  return encoder.encodeGif(frames, spec).then(gif => {\n    return _writeBinary(path, gif.buffer).then(() => {\n      return gif;\n    });\n  });\n};\nfunction _quantize(imageOrImages, method, maxColorIndexes, modifier, dither) {\n  const images = Array.isArray(imageOrImages) ? imageOrImages : [imageOrImages];\n  const ditherAlgs = ['FloydSteinberg', 'FalseFloydSteinberg', 'Stucki', 'Atkinson', 'Jarvis', 'Burkes', 'Sierra', 'TwoSierra', 'SierraLite'];\n  if (dither) {\n    if (ditherAlgs.indexOf(dither.ditherAlgorithm) < 0) {\n      throw new Error(`Invalid ditherAlgorithm '${dither.ditherAlgorithm}'`);\n    }\n    if (dither.serpentine === undefined) {\n      dither.serpentine = true;\n    }\n    if (dither.minimumColorDistanceToDither === undefined) {\n      dither.minimumColorDistanceToDither = 0;\n    }\n    if (dither.calculateErrorLikeGIMP === undefined) {\n      dither.calculateErrorLikeGIMP = false;\n    }\n  }\n  const distCalculator = new ImageQ.distance.Euclidean();\n  const quantizer = new ImageQ.palette[method](distCalculator, maxColorIndexes, modifier);\n  let imageMaker;\n  if (dither) {\n    imageMaker = new ImageQ.image.ErrorDiffusionArray(distCalculator, ImageQ.image.ErrorDiffusionArrayKernel[dither.ditherAlgorithm], dither.serpentine, dither.minimumColorDistanceToDither, dither.calculateErrorLikeGIMP);\n  } else {\n    imageMaker = new ImageQ.image.NearestColor(distCalculator);\n  }\n  const inputContainers = [];\n  images.forEach(image => {\n    const imageBuf = image.bitmap.data;\n    const inputBuf = new ArrayBuffer(imageBuf.length);\n    const inputArray = new Uint32Array(inputBuf);\n    for (let bi = 0, ai = 0; bi < imageBuf.length; bi += 4, ++ai) {\n      inputArray[ai] = imageBuf.readUInt32LE(bi, true);\n    }\n    const inputContainer = ImageQ.utils.PointContainer.fromUint32Array(inputArray, image.bitmap.width, image.bitmap.height);\n    quantizer.sample(inputContainer);\n    inputContainers.push(inputContainer);\n  });\n  const limitedPalette = quantizer.quantizeSync();\n  for (let i = 0; i < images.length; ++i) {\n    const imageBuf = images[i].bitmap.data;\n    const outputContainer = imageMaker.quantizeSync(inputContainers[i], limitedPalette);\n    const outputArray = outputContainer.toUint32Array();\n    for (let bi = 0, ai = 0; bi < imageBuf.length; bi += 4, ++ai) {\n      imageBuf.writeUInt32LE(outputArray[ai], bi);\n    }\n  }\n}\nfunction _readBinary(path) {\n  // TBD: add support for URLs\n  return new Promise((resolve, reject) => {\n    fs.readFile(path, (err, buffer) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve(buffer);\n    });\n  });\n}\nfunction _writeBinary(path, buffer) {\n  // TBD: add support for URLs\n  return new Promise((resolve, reject) => {\n    fs.writeFile(path, buffer, err => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve();\n    });\n  });\n}", "'use strict';\n\nconst Omggif = require('omggif');\nconst {\n  Gif,\n  GifError\n} = require('./gif');\n\n// allow circular dependency with GifUtil\nfunction GifUtil() {\n  const data = require('./gifutil');\n  GifUtil = function () {\n    return data;\n  };\n  return data;\n}\nconst {\n  GifFrame\n} = require('./gifframe');\nconst PER_GIF_OVERHEAD = 200; // these are guesses at upper limits\nconst PER_FRAME_OVERHEAD = 100;\n\n// Note: I experimented with accepting a global color table when encoding and returning the global color table when decoding. Doing this properly greatly increased the complexity of the code and the amount of clock cycles required. The main issue is that each frame can specify any color of the global color table to be transparent within the frame, while this GIF library strives to hide GIF formatting details from its clients. E.g. it's possible to have 256 colors in the global color table and different transparencies in each frame, requiring clients to either provide per-frame transparency indexes, or for arcane reasons that won't be apparent to client developers, encode some GIFs with local color tables that previously decoded with global tables.\n\n/** @class GifCodec */\n\nclass GifCodec {\n  // _transparentRGBA - RGB given to transparent pixels (alpha=0) on decode; defaults to null indicating 0x000000, which is fastest\n\n  /**\n   * GifCodec is a class that both encodes and decodes GIFs. It implements both the `encode()` method expected of an encoder and the `decode()` method expected of a decoder, and it wraps the `omggif` GIF encoder/decoder package. GifCodec serves as this library's default encoder and decoder, but it's possible to wrap other GIF encoders and decoders for use by `gifwrap` as well. GifCodec will not encode GIFs with interlacing.\n   * \n   * Instances of this class are stateless and can be shared across multiple encodings and decodings.\n   * \n   * Its constructor takes one option argument:\n   * \n   * @param {object} options Optionally takes an objection whose only possible property is `transparentRGB`. Images are internally represented in RGBA format, where A is the alpha value of a pixel. When `transparentRGB` is provided, this RGB value (excluding alpha) is assigned to transparent pixels, which are also given alpha value 0x00. (All opaque pixels are given alpha value 0xFF). The RGB color of transparent pixels shouldn't matter for most applications. Defaults to 0x000000.\n   */\n\n  constructor(options = {}) {\n    this._transparentRGB = null; // 0x000000\n    if (typeof options.transparentRGB === 'number' && options.transparentRGB !== 0) {\n      this._transparentRGBA = options.transparentRGB * 256;\n    }\n    this._testInitialBufferSize = 0; // assume no buffer scaling test\n  }\n\n  /**\n   * Decodes a GIF from a Buffer to yield an instance of Gif. Transparent pixels of the GIF are given alpha values of 0x00, and opaque pixels are given alpha values of 0xFF. The RGB values of transparent pixels default to 0x000000 but can be overridden by the constructor's `transparentRGB` option.\n   * \n   * @param {Buffer} buffer Bytes of an encoded GIF to decode.\n   * @return {Promise} A Promise that resolves to an instance of the Gif class, representing the encoded GIF.\n   * @throws {GifError} Error upon encountered an encoding-related problem with a GIF, so that the caller can distinguish between software errors and problems with GIFs.\n   */\n\n  decodeGif(buffer) {\n    try {\n      let reader;\n      try {\n        reader = new Omggif.GifReader(buffer);\n      } catch (err) {\n        throw new GifError(err);\n      }\n      const frameCount = reader.numFrames();\n      const frames = [];\n      const spec = {\n        width: reader.width,\n        height: reader.height,\n        loops: reader.loopCount()\n      };\n      spec.usesTransparency = false;\n      for (let i = 0; i < frameCount; ++i) {\n        const frameInfo = this._decodeFrame(reader, i, spec.usesTransparency);\n        frames.push(frameInfo.frame);\n        if (frameInfo.usesTransparency) {\n          spec.usesTransparency = true;\n        }\n      }\n      return Promise.resolve(new Gif(buffer, frames, spec));\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n\n  /**\n   * Encodes a GIF from provided frames. Each pixel having an alpha value of 0x00 renders as transparent within the encoding, while all pixels of non-zero alpha value render as opaque.\n   * \n   * @param {GifFrame[]} frames Array of frames to encode\n   * @param {object} spec An optional object that may provide values for `loops` and `colorScope`, as defined for the Gif class. However, `colorSpace` may also take the value Gif.GlobalColorsPreferred (== 0) to indicate that the encoder should attempt to create only a global color table. `loop` defaults to 0, looping indefinitely. Set `loop` to null to disable looping, playing only once. `colorScope` defaults to Gif.GlobalColorsPreferred.\n   * @return {Promise} A Promise that resolves to an instance of the Gif class, representing the encoded GIF.\n   * @throws {GifError} Error upon encountered an encoding-related problem with a GIF, so that the caller can distinguish between software errors and problems with GIFs.\n   */\n\n  encodeGif(frames, spec = {}) {\n    try {\n      if (frames === null || frames.length === 0) {\n        throw new GifError(\"there are no frames\");\n      }\n      const dims = GifUtil().getMaxDimensions(frames);\n      spec = Object.assign({}, spec); // don't munge caller's spec\n      spec.width = dims.maxWidth;\n      spec.height = dims.maxHeight;\n      if (spec.loops === undefined) {\n        spec.loops = 0;\n      }\n      spec.colorScope = spec.colorScope || Gif.GlobalColorsPreferred;\n      return Promise.resolve(this._encodeGif(frames, spec));\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n  _decodeFrame(reader, frameIndex, alreadyUsedTransparency) {\n    let info, buffer;\n    try {\n      info = reader.frameInfo(frameIndex);\n      buffer = new Buffer(reader.width * reader.height * 4);\n      reader.decodeAndBlitFrameRGBA(frameIndex, buffer);\n      if (info.width !== reader.width || info.height !== reader.height) {\n        if (info.y) {\n          // skip unused rows\n          buffer = buffer.slice(info.y * reader.width * 4);\n        }\n        if (reader.width > info.width) {\n          // skip scanstride\n          for (let ii = 0; ii < info.height; ++ii) {\n            buffer.copy(buffer, ii * info.width * 4, (info.x + ii * reader.width) * 4, (info.x + ii * reader.width) * 4 + info.width * 4);\n          }\n        }\n        // trim buffer to size\n        buffer = buffer.slice(0, info.width * info.height * 4);\n      }\n    } catch (err) {\n      throw new GifError(err);\n    }\n    let usesTransparency = false;\n    if (this._transparentRGBA === null) {\n      if (!alreadyUsedTransparency) {\n        for (let i = 3; i < buffer.length; i += 4) {\n          if (buffer[i] === 0) {\n            usesTransparency = true;\n            i = buffer.length;\n          }\n        }\n      }\n    } else {\n      for (let i = 3; i < buffer.length; i += 4) {\n        if (buffer[i] === 0) {\n          buffer.writeUInt32BE(this._transparentRGBA, i - 3);\n          usesTransparency = true; // GIF might encode unused index\n        }\n      }\n    }\n    const frame = new GifFrame(info.width, info.height, buffer, {\n      xOffset: info.x,\n      yOffset: info.y,\n      disposalMethod: info.disposal,\n      interlaced: info.interlaced,\n      delayCentisecs: info.delay\n    });\n    return {\n      frame,\n      usesTransparency\n    };\n  }\n  _encodeGif(frames, spec) {\n    let colorInfo;\n    if (spec.colorScope === Gif.LocalColorsOnly) {\n      colorInfo = GifUtil().getColorInfo(frames, 0);\n    } else {\n      colorInfo = GifUtil().getColorInfo(frames, 256);\n      if (!colorInfo.colors) {\n        // if global palette impossible\n        if (spec.colorScope === Gif.GlobalColorsOnly) {\n          throw new GifError(\"Too many color indexes for global color table\");\n        }\n        spec.colorScope = Gif.LocalColorsOnly;\n      }\n    }\n    spec.usesTransparency = colorInfo.usesTransparency;\n    const localPalettes = colorInfo.palettes;\n    if (spec.colorScope === Gif.LocalColorsOnly) {\n      const localSizeEst = 2000; //this._getSizeEstimateLocal(localPalettes, frames);\n      return _encodeLocal(frames, spec, localSizeEst, localPalettes);\n    }\n    const globalSizeEst = 2000; //this._getSizeEstimateGlobal(colorInfo, frames);\n    return _encodeGlobal(frames, spec, globalSizeEst, colorInfo);\n  }\n  _getSizeEstimateGlobal(globalPalette, frames) {\n    if (this._testInitialBufferSize > 0) {\n      return this._testInitialBufferSize;\n    }\n    let sizeEst = PER_GIF_OVERHEAD + 3 * 256 /* max palette size*/;\n    const pixelBitWidth = _getPixelBitWidth(globalPalette);\n    frames.forEach(frame => {\n      sizeEst += _getFrameSizeEst(frame, pixelBitWidth);\n    });\n    return sizeEst; // should be the upper limit\n  }\n  _getSizeEstimateLocal(palettes, frames) {\n    if (this._testInitialBufferSize > 0) {\n      return this._testInitialBufferSize;\n    }\n    let sizeEst = PER_GIF_OVERHEAD;\n    for (let i = 0; i < frames.length; ++i) {\n      const palette = palettes[i];\n      const pixelBitWidth = _getPixelBitWidth(palette);\n      sizeEst += _getFrameSizeEst(frames[i], pixelBitWidth);\n    }\n    return sizeEst; // should be the upper limit\n  }\n}\nexports.GifCodec = GifCodec;\nfunction _colorLookupLinear(colors, color) {\n  const index = colors.indexOf(color);\n  return index === -1 ? null : index;\n}\nfunction _colorLookupBinary(colors, color) {\n  // adapted from https://stackoverflow.com/a/10264318/650894\n  var lo = 0,\n    hi = colors.length - 1,\n    mid;\n  while (lo <= hi) {\n    mid = Math.floor((lo + hi) / 2);\n    if (colors[mid] > color) hi = mid - 1;else if (colors[mid] < color) lo = mid + 1;else return mid;\n  }\n  return null;\n}\nfunction _encodeGlobal(frames, spec, bufferSizeEst, globalPalette) {\n  // would be inefficient for frames to lookup colors in extended palette \n  const extendedGlobalPalette = {\n    colors: globalPalette.colors.slice(),\n    usesTransparency: globalPalette.usesTransparency\n  };\n  _extendPaletteToPowerOf2(extendedGlobalPalette);\n  const options = {\n    palette: extendedGlobalPalette.colors,\n    loop: spec.loops\n  };\n  let buffer = new Buffer(bufferSizeEst);\n  let gifWriter;\n  try {\n    gifWriter = new Omggif.GifWriter(buffer, spec.width, spec.height, options);\n  } catch (err) {\n    throw new GifError(err);\n  }\n  for (let i = 0; i < frames.length; ++i) {\n    buffer = _writeFrame(gifWriter, i, frames[i], globalPalette, false);\n  }\n  return new Gif(buffer.slice(0, gifWriter.end()), frames, spec);\n}\nfunction _encodeLocal(frames, spec, bufferSizeEst, localPalettes) {\n  const options = {\n    loop: spec.loops\n  };\n  let buffer = new Buffer(bufferSizeEst);\n  let gifWriter;\n  try {\n    gifWriter = new Omggif.GifWriter(buffer, spec.width, spec.height, options);\n  } catch (err) {\n    throw new GifError(err);\n  }\n  for (let i = 0; i < frames.length; ++i) {\n    buffer = _writeFrame(gifWriter, i, frames[i], localPalettes[i], true);\n  }\n  return new Gif(buffer.slice(0, gifWriter.end()), frames, spec);\n}\nfunction _extendPaletteToPowerOf2(palette) {\n  const colors = palette.colors;\n  if (palette.usesTransparency) {\n    colors.push(0);\n  }\n  const colorCount = colors.length;\n  let powerOf2 = 2;\n  while (colorCount > powerOf2) {\n    powerOf2 <<= 1;\n  }\n  colors.length = powerOf2;\n  colors.fill(0, colorCount);\n}\nfunction _getFrameSizeEst(frame, pixelBitWidth) {\n  let byteLength = frame.bitmap.width * frame.bitmap.height;\n  byteLength = Math.ceil(byteLength * pixelBitWidth / 8);\n  byteLength += Math.ceil(byteLength / 255); // add block size bytes\n  // assume maximum palete size because it might get extended for power of 2\n  return PER_FRAME_OVERHEAD + byteLength + 3 * 256 /* largest palette */;\n}\nfunction _getIndexedImage(frameIndex, frame, palette) {\n  const colors = palette.colors;\n  const colorToIndexFunc = colors.length <= 8 ?\n  // guess at the break-even\n  _colorLookupLinear : _colorLookupBinary;\n  const colorBuffer = frame.bitmap.data;\n  const indexBuffer = new Buffer(colorBuffer.length / 4);\n  let transparentIndex = colors.length;\n  let i = 0,\n    j = 0;\n  while (i < colorBuffer.length) {\n    if (colorBuffer[i + 3] !== 0) {\n      const color = colorBuffer.readUInt32BE(i, true) >> 8 & 0xFFFFFF;\n      // caller guarantees that the color will be in the palette\n      indexBuffer[j] = colorToIndexFunc(colors, color);\n    } else {\n      indexBuffer[j] = transparentIndex;\n    }\n    i += 4; // skip alpha\n    ++j;\n  }\n  if (palette.usesTransparency) {\n    if (transparentIndex === 256) {\n      throw new GifError(`Frame ${frameIndex} already has 256 colors` + `and so can't use transparency`);\n    }\n  } else {\n    transparentIndex = null;\n  }\n  return {\n    buffer: indexBuffer,\n    transparentIndex\n  };\n}\nfunction _getPixelBitWidth(palette) {\n  let indexCount = palette.indexCount;\n  let pixelBitWidth = 0;\n  --indexCount; // start at maximum index\n  while (indexCount) {\n    ++pixelBitWidth;\n    indexCount >>= 1;\n  }\n  return pixelBitWidth > 0 ? pixelBitWidth : 1;\n}\nfunction _writeFrame(gifWriter, frameIndex, frame, palette, isLocalPalette) {\n  if (frame.interlaced) {\n    throw new GifError(\"writing interlaced GIFs is not supported\");\n  }\n  const frameInfo = _getIndexedImage(frameIndex, frame, palette);\n  const options = {\n    delay: frame.delayCentisecs,\n    disposal: frame.disposalMethod,\n    transparent: frameInfo.transparentIndex\n  };\n  if (isLocalPalette) {\n    _extendPaletteToPowerOf2(palette); // ok 'cause palette never used again\n    options.palette = palette.colors;\n  }\n  try {\n    let buffer = gifWriter.getOutputBuffer();\n    let startOfFrame = gifWriter.getOutputBufferPosition();\n    let endOfFrame;\n    let tryAgain = true;\n    while (tryAgain) {\n      endOfFrame = gifWriter.addFrame(frame.xOffset, frame.yOffset, frame.bitmap.width, frame.bitmap.height, frameInfo.buffer, options);\n      tryAgain = false;\n      if (endOfFrame >= buffer.length - 1) {\n        const biggerBuffer = new Buffer(buffer.length * 1.5);\n        buffer.copy(biggerBuffer);\n        gifWriter.setOutputBuffer(biggerBuffer);\n        gifWriter.setOutputBufferPosition(startOfFrame);\n        buffer = biggerBuffer;\n        tryAgain = true;\n      }\n    }\n    return buffer;\n  } catch (err) {\n    throw new GifError(err);\n  }\n}", "'use strict';\n\nconst BitmapImage = require('./bitmapimage');\nconst {\n  Gif,\n  GifError\n} = require('./gif');\nconst {\n  GifCodec\n} = require('./gifcodec');\nconst {\n  GifFrame\n} = require('./gifframe');\nconst GifUtil = require('./gifutil');\nmodule.exports = {\n  BitmapImage,\n  Gif,\n  GifCodec,\n  GifFrame,\n  GifUtil,\n  GifError\n};", "/*\n  Copyright (c) 2008, Adobe Systems Incorporated\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without \n  modification, are permitted provided that the following conditions are\n  met:\n\n  * Redistributions of source code must retain the above copyright notice, \n    this list of conditions and the following disclaimer.\n  \n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the \n    documentation and/or other materials provided with the distribution.\n  \n  * Neither the name of Adobe Systems Incorporated nor the names of its \n    contributors may be used to endorse or promote products derived from \n    this software without specific prior written permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n  IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR \n  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*\nJPEG encoder ported to JavaScript and optimized by Andreas Ritter, www.bytestrom.eu, 11/2009\n\nBasic GUI blocking jpeg encoder\n*/\n\nvar btoa = btoa || function (buf) {\n  return Buffer.from(buf).toString('base64');\n};\nfunction JPEGEncoder(quality) {\n  var self = this;\n  var fround = Math.round;\n  var ffloor = Math.floor;\n  var YTable = new Array(64);\n  var UVTable = new Array(64);\n  var fdtbl_Y = new Array(64);\n  var fdtbl_UV = new Array(64);\n  var YDC_HT;\n  var UVDC_HT;\n  var YAC_HT;\n  var UVAC_HT;\n  var bitcode = new Array(65535);\n  var category = new Array(65535);\n  var outputfDCTQuant = new Array(64);\n  var DU = new Array(64);\n  var byteout = [];\n  var bytenew = 0;\n  var bytepos = 7;\n  var YDU = new Array(64);\n  var UDU = new Array(64);\n  var VDU = new Array(64);\n  var clt = new Array(256);\n  var RGB_YUV_TABLE = new Array(2048);\n  var currentQuality;\n  var ZigZag = [0, 1, 5, 6, 14, 15, 27, 28, 2, 4, 7, 13, 16, 26, 29, 42, 3, 8, 12, 17, 25, 30, 41, 43, 9, 11, 18, 24, 31, 40, 44, 53, 10, 19, 23, 32, 39, 45, 52, 54, 20, 22, 33, 38, 46, 51, 55, 60, 21, 34, 37, 47, 50, 56, 59, 61, 35, 36, 48, 49, 57, 58, 62, 63];\n  var std_dc_luminance_nrcodes = [0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0];\n  var std_dc_luminance_values = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n  var std_ac_luminance_nrcodes = [0, 0, 2, 1, 3, 3, 2, 4, 3, 5, 5, 4, 4, 0, 0, 1, 0x7d];\n  var std_ac_luminance_values = [0x01, 0x02, 0x03, 0x00, 0x04, 0x11, 0x05, 0x12, 0x21, 0x31, 0x41, 0x06, 0x13, 0x51, 0x61, 0x07, 0x22, 0x71, 0x14, 0x32, 0x81, 0x91, 0xa1, 0x08, 0x23, 0x42, 0xb1, 0xc1, 0x15, 0x52, 0xd1, 0xf0, 0x24, 0x33, 0x62, 0x72, 0x82, 0x09, 0x0a, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa];\n  var std_dc_chrominance_nrcodes = [0, 0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0];\n  var std_dc_chrominance_values = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n  var std_ac_chrominance_nrcodes = [0, 0, 2, 1, 2, 4, 4, 3, 4, 7, 5, 4, 4, 0, 1, 2, 0x77];\n  var std_ac_chrominance_values = [0x00, 0x01, 0x02, 0x03, 0x11, 0x04, 0x05, 0x21, 0x31, 0x06, 0x12, 0x41, 0x51, 0x07, 0x61, 0x71, 0x13, 0x22, 0x32, 0x81, 0x08, 0x14, 0x42, 0x91, 0xa1, 0xb1, 0xc1, 0x09, 0x23, 0x33, 0x52, 0xf0, 0x15, 0x62, 0x72, 0xd1, 0x0a, 0x16, 0x24, 0x34, 0xe1, 0x25, 0xf1, 0x17, 0x18, 0x19, 0x1a, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa];\n  function initQuantTables(sf) {\n    var YQT = [16, 11, 10, 16, 24, 40, 51, 61, 12, 12, 14, 19, 26, 58, 60, 55, 14, 13, 16, 24, 40, 57, 69, 56, 14, 17, 22, 29, 51, 87, 80, 62, 18, 22, 37, 56, 68, 109, 103, 77, 24, 35, 55, 64, 81, 104, 113, 92, 49, 64, 78, 87, 103, 121, 120, 101, 72, 92, 95, 98, 112, 100, 103, 99];\n    for (var i = 0; i < 64; i++) {\n      var t = ffloor((YQT[i] * sf + 50) / 100);\n      if (t < 1) {\n        t = 1;\n      } else if (t > 255) {\n        t = 255;\n      }\n      YTable[ZigZag[i]] = t;\n    }\n    var UVQT = [17, 18, 24, 47, 99, 99, 99, 99, 18, 21, 26, 66, 99, 99, 99, 99, 24, 26, 56, 99, 99, 99, 99, 99, 47, 66, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99];\n    for (var j = 0; j < 64; j++) {\n      var u = ffloor((UVQT[j] * sf + 50) / 100);\n      if (u < 1) {\n        u = 1;\n      } else if (u > 255) {\n        u = 255;\n      }\n      UVTable[ZigZag[j]] = u;\n    }\n    var aasf = [1.0, 1.387039845, 1.306562965, 1.175875602, 1.0, 0.785694958, 0.541196100, 0.275899379];\n    var k = 0;\n    for (var row = 0; row < 8; row++) {\n      for (var col = 0; col < 8; col++) {\n        fdtbl_Y[k] = 1.0 / (YTable[ZigZag[k]] * aasf[row] * aasf[col] * 8.0);\n        fdtbl_UV[k] = 1.0 / (UVTable[ZigZag[k]] * aasf[row] * aasf[col] * 8.0);\n        k++;\n      }\n    }\n  }\n  function computeHuffmanTbl(nrcodes, std_table) {\n    var codevalue = 0;\n    var pos_in_table = 0;\n    var HT = new Array();\n    for (var k = 1; k <= 16; k++) {\n      for (var j = 1; j <= nrcodes[k]; j++) {\n        HT[std_table[pos_in_table]] = [];\n        HT[std_table[pos_in_table]][0] = codevalue;\n        HT[std_table[pos_in_table]][1] = k;\n        pos_in_table++;\n        codevalue++;\n      }\n      codevalue *= 2;\n    }\n    return HT;\n  }\n  function initHuffmanTbl() {\n    YDC_HT = computeHuffmanTbl(std_dc_luminance_nrcodes, std_dc_luminance_values);\n    UVDC_HT = computeHuffmanTbl(std_dc_chrominance_nrcodes, std_dc_chrominance_values);\n    YAC_HT = computeHuffmanTbl(std_ac_luminance_nrcodes, std_ac_luminance_values);\n    UVAC_HT = computeHuffmanTbl(std_ac_chrominance_nrcodes, std_ac_chrominance_values);\n  }\n  function initCategoryNumber() {\n    var nrlower = 1;\n    var nrupper = 2;\n    for (var cat = 1; cat <= 15; cat++) {\n      //Positive numbers\n      for (var nr = nrlower; nr < nrupper; nr++) {\n        category[32767 + nr] = cat;\n        bitcode[32767 + nr] = [];\n        bitcode[32767 + nr][1] = cat;\n        bitcode[32767 + nr][0] = nr;\n      }\n      //Negative numbers\n      for (var nrneg = -(nrupper - 1); nrneg <= -nrlower; nrneg++) {\n        category[32767 + nrneg] = cat;\n        bitcode[32767 + nrneg] = [];\n        bitcode[32767 + nrneg][1] = cat;\n        bitcode[32767 + nrneg][0] = nrupper - 1 + nrneg;\n      }\n      nrlower <<= 1;\n      nrupper <<= 1;\n    }\n  }\n  function initRGBYUVTable() {\n    for (var i = 0; i < 256; i++) {\n      RGB_YUV_TABLE[i] = 19595 * i;\n      RGB_YUV_TABLE[i + 256 >> 0] = 38470 * i;\n      RGB_YUV_TABLE[i + 512 >> 0] = 7471 * i + 0x8000;\n      RGB_YUV_TABLE[i + 768 >> 0] = -11059 * i;\n      RGB_YUV_TABLE[i + 1024 >> 0] = -21709 * i;\n      RGB_YUV_TABLE[i + 1280 >> 0] = 32768 * i + 0x807FFF;\n      RGB_YUV_TABLE[i + 1536 >> 0] = -27439 * i;\n      RGB_YUV_TABLE[i + 1792 >> 0] = -5329 * i;\n    }\n  }\n\n  // IO functions\n  function writeBits(bs) {\n    var value = bs[0];\n    var posval = bs[1] - 1;\n    while (posval >= 0) {\n      if (value & 1 << posval) {\n        bytenew |= 1 << bytepos;\n      }\n      posval--;\n      bytepos--;\n      if (bytepos < 0) {\n        if (bytenew == 0xFF) {\n          writeByte(0xFF);\n          writeByte(0);\n        } else {\n          writeByte(bytenew);\n        }\n        bytepos = 7;\n        bytenew = 0;\n      }\n    }\n  }\n  function writeByte(value) {\n    //byteout.push(clt[value]); // write char directly instead of converting later\n    byteout.push(value);\n  }\n  function writeWord(value) {\n    writeByte(value >> 8 & 0xFF);\n    writeByte(value & 0xFF);\n  }\n\n  // DCT & quantization core\n  function fDCTQuant(data, fdtbl) {\n    var d0, d1, d2, d3, d4, d5, d6, d7;\n    /* Pass 1: process rows. */\n    var dataOff = 0;\n    var i;\n    var I8 = 8;\n    var I64 = 64;\n    for (i = 0; i < I8; ++i) {\n      d0 = data[dataOff];\n      d1 = data[dataOff + 1];\n      d2 = data[dataOff + 2];\n      d3 = data[dataOff + 3];\n      d4 = data[dataOff + 4];\n      d5 = data[dataOff + 5];\n      d6 = data[dataOff + 6];\n      d7 = data[dataOff + 7];\n      var tmp0 = d0 + d7;\n      var tmp7 = d0 - d7;\n      var tmp1 = d1 + d6;\n      var tmp6 = d1 - d6;\n      var tmp2 = d2 + d5;\n      var tmp5 = d2 - d5;\n      var tmp3 = d3 + d4;\n      var tmp4 = d3 - d4;\n\n      /* Even part */\n      var tmp10 = tmp0 + tmp3; /* phase 2 */\n      var tmp13 = tmp0 - tmp3;\n      var tmp11 = tmp1 + tmp2;\n      var tmp12 = tmp1 - tmp2;\n      data[dataOff] = tmp10 + tmp11; /* phase 3 */\n      data[dataOff + 4] = tmp10 - tmp11;\n      var z1 = (tmp12 + tmp13) * 0.707106781; /* c4 */\n      data[dataOff + 2] = tmp13 + z1; /* phase 5 */\n      data[dataOff + 6] = tmp13 - z1;\n\n      /* Odd part */\n      tmp10 = tmp4 + tmp5; /* phase 2 */\n      tmp11 = tmp5 + tmp6;\n      tmp12 = tmp6 + tmp7;\n\n      /* The rotator is modified from fig 4-8 to avoid extra negations. */\n      var z5 = (tmp10 - tmp12) * 0.382683433; /* c6 */\n      var z2 = 0.541196100 * tmp10 + z5; /* c2-c6 */\n      var z4 = 1.306562965 * tmp12 + z5; /* c2+c6 */\n      var z3 = tmp11 * 0.707106781; /* c4 */\n\n      var z11 = tmp7 + z3; /* phase 5 */\n      var z13 = tmp7 - z3;\n      data[dataOff + 5] = z13 + z2; /* phase 6 */\n      data[dataOff + 3] = z13 - z2;\n      data[dataOff + 1] = z11 + z4;\n      data[dataOff + 7] = z11 - z4;\n      dataOff += 8; /* advance pointer to next row */\n    }\n\n    /* Pass 2: process columns. */\n    dataOff = 0;\n    for (i = 0; i < I8; ++i) {\n      d0 = data[dataOff];\n      d1 = data[dataOff + 8];\n      d2 = data[dataOff + 16];\n      d3 = data[dataOff + 24];\n      d4 = data[dataOff + 32];\n      d5 = data[dataOff + 40];\n      d6 = data[dataOff + 48];\n      d7 = data[dataOff + 56];\n      var tmp0p2 = d0 + d7;\n      var tmp7p2 = d0 - d7;\n      var tmp1p2 = d1 + d6;\n      var tmp6p2 = d1 - d6;\n      var tmp2p2 = d2 + d5;\n      var tmp5p2 = d2 - d5;\n      var tmp3p2 = d3 + d4;\n      var tmp4p2 = d3 - d4;\n\n      /* Even part */\n      var tmp10p2 = tmp0p2 + tmp3p2; /* phase 2 */\n      var tmp13p2 = tmp0p2 - tmp3p2;\n      var tmp11p2 = tmp1p2 + tmp2p2;\n      var tmp12p2 = tmp1p2 - tmp2p2;\n      data[dataOff] = tmp10p2 + tmp11p2; /* phase 3 */\n      data[dataOff + 32] = tmp10p2 - tmp11p2;\n      var z1p2 = (tmp12p2 + tmp13p2) * 0.707106781; /* c4 */\n      data[dataOff + 16] = tmp13p2 + z1p2; /* phase 5 */\n      data[dataOff + 48] = tmp13p2 - z1p2;\n\n      /* Odd part */\n      tmp10p2 = tmp4p2 + tmp5p2; /* phase 2 */\n      tmp11p2 = tmp5p2 + tmp6p2;\n      tmp12p2 = tmp6p2 + tmp7p2;\n\n      /* The rotator is modified from fig 4-8 to avoid extra negations. */\n      var z5p2 = (tmp10p2 - tmp12p2) * 0.382683433; /* c6 */\n      var z2p2 = 0.541196100 * tmp10p2 + z5p2; /* c2-c6 */\n      var z4p2 = 1.306562965 * tmp12p2 + z5p2; /* c2+c6 */\n      var z3p2 = tmp11p2 * 0.707106781; /* c4 */\n\n      var z11p2 = tmp7p2 + z3p2; /* phase 5 */\n      var z13p2 = tmp7p2 - z3p2;\n      data[dataOff + 40] = z13p2 + z2p2; /* phase 6 */\n      data[dataOff + 24] = z13p2 - z2p2;\n      data[dataOff + 8] = z11p2 + z4p2;\n      data[dataOff + 56] = z11p2 - z4p2;\n      dataOff++; /* advance pointer to next column */\n    }\n\n    // Quantize/descale the coefficients\n    var fDCTQuant;\n    for (i = 0; i < I64; ++i) {\n      // Apply the quantization and scaling factor & Round to nearest integer\n      fDCTQuant = data[i] * fdtbl[i];\n      outputfDCTQuant[i] = fDCTQuant > 0.0 ? fDCTQuant + 0.5 | 0 : fDCTQuant - 0.5 | 0;\n      //outputfDCTQuant[i] = fround(fDCTQuant);\n    }\n    return outputfDCTQuant;\n  }\n  function writeAPP0() {\n    writeWord(0xFFE0); // marker\n    writeWord(16); // length\n    writeByte(0x4A); // J\n    writeByte(0x46); // F\n    writeByte(0x49); // I\n    writeByte(0x46); // F\n    writeByte(0); // = \"JFIF\",'\\0'\n    writeByte(1); // versionhi\n    writeByte(1); // versionlo\n    writeByte(0); // xyunits\n    writeWord(1); // xdensity\n    writeWord(1); // ydensity\n    writeByte(0); // thumbnwidth\n    writeByte(0); // thumbnheight\n  }\n  function writeAPP1(exifBuffer) {\n    if (!exifBuffer) return;\n    writeWord(0xFFE1); // APP1 marker\n\n    if (exifBuffer[0] === 0x45 && exifBuffer[1] === 0x78 && exifBuffer[2] === 0x69 && exifBuffer[3] === 0x66) {\n      // Buffer already starts with EXIF, just use it directly\n      writeWord(exifBuffer.length + 2); // length is buffer + length itself!\n    } else {\n      // Buffer doesn't start with EXIF, write it for them\n      writeWord(exifBuffer.length + 5 + 2); // length is buffer + EXIF\\0 + length itself!\n      writeByte(0x45); // E\n      writeByte(0x78); // X\n      writeByte(0x69); // I\n      writeByte(0x66); // F\n      writeByte(0); // = \"EXIF\",'\\0'\n    }\n    for (var i = 0; i < exifBuffer.length; i++) {\n      writeByte(exifBuffer[i]);\n    }\n  }\n  function writeSOF0(width, height) {\n    writeWord(0xFFC0); // marker\n    writeWord(17); // length, truecolor YUV JPG\n    writeByte(8); // precision\n    writeWord(height);\n    writeWord(width);\n    writeByte(3); // nrofcomponents\n    writeByte(1); // IdY\n    writeByte(0x11); // HVY\n    writeByte(0); // QTY\n    writeByte(2); // IdU\n    writeByte(0x11); // HVU\n    writeByte(1); // QTU\n    writeByte(3); // IdV\n    writeByte(0x11); // HVV\n    writeByte(1); // QTV\n  }\n  function writeDQT() {\n    writeWord(0xFFDB); // marker\n    writeWord(132); // length\n    writeByte(0);\n    for (var i = 0; i < 64; i++) {\n      writeByte(YTable[i]);\n    }\n    writeByte(1);\n    for (var j = 0; j < 64; j++) {\n      writeByte(UVTable[j]);\n    }\n  }\n  function writeDHT() {\n    writeWord(0xFFC4); // marker\n    writeWord(0x01A2); // length\n\n    writeByte(0); // HTYDCinfo\n    for (var i = 0; i < 16; i++) {\n      writeByte(std_dc_luminance_nrcodes[i + 1]);\n    }\n    for (var j = 0; j <= 11; j++) {\n      writeByte(std_dc_luminance_values[j]);\n    }\n    writeByte(0x10); // HTYACinfo\n    for (var k = 0; k < 16; k++) {\n      writeByte(std_ac_luminance_nrcodes[k + 1]);\n    }\n    for (var l = 0; l <= 161; l++) {\n      writeByte(std_ac_luminance_values[l]);\n    }\n    writeByte(1); // HTUDCinfo\n    for (var m = 0; m < 16; m++) {\n      writeByte(std_dc_chrominance_nrcodes[m + 1]);\n    }\n    for (var n = 0; n <= 11; n++) {\n      writeByte(std_dc_chrominance_values[n]);\n    }\n    writeByte(0x11); // HTUACinfo\n    for (var o = 0; o < 16; o++) {\n      writeByte(std_ac_chrominance_nrcodes[o + 1]);\n    }\n    for (var p = 0; p <= 161; p++) {\n      writeByte(std_ac_chrominance_values[p]);\n    }\n  }\n  function writeCOM(comments) {\n    if (typeof comments === \"undefined\" || comments.constructor !== Array) return;\n    comments.forEach(e => {\n      if (typeof e !== \"string\") return;\n      writeWord(0xFFFE); // marker\n      var l = e.length;\n      writeWord(l + 2); // length itself as well\n      var i;\n      for (i = 0; i < l; i++) writeByte(e.charCodeAt(i));\n    });\n  }\n  function writeSOS() {\n    writeWord(0xFFDA); // marker\n    writeWord(12); // length\n    writeByte(3); // nrofcomponents\n    writeByte(1); // IdY\n    writeByte(0); // HTY\n    writeByte(2); // IdU\n    writeByte(0x11); // HTU\n    writeByte(3); // IdV\n    writeByte(0x11); // HTV\n    writeByte(0); // Ss\n    writeByte(0x3f); // Se\n    writeByte(0); // Bf\n  }\n  function processDU(CDU, fdtbl, DC, HTDC, HTAC) {\n    var EOB = HTAC[0x00];\n    var M16zeroes = HTAC[0xF0];\n    var pos;\n    var I16 = 16;\n    var I63 = 63;\n    var I64 = 64;\n    var DU_DCT = fDCTQuant(CDU, fdtbl);\n    //ZigZag reorder\n    for (var j = 0; j < I64; ++j) {\n      DU[ZigZag[j]] = DU_DCT[j];\n    }\n    var Diff = DU[0] - DC;\n    DC = DU[0];\n    //Encode DC\n    if (Diff == 0) {\n      writeBits(HTDC[0]); // Diff might be 0\n    } else {\n      pos = 32767 + Diff;\n      writeBits(HTDC[category[pos]]);\n      writeBits(bitcode[pos]);\n    }\n    //Encode ACs\n    var end0pos = 63; // was const... which is crazy\n    for (; end0pos > 0 && DU[end0pos] == 0; end0pos--) {}\n    ;\n    //end0pos = first element in reverse order !=0\n    if (end0pos == 0) {\n      writeBits(EOB);\n      return DC;\n    }\n    var i = 1;\n    var lng;\n    while (i <= end0pos) {\n      var startpos = i;\n      for (; DU[i] == 0 && i <= end0pos; ++i) {}\n      var nrzeroes = i - startpos;\n      if (nrzeroes >= I16) {\n        lng = nrzeroes >> 4;\n        for (var nrmarker = 1; nrmarker <= lng; ++nrmarker) writeBits(M16zeroes);\n        nrzeroes = nrzeroes & 0xF;\n      }\n      pos = 32767 + DU[i];\n      writeBits(HTAC[(nrzeroes << 4) + category[pos]]);\n      writeBits(bitcode[pos]);\n      i++;\n    }\n    if (end0pos != I63) {\n      writeBits(EOB);\n    }\n    return DC;\n  }\n  function initCharLookupTable() {\n    var sfcc = String.fromCharCode;\n    for (var i = 0; i < 256; i++) {\n      ///// ACHTUNG // 255\n      clt[i] = sfcc(i);\n    }\n  }\n  this.encode = function (image, quality)\n  // image data object\n  {\n    var time_start = new Date().getTime();\n    if (quality) setQuality(quality);\n\n    // Initialize bit writer\n    byteout = new Array();\n    bytenew = 0;\n    bytepos = 7;\n\n    // Add JPEG headers\n    writeWord(0xFFD8); // SOI\n    writeAPP0();\n    writeCOM(image.comments);\n    writeAPP1(image.exifBuffer);\n    writeDQT();\n    writeSOF0(image.width, image.height);\n    writeDHT();\n    writeSOS();\n\n    // Encode 8x8 macroblocks\n    var DCY = 0;\n    var DCU = 0;\n    var DCV = 0;\n    bytenew = 0;\n    bytepos = 7;\n    this.encode.displayName = \"_encode_\";\n    var imageData = image.data;\n    var width = image.width;\n    var height = image.height;\n    var quadWidth = width * 4;\n    var tripleWidth = width * 3;\n    var x,\n      y = 0;\n    var r, g, b;\n    var start, p, col, row, pos;\n    while (y < height) {\n      x = 0;\n      while (x < quadWidth) {\n        start = quadWidth * y + x;\n        p = start;\n        col = -1;\n        row = 0;\n        for (pos = 0; pos < 64; pos++) {\n          row = pos >> 3; // /8\n          col = (pos & 7) * 4; // %8\n          p = start + row * quadWidth + col;\n          if (y + row >= height) {\n            // padding bottom\n            p -= quadWidth * (y + 1 + row - height);\n          }\n          if (x + col >= quadWidth) {\n            // padding right\t\n            p -= x + col - quadWidth + 4;\n          }\n          r = imageData[p++];\n          g = imageData[p++];\n          b = imageData[p++];\n\n          /* // calculate YUV values dynamically\n          YDU[pos]=((( 0.29900)*r+( 0.58700)*g+( 0.11400)*b))-128; //-0x80\n          UDU[pos]=(((-0.16874)*r+(-0.33126)*g+( 0.50000)*b));\n          VDU[pos]=((( 0.50000)*r+(-0.41869)*g+(-0.08131)*b));\n          */\n\n          // use lookup table (slightly faster)\n          YDU[pos] = (RGB_YUV_TABLE[r] + RGB_YUV_TABLE[g + 256 >> 0] + RGB_YUV_TABLE[b + 512 >> 0] >> 16) - 128;\n          UDU[pos] = (RGB_YUV_TABLE[r + 768 >> 0] + RGB_YUV_TABLE[g + 1024 >> 0] + RGB_YUV_TABLE[b + 1280 >> 0] >> 16) - 128;\n          VDU[pos] = (RGB_YUV_TABLE[r + 1280 >> 0] + RGB_YUV_TABLE[g + 1536 >> 0] + RGB_YUV_TABLE[b + 1792 >> 0] >> 16) - 128;\n        }\n        DCY = processDU(YDU, fdtbl_Y, DCY, YDC_HT, YAC_HT);\n        DCU = processDU(UDU, fdtbl_UV, DCU, UVDC_HT, UVAC_HT);\n        DCV = processDU(VDU, fdtbl_UV, DCV, UVDC_HT, UVAC_HT);\n        x += 32;\n      }\n      y += 8;\n    }\n\n    ////////////////////////////////////////////////////////////////\n\n    // Do the bit alignment of the EOI marker\n    if (bytepos >= 0) {\n      var fillbits = [];\n      fillbits[1] = bytepos + 1;\n      fillbits[0] = (1 << bytepos + 1) - 1;\n      writeBits(fillbits);\n    }\n    writeWord(0xFFD9); //EOI\n\n    if (typeof module === 'undefined') return new Uint8Array(byteout);\n    return Buffer.from(byteout);\n    var jpegDataUri = 'data:image/jpeg;base64,' + btoa(byteout.join(''));\n    byteout = [];\n\n    // benchmarking\n    var duration = new Date().getTime() - time_start;\n    //console.log('Encoding time: '+ duration + 'ms');\n    //\n\n    return jpegDataUri;\n  };\n  function setQuality(quality) {\n    if (quality <= 0) {\n      quality = 1;\n    }\n    if (quality > 100) {\n      quality = 100;\n    }\n    if (currentQuality == quality) return; // don't recalc if unchanged\n\n    var sf = 0;\n    if (quality < 50) {\n      sf = Math.floor(5000 / quality);\n    } else {\n      sf = Math.floor(200 - quality * 2);\n    }\n    initQuantTables(sf);\n    currentQuality = quality;\n    //console.log('Quality set to: '+quality +'%');\n  }\n  function init() {\n    var time_start = new Date().getTime();\n    if (!quality) quality = 50;\n    // Create tables\n    initCharLookupTable();\n    initHuffmanTbl();\n    initCategoryNumber();\n    initRGBYUVTable();\n    setQuality(quality);\n    var duration = new Date().getTime() - time_start;\n    //console.log('Initialization '+ duration + 'ms');\n  }\n  init();\n}\n;\nif (typeof module !== 'undefined') {\n  module.exports = encode;\n} else if (typeof window !== 'undefined') {\n  window['jpeg-js'] = window['jpeg-js'] || {};\n  window['jpeg-js'].encode = encode;\n}\nfunction encode(imgData, qu) {\n  if (typeof qu === 'undefined') qu = 50;\n  var encoder = new JPEGEncoder(qu);\n  var data = encoder.encode(imgData, qu);\n  return {\n    data: data,\n    width: imgData.width,\n    height: imgData.height\n  };\n}\n\n// helper function to get the imageData of an existing image on the current page.\nfunction getImageDataFromImage(idOrElement) {\n  var theImg = typeof idOrElement == 'string' ? document.getElementById(idOrElement) : idOrElement;\n  var cvs = document.createElement('canvas');\n  cvs.width = theImg.width;\n  cvs.height = theImg.height;\n  var ctx = cvs.getContext(\"2d\");\n  ctx.drawImage(theImg, 0, 0);\n  return ctx.getImageData(0, 0, cvs.width, cvs.height);\n}", "/* -*- tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- /\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n/*\n   Copyright 2011 notmasteryet\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\n// - The JPEG specification can be found in the ITU CCITT Recommendation T.81\n//   (www.w3.org/Graphics/JPEG/itu-t81.pdf)\n// - The JFIF specification can be found in the JPEG File Interchange Format\n//   (www.w3.org/Graphics/JPEG/jfif3.pdf)\n// - The Adobe Application-Specific JPEG markers in the Supporting the DCT Filters\n//   in PostScript Level 2, Technical Note #5116\n//   (partners.adobe.com/public/developer/en/ps/sdk/5116.DCT_Filter.pdf)\n\nvar JpegImage = function jpegImage() {\n  \"use strict\";\n\n  var dctZigZag = new Int32Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017; // cos(pi/16)\n  var dctSin1 = 799; // sin(pi/16)\n  var dctCos3 = 3406; // cos(3*pi/16)\n  var dctSin3 = 2276; // sin(3*pi/16)\n  var dctCos6 = 1567; // cos(6*pi/16)\n  var dctSin6 = 3784; // sin(6*pi/16)\n  var dctSqrt2 = 5793; // sqrt(2)\n  var dctSqrt1d2 = 2896; // sqrt(2) / 2\n\n  function constructor() {}\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n      code = [],\n      i,\n      j,\n      length = 16;\n    while (length > 0 && !codeLengths[length - 1]) length--;\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n      q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          if (code.length === 0) throw new Error('Could not recreate Huffman Table');\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        // p here points to last code\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive, opts) {\n    var precision = frame.precision;\n    var samplesPerLine = frame.samplesPerLine;\n    var scanLines = frame.scanLines;\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var maxH = frame.maxH,\n      maxV = frame.maxV;\n    var startOffset = offset,\n      bitsData = 0,\n      bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData == 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          throw new Error(\"unexpected marker: \" + (bitsData << 8 | nextByte).toString(16));\n        }\n        // unstuff 0\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree,\n        bit;\n      while ((bit = readBit()) !== null) {\n        node = node[bit];\n        if (typeof node === 'number') return node;\n        if (typeof node !== 'object') throw new Error(\"invalid huffman sequence\");\n      }\n      return null;\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        var bit = readBit();\n        if (bit === null) return;\n        n = n << 1 | bit;\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      var n = receive(length);\n      if (n >= 1 << length - 1) return n;\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, zz) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      zz[0] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n          r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) break;\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        zz[z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, zz) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      zz[0] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, zz) {\n      zz[0] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, zz) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n        e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n          r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        zz[z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n      successiveACNextValue;\n    function decodeACSuccessive(component, zz) {\n      var k = spectralStart,\n        e = spectralEnd,\n        r = 0;\n      while (k <= e) {\n        var z = dctZigZag[k];\n        var direction = zz[z] < 0 ? -1 : 1;\n        switch (successiveACState) {\n          case 0:\n            // initial state\n            var rs = decodeHuffman(component.huffmanTableAC);\n            var s = rs & 15,\n              r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) throw new Error(\"invalid ACn encoding\");\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1: // skipping r zero items\n          case 2:\n            if (zz[z]) zz[z] += (readBit() << successive) * direction;else {\n              r--;\n              if (r === 0) successiveACState = successiveACState == 2 ? 3 : 0;\n            }\n            break;\n          case 3:\n            // set value for a zero item\n            if (zz[z]) zz[z] += (readBit() << successive) * direction;else {\n              zz[z] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            // eob\n            if (zz[z]) zz[z] += (readBit() << successive) * direction;\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) successiveACState = 0;\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      // If the block is missing and we're in tolerant mode, just skip it.\n      if (component.blocks[blockRow] === undefined && opts.tolerantDecoding) return;\n      decode(component, component.blocks[blockRow][blockCol]);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      // If the block is missing and we're in tolerant mode, just skip it.\n      if (component.blocks[blockRow] === undefined && opts.tolerantDecoding) return;\n      decode(component, component.blocks[blockRow][blockCol]);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;else decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n      marker;\n    var mcuExpected;\n    if (componentsLength == 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    if (!resetInterval) resetInterval = mcuExpected;\n    var h, v;\n    while (mcu < mcuExpected) {\n      // reset interval stuff\n      for (i = 0; i < componentsLength; i++) components[i].pred = 0;\n      eobrun = 0;\n      if (componentsLength == 1) {\n        component = components[0];\n        for (n = 0; n < resetInterval; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < resetInterval; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n\n          // If we've reached our expected MCU's, stop decoding\n          if (mcu === mcuExpected) break;\n        }\n      }\n      if (mcu === mcuExpected) {\n        // Skip trailing bytes at the end of the scan - until we reach the next marker\n        do {\n          if (data[offset] === 0xFF) {\n            if (data[offset + 1] !== 0x00) {\n              break;\n            }\n          }\n          offset += 1;\n        } while (offset < data.length - 2);\n      }\n\n      // find marker\n      bitsCount = 0;\n      marker = data[offset] << 8 | data[offset + 1];\n      if (marker < 0xFF00) {\n        throw new Error(\"marker was not found\");\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        // RSTx\n        offset += 2;\n      } else break;\n    }\n    return offset - startOffset;\n  }\n  function buildComponentData(frame, component) {\n    var lines = [];\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var samplesPerLine = blocksPerLine << 3;\n    // Only 1 used per invocation of this function and garbage collected after invocation, so no need to account for its memory footprint.\n    var R = new Int32Array(64),\n      r = new Uint8Array(64);\n\n    // A port of poppler's IDCT method which in turn is taken from:\n    //   Christoph Loeffler, Adriaan Ligtenberg, George S. Moschytz,\n    //   \"Practical Fast 1-D DCT Algorithms with 11 Multiplications\",\n    //   IEEE Intl. Conf. on Acoustics, Speech & Signal Processing, 1989,\n    //   988-991.\n    function quantizeAndInverse(zz, dataOut, dataIn) {\n      var qt = component.quantizationTable;\n      var v0, v1, v2, v3, v4, v5, v6, v7, t;\n      var p = dataIn;\n      var i;\n\n      // dequant\n      for (i = 0; i < 64; i++) p[i] = zz[i] * qt[i];\n\n      // inverse DCT on rows\n      for (i = 0; i < 8; ++i) {\n        var row = 8 * i;\n\n        // check for all-zero AC coefficients\n        if (p[1 + row] == 0 && p[2 + row] == 0 && p[3 + row] == 0 && p[4 + row] == 0 && p[5 + row] == 0 && p[6 + row] == 0 && p[7 + row] == 0) {\n          t = dctSqrt2 * p[0 + row] + 512 >> 10;\n          p[0 + row] = t;\n          p[1 + row] = t;\n          p[2 + row] = t;\n          p[3 + row] = t;\n          p[4 + row] = t;\n          p[5 + row] = t;\n          p[6 + row] = t;\n          p[7 + row] = t;\n          continue;\n        }\n\n        // stage 4\n        v0 = dctSqrt2 * p[0 + row] + 128 >> 8;\n        v1 = dctSqrt2 * p[4 + row] + 128 >> 8;\n        v2 = p[2 + row];\n        v3 = p[6 + row];\n        v4 = dctSqrt1d2 * (p[1 + row] - p[7 + row]) + 128 >> 8;\n        v7 = dctSqrt1d2 * (p[1 + row] + p[7 + row]) + 128 >> 8;\n        v5 = p[3 + row] << 4;\n        v6 = p[5 + row] << 4;\n\n        // stage 3\n        t = v0 - v1 + 1 >> 1;\n        v0 = v0 + v1 + 1 >> 1;\n        v1 = t;\n        t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n        v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n        v3 = t;\n        t = v4 - v6 + 1 >> 1;\n        v4 = v4 + v6 + 1 >> 1;\n        v6 = t;\n        t = v7 + v5 + 1 >> 1;\n        v5 = v7 - v5 + 1 >> 1;\n        v7 = t;\n\n        // stage 2\n        t = v0 - v3 + 1 >> 1;\n        v0 = v0 + v3 + 1 >> 1;\n        v3 = t;\n        t = v1 - v2 + 1 >> 1;\n        v1 = v1 + v2 + 1 >> 1;\n        v2 = t;\n        t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n        v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n        v7 = t;\n        t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n        v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n        v6 = t;\n\n        // stage 1\n        p[0 + row] = v0 + v7;\n        p[7 + row] = v0 - v7;\n        p[1 + row] = v1 + v6;\n        p[6 + row] = v1 - v6;\n        p[2 + row] = v2 + v5;\n        p[5 + row] = v2 - v5;\n        p[3 + row] = v3 + v4;\n        p[4 + row] = v3 - v4;\n      }\n\n      // inverse DCT on columns\n      for (i = 0; i < 8; ++i) {\n        var col = i;\n\n        // check for all-zero AC coefficients\n        if (p[1 * 8 + col] == 0 && p[2 * 8 + col] == 0 && p[3 * 8 + col] == 0 && p[4 * 8 + col] == 0 && p[5 * 8 + col] == 0 && p[6 * 8 + col] == 0 && p[7 * 8 + col] == 0) {\n          t = dctSqrt2 * dataIn[i + 0] + 8192 >> 14;\n          p[0 * 8 + col] = t;\n          p[1 * 8 + col] = t;\n          p[2 * 8 + col] = t;\n          p[3 * 8 + col] = t;\n          p[4 * 8 + col] = t;\n          p[5 * 8 + col] = t;\n          p[6 * 8 + col] = t;\n          p[7 * 8 + col] = t;\n          continue;\n        }\n\n        // stage 4\n        v0 = dctSqrt2 * p[0 * 8 + col] + 2048 >> 12;\n        v1 = dctSqrt2 * p[4 * 8 + col] + 2048 >> 12;\n        v2 = p[2 * 8 + col];\n        v3 = p[6 * 8 + col];\n        v4 = dctSqrt1d2 * (p[1 * 8 + col] - p[7 * 8 + col]) + 2048 >> 12;\n        v7 = dctSqrt1d2 * (p[1 * 8 + col] + p[7 * 8 + col]) + 2048 >> 12;\n        v5 = p[3 * 8 + col];\n        v6 = p[5 * 8 + col];\n\n        // stage 3\n        t = v0 - v1 + 1 >> 1;\n        v0 = v0 + v1 + 1 >> 1;\n        v1 = t;\n        t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n        v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n        v3 = t;\n        t = v4 - v6 + 1 >> 1;\n        v4 = v4 + v6 + 1 >> 1;\n        v6 = t;\n        t = v7 + v5 + 1 >> 1;\n        v5 = v7 - v5 + 1 >> 1;\n        v7 = t;\n\n        // stage 2\n        t = v0 - v3 + 1 >> 1;\n        v0 = v0 + v3 + 1 >> 1;\n        v3 = t;\n        t = v1 - v2 + 1 >> 1;\n        v1 = v1 + v2 + 1 >> 1;\n        v2 = t;\n        t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n        v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n        v7 = t;\n        t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n        v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n        v6 = t;\n\n        // stage 1\n        p[0 * 8 + col] = v0 + v7;\n        p[7 * 8 + col] = v0 - v7;\n        p[1 * 8 + col] = v1 + v6;\n        p[6 * 8 + col] = v1 - v6;\n        p[2 * 8 + col] = v2 + v5;\n        p[5 * 8 + col] = v2 - v5;\n        p[3 * 8 + col] = v3 + v4;\n        p[4 * 8 + col] = v3 - v4;\n      }\n\n      // convert to 8-bit integers\n      for (i = 0; i < 64; ++i) {\n        var sample = 128 + (p[i] + 8 >> 4);\n        dataOut[i] = sample < 0 ? 0 : sample > 0xFF ? 0xFF : sample;\n      }\n    }\n    requestMemoryAllocation(samplesPerLine * blocksPerColumn * 8);\n    var i, j;\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      var scanLine = blockRow << 3;\n      for (i = 0; i < 8; i++) lines.push(new Uint8Array(samplesPerLine));\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        quantizeAndInverse(component.blocks[blockRow][blockCol], r, R);\n        var offset = 0,\n          sample = blockCol << 3;\n        for (j = 0; j < 8; j++) {\n          var line = lines[scanLine + j];\n          for (i = 0; i < 8; i++) line[sample + i] = r[offset++];\n        }\n      }\n    }\n    return lines;\n  }\n  function clampTo8bit(a) {\n    return a < 0 ? 0 : a > 255 ? 255 : a;\n  }\n  constructor.prototype = {\n    load: function load(path) {\n      var xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", path, true);\n      xhr.responseType = \"arraybuffer\";\n      xhr.onload = function () {\n        // TODO catch parse error\n        var data = new Uint8Array(xhr.response || xhr.mozResponseArrayBuffer);\n        this.parse(data);\n        if (this.onload) this.onload();\n      }.bind(this);\n      xhr.send(null);\n    },\n    parse: function parse(data) {\n      var maxResolutionInPixels = this.opts.maxResolutionInMP * 1000 * 1000;\n      var offset = 0,\n        length = data.length;\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var array = data.subarray(offset, offset + length - 2);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        // According to the JPEG standard, the sampling factor must be between 1 and 4\n        // See https://github.com/libjpeg-turbo/libjpeg-turbo/blob/9abeff46d87bd201a952e276f3e4339556a403a3/libjpeg.txt#L1138-L1146\n        var maxH = 1,\n          maxV = 1;\n        var component, componentId;\n        for (componentId in frame.components) {\n          if (frame.components.hasOwnProperty(componentId)) {\n            component = frame.components[componentId];\n            if (maxH < component.h) maxH = component.h;\n            if (maxV < component.v) maxV = component.v;\n          }\n        }\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / maxV);\n        for (componentId in frame.components) {\n          if (frame.components.hasOwnProperty(componentId)) {\n            component = frame.components[componentId];\n            var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / maxH);\n            var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / maxV);\n            var blocksPerLineForMcu = mcusPerLine * component.h;\n            var blocksPerColumnForMcu = mcusPerColumn * component.v;\n            var blocksToAllocate = blocksPerColumnForMcu * blocksPerLineForMcu;\n            var blocks = [];\n\n            // Each block is a Int32Array of length 64 (4 x 64 = 256 bytes)\n            requestMemoryAllocation(blocksToAllocate * 256);\n            for (var i = 0; i < blocksPerColumnForMcu; i++) {\n              var row = [];\n              for (var j = 0; j < blocksPerLineForMcu; j++) row.push(new Int32Array(64));\n              blocks.push(row);\n            }\n            component.blocksPerLine = blocksPerLine;\n            component.blocksPerColumn = blocksPerColumn;\n            component.blocks = blocks;\n          }\n        }\n        frame.maxH = maxH;\n        frame.maxV = maxV;\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var jfif = null;\n      var adobe = null;\n      var pixels = null;\n      var frame, resetInterval;\n      var quantizationTables = [],\n        frames = [];\n      var huffmanTablesAC = [],\n        huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      var malformedDataOffset = -1;\n      this.comments = [];\n      if (fileMarker != 0xFFD8) {\n        // SOI (Start of Image)\n        throw new Error(\"SOI not found\");\n      }\n      fileMarker = readUint16();\n      while (fileMarker != 0xFFD9) {\n        // EOI (End of image)\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFF00:\n            break;\n          case 0xFFE0: // APP0 (Application Specific)\n          case 0xFFE1: // APP1\n          case 0xFFE2: // APP2\n          case 0xFFE3: // APP3\n          case 0xFFE4: // APP4\n          case 0xFFE5: // APP5\n          case 0xFFE6: // APP6\n          case 0xFFE7: // APP7\n          case 0xFFE8: // APP8\n          case 0xFFE9: // APP9\n          case 0xFFEA: // APP10\n          case 0xFFEB: // APP11\n          case 0xFFEC: // APP12\n          case 0xFFED: // APP13\n          case 0xFFEE: // APP14\n          case 0xFFEF: // APP15\n          case 0xFFFE:\n            // COM (Comment)\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFFE) {\n              var comment = String.fromCharCode.apply(null, appData);\n              this.comments.push(comment);\n            }\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                // 'JFIF\\x00'\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            // TODO APP1 - Exif\n            if (fileMarker === 0xFFE1) {\n              if (appData[0] === 0x45 && appData[1] === 0x78 && appData[2] === 0x69 && appData[3] === 0x66 && appData[4] === 0) {\n                // 'EXIF\\x00'\n                this.exifBuffer = appData.subarray(5, appData.length);\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65 && appData[5] === 0) {\n                // 'Adobe\\x00'\n                adobe = {\n                  version: appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            // DQT (Define Quantization Tables)\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              requestMemoryAllocation(64 * 4);\n              var tableData = new Int32Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                // 8 bit values\n                for (j = 0; j < 64; j++) {\n                  var z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                //16 bit\n                for (j = 0; j < 64; j++) {\n                  var z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else throw new Error(\"DQT: invalid table spec\");\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0: // SOF0 (Start of Frame, Baseline DCT)\n          case 0xFFC1: // SOF1 (Start of Frame, Extended DCT)\n          case 0xFFC2:\n            // SOF2 (Start of Frame, Progressive DCT)\n            readUint16(); // skip data length\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            frame.scanLines = readUint16();\n            frame.samplesPerLine = readUint16();\n            frame.components = {};\n            frame.componentsOrder = [];\n            var pixelsInFrame = frame.scanLines * frame.samplesPerLine;\n            if (pixelsInFrame > maxResolutionInPixels) {\n              var exceededAmount = Math.ceil((pixelsInFrame - maxResolutionInPixels) / 1e6);\n              throw new Error(`maxResolutionInMP limit exceeded by ${exceededAmount}MP`);\n            }\n            var componentsCount = data[offset++],\n              componentId;\n            var maxH = 0,\n              maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              var qId = data[offset + 2];\n              if (h <= 0 || v <= 0) {\n                throw new Error('Invalid sampling factor, expected values above 0');\n              }\n              frame.componentsOrder.push(componentId);\n              frame.components[componentId] = {\n                h: h,\n                v: v,\n                quantizationIdx: qId\n              };\n              offset += 3;\n            }\n            prepareComponents(frame);\n            frames.push(frame);\n            break;\n          case 0xFFC4:\n            // DHT (Define Huffman Tables)\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              requestMemoryAllocation(16 + codeLengthSum);\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) huffmanValues[j] = data[offset];\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            // DRI (Define Restart Interval)\n            readUint16(); // skip data length\n            resetInterval = readUint16();\n            break;\n          case 0xFFDC:\n            // Number of Lines marker\n            readUint16(); // skip data length\n            readUint16(); // Ignore this data since it represents the image height\n            break;\n          case 0xFFDA:\n            // SOS (Start of Scan)\n            var scanLength = readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n              component;\n            for (i = 0; i < selectorsCount; i++) {\n              component = frame.components[data[offset++]];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15, this.opts);\n            offset += processed;\n            break;\n          case 0xFFFF:\n            // Fill bytes\n            if (data[offset] !== 0xFF) {\n              // Avoid skipping a valid marker.\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] == 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              // could be incorrect encoding -- last 0xFF byte of the previous\n              // block was eaten by the encoder\n              offset -= 3;\n              break;\n            } else if (fileMarker === 0xE0 || fileMarker == 0xE1) {\n              // Recover from malformed APP1 markers popular in some phone models.\n              // See https://github.com/eugeneware/jpeg-js/issues/82\n              if (malformedDataOffset !== -1) {\n                throw new Error(`first unknown JPEG marker at offset ${malformedDataOffset.toString(16)}, second unknown JPEG marker ${fileMarker.toString(16)} at offset ${(offset - 1).toString(16)}`);\n              }\n              malformedDataOffset = offset - 1;\n              const nextOffset = readUint16();\n              if (data[offset + nextOffset - 2] === 0xFF) {\n                offset += nextOffset - 2;\n                break;\n              }\n            }\n            throw new Error(\"unknown JPEG marker \" + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      if (frames.length != 1) throw new Error(\"only single frame JPEGs supported\");\n\n      // set each frame's components quantization table\n      for (var i = 0; i < frames.length; i++) {\n        var cp = frames[i].components;\n        for (var j in cp) {\n          cp[j].quantizationTable = quantizationTables[cp[j].quantizationIdx];\n          delete cp[j].quantizationIdx;\n        }\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (var i = 0; i < frame.componentsOrder.length; i++) {\n        var component = frame.components[frame.componentsOrder[i]];\n        this.components.push({\n          lines: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV\n        });\n      }\n    },\n    getData: function getData(width, height) {\n      var scaleX = this.width / width,\n        scaleY = this.height / height;\n      var component1, component2, component3, component4;\n      var component1Line, component2Line, component3Line, component4Line;\n      var x, y;\n      var offset = 0;\n      var Y, Cb, Cr, K, C, M, Ye, R, G, B;\n      var colorTransform;\n      var dataLength = width * height * this.components.length;\n      requestMemoryAllocation(dataLength);\n      var data = new Uint8Array(dataLength);\n      switch (this.components.length) {\n        case 1:\n          component1 = this.components[0];\n          for (y = 0; y < height; y++) {\n            component1Line = component1.lines[0 | y * component1.scaleY * scaleY];\n            for (x = 0; x < width; x++) {\n              Y = component1Line[0 | x * component1.scaleX * scaleX];\n              data[offset++] = Y;\n            }\n          }\n          break;\n        case 2:\n          // PDF might compress two component data in custom colorspace\n          component1 = this.components[0];\n          component2 = this.components[1];\n          for (y = 0; y < height; y++) {\n            component1Line = component1.lines[0 | y * component1.scaleY * scaleY];\n            component2Line = component2.lines[0 | y * component2.scaleY * scaleY];\n            for (x = 0; x < width; x++) {\n              Y = component1Line[0 | x * component1.scaleX * scaleX];\n              data[offset++] = Y;\n              Y = component2Line[0 | x * component2.scaleX * scaleX];\n              data[offset++] = Y;\n            }\n          }\n          break;\n        case 3:\n          // The default transform for three components is true\n          colorTransform = true;\n          // The adobe transform marker overrides any previous setting\n          if (this.adobe && this.adobe.transformCode) colorTransform = true;else if (typeof this.opts.colorTransform !== 'undefined') colorTransform = !!this.opts.colorTransform;\n          component1 = this.components[0];\n          component2 = this.components[1];\n          component3 = this.components[2];\n          for (y = 0; y < height; y++) {\n            component1Line = component1.lines[0 | y * component1.scaleY * scaleY];\n            component2Line = component2.lines[0 | y * component2.scaleY * scaleY];\n            component3Line = component3.lines[0 | y * component3.scaleY * scaleY];\n            for (x = 0; x < width; x++) {\n              if (!colorTransform) {\n                R = component1Line[0 | x * component1.scaleX * scaleX];\n                G = component2Line[0 | x * component2.scaleX * scaleX];\n                B = component3Line[0 | x * component3.scaleX * scaleX];\n              } else {\n                Y = component1Line[0 | x * component1.scaleX * scaleX];\n                Cb = component2Line[0 | x * component2.scaleX * scaleX];\n                Cr = component3Line[0 | x * component3.scaleX * scaleX];\n                R = clampTo8bit(Y + 1.402 * (Cr - 128));\n                G = clampTo8bit(Y - 0.3441363 * (Cb - 128) - 0.71413636 * (Cr - 128));\n                B = clampTo8bit(Y + 1.772 * (Cb - 128));\n              }\n              data[offset++] = R;\n              data[offset++] = G;\n              data[offset++] = B;\n            }\n          }\n          break;\n        case 4:\n          if (!this.adobe) throw new Error('Unsupported color mode (4 components)');\n          // The default transform for four components is false\n          colorTransform = false;\n          // The adobe transform marker overrides any previous setting\n          if (this.adobe && this.adobe.transformCode) colorTransform = true;else if (typeof this.opts.colorTransform !== 'undefined') colorTransform = !!this.opts.colorTransform;\n          component1 = this.components[0];\n          component2 = this.components[1];\n          component3 = this.components[2];\n          component4 = this.components[3];\n          for (y = 0; y < height; y++) {\n            component1Line = component1.lines[0 | y * component1.scaleY * scaleY];\n            component2Line = component2.lines[0 | y * component2.scaleY * scaleY];\n            component3Line = component3.lines[0 | y * component3.scaleY * scaleY];\n            component4Line = component4.lines[0 | y * component4.scaleY * scaleY];\n            for (x = 0; x < width; x++) {\n              if (!colorTransform) {\n                C = component1Line[0 | x * component1.scaleX * scaleX];\n                M = component2Line[0 | x * component2.scaleX * scaleX];\n                Ye = component3Line[0 | x * component3.scaleX * scaleX];\n                K = component4Line[0 | x * component4.scaleX * scaleX];\n              } else {\n                Y = component1Line[0 | x * component1.scaleX * scaleX];\n                Cb = component2Line[0 | x * component2.scaleX * scaleX];\n                Cr = component3Line[0 | x * component3.scaleX * scaleX];\n                K = component4Line[0 | x * component4.scaleX * scaleX];\n                C = 255 - clampTo8bit(Y + 1.402 * (Cr - 128));\n                M = 255 - clampTo8bit(Y - 0.3441363 * (Cb - 128) - 0.71413636 * (Cr - 128));\n                Ye = 255 - clampTo8bit(Y + 1.772 * (Cb - 128));\n              }\n              data[offset++] = 255 - C;\n              data[offset++] = 255 - M;\n              data[offset++] = 255 - Ye;\n              data[offset++] = 255 - K;\n            }\n          }\n          break;\n        default:\n          throw new Error('Unsupported color mode');\n      }\n      return data;\n    },\n    copyToImageData: function copyToImageData(imageData, formatAsRGBA) {\n      var width = imageData.width,\n        height = imageData.height;\n      var imageDataArray = imageData.data;\n      var data = this.getData(width, height);\n      var i = 0,\n        j = 0,\n        x,\n        y;\n      var Y, K, C, M, R, G, B;\n      switch (this.components.length) {\n        case 1:\n          for (y = 0; y < height; y++) {\n            for (x = 0; x < width; x++) {\n              Y = data[i++];\n              imageDataArray[j++] = Y;\n              imageDataArray[j++] = Y;\n              imageDataArray[j++] = Y;\n              if (formatAsRGBA) {\n                imageDataArray[j++] = 255;\n              }\n            }\n          }\n          break;\n        case 3:\n          for (y = 0; y < height; y++) {\n            for (x = 0; x < width; x++) {\n              R = data[i++];\n              G = data[i++];\n              B = data[i++];\n              imageDataArray[j++] = R;\n              imageDataArray[j++] = G;\n              imageDataArray[j++] = B;\n              if (formatAsRGBA) {\n                imageDataArray[j++] = 255;\n              }\n            }\n          }\n          break;\n        case 4:\n          for (y = 0; y < height; y++) {\n            for (x = 0; x < width; x++) {\n              C = data[i++];\n              M = data[i++];\n              Y = data[i++];\n              K = data[i++];\n              R = 255 - clampTo8bit(C * (1 - K / 255) + K);\n              G = 255 - clampTo8bit(M * (1 - K / 255) + K);\n              B = 255 - clampTo8bit(Y * (1 - K / 255) + K);\n              imageDataArray[j++] = R;\n              imageDataArray[j++] = G;\n              imageDataArray[j++] = B;\n              if (formatAsRGBA) {\n                imageDataArray[j++] = 255;\n              }\n            }\n          }\n          break;\n        default:\n          throw new Error('Unsupported color mode');\n      }\n    }\n  };\n\n  // We cap the amount of memory used by jpeg-js to avoid unexpected OOMs from untrusted content.\n  var totalBytesAllocated = 0;\n  var maxMemoryUsageBytes = 0;\n  function requestMemoryAllocation(increaseAmount = 0) {\n    var totalMemoryImpactBytes = totalBytesAllocated + increaseAmount;\n    if (totalMemoryImpactBytes > maxMemoryUsageBytes) {\n      var exceededAmount = Math.ceil((totalMemoryImpactBytes - maxMemoryUsageBytes) / 1024 / 1024);\n      throw new Error(`maxMemoryUsageInMB limit exceeded by at least ${exceededAmount}MB`);\n    }\n    totalBytesAllocated = totalMemoryImpactBytes;\n  }\n  constructor.resetMaxMemoryUsage = function (maxMemoryUsageBytes_) {\n    totalBytesAllocated = 0;\n    maxMemoryUsageBytes = maxMemoryUsageBytes_;\n  };\n  constructor.getBytesAllocated = function () {\n    return totalBytesAllocated;\n  };\n  constructor.requestMemoryAllocation = requestMemoryAllocation;\n  return constructor;\n}();\nif (typeof module !== 'undefined') {\n  module.exports = decode;\n} else if (typeof window !== 'undefined') {\n  window['jpeg-js'] = window['jpeg-js'] || {};\n  window['jpeg-js'].decode = decode;\n}\nfunction decode(jpegData, userOpts = {}) {\n  var defaultOpts = {\n    // \"undefined\" means \"Choose whether to transform colors based on the image’s color model.\"\n    colorTransform: undefined,\n    useTArray: false,\n    formatAsRGBA: true,\n    tolerantDecoding: true,\n    maxResolutionInMP: 100,\n    // Don't decode more than 100 megapixels\n    maxMemoryUsageInMB: 512 // Don't decode if memory footprint is more than 512MB\n  };\n  var opts = {\n    ...defaultOpts,\n    ...userOpts\n  };\n  var arr = new Uint8Array(jpegData);\n  var decoder = new JpegImage();\n  decoder.opts = opts;\n  // If this constructor ever supports async decoding this will need to be done differently.\n  // Until then, treating as singleton limit is fine.\n  JpegImage.resetMaxMemoryUsage(opts.maxMemoryUsageInMB * 1024 * 1024);\n  decoder.parse(arr);\n  var channels = opts.formatAsRGBA ? 4 : 3;\n  var bytesNeeded = decoder.width * decoder.height * channels;\n  try {\n    JpegImage.requestMemoryAllocation(bytesNeeded);\n    var image = {\n      width: decoder.width,\n      height: decoder.height,\n      exifBuffer: decoder.exifBuffer,\n      data: opts.useTArray ? new Uint8Array(bytesNeeded) : Buffer.alloc(bytesNeeded)\n    };\n    if (decoder.comments.length > 0) {\n      image[\"comments\"] = decoder.comments;\n    }\n  } catch (err) {\n    if (err instanceof RangeError) {\n      throw new Error(\"Could not allocate enough memory for the image. \" + \"Required: \" + bytesNeeded);\n    }\n    if (err instanceof ReferenceError) {\n      if (err.message === \"Buffer is not defined\") {\n        throw new Error(\"Buffer is not globally defined in this environment. \" + \"Consider setting useTArray to true\");\n      }\n    }\n    throw err;\n  }\n  decoder.copyToImageData(image, opts.formatAsRGBA);\n  return image;\n}", "var encode = require('./lib/encoder'),\n  decode = require('./lib/decoder');\nmodule.exports = {\n  encode: encode,\n  decode: decode\n};", "\"use strict\";\n\nlet util = require(\"util\");\nlet Stream = require(\"stream\");\nlet ChunkStream = module.exports = function () {\n  Stream.call(this);\n  this._buffers = [];\n  this._buffered = 0;\n  this._reads = [];\n  this._paused = false;\n  this._encoding = \"utf8\";\n  this.writable = true;\n};\nutil.inherits(ChunkStream, Stream);\nChunkStream.prototype.read = function (length, callback) {\n  this._reads.push({\n    length: Math.abs(length),\n    // if length < 0 then at most this length\n    allowLess: length < 0,\n    func: callback\n  });\n  process.nextTick(function () {\n    this._process();\n\n    // its paused and there is not enought data then ask for more\n    if (this._paused && this._reads && this._reads.length > 0) {\n      this._paused = false;\n      this.emit(\"drain\");\n    }\n  }.bind(this));\n};\nChunkStream.prototype.write = function (data, encoding) {\n  if (!this.writable) {\n    this.emit(\"error\", new Error(\"Stream not writable\"));\n    return false;\n  }\n  let dataBuffer;\n  if (Buffer.isBuffer(data)) {\n    dataBuffer = data;\n  } else {\n    dataBuffer = Buffer.from(data, encoding || this._encoding);\n  }\n  this._buffers.push(dataBuffer);\n  this._buffered += dataBuffer.length;\n  this._process();\n\n  // ok if there are no more read requests\n  if (this._reads && this._reads.length === 0) {\n    this._paused = true;\n  }\n  return this.writable && !this._paused;\n};\nChunkStream.prototype.end = function (data, encoding) {\n  if (data) {\n    this.write(data, encoding);\n  }\n  this.writable = false;\n\n  // already destroyed\n  if (!this._buffers) {\n    return;\n  }\n\n  // enqueue or handle end\n  if (this._buffers.length === 0) {\n    this._end();\n  } else {\n    this._buffers.push(null);\n    this._process();\n  }\n};\nChunkStream.prototype.destroySoon = ChunkStream.prototype.end;\nChunkStream.prototype._end = function () {\n  if (this._reads.length > 0) {\n    this.emit(\"error\", new Error(\"Unexpected end of input\"));\n  }\n  this.destroy();\n};\nChunkStream.prototype.destroy = function () {\n  if (!this._buffers) {\n    return;\n  }\n  this.writable = false;\n  this._reads = null;\n  this._buffers = null;\n  this.emit(\"close\");\n};\nChunkStream.prototype._processReadAllowingLess = function (read) {\n  // ok there is any data so that we can satisfy this request\n  this._reads.shift(); // == read\n\n  // first we need to peek into first buffer\n  let smallerBuf = this._buffers[0];\n\n  // ok there is more data than we need\n  if (smallerBuf.length > read.length) {\n    this._buffered -= read.length;\n    this._buffers[0] = smallerBuf.slice(read.length);\n    read.func.call(this, smallerBuf.slice(0, read.length));\n  } else {\n    // ok this is less than maximum length so use it all\n    this._buffered -= smallerBuf.length;\n    this._buffers.shift(); // == smallerBuf\n\n    read.func.call(this, smallerBuf);\n  }\n};\nChunkStream.prototype._processRead = function (read) {\n  this._reads.shift(); // == read\n\n  let pos = 0;\n  let count = 0;\n  let data = Buffer.alloc(read.length);\n\n  // create buffer for all data\n  while (pos < read.length) {\n    let buf = this._buffers[count++];\n    let len = Math.min(buf.length, read.length - pos);\n    buf.copy(data, pos, 0, len);\n    pos += len;\n\n    // last buffer wasn't used all so just slice it and leave\n    if (len !== buf.length) {\n      this._buffers[--count] = buf.slice(len);\n    }\n  }\n\n  // remove all used buffers\n  if (count > 0) {\n    this._buffers.splice(0, count);\n  }\n  this._buffered -= read.length;\n  read.func.call(this, data);\n};\nChunkStream.prototype._process = function () {\n  try {\n    // as long as there is any data and read requests\n    while (this._buffered > 0 && this._reads && this._reads.length > 0) {\n      let read = this._reads[0];\n\n      // read any data (but no more than length)\n      if (read.allowLess) {\n        this._processReadAllowingLess(read);\n      } else if (this._buffered >= read.length) {\n        // ok we can meet some expectations\n\n        this._processRead(read);\n      } else {\n        // not enought data to satisfy first request in queue\n        // so we need to wait for more\n        break;\n      }\n    }\n    if (this._buffers && !this.writable) {\n      this._end();\n    }\n  } catch (ex) {\n    this.emit(\"error\", ex);\n  }\n};", "\"use strict\";\n\n// Adam 7\n//   0 1 2 3 4 5 6 7\n// 0 x 6 4 6 x 6 4 6\n// 1 7 7 7 7 7 7 7 7\n// 2 5 6 5 6 5 6 5 6\n// 3 7 7 7 7 7 7 7 7\n// 4 3 6 4 6 3 6 4 6\n// 5 7 7 7 7 7 7 7 7\n// 6 5 6 5 6 5 6 5 6\n// 7 7 7 7 7 7 7 7 7\nlet imagePasses = [{\n  // pass 1 - 1px\n  x: [0],\n  y: [0]\n}, {\n  // pass 2 - 1px\n  x: [4],\n  y: [0]\n}, {\n  // pass 3 - 2px\n  x: [0, 4],\n  y: [4]\n}, {\n  // pass 4 - 4px\n  x: [2, 6],\n  y: [0, 4]\n}, {\n  // pass 5 - 8px\n  x: [0, 2, 4, 6],\n  y: [2, 6]\n}, {\n  // pass 6 - 16px\n  x: [1, 3, 5, 7],\n  y: [0, 2, 4, 6]\n}, {\n  // pass 7 - 32px\n  x: [0, 1, 2, 3, 4, 5, 6, 7],\n  y: [1, 3, 5, 7]\n}];\nexports.getImagePasses = function (width, height) {\n  let images = [];\n  let xLeftOver = width % 8;\n  let yLeftOver = height % 8;\n  let xRepeats = (width - xLeftOver) / 8;\n  let yRepeats = (height - yLeftOver) / 8;\n  for (let i = 0; i < imagePasses.length; i++) {\n    let pass = imagePasses[i];\n    let passWidth = xRepeats * pass.x.length;\n    let passHeight = yRepeats * pass.y.length;\n    for (let j = 0; j < pass.x.length; j++) {\n      if (pass.x[j] < xLeftOver) {\n        passWidth++;\n      } else {\n        break;\n      }\n    }\n    for (let j = 0; j < pass.y.length; j++) {\n      if (pass.y[j] < yLeftOver) {\n        passHeight++;\n      } else {\n        break;\n      }\n    }\n    if (passWidth > 0 && passHeight > 0) {\n      images.push({\n        width: passWidth,\n        height: passHeight,\n        index: i\n      });\n    }\n  }\n  return images;\n};\nexports.getInterlaceIterator = function (width) {\n  return function (x, y, pass) {\n    let outerXLeftOver = x % imagePasses[pass].x.length;\n    let outerX = (x - outerXLeftOver) / imagePasses[pass].x.length * 8 + imagePasses[pass].x[outerXLeftOver];\n    let outerYLeftOver = y % imagePasses[pass].y.length;\n    let outerY = (y - outerYLeftOver) / imagePasses[pass].y.length * 8 + imagePasses[pass].y[outerYLeftOver];\n    return outerX * 4 + outerY * width * 4;\n  };\n};", "\"use strict\";\n\nmodule.exports = function paethPredictor(left, above, upLeft) {\n  let paeth = left + above - upLeft;\n  let pLeft = Math.abs(paeth - left);\n  let pAbove = Math.abs(paeth - above);\n  let pUpLeft = Math.abs(paeth - upLeft);\n  if (pLeft <= pAbove && pLeft <= pUpLeft) {\n    return left;\n  }\n  if (pAbove <= pUpLeft) {\n    return above;\n  }\n  return upLeft;\n};", "\"use strict\";\n\nlet interlaceUtils = require(\"./interlace\");\nlet paethPredictor = require(\"./paeth-predictor\");\nfunction getByteWidth(width, bpp, depth) {\n  let byteWidth = width * bpp;\n  if (depth !== 8) {\n    byteWidth = Math.ceil(byteWidth / (8 / depth));\n  }\n  return byteWidth;\n}\nlet Filter = module.exports = function (bitmapInfo, dependencies) {\n  let width = bitmapInfo.width;\n  let height = bitmapInfo.height;\n  let interlace = bitmapInfo.interlace;\n  let bpp = bitmapInfo.bpp;\n  let depth = bitmapInfo.depth;\n  this.read = dependencies.read;\n  this.write = dependencies.write;\n  this.complete = dependencies.complete;\n  this._imageIndex = 0;\n  this._images = [];\n  if (interlace) {\n    let passes = interlaceUtils.getImagePasses(width, height);\n    for (let i = 0; i < passes.length; i++) {\n      this._images.push({\n        byteWidth: getByteWidth(passes[i].width, bpp, depth),\n        height: passes[i].height,\n        lineIndex: 0\n      });\n    }\n  } else {\n    this._images.push({\n      byteWidth: getByteWidth(width, bpp, depth),\n      height: height,\n      lineIndex: 0\n    });\n  }\n\n  // when filtering the line we look at the pixel to the left\n  // the spec also says it is done on a byte level regardless of the number of pixels\n  // so if the depth is byte compatible (8 or 16) we subtract the bpp in order to compare back\n  // a pixel rather than just a different byte part. However if we are sub byte, we ignore.\n  if (depth === 8) {\n    this._xComparison = bpp;\n  } else if (depth === 16) {\n    this._xComparison = bpp * 2;\n  } else {\n    this._xComparison = 1;\n  }\n};\nFilter.prototype.start = function () {\n  this.read(this._images[this._imageIndex].byteWidth + 1, this._reverseFilterLine.bind(this));\n};\nFilter.prototype._unFilterType1 = function (rawData, unfilteredLine, byteWidth) {\n  let xComparison = this._xComparison;\n  let xBiggerThan = xComparison - 1;\n  for (let x = 0; x < byteWidth; x++) {\n    let rawByte = rawData[1 + x];\n    let f1Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;\n    unfilteredLine[x] = rawByte + f1Left;\n  }\n};\nFilter.prototype._unFilterType2 = function (rawData, unfilteredLine, byteWidth) {\n  let lastLine = this._lastLine;\n  for (let x = 0; x < byteWidth; x++) {\n    let rawByte = rawData[1 + x];\n    let f2Up = lastLine ? lastLine[x] : 0;\n    unfilteredLine[x] = rawByte + f2Up;\n  }\n};\nFilter.prototype._unFilterType3 = function (rawData, unfilteredLine, byteWidth) {\n  let xComparison = this._xComparison;\n  let xBiggerThan = xComparison - 1;\n  let lastLine = this._lastLine;\n  for (let x = 0; x < byteWidth; x++) {\n    let rawByte = rawData[1 + x];\n    let f3Up = lastLine ? lastLine[x] : 0;\n    let f3Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;\n    let f3Add = Math.floor((f3Left + f3Up) / 2);\n    unfilteredLine[x] = rawByte + f3Add;\n  }\n};\nFilter.prototype._unFilterType4 = function (rawData, unfilteredLine, byteWidth) {\n  let xComparison = this._xComparison;\n  let xBiggerThan = xComparison - 1;\n  let lastLine = this._lastLine;\n  for (let x = 0; x < byteWidth; x++) {\n    let rawByte = rawData[1 + x];\n    let f4Up = lastLine ? lastLine[x] : 0;\n    let f4Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;\n    let f4UpLeft = x > xBiggerThan && lastLine ? lastLine[x - xComparison] : 0;\n    let f4Add = paethPredictor(f4Left, f4Up, f4UpLeft);\n    unfilteredLine[x] = rawByte + f4Add;\n  }\n};\nFilter.prototype._reverseFilterLine = function (rawData) {\n  let filter = rawData[0];\n  let unfilteredLine;\n  let currentImage = this._images[this._imageIndex];\n  let byteWidth = currentImage.byteWidth;\n  if (filter === 0) {\n    unfilteredLine = rawData.slice(1, byteWidth + 1);\n  } else {\n    unfilteredLine = Buffer.alloc(byteWidth);\n    switch (filter) {\n      case 1:\n        this._unFilterType1(rawData, unfilteredLine, byteWidth);\n        break;\n      case 2:\n        this._unFilterType2(rawData, unfilteredLine, byteWidth);\n        break;\n      case 3:\n        this._unFilterType3(rawData, unfilteredLine, byteWidth);\n        break;\n      case 4:\n        this._unFilterType4(rawData, unfilteredLine, byteWidth);\n        break;\n      default:\n        throw new Error(\"Unrecognised filter type - \" + filter);\n    }\n  }\n  this.write(unfilteredLine);\n  currentImage.lineIndex++;\n  if (currentImage.lineIndex >= currentImage.height) {\n    this._lastLine = null;\n    this._imageIndex++;\n    currentImage = this._images[this._imageIndex];\n  } else {\n    this._lastLine = unfilteredLine;\n  }\n  if (currentImage) {\n    // read, using the byte width that may be from the new current image\n    this.read(currentImage.byteWidth + 1, this._reverseFilterLine.bind(this));\n  } else {\n    this._lastLine = null;\n    this.complete();\n  }\n};", "\"use strict\";\n\nlet util = require(\"util\");\nlet ChunkStream = require(\"./chunkstream\");\nlet Filter = require(\"./filter-parse\");\nlet FilterAsync = module.exports = function (bitmapInfo) {\n  ChunkStream.call(this);\n  let buffers = [];\n  let that = this;\n  this._filter = new Filter(bitmapInfo, {\n    read: this.read.bind(this),\n    write: function (buffer) {\n      buffers.push(buffer);\n    },\n    complete: function () {\n      that.emit(\"complete\", Buffer.concat(buffers));\n    }\n  });\n  this._filter.start();\n};\nutil.inherits(FilterAsync, ChunkStream);", "\"use strict\";\n\nmodule.exports = {\n  PNG_SIGNATURE: [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a],\n  TYPE_IHDR: 0x49484452,\n  TYPE_IEND: 0x49454e44,\n  TYPE_IDAT: 0x49444154,\n  TYPE_PLTE: 0x504c5445,\n  TYPE_tRNS: 0x74524e53,\n  // eslint-disable-line camelcase\n  TYPE_gAMA: 0x67414d41,\n  // eslint-disable-line camelcase\n\n  // color-type bits\n  COLORTYPE_GRAYSCALE: 0,\n  COLORTYPE_PALETTE: 1,\n  COLORTYPE_COLOR: 2,\n  COLORTYPE_ALPHA: 4,\n  // e.g. grayscale and alpha\n\n  // color-type combinations\n  COLORTYPE_PALETTE_COLOR: 3,\n  COLORTYPE_COLOR_ALPHA: 6,\n  COLORTYPE_TO_BPP_MAP: {\n    0: 1,\n    2: 3,\n    3: 1,\n    4: 2,\n    6: 4\n  },\n  GAMMA_DIVISION: 100000\n};", "\"use strict\";\n\nlet crcTable = [];\n(function () {\n  for (let i = 0; i < 256; i++) {\n    let currentCrc = i;\n    for (let j = 0; j < 8; j++) {\n      if (currentCrc & 1) {\n        currentCrc = 0xedb88320 ^ currentCrc >>> 1;\n      } else {\n        currentCrc = currentCrc >>> 1;\n      }\n    }\n    crcTable[i] = currentCrc;\n  }\n})();\nlet CrcCalculator = module.exports = function () {\n  this._crc = -1;\n};\nCrcCalculator.prototype.write = function (data) {\n  for (let i = 0; i < data.length; i++) {\n    this._crc = crcTable[(this._crc ^ data[i]) & 0xff] ^ this._crc >>> 8;\n  }\n  return true;\n};\nCrcCalculator.prototype.crc32 = function () {\n  return this._crc ^ -1;\n};\nCrcCalculator.crc32 = function (buf) {\n  let crc = -1;\n  for (let i = 0; i < buf.length; i++) {\n    crc = crcTable[(crc ^ buf[i]) & 0xff] ^ crc >>> 8;\n  }\n  return crc ^ -1;\n};", "\"use strict\";\n\nlet constants = require(\"./constants\");\nlet CrcCalculator = require(\"./crc\");\nlet Parser = module.exports = function (options, dependencies) {\n  this._options = options;\n  options.checkCRC = options.checkCRC !== false;\n  this._hasIHDR = false;\n  this._hasIEND = false;\n  this._emittedHeadersFinished = false;\n\n  // input flags/metadata\n  this._palette = [];\n  this._colorType = 0;\n  this._chunks = {};\n  this._chunks[constants.TYPE_IHDR] = this._handleIHDR.bind(this);\n  this._chunks[constants.TYPE_IEND] = this._handleIEND.bind(this);\n  this._chunks[constants.TYPE_IDAT] = this._handleIDAT.bind(this);\n  this._chunks[constants.TYPE_PLTE] = this._handlePLTE.bind(this);\n  this._chunks[constants.TYPE_tRNS] = this._handleTRNS.bind(this);\n  this._chunks[constants.TYPE_gAMA] = this._handleGAMA.bind(this);\n  this.read = dependencies.read;\n  this.error = dependencies.error;\n  this.metadata = dependencies.metadata;\n  this.gamma = dependencies.gamma;\n  this.transColor = dependencies.transColor;\n  this.palette = dependencies.palette;\n  this.parsed = dependencies.parsed;\n  this.inflateData = dependencies.inflateData;\n  this.finished = dependencies.finished;\n  this.simpleTransparency = dependencies.simpleTransparency;\n  this.headersFinished = dependencies.headersFinished || function () {};\n};\nParser.prototype.start = function () {\n  this.read(constants.PNG_SIGNATURE.length, this._parseSignature.bind(this));\n};\nParser.prototype._parseSignature = function (data) {\n  let signature = constants.PNG_SIGNATURE;\n  for (let i = 0; i < signature.length; i++) {\n    if (data[i] !== signature[i]) {\n      this.error(new Error(\"Invalid file signature\"));\n      return;\n    }\n  }\n  this.read(8, this._parseChunkBegin.bind(this));\n};\nParser.prototype._parseChunkBegin = function (data) {\n  // chunk content length\n  let length = data.readUInt32BE(0);\n\n  // chunk type\n  let type = data.readUInt32BE(4);\n  let name = \"\";\n  for (let i = 4; i < 8; i++) {\n    name += String.fromCharCode(data[i]);\n  }\n\n  //console.log('chunk ', name, length);\n\n  // chunk flags\n  let ancillary = Boolean(data[4] & 0x20); // or critical\n  //    priv = Boolean(data[5] & 0x20), // or public\n  //    safeToCopy = Boolean(data[7] & 0x20); // or unsafe\n\n  if (!this._hasIHDR && type !== constants.TYPE_IHDR) {\n    this.error(new Error(\"Expected IHDR on beggining\"));\n    return;\n  }\n  this._crc = new CrcCalculator();\n  this._crc.write(Buffer.from(name));\n  if (this._chunks[type]) {\n    return this._chunks[type](length);\n  }\n  if (!ancillary) {\n    this.error(new Error(\"Unsupported critical chunk type \" + name));\n    return;\n  }\n  this.read(length + 4, this._skipChunk.bind(this));\n};\nParser.prototype._skipChunk = function /*data*/\n() {\n  this.read(8, this._parseChunkBegin.bind(this));\n};\nParser.prototype._handleChunkEnd = function () {\n  this.read(4, this._parseChunkEnd.bind(this));\n};\nParser.prototype._parseChunkEnd = function (data) {\n  let fileCrc = data.readInt32BE(0);\n  let calcCrc = this._crc.crc32();\n\n  // check CRC\n  if (this._options.checkCRC && calcCrc !== fileCrc) {\n    this.error(new Error(\"Crc error - \" + fileCrc + \" - \" + calcCrc));\n    return;\n  }\n  if (!this._hasIEND) {\n    this.read(8, this._parseChunkBegin.bind(this));\n  }\n};\nParser.prototype._handleIHDR = function (length) {\n  this.read(length, this._parseIHDR.bind(this));\n};\nParser.prototype._parseIHDR = function (data) {\n  this._crc.write(data);\n  let width = data.readUInt32BE(0);\n  let height = data.readUInt32BE(4);\n  let depth = data[8];\n  let colorType = data[9]; // bits: 1 palette, 2 color, 4 alpha\n  let compr = data[10];\n  let filter = data[11];\n  let interlace = data[12];\n\n  // console.log('    width', width, 'height', height,\n  //     'depth', depth, 'colorType', colorType,\n  //     'compr', compr, 'filter', filter, 'interlace', interlace\n  // );\n\n  if (depth !== 8 && depth !== 4 && depth !== 2 && depth !== 1 && depth !== 16) {\n    this.error(new Error(\"Unsupported bit depth \" + depth));\n    return;\n  }\n  if (!(colorType in constants.COLORTYPE_TO_BPP_MAP)) {\n    this.error(new Error(\"Unsupported color type\"));\n    return;\n  }\n  if (compr !== 0) {\n    this.error(new Error(\"Unsupported compression method\"));\n    return;\n  }\n  if (filter !== 0) {\n    this.error(new Error(\"Unsupported filter method\"));\n    return;\n  }\n  if (interlace !== 0 && interlace !== 1) {\n    this.error(new Error(\"Unsupported interlace method\"));\n    return;\n  }\n  this._colorType = colorType;\n  let bpp = constants.COLORTYPE_TO_BPP_MAP[this._colorType];\n  this._hasIHDR = true;\n  this.metadata({\n    width: width,\n    height: height,\n    depth: depth,\n    interlace: Boolean(interlace),\n    palette: Boolean(colorType & constants.COLORTYPE_PALETTE),\n    color: Boolean(colorType & constants.COLORTYPE_COLOR),\n    alpha: Boolean(colorType & constants.COLORTYPE_ALPHA),\n    bpp: bpp,\n    colorType: colorType\n  });\n  this._handleChunkEnd();\n};\nParser.prototype._handlePLTE = function (length) {\n  this.read(length, this._parsePLTE.bind(this));\n};\nParser.prototype._parsePLTE = function (data) {\n  this._crc.write(data);\n  let entries = Math.floor(data.length / 3);\n  // console.log('Palette:', entries);\n\n  for (let i = 0; i < entries; i++) {\n    this._palette.push([data[i * 3], data[i * 3 + 1], data[i * 3 + 2], 0xff]);\n  }\n  this.palette(this._palette);\n  this._handleChunkEnd();\n};\nParser.prototype._handleTRNS = function (length) {\n  this.simpleTransparency();\n  this.read(length, this._parseTRNS.bind(this));\n};\nParser.prototype._parseTRNS = function (data) {\n  this._crc.write(data);\n\n  // palette\n  if (this._colorType === constants.COLORTYPE_PALETTE_COLOR) {\n    if (this._palette.length === 0) {\n      this.error(new Error(\"Transparency chunk must be after palette\"));\n      return;\n    }\n    if (data.length > this._palette.length) {\n      this.error(new Error(\"More transparent colors than palette size\"));\n      return;\n    }\n    for (let i = 0; i < data.length; i++) {\n      this._palette[i][3] = data[i];\n    }\n    this.palette(this._palette);\n  }\n\n  // for colorType 0 (grayscale) and 2 (rgb)\n  // there might be one gray/color defined as transparent\n  if (this._colorType === constants.COLORTYPE_GRAYSCALE) {\n    // grey, 2 bytes\n    this.transColor([data.readUInt16BE(0)]);\n  }\n  if (this._colorType === constants.COLORTYPE_COLOR) {\n    this.transColor([data.readUInt16BE(0), data.readUInt16BE(2), data.readUInt16BE(4)]);\n  }\n  this._handleChunkEnd();\n};\nParser.prototype._handleGAMA = function (length) {\n  this.read(length, this._parseGAMA.bind(this));\n};\nParser.prototype._parseGAMA = function (data) {\n  this._crc.write(data);\n  this.gamma(data.readUInt32BE(0) / constants.GAMMA_DIVISION);\n  this._handleChunkEnd();\n};\nParser.prototype._handleIDAT = function (length) {\n  if (!this._emittedHeadersFinished) {\n    this._emittedHeadersFinished = true;\n    this.headersFinished();\n  }\n  this.read(-length, this._parseIDAT.bind(this, length));\n};\nParser.prototype._parseIDAT = function (length, data) {\n  this._crc.write(data);\n  if (this._colorType === constants.COLORTYPE_PALETTE_COLOR && this._palette.length === 0) {\n    throw new Error(\"Expected palette not found\");\n  }\n  this.inflateData(data);\n  let leftOverLength = length - data.length;\n  if (leftOverLength > 0) {\n    this._handleIDAT(leftOverLength);\n  } else {\n    this._handleChunkEnd();\n  }\n};\nParser.prototype._handleIEND = function (length) {\n  this.read(length, this._parseIEND.bind(this));\n};\nParser.prototype._parseIEND = function (data) {\n  this._crc.write(data);\n  this._hasIEND = true;\n  this._handleChunkEnd();\n  if (this.finished) {\n    this.finished();\n  }\n};", "\"use strict\";\n\nlet interlaceUtils = require(\"./interlace\");\nlet pixelBppMapper = [\n// 0 - dummy entry\nfunction () {},\n// 1 - L\n// 0: 0, 1: 0, 2: 0, 3: 0xff\nfunction (pxData, data, pxPos, rawPos) {\n  if (rawPos === data.length) {\n    throw new Error(\"Ran out of data\");\n  }\n  let pixel = data[rawPos];\n  pxData[pxPos] = pixel;\n  pxData[pxPos + 1] = pixel;\n  pxData[pxPos + 2] = pixel;\n  pxData[pxPos + 3] = 0xff;\n},\n// 2 - LA\n// 0: 0, 1: 0, 2: 0, 3: 1\nfunction (pxData, data, pxPos, rawPos) {\n  if (rawPos + 1 >= data.length) {\n    throw new Error(\"Ran out of data\");\n  }\n  let pixel = data[rawPos];\n  pxData[pxPos] = pixel;\n  pxData[pxPos + 1] = pixel;\n  pxData[pxPos + 2] = pixel;\n  pxData[pxPos + 3] = data[rawPos + 1];\n},\n// 3 - RGB\n// 0: 0, 1: 1, 2: 2, 3: 0xff\nfunction (pxData, data, pxPos, rawPos) {\n  if (rawPos + 2 >= data.length) {\n    throw new Error(\"Ran out of data\");\n  }\n  pxData[pxPos] = data[rawPos];\n  pxData[pxPos + 1] = data[rawPos + 1];\n  pxData[pxPos + 2] = data[rawPos + 2];\n  pxData[pxPos + 3] = 0xff;\n},\n// 4 - RGBA\n// 0: 0, 1: 1, 2: 2, 3: 3\nfunction (pxData, data, pxPos, rawPos) {\n  if (rawPos + 3 >= data.length) {\n    throw new Error(\"Ran out of data\");\n  }\n  pxData[pxPos] = data[rawPos];\n  pxData[pxPos + 1] = data[rawPos + 1];\n  pxData[pxPos + 2] = data[rawPos + 2];\n  pxData[pxPos + 3] = data[rawPos + 3];\n}];\nlet pixelBppCustomMapper = [\n// 0 - dummy entry\nfunction () {},\n// 1 - L\n// 0: 0, 1: 0, 2: 0, 3: 0xff\nfunction (pxData, pixelData, pxPos, maxBit) {\n  let pixel = pixelData[0];\n  pxData[pxPos] = pixel;\n  pxData[pxPos + 1] = pixel;\n  pxData[pxPos + 2] = pixel;\n  pxData[pxPos + 3] = maxBit;\n},\n// 2 - LA\n// 0: 0, 1: 0, 2: 0, 3: 1\nfunction (pxData, pixelData, pxPos) {\n  let pixel = pixelData[0];\n  pxData[pxPos] = pixel;\n  pxData[pxPos + 1] = pixel;\n  pxData[pxPos + 2] = pixel;\n  pxData[pxPos + 3] = pixelData[1];\n},\n// 3 - RGB\n// 0: 0, 1: 1, 2: 2, 3: 0xff\nfunction (pxData, pixelData, pxPos, maxBit) {\n  pxData[pxPos] = pixelData[0];\n  pxData[pxPos + 1] = pixelData[1];\n  pxData[pxPos + 2] = pixelData[2];\n  pxData[pxPos + 3] = maxBit;\n},\n// 4 - RGBA\n// 0: 0, 1: 1, 2: 2, 3: 3\nfunction (pxData, pixelData, pxPos) {\n  pxData[pxPos] = pixelData[0];\n  pxData[pxPos + 1] = pixelData[1];\n  pxData[pxPos + 2] = pixelData[2];\n  pxData[pxPos + 3] = pixelData[3];\n}];\nfunction bitRetriever(data, depth) {\n  let leftOver = [];\n  let i = 0;\n  function split() {\n    if (i === data.length) {\n      throw new Error(\"Ran out of data\");\n    }\n    let byte = data[i];\n    i++;\n    let byte8, byte7, byte6, byte5, byte4, byte3, byte2, byte1;\n    switch (depth) {\n      default:\n        throw new Error(\"unrecognised depth\");\n      case 16:\n        byte2 = data[i];\n        i++;\n        leftOver.push((byte << 8) + byte2);\n        break;\n      case 4:\n        byte2 = byte & 0x0f;\n        byte1 = byte >> 4;\n        leftOver.push(byte1, byte2);\n        break;\n      case 2:\n        byte4 = byte & 3;\n        byte3 = byte >> 2 & 3;\n        byte2 = byte >> 4 & 3;\n        byte1 = byte >> 6 & 3;\n        leftOver.push(byte1, byte2, byte3, byte4);\n        break;\n      case 1:\n        byte8 = byte & 1;\n        byte7 = byte >> 1 & 1;\n        byte6 = byte >> 2 & 1;\n        byte5 = byte >> 3 & 1;\n        byte4 = byte >> 4 & 1;\n        byte3 = byte >> 5 & 1;\n        byte2 = byte >> 6 & 1;\n        byte1 = byte >> 7 & 1;\n        leftOver.push(byte1, byte2, byte3, byte4, byte5, byte6, byte7, byte8);\n        break;\n    }\n  }\n  return {\n    get: function (count) {\n      while (leftOver.length < count) {\n        split();\n      }\n      let returner = leftOver.slice(0, count);\n      leftOver = leftOver.slice(count);\n      return returner;\n    },\n    resetAfterLine: function () {\n      leftOver.length = 0;\n    },\n    end: function () {\n      if (i !== data.length) {\n        throw new Error(\"extra data found\");\n      }\n    }\n  };\n}\nfunction mapImage8Bit(image, pxData, getPxPos, bpp, data, rawPos) {\n  // eslint-disable-line max-params\n  let imageWidth = image.width;\n  let imageHeight = image.height;\n  let imagePass = image.index;\n  for (let y = 0; y < imageHeight; y++) {\n    for (let x = 0; x < imageWidth; x++) {\n      let pxPos = getPxPos(x, y, imagePass);\n      pixelBppMapper[bpp](pxData, data, pxPos, rawPos);\n      rawPos += bpp; //eslint-disable-line no-param-reassign\n    }\n  }\n  return rawPos;\n}\nfunction mapImageCustomBit(image, pxData, getPxPos, bpp, bits, maxBit) {\n  // eslint-disable-line max-params\n  let imageWidth = image.width;\n  let imageHeight = image.height;\n  let imagePass = image.index;\n  for (let y = 0; y < imageHeight; y++) {\n    for (let x = 0; x < imageWidth; x++) {\n      let pixelData = bits.get(bpp);\n      let pxPos = getPxPos(x, y, imagePass);\n      pixelBppCustomMapper[bpp](pxData, pixelData, pxPos, maxBit);\n    }\n    bits.resetAfterLine();\n  }\n}\nexports.dataToBitMap = function (data, bitmapInfo) {\n  let width = bitmapInfo.width;\n  let height = bitmapInfo.height;\n  let depth = bitmapInfo.depth;\n  let bpp = bitmapInfo.bpp;\n  let interlace = bitmapInfo.interlace;\n  let bits;\n  if (depth !== 8) {\n    bits = bitRetriever(data, depth);\n  }\n  let pxData;\n  if (depth <= 8) {\n    pxData = Buffer.alloc(width * height * 4);\n  } else {\n    pxData = new Uint16Array(width * height * 4);\n  }\n  let maxBit = Math.pow(2, depth) - 1;\n  let rawPos = 0;\n  let images;\n  let getPxPos;\n  if (interlace) {\n    images = interlaceUtils.getImagePasses(width, height);\n    getPxPos = interlaceUtils.getInterlaceIterator(width, height);\n  } else {\n    let nonInterlacedPxPos = 0;\n    getPxPos = function () {\n      let returner = nonInterlacedPxPos;\n      nonInterlacedPxPos += 4;\n      return returner;\n    };\n    images = [{\n      width: width,\n      height: height\n    }];\n  }\n  for (let imageIndex = 0; imageIndex < images.length; imageIndex++) {\n    if (depth === 8) {\n      rawPos = mapImage8Bit(images[imageIndex], pxData, getPxPos, bpp, data, rawPos);\n    } else {\n      mapImageCustomBit(images[imageIndex], pxData, getPxPos, bpp, bits, maxBit);\n    }\n  }\n  if (depth === 8) {\n    if (rawPos !== data.length) {\n      throw new Error(\"extra data found\");\n    }\n  } else {\n    bits.end();\n  }\n  return pxData;\n};", "\"use strict\";\n\nfunction dePalette(indata, outdata, width, height, palette) {\n  let pxPos = 0;\n  // use values from palette\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      let color = palette[indata[pxPos]];\n      if (!color) {\n        throw new Error(\"index \" + indata[pxPos] + \" not in palette\");\n      }\n      for (let i = 0; i < 4; i++) {\n        outdata[pxPos + i] = color[i];\n      }\n      pxPos += 4;\n    }\n  }\n}\nfunction replaceTransparentColor(indata, outdata, width, height, transColor) {\n  let pxPos = 0;\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      let makeTrans = false;\n      if (transColor.length === 1) {\n        if (transColor[0] === indata[pxPos]) {\n          makeTrans = true;\n        }\n      } else if (transColor[0] === indata[pxPos] && transColor[1] === indata[pxPos + 1] && transColor[2] === indata[pxPos + 2]) {\n        makeTrans = true;\n      }\n      if (makeTrans) {\n        for (let i = 0; i < 4; i++) {\n          outdata[pxPos + i] = 0;\n        }\n      }\n      pxPos += 4;\n    }\n  }\n}\nfunction scaleDepth(indata, outdata, width, height, depth) {\n  let maxOutSample = 255;\n  let maxInSample = Math.pow(2, depth) - 1;\n  let pxPos = 0;\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      for (let i = 0; i < 4; i++) {\n        outdata[pxPos + i] = Math.floor(indata[pxPos + i] * maxOutSample / maxInSample + 0.5);\n      }\n      pxPos += 4;\n    }\n  }\n}\nmodule.exports = function (indata, imageData, skipRescale = false) {\n  let depth = imageData.depth;\n  let width = imageData.width;\n  let height = imageData.height;\n  let colorType = imageData.colorType;\n  let transColor = imageData.transColor;\n  let palette = imageData.palette;\n  let outdata = indata; // only different for 16 bits\n\n  if (colorType === 3) {\n    // paletted\n    dePalette(indata, outdata, width, height, palette);\n  } else {\n    if (transColor) {\n      replaceTransparentColor(indata, outdata, width, height, transColor);\n    }\n    // if it needs scaling\n    if (depth !== 8 && !skipRescale) {\n      // if we need to change the buffer size\n      if (depth === 16) {\n        outdata = Buffer.alloc(width * height * 4);\n      }\n      scaleDepth(indata, outdata, width, height, depth);\n    }\n  }\n  return outdata;\n};", "\"use strict\";\n\nlet util = require(\"util\");\nlet zlib = require(\"zlib\");\nlet ChunkStream = require(\"./chunkstream\");\nlet FilterAsync = require(\"./filter-parse-async\");\nlet Parser = require(\"./parser\");\nlet bitmapper = require(\"./bitmapper\");\nlet formatNormaliser = require(\"./format-normaliser\");\nlet ParserAsync = module.exports = function (options) {\n  ChunkStream.call(this);\n  this._parser = new Parser(options, {\n    read: this.read.bind(this),\n    error: this._handleError.bind(this),\n    metadata: this._handleMetaData.bind(this),\n    gamma: this.emit.bind(this, \"gamma\"),\n    palette: this._handlePalette.bind(this),\n    transColor: this._handleTransColor.bind(this),\n    finished: this._finished.bind(this),\n    inflateData: this._inflateData.bind(this),\n    simpleTransparency: this._simpleTransparency.bind(this),\n    headersFinished: this._headersFinished.bind(this)\n  });\n  this._options = options;\n  this.writable = true;\n  this._parser.start();\n};\nutil.inherits(ParserAsync, ChunkStream);\nParserAsync.prototype._handleError = function (err) {\n  this.emit(\"error\", err);\n  this.writable = false;\n  this.destroy();\n  if (this._inflate && this._inflate.destroy) {\n    this._inflate.destroy();\n  }\n  if (this._filter) {\n    this._filter.destroy();\n    // For backward compatibility with Node 7 and below.\n    // Suppress errors due to _inflate calling write() even after\n    // it's destroy()'ed.\n    this._filter.on(\"error\", function () {});\n  }\n  this.errord = true;\n};\nParserAsync.prototype._inflateData = function (data) {\n  if (!this._inflate) {\n    if (this._bitmapInfo.interlace) {\n      this._inflate = zlib.createInflate();\n      this._inflate.on(\"error\", this.emit.bind(this, \"error\"));\n      this._filter.on(\"complete\", this._complete.bind(this));\n      this._inflate.pipe(this._filter);\n    } else {\n      let rowSize = (this._bitmapInfo.width * this._bitmapInfo.bpp * this._bitmapInfo.depth + 7 >> 3) + 1;\n      let imageSize = rowSize * this._bitmapInfo.height;\n      let chunkSize = Math.max(imageSize, zlib.Z_MIN_CHUNK);\n      this._inflate = zlib.createInflate({\n        chunkSize: chunkSize\n      });\n      let leftToInflate = imageSize;\n      let emitError = this.emit.bind(this, \"error\");\n      this._inflate.on(\"error\", function (err) {\n        if (!leftToInflate) {\n          return;\n        }\n        emitError(err);\n      });\n      this._filter.on(\"complete\", this._complete.bind(this));\n      let filterWrite = this._filter.write.bind(this._filter);\n      this._inflate.on(\"data\", function (chunk) {\n        if (!leftToInflate) {\n          return;\n        }\n        if (chunk.length > leftToInflate) {\n          chunk = chunk.slice(0, leftToInflate);\n        }\n        leftToInflate -= chunk.length;\n        filterWrite(chunk);\n      });\n      this._inflate.on(\"end\", this._filter.end.bind(this._filter));\n    }\n  }\n  this._inflate.write(data);\n};\nParserAsync.prototype._handleMetaData = function (metaData) {\n  this._metaData = metaData;\n  this._bitmapInfo = Object.create(metaData);\n  this._filter = new FilterAsync(this._bitmapInfo);\n};\nParserAsync.prototype._handleTransColor = function (transColor) {\n  this._bitmapInfo.transColor = transColor;\n};\nParserAsync.prototype._handlePalette = function (palette) {\n  this._bitmapInfo.palette = palette;\n};\nParserAsync.prototype._simpleTransparency = function () {\n  this._metaData.alpha = true;\n};\nParserAsync.prototype._headersFinished = function () {\n  // Up until this point, we don't know if we have a tRNS chunk (alpha)\n  // so we can't emit metadata any earlier\n  this.emit(\"metadata\", this._metaData);\n};\nParserAsync.prototype._finished = function () {\n  if (this.errord) {\n    return;\n  }\n  if (!this._inflate) {\n    this.emit(\"error\", \"No Inflate block\");\n  } else {\n    // no more data to inflate\n    this._inflate.end();\n  }\n};\nParserAsync.prototype._complete = function (filteredData) {\n  if (this.errord) {\n    return;\n  }\n  let normalisedBitmapData;\n  try {\n    let bitmapData = bitmapper.dataToBitMap(filteredData, this._bitmapInfo);\n    normalisedBitmapData = formatNormaliser(bitmapData, this._bitmapInfo, this._options.skipRescale);\n    bitmapData = null;\n  } catch (ex) {\n    this._handleError(ex);\n    return;\n  }\n  this.emit(\"parsed\", normalisedBitmapData);\n};", "\"use strict\";\n\nlet constants = require(\"./constants\");\nmodule.exports = function (dataIn, width, height, options) {\n  let outHasAlpha = [constants.COLORTYPE_COLOR_ALPHA, constants.COLORTYPE_ALPHA].indexOf(options.colorType) !== -1;\n  if (options.colorType === options.inputColorType) {\n    let bigEndian = function () {\n      let buffer = new ArrayBuffer(2);\n      new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n      // Int16Array uses the platform's endianness.\n      return new Int16Array(buffer)[0] !== 256;\n    }();\n    // If no need to convert to grayscale and alpha is present/absent in both, take a fast route\n    if (options.bitDepth === 8 || options.bitDepth === 16 && bigEndian) {\n      return dataIn;\n    }\n  }\n\n  // map to a UInt16 array if data is 16bit, fix endianness below\n  let data = options.bitDepth !== 16 ? dataIn : new Uint16Array(dataIn.buffer);\n  let maxValue = 255;\n  let inBpp = constants.COLORTYPE_TO_BPP_MAP[options.inputColorType];\n  if (inBpp === 4 && !options.inputHasAlpha) {\n    inBpp = 3;\n  }\n  let outBpp = constants.COLORTYPE_TO_BPP_MAP[options.colorType];\n  if (options.bitDepth === 16) {\n    maxValue = 65535;\n    outBpp *= 2;\n  }\n  let outData = Buffer.alloc(width * height * outBpp);\n  let inIndex = 0;\n  let outIndex = 0;\n  let bgColor = options.bgColor || {};\n  if (bgColor.red === undefined) {\n    bgColor.red = maxValue;\n  }\n  if (bgColor.green === undefined) {\n    bgColor.green = maxValue;\n  }\n  if (bgColor.blue === undefined) {\n    bgColor.blue = maxValue;\n  }\n  function getRGBA() {\n    let red;\n    let green;\n    let blue;\n    let alpha = maxValue;\n    switch (options.inputColorType) {\n      case constants.COLORTYPE_COLOR_ALPHA:\n        alpha = data[inIndex + 3];\n        red = data[inIndex];\n        green = data[inIndex + 1];\n        blue = data[inIndex + 2];\n        break;\n      case constants.COLORTYPE_COLOR:\n        red = data[inIndex];\n        green = data[inIndex + 1];\n        blue = data[inIndex + 2];\n        break;\n      case constants.COLORTYPE_ALPHA:\n        alpha = data[inIndex + 1];\n        red = data[inIndex];\n        green = red;\n        blue = red;\n        break;\n      case constants.COLORTYPE_GRAYSCALE:\n        red = data[inIndex];\n        green = red;\n        blue = red;\n        break;\n      default:\n        throw new Error(\"input color type:\" + options.inputColorType + \" is not supported at present\");\n    }\n    if (options.inputHasAlpha) {\n      if (!outHasAlpha) {\n        alpha /= maxValue;\n        red = Math.min(Math.max(Math.round((1 - alpha) * bgColor.red + alpha * red), 0), maxValue);\n        green = Math.min(Math.max(Math.round((1 - alpha) * bgColor.green + alpha * green), 0), maxValue);\n        blue = Math.min(Math.max(Math.round((1 - alpha) * bgColor.blue + alpha * blue), 0), maxValue);\n      }\n    }\n    return {\n      red: red,\n      green: green,\n      blue: blue,\n      alpha: alpha\n    };\n  }\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      let rgba = getRGBA(data, inIndex);\n      switch (options.colorType) {\n        case constants.COLORTYPE_COLOR_ALPHA:\n        case constants.COLORTYPE_COLOR:\n          if (options.bitDepth === 8) {\n            outData[outIndex] = rgba.red;\n            outData[outIndex + 1] = rgba.green;\n            outData[outIndex + 2] = rgba.blue;\n            if (outHasAlpha) {\n              outData[outIndex + 3] = rgba.alpha;\n            }\n          } else {\n            outData.writeUInt16BE(rgba.red, outIndex);\n            outData.writeUInt16BE(rgba.green, outIndex + 2);\n            outData.writeUInt16BE(rgba.blue, outIndex + 4);\n            if (outHasAlpha) {\n              outData.writeUInt16BE(rgba.alpha, outIndex + 6);\n            }\n          }\n          break;\n        case constants.COLORTYPE_ALPHA:\n        case constants.COLORTYPE_GRAYSCALE:\n          {\n            // Convert to grayscale and alpha\n            let grayscale = (rgba.red + rgba.green + rgba.blue) / 3;\n            if (options.bitDepth === 8) {\n              outData[outIndex] = grayscale;\n              if (outHasAlpha) {\n                outData[outIndex + 1] = rgba.alpha;\n              }\n            } else {\n              outData.writeUInt16BE(grayscale, outIndex);\n              if (outHasAlpha) {\n                outData.writeUInt16BE(rgba.alpha, outIndex + 2);\n              }\n            }\n            break;\n          }\n        default:\n          throw new Error(\"unrecognised color Type \" + options.colorType);\n      }\n      inIndex += inBpp;\n      outIndex += outBpp;\n    }\n  }\n  return outData;\n};", "\"use strict\";\n\nlet paethPredictor = require(\"./paeth-predictor\");\nfunction filterNone(pxData, pxPos, byteWidth, rawData, rawPos) {\n  for (let x = 0; x < byteWidth; x++) {\n    rawData[rawPos + x] = pxData[pxPos + x];\n  }\n}\nfunction filterSumNone(pxData, pxPos, byteWidth) {\n  let sum = 0;\n  let length = pxPos + byteWidth;\n  for (let i = pxPos; i < length; i++) {\n    sum += Math.abs(pxData[i]);\n  }\n  return sum;\n}\nfunction filterSub(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n  for (let x = 0; x < byteWidth; x++) {\n    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    let val = pxData[pxPos + x] - left;\n    rawData[rawPos + x] = val;\n  }\n}\nfunction filterSumSub(pxData, pxPos, byteWidth, bpp) {\n  let sum = 0;\n  for (let x = 0; x < byteWidth; x++) {\n    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    let val = pxData[pxPos + x] - left;\n    sum += Math.abs(val);\n  }\n  return sum;\n}\nfunction filterUp(pxData, pxPos, byteWidth, rawData, rawPos) {\n  for (let x = 0; x < byteWidth; x++) {\n    let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    let val = pxData[pxPos + x] - up;\n    rawData[rawPos + x] = val;\n  }\n}\nfunction filterSumUp(pxData, pxPos, byteWidth) {\n  let sum = 0;\n  let length = pxPos + byteWidth;\n  for (let x = pxPos; x < length; x++) {\n    let up = pxPos > 0 ? pxData[x - byteWidth] : 0;\n    let val = pxData[x] - up;\n    sum += Math.abs(val);\n  }\n  return sum;\n}\nfunction filterAvg(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n  for (let x = 0; x < byteWidth; x++) {\n    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    let val = pxData[pxPos + x] - (left + up >> 1);\n    rawData[rawPos + x] = val;\n  }\n}\nfunction filterSumAvg(pxData, pxPos, byteWidth, bpp) {\n  let sum = 0;\n  for (let x = 0; x < byteWidth; x++) {\n    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    let val = pxData[pxPos + x] - (left + up >> 1);\n    sum += Math.abs(val);\n  }\n  return sum;\n}\nfunction filterPaeth(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n  for (let x = 0; x < byteWidth; x++) {\n    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    let upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n    let val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n    rawData[rawPos + x] = val;\n  }\n}\nfunction filterSumPaeth(pxData, pxPos, byteWidth, bpp) {\n  let sum = 0;\n  for (let x = 0; x < byteWidth; x++) {\n    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    let upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n    let val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n    sum += Math.abs(val);\n  }\n  return sum;\n}\nlet filters = {\n  0: filterNone,\n  1: filterSub,\n  2: filterUp,\n  3: filterAvg,\n  4: filterPaeth\n};\nlet filterSums = {\n  0: filterSumNone,\n  1: filterSumSub,\n  2: filterSumUp,\n  3: filterSumAvg,\n  4: filterSumPaeth\n};\nmodule.exports = function (pxData, width, height, options, bpp) {\n  let filterTypes;\n  if (!(\"filterType\" in options) || options.filterType === -1) {\n    filterTypes = [0, 1, 2, 3, 4];\n  } else if (typeof options.filterType === \"number\") {\n    filterTypes = [options.filterType];\n  } else {\n    throw new Error(\"unrecognised filter types\");\n  }\n  if (options.bitDepth === 16) {\n    bpp *= 2;\n  }\n  let byteWidth = width * bpp;\n  let rawPos = 0;\n  let pxPos = 0;\n  let rawData = Buffer.alloc((byteWidth + 1) * height);\n  let sel = filterTypes[0];\n  for (let y = 0; y < height; y++) {\n    if (filterTypes.length > 1) {\n      // find best filter for this line (with lowest sum of values)\n      let min = Infinity;\n      for (let i = 0; i < filterTypes.length; i++) {\n        let sum = filterSums[filterTypes[i]](pxData, pxPos, byteWidth, bpp);\n        if (sum < min) {\n          sel = filterTypes[i];\n          min = sum;\n        }\n      }\n    }\n    rawData[rawPos] = sel;\n    rawPos++;\n    filters[sel](pxData, pxPos, byteWidth, rawData, rawPos, bpp);\n    rawPos += byteWidth;\n    pxPos += byteWidth;\n  }\n  return rawData;\n};", "\"use strict\";\n\nlet constants = require(\"./constants\");\nlet CrcStream = require(\"./crc\");\nlet bitPacker = require(\"./bitpacker\");\nlet filter = require(\"./filter-pack\");\nlet zlib = require(\"zlib\");\nlet Packer = module.exports = function (options) {\n  this._options = options;\n  options.deflateChunkSize = options.deflateChunkSize || 32 * 1024;\n  options.deflateLevel = options.deflateLevel != null ? options.deflateLevel : 9;\n  options.deflateStrategy = options.deflateStrategy != null ? options.deflateStrategy : 3;\n  options.inputHasAlpha = options.inputHasAlpha != null ? options.inputHasAlpha : true;\n  options.deflateFactory = options.deflateFactory || zlib.createDeflate;\n  options.bitDepth = options.bitDepth || 8;\n  // This is outputColorType\n  options.colorType = typeof options.colorType === \"number\" ? options.colorType : constants.COLORTYPE_COLOR_ALPHA;\n  options.inputColorType = typeof options.inputColorType === \"number\" ? options.inputColorType : constants.COLORTYPE_COLOR_ALPHA;\n  if ([constants.COLORTYPE_GRAYSCALE, constants.COLORTYPE_COLOR, constants.COLORTYPE_COLOR_ALPHA, constants.COLORTYPE_ALPHA].indexOf(options.colorType) === -1) {\n    throw new Error(\"option color type:\" + options.colorType + \" is not supported at present\");\n  }\n  if ([constants.COLORTYPE_GRAYSCALE, constants.COLORTYPE_COLOR, constants.COLORTYPE_COLOR_ALPHA, constants.COLORTYPE_ALPHA].indexOf(options.inputColorType) === -1) {\n    throw new Error(\"option input color type:\" + options.inputColorType + \" is not supported at present\");\n  }\n  if (options.bitDepth !== 8 && options.bitDepth !== 16) {\n    throw new Error(\"option bit depth:\" + options.bitDepth + \" is not supported at present\");\n  }\n};\nPacker.prototype.getDeflateOptions = function () {\n  return {\n    chunkSize: this._options.deflateChunkSize,\n    level: this._options.deflateLevel,\n    strategy: this._options.deflateStrategy\n  };\n};\nPacker.prototype.createDeflate = function () {\n  return this._options.deflateFactory(this.getDeflateOptions());\n};\nPacker.prototype.filterData = function (data, width, height) {\n  // convert to correct format for filtering (e.g. right bpp and bit depth)\n  let packedData = bitPacker(data, width, height, this._options);\n\n  // filter pixel data\n  let bpp = constants.COLORTYPE_TO_BPP_MAP[this._options.colorType];\n  let filteredData = filter(packedData, width, height, this._options, bpp);\n  return filteredData;\n};\nPacker.prototype._packChunk = function (type, data) {\n  let len = data ? data.length : 0;\n  let buf = Buffer.alloc(len + 12);\n  buf.writeUInt32BE(len, 0);\n  buf.writeUInt32BE(type, 4);\n  if (data) {\n    data.copy(buf, 8);\n  }\n  buf.writeInt32BE(CrcStream.crc32(buf.slice(4, buf.length - 4)), buf.length - 4);\n  return buf;\n};\nPacker.prototype.packGAMA = function (gamma) {\n  let buf = Buffer.alloc(4);\n  buf.writeUInt32BE(Math.floor(gamma * constants.GAMMA_DIVISION), 0);\n  return this._packChunk(constants.TYPE_gAMA, buf);\n};\nPacker.prototype.packIHDR = function (width, height) {\n  let buf = Buffer.alloc(13);\n  buf.writeUInt32BE(width, 0);\n  buf.writeUInt32BE(height, 4);\n  buf[8] = this._options.bitDepth; // Bit depth\n  buf[9] = this._options.colorType; // colorType\n  buf[10] = 0; // compression\n  buf[11] = 0; // filter\n  buf[12] = 0; // interlace\n\n  return this._packChunk(constants.TYPE_IHDR, buf);\n};\nPacker.prototype.packIDAT = function (data) {\n  return this._packChunk(constants.TYPE_IDAT, data);\n};\nPacker.prototype.packIEND = function () {\n  return this._packChunk(constants.TYPE_IEND, null);\n};", "\"use strict\";\n\nlet util = require(\"util\");\nlet Stream = require(\"stream\");\nlet constants = require(\"./constants\");\nlet Packer = require(\"./packer\");\nlet PackerAsync = module.exports = function (opt) {\n  Stream.call(this);\n  let options = opt || {};\n  this._packer = new Packer(options);\n  this._deflate = this._packer.createDeflate();\n  this.readable = true;\n};\nutil.inherits(PackerAsync, Stream);\nPackerAsync.prototype.pack = function (data, width, height, gamma) {\n  // Signature\n  this.emit(\"data\", Buffer.from(constants.PNG_SIGNATURE));\n  this.emit(\"data\", this._packer.packIHDR(width, height));\n  if (gamma) {\n    this.emit(\"data\", this._packer.packGAMA(gamma));\n  }\n  let filteredData = this._packer.filterData(data, width, height);\n\n  // compress it\n  this._deflate.on(\"error\", this.emit.bind(this, \"error\"));\n  this._deflate.on(\"data\", function (compressedData) {\n    this.emit(\"data\", this._packer.packIDAT(compressedData));\n  }.bind(this));\n  this._deflate.on(\"end\", function () {\n    this.emit(\"data\", this._packer.packIEND());\n    this.emit(\"end\");\n  }.bind(this));\n  this._deflate.end(filteredData);\n};", "\"use strict\";\n\nlet assert = require(\"assert\").ok;\nlet zlib = require(\"zlib\");\nlet util = require(\"util\");\nlet kMaxLength = require(\"buffer\").kMaxLength;\nfunction Inflate(opts) {\n  if (!(this instanceof Inflate)) {\n    return new Inflate(opts);\n  }\n  if (opts && opts.chunkSize < zlib.Z_MIN_CHUNK) {\n    opts.chunkSize = zlib.Z_MIN_CHUNK;\n  }\n  zlib.Inflate.call(this, opts);\n\n  // Node 8 --> 9 compatibility check\n  this._offset = this._offset === undefined ? this._outOffset : this._offset;\n  this._buffer = this._buffer || this._outBuffer;\n  if (opts && opts.maxLength != null) {\n    this._maxLength = opts.maxLength;\n  }\n}\nfunction createInflate(opts) {\n  return new Inflate(opts);\n}\nfunction _close(engine, callback) {\n  if (callback) {\n    process.nextTick(callback);\n  }\n\n  // Caller may invoke .close after a zlib error (which will null _handle).\n  if (!engine._handle) {\n    return;\n  }\n  engine._handle.close();\n  engine._handle = null;\n}\nInflate.prototype._processChunk = function (chunk, flushFlag, asyncCb) {\n  if (typeof asyncCb === \"function\") {\n    return zlib.Inflate._processChunk.call(this, chunk, flushFlag, asyncCb);\n  }\n  let self = this;\n  let availInBefore = chunk && chunk.length;\n  let availOutBefore = this._chunkSize - this._offset;\n  let leftToInflate = this._maxLength;\n  let inOff = 0;\n  let buffers = [];\n  let nread = 0;\n  let error;\n  this.on(\"error\", function (err) {\n    error = err;\n  });\n  function handleChunk(availInAfter, availOutAfter) {\n    if (self._hadError) {\n      return;\n    }\n    let have = availOutBefore - availOutAfter;\n    assert(have >= 0, \"have should not go down\");\n    if (have > 0) {\n      let out = self._buffer.slice(self._offset, self._offset + have);\n      self._offset += have;\n      if (out.length > leftToInflate) {\n        out = out.slice(0, leftToInflate);\n      }\n      buffers.push(out);\n      nread += out.length;\n      leftToInflate -= out.length;\n      if (leftToInflate === 0) {\n        return false;\n      }\n    }\n    if (availOutAfter === 0 || self._offset >= self._chunkSize) {\n      availOutBefore = self._chunkSize;\n      self._offset = 0;\n      self._buffer = Buffer.allocUnsafe(self._chunkSize);\n    }\n    if (availOutAfter === 0) {\n      inOff += availInBefore - availInAfter;\n      availInBefore = availInAfter;\n      return true;\n    }\n    return false;\n  }\n  assert(this._handle, \"zlib binding closed\");\n  let res;\n  do {\n    res = this._handle.writeSync(flushFlag, chunk,\n    // in\n    inOff,\n    // in_off\n    availInBefore,\n    // in_len\n    this._buffer,\n    // out\n    this._offset,\n    //out_off\n    availOutBefore); // out_len\n    // Node 8 --> 9 compatibility check\n    res = res || this._writeState;\n  } while (!this._hadError && handleChunk(res[0], res[1]));\n  if (this._hadError) {\n    throw error;\n  }\n  if (nread >= kMaxLength) {\n    _close(this);\n    throw new RangeError(\"Cannot create final Buffer. It would be larger than 0x\" + kMaxLength.toString(16) + \" bytes\");\n  }\n  let buf = Buffer.concat(buffers, nread);\n  _close(this);\n  return buf;\n};\nutil.inherits(Inflate, zlib.Inflate);\nfunction zlibBufferSync(engine, buffer) {\n  if (typeof buffer === \"string\") {\n    buffer = Buffer.from(buffer);\n  }\n  if (!(buffer instanceof Buffer)) {\n    throw new TypeError(\"Not a string or buffer\");\n  }\n  let flushFlag = engine._finishFlushFlag;\n  if (flushFlag == null) {\n    flushFlag = zlib.Z_FINISH;\n  }\n  return engine._processChunk(buffer, flushFlag);\n}\nfunction inflateSync(buffer, opts) {\n  return zlibBufferSync(new Inflate(opts), buffer);\n}\nmodule.exports = exports = inflateSync;\nexports.Inflate = Inflate;\nexports.createInflate = createInflate;\nexports.inflateSync = inflateSync;", "\"use strict\";\n\nlet SyncReader = module.exports = function (buffer) {\n  this._buffer = buffer;\n  this._reads = [];\n};\nSyncReader.prototype.read = function (length, callback) {\n  this._reads.push({\n    length: Math.abs(length),\n    // if length < 0 then at most this length\n    allowLess: length < 0,\n    func: callback\n  });\n};\nSyncReader.prototype.process = function () {\n  // as long as there is any data and read requests\n  while (this._reads.length > 0 && this._buffer.length) {\n    let read = this._reads[0];\n    if (this._buffer.length && (this._buffer.length >= read.length || read.allowLess)) {\n      // ok there is any data so that we can satisfy this request\n      this._reads.shift(); // == read\n\n      let buf = this._buffer;\n      this._buffer = buf.slice(read.length);\n      read.func.call(this, buf.slice(0, read.length));\n    } else {\n      break;\n    }\n  }\n  if (this._reads.length > 0) {\n    throw new Error(\"There are some read requests waitng on finished stream\");\n  }\n  if (this._buffer.length > 0) {\n    throw new Error(\"unrecognised content at end of stream\");\n  }\n};", "\"use strict\";\n\nlet SyncReader = require(\"./sync-reader\");\nlet Filter = require(\"./filter-parse\");\nexports.process = function (inBuffer, bitmapInfo) {\n  let outBuffers = [];\n  let reader = new SyncReader(inBuffer);\n  let filter = new Filter(bitmapInfo, {\n    read: reader.read.bind(reader),\n    write: function (bufferPart) {\n      outBuffers.push(bufferPart);\n    },\n    complete: function () {}\n  });\n  filter.start();\n  reader.process();\n  return Buffer.concat(outBuffers);\n};", "\"use strict\";\n\nlet hasSyncZlib = true;\nlet zlib = require(\"zlib\");\nlet inflateSync = require(\"./sync-inflate\");\nif (!zlib.deflateSync) {\n  hasSyncZlib = false;\n}\nlet SyncReader = require(\"./sync-reader\");\nlet FilterSync = require(\"./filter-parse-sync\");\nlet Parser = require(\"./parser\");\nlet bitmapper = require(\"./bitmapper\");\nlet formatNormaliser = require(\"./format-normaliser\");\nmodule.exports = function (buffer, options) {\n  if (!hasSyncZlib) {\n    throw new Error(\"To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0\");\n  }\n  let err;\n  function handleError(_err_) {\n    err = _err_;\n  }\n  let metaData;\n  function handleMetaData(_metaData_) {\n    metaData = _metaData_;\n  }\n  function handleTransColor(transColor) {\n    metaData.transColor = transColor;\n  }\n  function handlePalette(palette) {\n    metaData.palette = palette;\n  }\n  function handleSimpleTransparency() {\n    metaData.alpha = true;\n  }\n  let gamma;\n  function handleGamma(_gamma_) {\n    gamma = _gamma_;\n  }\n  let inflateDataList = [];\n  function handleInflateData(inflatedData) {\n    inflateDataList.push(inflatedData);\n  }\n  let reader = new SyncReader(buffer);\n  let parser = new Parser(options, {\n    read: reader.read.bind(reader),\n    error: handleError,\n    metadata: handleMetaData,\n    gamma: handleGamma,\n    palette: handlePalette,\n    transColor: handleTransColor,\n    inflateData: handleInflateData,\n    simpleTransparency: handleSimpleTransparency\n  });\n  parser.start();\n  reader.process();\n  if (err) {\n    throw err;\n  }\n\n  //join together the inflate datas\n  let inflateData = Buffer.concat(inflateDataList);\n  inflateDataList.length = 0;\n  let inflatedData;\n  if (metaData.interlace) {\n    inflatedData = zlib.inflateSync(inflateData);\n  } else {\n    let rowSize = (metaData.width * metaData.bpp * metaData.depth + 7 >> 3) + 1;\n    let imageSize = rowSize * metaData.height;\n    inflatedData = inflateSync(inflateData, {\n      chunkSize: imageSize,\n      maxLength: imageSize\n    });\n  }\n  inflateData = null;\n  if (!inflatedData || !inflatedData.length) {\n    throw new Error(\"bad png - invalid inflate data response\");\n  }\n  let unfilteredData = FilterSync.process(inflatedData, metaData);\n  inflateData = null;\n  let bitmapData = bitmapper.dataToBitMap(unfilteredData, metaData);\n  unfilteredData = null;\n  let normalisedBitmapData = formatNormaliser(bitmapData, metaData, options.skipRescale);\n  metaData.data = normalisedBitmapData;\n  metaData.gamma = gamma || 0;\n  return metaData;\n};", "\"use strict\";\n\nlet hasSyncZlib = true;\nlet zlib = require(\"zlib\");\nif (!zlib.deflateSync) {\n  hasSyncZlib = false;\n}\nlet constants = require(\"./constants\");\nlet Packer = require(\"./packer\");\nmodule.exports = function (metaData, opt) {\n  if (!hasSyncZlib) {\n    throw new Error(\"To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0\");\n  }\n  let options = opt || {};\n  let packer = new Packer(options);\n  let chunks = [];\n\n  // Signature\n  chunks.push(Buffer.from(constants.PNG_SIGNATURE));\n\n  // Header\n  chunks.push(packer.packIHDR(metaData.width, metaData.height));\n  if (metaData.gamma) {\n    chunks.push(packer.packGAMA(metaData.gamma));\n  }\n  let filteredData = packer.filterData(metaData.data, metaData.width, metaData.height);\n\n  // compress it\n  let compressedData = zlib.deflateSync(filteredData, packer.getDeflateOptions());\n  filteredData = null;\n  if (!compressedData || !compressedData.length) {\n    throw new Error(\"bad png - invalid compressed data response\");\n  }\n  chunks.push(packer.packIDAT(compressedData));\n\n  // End\n  chunks.push(packer.packIEND());\n  return Buffer.concat(chunks);\n};", "\"use strict\";\n\nlet parse = require(\"./parser-sync\");\nlet pack = require(\"./packer-sync\");\nexports.read = function (buffer, options) {\n  return parse(buffer, options || {});\n};\nexports.write = function (png, options) {\n  return pack(png, options);\n};", "\"use strict\";\n\nlet util = require(\"util\");\nlet Stream = require(\"stream\");\nlet Parser = require(\"./parser-async\");\nlet Packer = require(\"./packer-async\");\nlet PNGSync = require(\"./png-sync\");\nlet PNG = exports.PNG = function (options) {\n  Stream.call(this);\n  options = options || {}; // eslint-disable-line no-param-reassign\n\n  // coerce pixel dimensions to integers (also coerces undefined -> 0):\n  this.width = options.width | 0;\n  this.height = options.height | 0;\n  this.data = this.width > 0 && this.height > 0 ? Buffer.alloc(4 * this.width * this.height) : null;\n  if (options.fill && this.data) {\n    this.data.fill(0);\n  }\n  this.gamma = 0;\n  this.readable = this.writable = true;\n  this._parser = new Parser(options);\n  this._parser.on(\"error\", this.emit.bind(this, \"error\"));\n  this._parser.on(\"close\", this._handleClose.bind(this));\n  this._parser.on(\"metadata\", this._metadata.bind(this));\n  this._parser.on(\"gamma\", this._gamma.bind(this));\n  this._parser.on(\"parsed\", function (data) {\n    this.data = data;\n    this.emit(\"parsed\", data);\n  }.bind(this));\n  this._packer = new Packer(options);\n  this._packer.on(\"data\", this.emit.bind(this, \"data\"));\n  this._packer.on(\"end\", this.emit.bind(this, \"end\"));\n  this._parser.on(\"close\", this._handleClose.bind(this));\n  this._packer.on(\"error\", this.emit.bind(this, \"error\"));\n};\nutil.inherits(PNG, Stream);\nPNG.sync = PNGSync;\nPNG.prototype.pack = function () {\n  if (!this.data || !this.data.length) {\n    this.emit(\"error\", \"No data provided\");\n    return this;\n  }\n  process.nextTick(function () {\n    this._packer.pack(this.data, this.width, this.height, this.gamma);\n  }.bind(this));\n  return this;\n};\nPNG.prototype.parse = function (data, callback) {\n  if (callback) {\n    let onParsed, onError;\n    onParsed = function (parsedData) {\n      this.removeListener(\"error\", onError);\n      this.data = parsedData;\n      callback(null, this);\n    }.bind(this);\n    onError = function (err) {\n      this.removeListener(\"parsed\", onParsed);\n      callback(err, null);\n    }.bind(this);\n    this.once(\"parsed\", onParsed);\n    this.once(\"error\", onError);\n  }\n  this.end(data);\n  return this;\n};\nPNG.prototype.write = function (data) {\n  this._parser.write(data);\n  return true;\n};\nPNG.prototype.end = function (data) {\n  this._parser.end(data);\n};\nPNG.prototype._metadata = function (metadata) {\n  this.width = metadata.width;\n  this.height = metadata.height;\n  this.emit(\"metadata\", metadata);\n};\nPNG.prototype._gamma = function (gamma) {\n  this.gamma = gamma;\n};\nPNG.prototype._handleClose = function () {\n  if (!this._parser.writable && !this._packer.readable) {\n    this.emit(\"close\");\n  }\n};\nPNG.bitblt = function (src, dst, srcX, srcY, width, height, deltaX, deltaY) {\n  // eslint-disable-line max-params\n  // coerce pixel dimensions to integers (also coerces undefined -> 0):\n  /* eslint-disable no-param-reassign */\n  srcX |= 0;\n  srcY |= 0;\n  width |= 0;\n  height |= 0;\n  deltaX |= 0;\n  deltaY |= 0;\n  /* eslint-enable no-param-reassign */\n\n  if (srcX > src.width || srcY > src.height || srcX + width > src.width || srcY + height > src.height) {\n    throw new Error(\"bitblt reading outside image\");\n  }\n  if (deltaX > dst.width || deltaY > dst.height || deltaX + width > dst.width || deltaY + height > dst.height) {\n    throw new Error(\"bitblt writing outside image\");\n  }\n  for (let y = 0; y < height; y++) {\n    src.data.copy(dst.data, (deltaY + y) * dst.width + deltaX << 2, (srcY + y) * src.width + srcX << 2, (srcY + y) * src.width + srcX + width << 2);\n  }\n};\nPNG.prototype.bitblt = function (dst, srcX, srcY, width, height, deltaX, deltaY) {\n  // eslint-disable-line max-params\n\n  PNG.bitblt(this, dst, srcX, srcY, width, height, deltaX, deltaY);\n  return this;\n};\nPNG.adjustGamma = function (src) {\n  if (src.gamma) {\n    for (let y = 0; y < src.height; y++) {\n      for (let x = 0; x < src.width; x++) {\n        let idx = src.width * y + x << 2;\n        for (let i = 0; i < 3; i++) {\n          let sample = src.data[idx + i] / 255;\n          sample = Math.pow(sample, 1 / 2.2 / src.gamma);\n          src.data[idx + i] = Math.round(sample * 255);\n        }\n      }\n    }\n    src.gamma = 0;\n  }\n};\nPNG.prototype.adjustGamma = function () {\n  PNG.adjustGamma(this);\n};", "'use strict';\n\nvar TYPED_OK = typeof Uint8Array !== 'undefined' && typeof Uint16Array !== 'undefined' && typeof Int32Array !== 'undefined';\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) {\n      continue;\n    }\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n  return obj;\n};\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) {\n    return buf;\n  }\n  if (buf.subarray) {\n    return buf.subarray(0, size);\n  }\n  buf.length = size;\n  return buf;\n};\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n    return result;\n  }\n};\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8 = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8 = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\nexports.setTyped(TYPED_OK);", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY = 0;\nvar Z_TEXT = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN = 2;\n\n/*============================================================================*/\n\nfunction zero(buf) {\n  var len = buf.length;\n  while (--len >= 0) {\n    buf[len] = 0;\n  }\n}\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES = 30;\n/* number of distance codes */\n\nvar BL_CODES = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size = 16;\n/* size of bit buffer in bi_buf */\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK = 256;\n/* end of block literal code */\n\nvar REP_3_6 = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10 = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits = /* extra bits for each length code */\n[0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0];\nvar extra_dbits = /* extra bits for each distance code */\n[0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13];\nvar extra_blbits = /* extra bits for each bit length code */\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7];\nvar bl_order = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n  this.static_tree = static_tree; /* static tree or NULL */\n  this.extra_bits = extra_bits; /* extra bits for each code or NULL */\n  this.extra_base = extra_base; /* base index for extra_bits */\n  this.elems = elems; /* max number of elements in the tree */\n  this.max_length = max_length; /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree = static_tree && static_tree.length;\n}\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree; /* the dynamic tree */\n  this.max_code = 0; /* largest code with non zero frequency */\n  this.stat_desc = stat_desc; /* the corresponding static tree */\n}\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n  //    put_byte(s, (uch)((w) & 0xff));\n  //    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = w & 0xff;\n  s.pending_buf[s.pending++] = w >>> 8 & 0xff;\n}\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > Buf_size - length) {\n    s.bi_buf |= value << s.bi_valid & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> Buf_size - s.bi_valid;\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= value << s.bi_valid & 0xffff;\n    s.bi_valid += length;\n  }\n}\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2] /*.Code*/, tree[c * 2 + 1] /*.Len*/);\n}\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree = desc.dyn_tree;\n  var max_code = desc.max_code;\n  var stree = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var extra = desc.stat_desc.extra_bits;\n  var base = desc.stat_desc.extra_base;\n  var max_length = desc.stat_desc.max_length;\n  var h; /* heap index */\n  var n, m; /* iterate over the tree elements */\n  var bits; /* bit length */\n  var xbits; /* extra bits */\n  var f; /* frequency */\n  var overflow = 0; /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1] /*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1] /*.Dad*/ * 2 + 1] /*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1] /*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) {\n      continue;\n    } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2] /*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1] /*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) {\n    return;\n  }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) {\n      bits--;\n    }\n    s.bl_count[bits]--; /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) {\n        continue;\n      }\n      if (tree[m * 2 + 1] /*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1] /*.Len*/) * tree[m * 2] /*.Freq*/;\n        tree[m * 2 + 1] /*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0; /* running code value */\n  var bits; /* bit index */\n  var n; /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = code + bl_count[bits - 1] << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0; n <= max_code; n++) {\n    var len = tree[n * 2 + 1] /*.Len*/;\n    if (len === 0) {\n      continue;\n    }\n    /* Now reverse the bits */\n    tree[n * 2] /*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n; /* iterates over tree elements */\n  var bits; /* bit counter */\n  var length; /* length value */\n  var code; /* code value */\n  var dist; /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n  /*#ifdef NO_INIT_GLOBAL_POINTERS\n    static_l_desc.static_tree = static_ltree;\n    static_l_desc.extra_bits = extra_lbits;\n    static_d_desc.static_tree = static_dtree;\n    static_d_desc.extra_bits = extra_dbits;\n    static_bl_desc.extra_bits = extra_blbits;\n  #endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < 1 << extra_lbits[code]; n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < 1 << extra_dbits[code]; n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < 1 << extra_dbits[code] - 7; n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1] /*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1] /*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1] /*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1] /*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1] /*.Len*/ = 5;\n    static_dtree[n * 2] /*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0, D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0, BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES; n++) {\n    s.dyn_ltree[n * 2] /*.Freq*/ = 0;\n  }\n  for (n = 0; n < D_CODES; n++) {\n    s.dyn_dtree[n * 2] /*.Freq*/ = 0;\n  }\n  for (n = 0; n < BL_CODES; n++) {\n    s.bl_tree[n * 2] /*.Freq*/ = 0;\n  }\n  s.dyn_ltree[END_BLOCK * 2] /*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s) {\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s); /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n  //  while (len--) {\n  //    put_byte(s, *buf++);\n  //  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return tree[_n2] /*.Freq*/ < tree[_m2] /*.Freq*/ || tree[_n2] /*.Freq*/ === tree[_m2] /*.Freq*/ && depth[n] <= depth[m];\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1; /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len && smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) {\n      break;\n    }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist; /* distance of matched string */\n  var lc; /* match length or unmatched char (if dist == 0) */\n  var lx = 0; /* running index in l_buf */\n  var code; /* the code to send */\n  var extra; /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = s.pending_buf[s.d_buf + lx * 2] << 8 | s.pending_buf[s.d_buf + lx * 2 + 1];\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra); /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree); /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra); /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n    } while (lx < s.last_lit);\n  }\n  send_code(s, END_BLOCK, ltree);\n}\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree = desc.dyn_tree;\n  var stree = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems = desc.stat_desc.elems;\n  var n, m; /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node; /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2] /*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n    } else {\n      tree[n * 2 + 1] /*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = max_code < 2 ? ++max_code : 0;\n    tree[node * 2] /*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1] /*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = s.heap_len >> 1 /*int /2*/; n >= 1; n--) {\n    pqdownheap(s, tree, n);\n  }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems; /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1 /*SMALLEST*/];\n    s.heap[1 /*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1 /*SMALLEST*/);\n    /***/\n\n    m = s.heap[1 /*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2] /*.Freq*/ = tree[n * 2] /*.Freq*/ + tree[m * 2] /*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1] /*.Dad*/ = tree[m * 2 + 1] /*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1 /*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1 /*SMALLEST*/);\n  } while (s.heap_len >= 2);\n  s.heap[--s.heap_max] = s.heap[1 /*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n; /* iterates over all tree elements */\n  var prevlen = -1; /* last emitted length */\n  var curlen; /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1] /*.Len*/; /* length of next code */\n\n  var count = 0; /* repeat count of the current code */\n  var max_count = 7; /* max repeat count */\n  var min_count = 4; /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1] /*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1] /*.Len*/;\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2] /*.Freq*/ += count;\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        s.bl_tree[curlen * 2] /*.Freq*/++;\n      }\n      s.bl_tree[REP_3_6 * 2] /*.Freq*/++;\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2] /*.Freq*/++;\n    } else {\n      s.bl_tree[REPZ_11_138 * 2] /*.Freq*/++;\n    }\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n; /* iterates over all tree elements */\n  var prevlen = -1; /* last emitted length */\n  var curlen; /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1] /*.Len*/; /* length of next code */\n\n  var count = 0; /* repeat count of the current code */\n  var max_count = 7; /* max repeat count */\n  var min_count = 4; /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */ /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1] /*.Len*/;\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n    } else if (count < min_count) {\n      do {\n        send_code(s, curlen, s.bl_tree);\n      } while (--count !== 0);\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex; /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1] /*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank; /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1, 5);\n  send_bits(s, blcodes - 4, 4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1] /*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if (black_mask & 1 && s.dyn_ltree[n * 2] /*.Freq*/ !== 0) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2] /*.Freq*/ !== 0 || s.dyn_ltree[10 * 2] /*.Freq*/ !== 0 || s.dyn_ltree[13 * 2] /*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2] /*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s) {\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n  s.l_desc = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3); /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb; /* opt_len and static_len in bytes */\n  var max_blindex = 0; /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = s.opt_len + 3 + 7 >>> 3;\n    static_lenb = s.static_len + 3 + 7 >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) {\n      opt_lenb = static_lenb;\n    }\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n  if (stored_len + 4 <= opt_lenb && buf !== -1) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2] = dist >>> 8 & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2] /*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--; /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2] /*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2] /*.Freq*/++;\n  }\n\n  // (!) This block is disabled in zlib defaults,\n  // don't enable it for binary compatibility\n\n  //#ifdef TRUNCATE_BLOCK\n  //  /* Try to guess if it is profitable to stop the current block here */\n  //  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n  //    /* Compute an upper bound for the compressed length */\n  //    out_length = s.last_lit*8;\n  //    in_length = s.strstart - s.block_start;\n  //\n  //    for (dcode = 0; dcode < D_CODES; dcode++) {\n  //      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n  //    }\n  //    out_length >>>= 3;\n  //    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n  //    //       s->last_lit, in_length, out_length,\n  //    //       100L - out_length*100L/in_length));\n  //    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n  //      return true;\n  //    }\n  //  }\n  //#endif\n\n  return s.last_lit === s.lit_bufsize - 1;\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\nexports._tr_init = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;", "'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\nfunction adler32(adler, buf, len, pos) {\n  var s1 = adler & 0xffff | 0,\n    s2 = adler >>> 16 & 0xffff | 0,\n    n = 0;\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n    do {\n      s1 = s1 + buf[pos++] | 0;\n      s2 = s2 + s1 | 0;\n    } while (--n);\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n  return s1 | s2 << 16 | 0;\n}\nmodule.exports = adler32;", "'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c,\n    table = [];\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = c & 1 ? 0xEDB88320 ^ c >>> 1 : c >>> 1;\n    }\n    table[n] = c;\n  }\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n    end = pos + len;\n  crc ^= -1;\n  for (var i = pos; i < end; i++) {\n    crc = crc >>> 8 ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n  return crc ^ -1; // >>> 0;\n}\nmodule.exports = crc32;", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\nmodule.exports = {\n  2: 'need dictionary',\n  /* Z_NEED_DICT       2  */\n  1: 'stream end',\n  /* Z_STREAM_END      1  */\n  0: '',\n  /* Z_OK              0  */\n  '-1': 'file error',\n  /* Z_ERRNO         (-1) */\n  '-2': 'stream error',\n  /* Z_STREAM_ERROR  (-2) */\n  '-3': 'data error',\n  /* Z_DATA_ERROR    (-3) */\n  '-4': 'insufficient memory',\n  /* Z_MEM_ERROR     (-4) */\n  '-5': 'buffer error',\n  /* Z_BUF_ERROR     (-5) */\n  '-6': 'incompatible version' /* Z_VERSION_ERROR (-6) */\n};", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\nvar utils = require('../utils/common');\nvar trees = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32 = require('./crc32');\nvar msg = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH = 3;\nvar Z_FINISH = 4;\nvar Z_BLOCK = 5;\n//var Z_TREES         = 6;\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK = 0;\nvar Z_STREAM_END = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR = -2;\nvar Z_DATA_ERROR = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\nvar Z_FILTERED = 1;\nvar Z_HUFFMAN_ONLY = 2;\nvar Z_RLE = 3;\nvar Z_FIXED = 4;\nvar Z_DEFAULT_STRATEGY = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN = 2;\n\n/* The deflate compression method */\nvar Z_DEFLATED = 8;\n\n/*============================================================================*/\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\nvar LENGTH_CODES = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES = 30;\n/* number of distance codes */\nvar BL_CODES = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = MAX_MATCH + MIN_MATCH + 1;\nvar PRESET_DICT = 0x20;\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\nvar BS_NEED_MORE = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\nfunction rank(f) {\n  return (f << 1) - (f > 4 ? 9 : 0);\n}\nfunction zero(buf) {\n  var len = buf.length;\n  while (--len >= 0) {\n    buf[len] = 0;\n  }\n}\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) {\n    return;\n  }\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, s.block_start >= 0 ? s.block_start : -1, s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n  //  put_byte(s, (Byte)(b >> 8));\n  //  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = b >>> 8 & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n  if (len > size) {\n    len = size;\n  }\n  if (len === 0) {\n    return 0;\n  }\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  } else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n  strm.next_in += len;\n  strm.total_in += len;\n  return len;\n}\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length; /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match; /* matched string */\n  var len; /* length of current match */\n  var best_len = s.prev_length; /* best match length so far */\n  var nice_match = s.nice_match; /* stop if match long enough */\n  var limit = s.strstart > s.w_size - MIN_LOOKAHEAD ? s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0 /*NIL*/;\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1 = _win[scan + best_len - 1];\n  var scan_end = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) {\n    nice_match = s.lookahead;\n  }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len] !== scan_end || _win[match + best_len - 1] !== scan_end1 || _win[match] !== _win[scan] || _win[++match] !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1 = _win[scan + best_len - 1];\n      scan_end = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = m >= _w_size ? m - _w_size : 0;\n      } while (--n);\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = m >= _w_size ? m - _w_size : 0;\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = (s.ins_h << s.hash_shift ^ s.window[str + 1]) & s.hash_mask;\n      //#if MIN_MATCH != 3\n      //        Call update_hash() MIN_MATCH-3 more times\n      //#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = (s.ins_h << s.hash_shift ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n  //  if (s.high_water < s.window_size) {\n  //    var curr = s.strstart + s.lookahead;\n  //    var init = 0;\n  //\n  //    if (s.high_water < curr) {\n  //      /* Previous high water mark below current data -- zero WIN_INIT\n  //       * bytes or up to end of window, whichever is less.\n  //       */\n  //      init = s.window_size - curr;\n  //      if (init > WIN_INIT)\n  //        init = WIN_INIT;\n  //      zmemzero(s->window + curr, (unsigned)init);\n  //      s->high_water = curr + init;\n  //    }\n  //    else if (s->high_water < (ulg)curr + WIN_INIT) {\n  //      /* High water mark at or above current data, but below current data\n  //       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n  //       * to end of window, whichever is less.\n  //       */\n  //      init = (ulg)curr + WIN_INIT - s->high_water;\n  //      if (init > s->window_size - s->high_water)\n  //        init = s->window_size - s->high_water;\n  //      zmemzero(s->window + s->high_water, (unsigned)init);\n  //      s->high_water += init;\n  //    }\n  //  }\n  //\n  //  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n  //    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n      //      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n      //        s.block_start >= s.w_size)) {\n      //        throw  new Error(\"slide too late\");\n      //      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n    //    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= s.w_size - MIN_LOOKAHEAD) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head; /* head of the hash chain */\n  var bflush; /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0 /*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0 /*NIL*/ && s.strstart - hash_head <= s.w_size - MIN_LOOKAHEAD) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match /*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n        //#if MIN_MATCH != 3\n        //                Call UPDATE_HASH() MIN_MATCH-3 more times\n        //#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head; /* head of hash chain */\n  var bflush; /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break;\n      } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0 /*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n    if (hash_head !== 0 /*NIL*/ && s.prev_length < s.max_lazy_match && s.strstart - hash_head <= s.w_size - MIN_LOOKAHEAD /*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 && (s.strategy === Z_FILTERED || s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096 /*TOO_FAR*/)) {\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush; /* set if current block must be flushed */\n  var prev; /* byte at distance one to match */\n  var scan, strend; /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break;\n      } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush; /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break; /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\nvar configuration_table;\nconfiguration_table = [/*      good lazy nice chain */\nnew Config(0, 0, 0, 0, deflate_stored), /* 0 store only */\nnew Config(4, 4, 8, 4, deflate_fast), /* 1 max speed, no lazy matches */\nnew Config(4, 5, 16, 8, deflate_fast), /* 2 */\nnew Config(4, 6, 32, 32, deflate_fast), /* 3 */\n\nnew Config(4, 4, 16, 16, deflate_slow), /* 4 lazy matches */\nnew Config(8, 16, 32, 32, deflate_slow), /* 5 */\nnew Config(8, 16, 128, 128, deflate_slow), /* 6 */\nnew Config(8, 32, 128, 256, deflate_slow), /* 7 */\nnew Config(32, 128, 258, 1024, deflate_slow), /* 8 */\nnew Config(32, 258, 258, 4096, deflate_slow) /* 9 max compression */];\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\nfunction DeflateState() {\n  this.strm = null; /* pointer back to this zlib stream */\n  this.status = 0; /* as the name implies */\n  this.pending_buf = null; /* output still pending */\n  this.pending_buf_size = 0; /* size of pending_buf */\n  this.pending_out = 0; /* next pending byte to output to the stream */\n  this.pending = 0; /* nb of bytes in the pending buffer */\n  this.wrap = 0; /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null; /* gzip header information to write */\n  this.gzindex = 0; /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1; /* value of flush param for previous deflate call */\n\n  this.w_size = 0; /* LZ77 window size (32K by default) */\n  this.w_bits = 0; /* log2(w_size)  (8..16) */\n  this.w_mask = 0; /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null; /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0; /* hash index of string to be inserted */\n  this.hash_size = 0; /* number of elements in hash table */\n  this.hash_bits = 0; /* log2(hash_size) */\n  this.hash_mask = 0; /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0; /* length of best match */\n  this.prev_match = 0; /* previous match */\n  this.match_available = 0; /* set if previous match exists */\n  this.strstart = 0; /* start of string to insert */\n  this.match_start = 0; /* start of matching string */\n  this.lookahead = 0; /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0; /* compression level (1..9) */\n  this.strategy = 0; /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n  /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n  this.l_desc = null; /* desc. for literal tree */\n  this.d_desc = null; /* desc. for distance tree */\n  this.bl_desc = null; /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1); /* heap used to build the Huffman trees */\n  zero(this.heap);\n  this.heap_len = 0; /* number of elements in the heap */\n  this.heap_max = 0; /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0; /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0; /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0; /* bit length of current block with optimal trees */\n  this.static_len = 0; /* bit length of current block with static trees */\n  this.matches = 0; /* number of string matches in current block */\n  this.insert = 0; /* bytes at end of window left to insert */\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\nfunction deflateResetKeep(strm) {\n  var s;\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = s.wrap === 2 ? 0 // crc32(0, Z_NULL, 0)\n  : 1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) {\n    return Z_STREAM_ERROR;\n  }\n  if (strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR;\n  }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) {\n    // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n  if (windowBits < 0) {\n    /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  } else if (windowBits > 15) {\n    wrap = 2; /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED || windowBits < 8 || windowBits > 15 || level < 0 || level > 9 || strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n  strm.state = s;\n  s.strm = strm;\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << memLevel + 6; /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n  return deflateReset(strm);\n}\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state || flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n  s = strm.state;\n  if (!strm.output || !strm.input && strm.avail_in !== 0 || s.status === FINISH_STATE && flush !== Z_FINISH) {\n    return err(strm, strm.avail_out === 0 ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n    if (s.wrap === 2) {\n      // GZIP header\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) {\n        // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 : s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ? 4 : 0);\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      } else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) + (s.gzhead.hcrc ? 2 : 0) + (!s.gzhead.extra ? 0 : 4) + (!s.gzhead.name ? 0 : 8) + (!s.gzhead.comment ? 0 : 16));\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, s.gzhead.time >> 8 & 0xff);\n        put_byte(s, s.gzhead.time >> 16 & 0xff);\n        put_byte(s, s.gzhead.time >> 24 & 0xff);\n        put_byte(s, s.level === 9 ? 2 : s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ? 4 : 0);\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, s.gzhead.extra.length >> 8 & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    } else\n      // DEFLATE header\n      {\n        var header = Z_DEFLATED + (s.w_bits - 8 << 4) << 8;\n        var level_flags = -1;\n        if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n          level_flags = 0;\n        } else if (s.level < 6) {\n          level_flags = 1;\n        } else if (s.level === 6) {\n          level_flags = 2;\n        } else {\n          level_flags = 3;\n        }\n        header |= level_flags << 6;\n        if (s.strstart !== 0) {\n          header |= PRESET_DICT;\n        }\n        header += 31 - header % 31;\n        s.status = BUSY_STATE;\n        putShortMSB(s, header);\n\n        /* Save the adler32 of the preset dictionary: */\n        if (s.strstart !== 0) {\n          putShortMSB(s, strm.adler >>> 16);\n          putShortMSB(s, strm.adler & 0xffff);\n        }\n        strm.adler = 1; // adler32(0L, Z_NULL, 0);\n      }\n  }\n\n  //#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra /* != Z_NULL*/) {\n      beg = s.pending; /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    } else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name /* != Z_NULL*/) {\n      beg = s.pending; /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    } else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment /* != Z_NULL*/) {\n      beg = s.pending; /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    } else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, strm.adler >> 8 & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    } else {\n      s.status = BUSY_STATE;\n    }\n  }\n  //#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) && flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 || flush !== Z_NO_FLUSH && s.status !== FINISH_STATE) {\n    var bstate = s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) : s.strategy === Z_RLE ? deflate_rle(s, flush) : configuration_table[s.level].func(s, flush);\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      } else if (flush !== Z_BLOCK) {\n        /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/ /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) {\n    return Z_OK;\n  }\n  if (s.wrap <= 0) {\n    return Z_STREAM_END;\n  }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, strm.adler >> 8 & 0xff);\n    put_byte(s, strm.adler >> 16 & 0xff);\n    put_byte(s, strm.adler >> 24 & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, strm.total_in >> 8 & 0xff);\n    put_byte(s, strm.total_in >> 16 & 0xff);\n    put_byte(s, strm.total_in >> 24 & 0xff);\n  } else {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) {\n    s.wrap = -s.wrap;\n  }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\nfunction deflateEnd(strm) {\n  var status;\n  if (!strm /*== Z_NULL*/ || !strm.state /*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n  status = strm.state.status;\n  if (status !== INIT_STATE && status !== EXTRA_STATE && status !== NAME_STATE && status !== COMMENT_STATE && status !== HCRC_STATE && status !== BUSY_STATE && status !== FINISH_STATE) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n  strm.state = null;\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n  if (!strm /*== Z_NULL*/ || !strm.state /*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n  s = strm.state;\n  wrap = s.wrap;\n  if (wrap === 2 || wrap === 1 && s.status !== INIT_STATE || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n  s.wrap = 0; /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {\n      /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = (s.ins_h << s.hash_shift ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/", "// String encode/decode helpers\n'use strict';\n\nvar utils = require('./common');\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\ntry {\n  String.fromCharCode.apply(null, [0]);\n} catch (__) {\n  STR_APPLY_OK = false;\n}\ntry {\n  String.fromCharCode.apply(null, new Uint8Array(1));\n} catch (__) {\n  STR_APPLY_UIA_OK = false;\n}\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1;\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf,\n    c,\n    c2,\n    m_pos,\n    i,\n    str_len = str.length,\n    buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && m_pos + 1 < str_len) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + (c - 0xd800 << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && m_pos + 1 < str_len) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + (c - 0xd800 << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | c >>> 6;\n      buf[i++] = 0x80 | c & 0x3f;\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | c >>> 12;\n      buf[i++] = 0x80 | c >>> 6 & 0x3f;\n      buf[i++] = 0x80 | c & 0x3f;\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | c >>> 18;\n      buf[i++] = 0x80 | c >>> 12 & 0x3f;\n      buf[i++] = 0x80 | c >>> 6 & 0x3f;\n      buf[i++] = 0x80 | c & 0x3f;\n    }\n  }\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK || !buf.subarray && STR_APPLY_OK) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) {\n      utf16buf[out++] = c;\n      continue;\n    }\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) {\n      utf16buf[out++] = 0xfffd;\n      i += c_len - 1;\n      continue;\n    }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = c << 6 | buf[i++] & 0x3f;\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) {\n      utf16buf[out++] = 0xfffd;\n      continue;\n    }\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | c >> 10 & 0x3ff;\n      utf16buf[out++] = 0xdc00 | c & 0x3ff;\n    }\n  }\n  return buf2binstring(utf16buf, out);\n};\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n  max = max || buf.length;\n  if (max > buf.length) {\n    max = buf.length;\n  }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) {\n    pos--;\n  }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) {\n    return max;\n  }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) {\n    return max;\n  }\n  return pos + _utf8len[buf[pos]] > max ? pos : max;\n};", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = '' /*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2 /*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\nmodule.exports = ZStream;", "'use strict';\n\nvar zlib_deflate = require('./zlib/deflate');\nvar utils = require('./utils/common');\nvar strings = require('./utils/strings');\nvar msg = require('./zlib/messages');\nvar ZStream = require('./zlib/zstream');\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH = 0;\nvar Z_FINISH = 4;\nvar Z_OK = 0;\nvar Z_STREAM_END = 1;\nvar Z_SYNC_FLUSH = 2;\nvar Z_DEFAULT_COMPRESSION = -1;\nvar Z_DEFAULT_STRATEGY = 0;\nvar Z_DEFLATED = 8;\n\n/* ===========================================================================*/\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n  var opt = this.options;\n  if (opt.raw && opt.windowBits > 0) {\n    opt.windowBits = -opt.windowBits;\n  } else if (opt.gzip && opt.windowBits > 0 && opt.windowBits < 16) {\n    opt.windowBits += 16;\n  }\n  this.err = 0; // error code, if happens (0 = Z_OK)\n  this.msg = ''; // error message\n  this.ended = false; // used to avoid multiple onEnd() calls\n  this.chunks = []; // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n  var status = zlib_deflate.deflateInit2(this.strm, opt.level, opt.method, opt.windowBits, opt.memLevel, opt.strategy);\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n  if (this.ended) {\n    return false;\n  }\n  _mode = mode === ~~mode ? mode : mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode); /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH)) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n  return true;\n};\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) {\n    throw deflator.msg || msg[deflator.err];\n  }\n  return deflator.result;\n}\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30; /* got a data error -- remain here until reset */\nvar TYPE = 12; /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in; /* local strm.input */\n  var last; /* have enough input while in < last */\n  var _out; /* local strm.output */\n  var beg; /* inflate()'s initial strm.output */\n  var end; /* while out < end, enough space available */\n  //#ifdef INFLATE_STRICT\n  var dmax; /* maximum distance from zlib header */\n  //#endif\n  var wsize; /* window size or zero if not using window */\n  var whave; /* valid bytes in the window */\n  var wnext; /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window; /* allocated sliding window, if wsize != 0 */\n  var hold; /* local strm.hold */\n  var bits; /* local strm.bits */\n  var lcode; /* local strm.lencode */\n  var dcode; /* local strm.distcode */\n  var lmask; /* mask for first level of length codes */\n  var dmask; /* mask for first level of distance codes */\n  var here; /* retrieved table entry */\n  var op; /* code bits, operation, extra bits, or */\n  /*  window position, window bytes to copy */\n  var len; /* match length, unused bytes */\n  var dist; /* match distance */\n  var from; /* where to copy match from */\n  var from_source;\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n  //#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n  //#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top: do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n    here = lcode[hold & lmask];\n    dolen: for (;;) {\n      // Goto emulation\n      op = here >>> 24 /*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = here >>> 16 & 0xff /*here.op*/;\n      if (op === 0) {\n        /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff /*here.val*/;\n      } else if (op & 16) {\n        /* length base */\n        len = here & 0xffff /*here.val*/;\n        op &= 15; /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & (1 << op) - 1;\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n        dodist: for (;;) {\n          // goto emulation\n          op = here >>> 24 /*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = here >>> 16 & 0xff /*here.op*/;\n          if (op & 16) {\n            /* distance base */\n            dist = here & 0xffff /*here.val*/;\n            op &= 15; /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & (1 << op) - 1;\n            //#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n            //#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg; /* max distance in output */\n            if (dist > op) {\n              /* see if copy from window */\n              op = dist - op; /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n                // (!) This block is disabled in zlib defaults,\n                // don't enable it for binary compatibility\n                //#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n                //                if (len <= op - whave) {\n                //                  do {\n                //                    output[_out++] = 0;\n                //                  } while (--len);\n                //                  continue top;\n                //                }\n                //                len -= op - whave;\n                //                do {\n                //                  output[_out++] = 0;\n                //                } while (--op > whave);\n                //                if (op === 0) {\n                //                  from = _out - dist;\n                //                  do {\n                //                    output[_out++] = output[from++];\n                //                  } while (--len);\n                //                  continue top;\n                //                }\n                //#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {\n                /* very common case */\n                from += wsize - op;\n                if (op < len) {\n                  /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist; /* rest from output */\n                  from_source = output;\n                }\n              } else if (wnext < op) {\n                /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {\n                  /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {\n                    /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist; /* rest from output */\n                    from_source = output;\n                  }\n                }\n              } else {\n                /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {\n                  /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist; /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            } else {\n              from = _out - dist; /* copy direct from output */\n              do {\n                /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          } else if ((op & 64) === 0) {\n            /* 2nd level distance code */\n            here = dcode[(here & 0xffff /*here.val*/) + (hold & (1 << op) - 1)];\n            continue dodist;\n          } else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n          break; // need to emulate goto via \"continue\"\n        }\n      } else if ((op & 64) === 0) {\n        /* 2nd level length code */\n        here = lcode[(here & 0xffff /*here.val*/) + (hold & (1 << op) - 1)];\n        continue dolen;\n      } else if (op & 32) {\n        /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      } else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = _in < last ? 5 + (last - _in) : 5 - (_in - last);\n  strm.avail_out = _out < end ? 257 + (end - _out) : 257 - (_out - end);\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\nvar utils = require('../utils/common');\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\nvar lbase = [/* Length codes 257..285 base */\n3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0];\nvar lext = [/* Length codes 257..285 extra */\n16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78];\nvar dbase = [/* Distance codes 0..29 base */\n1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0];\nvar dext = [/* Distance codes 0..29 extra */\n16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts) {\n  var bits = opts.bits;\n  //here = opts.here; /* table entry for duplication */\n\n  var len = 0; /* a code's length in bits */\n  var sym = 0; /* index of code symbols */\n  var min = 0,\n    max = 0; /* minimum and maximum code lengths */\n  var root = 0; /* number of index bits for root table */\n  var curr = 0; /* number of index bits for current table */\n  var drop = 0; /* code bits to drop for sub-table */\n  var left = 0; /* number of prefix codes available */\n  var used = 0; /* code entries in table used */\n  var huff = 0; /* Huffman code */\n  var incr; /* for incrementing code, index */\n  var fill; /* index for replicating entries */\n  var low; /* low bits for current root entry */\n  var mask; /* mask for low root bits */\n  var next; /* next available space in table */\n  var base = null; /* base value table to use */\n  var base_index = 0;\n  //  var shoextra;    /* extra bits table to use */\n  var end; /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n    This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n    The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n    The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) {\n      break;\n    }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {\n    /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = 1 << 24 | 64 << 16 | 0;\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = 1 << 24 | 64 << 16 | 0;\n    opts.bits = 1;\n    return 0; /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) {\n      break;\n    }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    } /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1; /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n    root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n    When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n    used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n    sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work; /* dummy value--not used */\n    end = 19;\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n  } else {\n    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0; /* starting code */\n  sym = 0; /* starting code symbol */\n  len = min; /* starting code length */\n  next = table_index; /* current table to fill in */\n  curr = root; /* current table index bits */\n  drop = 0; /* current bits to drop from code for index */\n  low = -1; /* trigger new sub-table when len > root */\n  used = 1 << root; /* use root table entries */\n  mask = used - 1; /* mask for comparing low */\n\n  /* check available table space */\n  if (type === LENS && used > ENOUGH_LENS || type === DISTS && used > ENOUGH_DISTS) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    } else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    } else {\n      here_op = 32 + 64; /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << len - drop;\n    fill = 1 << curr;\n    min = fill; /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = here_bits << 24 | here_op << 16 | here_val | 0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << len - 1;\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) {\n        break;\n      }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min; /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) {\n          break;\n        }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if (type === LENS && used > ENOUGH_LENS || type === DISTS && used > ENOUGH_DISTS) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = root << 24 | curr << 16 | next - table_index | 0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = len - drop << 24 | 64 << 16 | 0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\nvar utils = require('../utils/common');\nvar adler32 = require('./adler32');\nvar crc32 = require('./crc32');\nvar inflate_fast = require('./inffast');\nvar inflate_table = require('./inftrees');\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH = 4;\nvar Z_BLOCK = 5;\nvar Z_TREES = 6;\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK = 0;\nvar Z_STREAM_END = 1;\nvar Z_NEED_DICT = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR = -2;\nvar Z_DATA_ERROR = -3;\nvar Z_MEM_ERROR = -4;\nvar Z_BUF_ERROR = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED = 8;\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\nvar HEAD = 1; /* i: waiting for magic header */\nvar FLAGS = 2; /* i: waiting for method and flags (gzip) */\nvar TIME = 3; /* i: waiting for modification time (gzip) */\nvar OS = 4; /* i: waiting for extra flags and operating system (gzip) */\nvar EXLEN = 5; /* i: waiting for extra length (gzip) */\nvar EXTRA = 6; /* i: waiting for extra bytes (gzip) */\nvar NAME = 7; /* i: waiting for end of file name (gzip) */\nvar COMMENT = 8; /* i: waiting for end of comment (gzip) */\nvar HCRC = 9; /* i: waiting for header crc (gzip) */\nvar DICTID = 10; /* i: waiting for dictionary check value */\nvar DICT = 11; /* waiting for inflateSetDictionary() call */\nvar TYPE = 12; /* i: waiting for type bits, including last-flag bit */\nvar TYPEDO = 13; /* i: same, but skip check to exit inflate on new block */\nvar STORED = 14; /* i: waiting for stored size (length and complement) */\nvar COPY_ = 15; /* i/o: same as COPY below, but only first time in */\nvar COPY = 16; /* i/o: waiting for input or output to copy stored block */\nvar TABLE = 17; /* i: waiting for dynamic block table lengths */\nvar LENLENS = 18; /* i: waiting for code length code lengths */\nvar CODELENS = 19; /* i: waiting for length/lit and distance code lengths */\nvar LEN_ = 20; /* i: same as LEN below, but only first time in */\nvar LEN = 21; /* i: waiting for length/lit/eob code */\nvar LENEXT = 22; /* i: waiting for length extra bits */\nvar DIST = 23; /* i: waiting for distance code */\nvar DISTEXT = 24; /* i: waiting for distance extra bits */\nvar MATCH = 25; /* o: waiting for output space to copy string */\nvar LIT = 26; /* o: waiting for output space to write literal */\nvar CHECK = 27; /* i: waiting for 32-bit check value */\nvar LENGTH = 28; /* i: waiting for 32-bit length (gzip) */\nvar DONE = 29; /* finished check, done -- remain here until reset */\nvar BAD = 30; /* got a data error -- remain here until reset */\nvar MEM = 31; /* got an inflate() memory error -- remain here until reset */\nvar SYNC = 32; /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\nfunction zswap32(q) {\n  return (q >>> 24 & 0xff) + (q >>> 8 & 0xff00) + ((q & 0xff00) << 8) + ((q & 0xff) << 24);\n}\nfunction InflateState() {\n  this.mode = 0; /* current inflate mode */\n  this.last = false; /* true if processing last block */\n  this.wrap = 0; /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false; /* true if dictionary provided */\n  this.flags = 0; /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0; /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0; /* protected copy of check value */\n  this.total = 0; /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null; /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0; /* log base 2 of requested window size */\n  this.wsize = 0; /* window size or zero if not using window */\n  this.whave = 0; /* valid bytes in the window */\n  this.wnext = 0; /* window write index */\n  this.window = null; /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0; /* input bit accumulator */\n  this.bits = 0; /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0; /* literal or length of data to copy */\n  this.offset = 0; /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0; /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null; /* starting table for length/literal codes */\n  this.distcode = null; /* starting table for distance codes */\n  this.lenbits = 0; /* index bits for lencode */\n  this.distbits = 0; /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0; /* number of code length code lengths */\n  this.nlen = 0; /* number of length code lengths */\n  this.ndist = 0; /* number of distance code lengths */\n  this.have = 0; /* number of code lengths in lens[] */\n  this.next = null; /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null; /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null; /* dynamic table for distance codes (JS specific) */\n  this.sane = 0; /* if false, allow invalid distance too far */\n  this.back = 0; /* bits back of last unprocessed length/lit */\n  this.was = 0; /* initial length of match */\n}\nfunction inflateResetKeep(strm) {\n  var state;\n  if (!strm || !strm.state) {\n    return Z_STREAM_ERROR;\n  }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {\n    /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null /*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\nfunction inflateReset(strm) {\n  var state;\n  if (!strm || !strm.state) {\n    return Z_STREAM_ERROR;\n  }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n}\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) {\n    return Z_STREAM_ERROR;\n  }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  } else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n  if (!strm) {\n    return Z_STREAM_ERROR;\n  }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null /*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null /*Z_NULL*/;\n  }\n  return ret;\n}\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) {\n      state.lens[sym++] = 8;\n    }\n    while (sym < 256) {\n      state.lens[sym++] = 9;\n    }\n    while (sym < 280) {\n      state.lens[sym++] = 7;\n    }\n    while (sym < 288) {\n      state.lens[sym++] = 8;\n    }\n    inflate_table(LENS, state.lens, 0, 288, lenfix, 0, state.work, {\n      bits: 9\n    });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) {\n      state.lens[sym++] = 5;\n    }\n    inflate_table(DISTS, state.lens, 0, 32, distfix, 0, state.work, {\n      bits: 5\n    });\n\n    /* do this just once */\n    virgin = false;\n  }\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  } else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    } else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) {\n        state.wnext = 0;\n      }\n      if (state.whave < state.wsize) {\n        state.whave += dist;\n      }\n    }\n  }\n  return 0;\n}\nfunction inflate(strm, flush) {\n  var state;\n  var input, output; // input/output buffers\n  var next; /* next input INDEX */\n  var put; /* next output INDEX */\n  var have, left; /* available input and output */\n  var hold; /* bit buffer */\n  var bits; /* bits in bit buffer */\n  var _in, _out; /* save starting available input and output */\n  var copy; /* number of stored or match bytes to copy */\n  var from; /* where to copy match bytes from */\n  var from_source;\n  var here = 0; /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len; /* length to copy for repeats, bits to drop */\n  var ret; /* return code */\n  var hbuf = new utils.Buf8(4); /* buffer for gzip header crc calculation */\n  var opts;\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n  [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n  if (!strm || !strm.state || !strm.output || !strm.input && strm.avail_in !== 0) {\n    return Z_STREAM_ERROR;\n  }\n  state = strm.state;\n  if (state.mode === TYPE) {\n    state.mode = TYPEDO;\n  } /* skip check */\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n  inf_leave:\n  // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) {\n            break inf_leave;\n          }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.wrap & 2 && hold === 0x8b1f) {\n          /* gzip header */\n          state.check = 0 /*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = hold >>> 8 & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0; /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) || /* check if zlib header allowed */\n        (((hold & 0xff /*BITS(8)*/) << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f /*BITS(4)*/) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f /*BITS(4)*/) + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        } else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1 /*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) {\n            break inf_leave;\n          }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = hold >> 8 & 1;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = hold >>> 8 & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n      /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) {\n            break inf_leave;\n          }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = hold >>> 8 & 0xff;\n          hbuf[2] = hold >>> 16 & 0xff;\n          hbuf[3] = hold >>> 24 & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n      /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) {\n            break inf_leave;\n          }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = hold & 0xff;\n          state.head.os = hold >> 8;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = hold >>> 8 & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n      /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) {\n              break inf_leave;\n            }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = hold >>> 8 & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        } else if (state.head) {\n          state.head.extra = null /*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n      /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) {\n            copy = have;\n          }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(state.head.extra, input, next,\n              // extra field is limited to 65536 bytes\n              // - no need for additional size check\n              copy, /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n              len);\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) {\n            break inf_leave;\n          }\n        }\n        state.length = 0;\n        state.mode = NAME;\n      /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) {\n            break inf_leave;\n          }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len && state.length < 65536 /*state.head.name_max*/) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) {\n            break inf_leave;\n          }\n        } else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n      /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) {\n            break inf_leave;\n          }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len && state.length < 65536 /*state.head.comm_max*/) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) {\n            break inf_leave;\n          }\n        } else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n      /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) {\n              break inf_leave;\n            }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = state.flags >> 9 & 1;\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) {\n            break inf_leave;\n          }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n      /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1 /*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n      /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) {\n          break inf_leave;\n        }\n      /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) {\n            break inf_leave;\n          }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = hold & 0x01 /*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch (hold & 0x03 /*BITS(2)*/) {\n          case 0:\n            /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:\n            /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_; /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:\n            /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) {\n            break inf_leave;\n          }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== (hold >>> 16 ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) {\n          break inf_leave;\n        }\n      /* falls through */\n      case COPY_:\n        state.mode = COPY;\n      /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) {\n            copy = have;\n          }\n          if (copy > left) {\n            copy = left;\n          }\n          if (copy === 0) {\n            break inf_leave;\n          }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) {\n            break inf_leave;\n          }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f /*BITS(5)*/) + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f /*BITS(5)*/) + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f /*BITS(4)*/) + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        //#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n        //#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n      /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) {\n              break inf_leave;\n            }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = hold & 0x07; //BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n        opts = {\n          bits: state.lenbits\n        };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n      /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & (1 << state.lenbits) - 1]; /*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = here >>> 16 & 0xff;\n            here_val = here & 0xffff;\n            if (here_bits <= bits) {\n              break;\n            }\n            //--- PULLBYTE() ---//\n            if (have === 0) {\n              break inf_leave;\n            }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          } else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) {\n                  break inf_leave;\n                }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03); //BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            } else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) {\n                  break inf_leave;\n                }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07); //BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            } else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) {\n                  break inf_leave;\n                }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f); //BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) {\n          break;\n        }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n        opts = {\n          bits: state.lenbits\n        };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = {\n          bits: state.distbits\n        };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) {\n          break inf_leave;\n        }\n      /* falls through */\n      case LEN_:\n        state.mode = LEN;\n      /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & (1 << state.lenbits) - 1]; /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = here >>> 16 & 0xff;\n          here_val = here & 0xffff;\n          if (here_bits <= bits) {\n            break;\n          }\n          //--- PULLBYTE() ---//\n          if (have === 0) {\n            break inf_leave;\n          }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val + ((hold & (1 << last_bits + last_op) - 1 /*BITS(last.bits + last.op)*/) >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = here >>> 16 & 0xff;\n            here_val = here & 0xffff;\n            if (last_bits + here_bits <= bits) {\n              break;\n            }\n            //--- PULLBYTE() ---//\n            if (have === 0) {\n              break inf_leave;\n            }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n      /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) {\n              break inf_leave;\n            }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & (1 << state.extra) - 1 /*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n      /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & (1 << state.distbits) - 1]; /*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = here >>> 16 & 0xff;\n          here_val = here & 0xffff;\n          if (here_bits <= bits) {\n            break;\n          }\n          //--- PULLBYTE() ---//\n          if (have === 0) {\n            break inf_leave;\n          }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val + ((hold & (1 << last_bits + last_op) - 1 /*BITS(last.bits + last.op)*/) >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = here >>> 16 & 0xff;\n            here_val = here & 0xffff;\n            if (last_bits + here_bits <= bits) {\n              break;\n            }\n            //--- PULLBYTE() ---//\n            if (have === 0) {\n              break inf_leave;\n            }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = here_op & 15;\n        state.mode = DISTEXT;\n      /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) {\n              break inf_leave;\n            }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & (1 << state.extra) - 1 /*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n        //#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n      /* falls through */\n      case MATCH:\n        if (left === 0) {\n          break inf_leave;\n        }\n        copy = _out - left;\n        if (state.offset > copy) {\n          /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n            // (!) This block is disabled in zlib defaults,\n            // don't enable it for binary compatibility\n            //#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n            //          Trace((stderr, \"inflate.c too far\\n\"));\n            //          copy -= state.whave;\n            //          if (copy > state.length) { copy = state.length; }\n            //          if (copy > left) { copy = left; }\n            //          left -= copy;\n            //          state.length -= copy;\n            //          do {\n            //            output[put++] = 0;\n            //          } while (--copy);\n            //          if (state.length === 0) { state.mode = LEN; }\n            //          break;\n            //#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          } else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) {\n            copy = state.length;\n          }\n          from_source = state.window;\n        } else {\n          /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) {\n          copy = left;\n        }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) {\n          state.mode = LEN;\n        }\n        break;\n      case LIT:\n        if (left === 0) {\n          break inf_leave;\n        }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) {\n              break inf_leave;\n            }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check = /*UPDATE(state.check, put - _out, _out);*/\n            state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out);\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n      /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) {\n              break inf_leave;\n            }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n      /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n      /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || _out !== strm.avail_out && state.mode < BAD && (state.mode < CHECK || flush !== Z_FINISH)) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n    state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out);\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) + (state.mode === TYPE ? 128 : 0) + (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if ((_in === 0 && _out === 0 || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\nfunction inflateEnd(strm) {\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) {\n    return Z_STREAM_ERROR;\n  }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) {\n    return Z_STREAM_ERROR;\n  }\n  state = strm.state;\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\nmodule.exports = {\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH: 0,\n  Z_PARTIAL_FLUSH: 1,\n  Z_SYNC_FLUSH: 2,\n  Z_FULL_FLUSH: 3,\n  Z_FINISH: 4,\n  Z_BLOCK: 5,\n  Z_TREES: 6,\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK: 0,\n  Z_STREAM_END: 1,\n  Z_NEED_DICT: 2,\n  Z_ERRNO: -1,\n  Z_STREAM_ERROR: -2,\n  Z_DATA_ERROR: -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR: -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION: 0,\n  Z_BEST_SPEED: 1,\n  Z_BEST_COMPRESSION: 9,\n  Z_DEFAULT_COMPRESSION: -1,\n  Z_FILTERED: 1,\n  Z_HUFFMAN_ONLY: 2,\n  Z_RLE: 3,\n  Z_FIXED: 4,\n  Z_DEFAULT_STRATEGY: 0,\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY: 0,\n  Z_TEXT: 1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN: 2,\n  /* The deflate compression method */\n  Z_DEFLATED: 8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text = 0;\n  /* modification time */\n  this.time = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags = 0;\n  /* operating system */\n  this.os = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len = 0; // Actually, we don't need it in JS,\n  // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done = false;\n}\nmodule.exports = GZheader;", "'use strict';\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils = require('./utils/common');\nvar strings = require('./utils/strings');\nvar c = require('./zlib/constants');\nvar msg = require('./zlib/messages');\nvar ZStream = require('./zlib/zstream');\nvar GZheader = require('./zlib/gzheader');\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && opt.windowBits >= 0 && opt.windowBits < 16) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) {\n      opt.windowBits = -15;\n    }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if (opt.windowBits >= 0 && opt.windowBits < 16 && !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if (opt.windowBits > 15 && opt.windowBits < 48) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n  this.err = 0; // error code, if happens (0 = Z_OK)\n  this.msg = ''; // error message\n  this.ended = false; // used to avoid multiple onEnd() calls\n  this.chunks = []; // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n  var status = zlib_inflate.inflateInit2(this.strm, opt.windowBits);\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n  this.header = new GZheader();\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) {\n      //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== c.Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n  if (this.ended) {\n    return false;\n  }\n  _mode = mode === ~~mode ? mode : mode === true ? c.Z_FINISH : c.Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH); /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(this.strm, dictionary);\n    }\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH)) {\n        if (this.options.to === 'string') {\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) {\n            utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0);\n          }\n          this.onData(utf8str);\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n  return true;\n};\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) {\n    throw inflator.msg || msg[inflator.err];\n  }\n  return inflator.result;\n}\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip = inflate;", "// Top level file is just a mixin of submodules & constants\n'use strict';\n\nvar assign = require('./lib/utils/common').assign;\nvar deflate = require('./lib/deflate');\nvar inflate = require('./lib/inflate');\nvar constants = require('./lib/zlib/constants');\nvar pako = {};\nassign(pako, deflate, inflate, constants);\nmodule.exports = pako;", ";\n(function () {\n  var UTIF = {};\n\n  // Make available for import by `require()`\n  if (typeof module == \"object\") {\n    module.exports = UTIF;\n  } else {\n    self.UTIF = UTIF;\n  }\n  var pako = typeof require === \"function\" ? require(\"pako\") : self.pako;\n  function log() {\n    if (typeof process == \"undefined\" || process.env.NODE_ENV == \"development\") console.log.apply(console, arguments);\n  }\n  (function (UTIF, pako) {\n    // Following lines add a JPEG decoder  to UTIF.JpegDecoder\n    (function () {\n      \"use strict\";\n\n      var W = function a1() {\n          function W(p) {\n            this.message = \"JPEG error: \" + p;\n          }\n          W.prototype = new Error();\n          W.prototype.name = \"JpegError\";\n          W.constructor = W;\n          return W;\n        }(),\n        ak = function ag() {\n          var p = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]),\n            t = 4017,\n            ac = 799,\n            ah = 3406,\n            ao = 2276,\n            ar = 1567,\n            ai = 3784,\n            s = 5793,\n            ad = 2896;\n          function ak(Q) {\n            if (Q == null) Q = {};\n            if (Q.w == null) Q.w = -1;\n            this.V = Q.n;\n            this.N = Q.w;\n          }\n          function a5(Q, h) {\n            var f = 0,\n              G = [],\n              n,\n              E,\n              a = 16,\n              F;\n            while (a > 0 && !Q[a - 1]) {\n              a--;\n            }\n            G.push({\n              children: [],\n              index: 0\n            });\n            var C = G[0];\n            for (n = 0; n < a; n++) {\n              for (E = 0; E < Q[n]; E++) {\n                C = G.pop();\n                C.children[C.index] = h[f];\n                while (C.index > 0) {\n                  C = G.pop();\n                }\n                C.index++;\n                G.push(C);\n                while (G.length <= n) {\n                  G.push(F = {\n                    children: [],\n                    index: 0\n                  });\n                  C.children[C.index] = F.children;\n                  C = F;\n                }\n                f++;\n              }\n              if (n + 1 < a) {\n                G.push(F = {\n                  children: [],\n                  index: 0\n                });\n                C.children[C.index] = F.children;\n                C = F;\n              }\n            }\n            return G[0].children;\n          }\n          function a2(Q, h, f) {\n            return 64 * ((Q.P + 1) * h + f);\n          }\n          function a7(Q, h, f, G, n, E, a, C, F, d) {\n            if (d == null) d = !1;\n            var T = f.m,\n              U = f.Z,\n              z = h,\n              J = 0,\n              V = 0,\n              r = 0,\n              D = 0,\n              a8,\n              q = 0,\n              X,\n              O,\n              _,\n              N,\n              e,\n              K,\n              x = 0,\n              k,\n              g,\n              R,\n              c;\n            function Y() {\n              if (V > 0) {\n                V--;\n                return J >> V & 1;\n              }\n              J = Q[h++];\n              if (J === 255) {\n                var I = Q[h++];\n                if (I) {\n                  if (I === 220 && d) {\n                    h += 2;\n                    var l = Z(Q, h);\n                    h += 2;\n                    if (l > 0 && l !== f.s) {\n                      throw new DNLMarkerError(\"Found DNL marker (0xFFDC) while parsing scan data\", l);\n                    }\n                  } else if (I === 217) {\n                    if (d) {\n                      var M = q * 8;\n                      if (M > 0 && M < f.s / 10) {\n                        throw new DNLMarkerError(\"Found EOI marker (0xFFD9) while parsing scan data, \" + \"possibly caused by incorrect `scanLines` parameter\", M);\n                      }\n                    }\n                    throw new EOIMarkerError(\"Found EOI marker (0xFFD9) while parsing scan data\");\n                  }\n                  throw new W(\"unexpected marker\");\n                }\n              }\n              V = 7;\n              return J >>> 7;\n            }\n            function u(I) {\n              var l = I;\n              while (!0) {\n                l = l[Y()];\n                switch (typeof l) {\n                  case \"number\":\n                    return l;\n                  case \"object\":\n                    continue;\n                }\n                throw new W(\"invalid huffman sequence\");\n              }\n            }\n            function m(I) {\n              var e = 0;\n              while (I > 0) {\n                e = e << 1 | Y();\n                I--;\n              }\n              return e;\n            }\n            function j(I) {\n              if (I === 1) {\n                return Y() === 1 ? 1 : -1;\n              }\n              var e = m(I);\n              if (e >= 1 << I - 1) {\n                return e;\n              }\n              return e + (-1 << I) + 1;\n            }\n            function v(X, I) {\n              var l = u(X.J),\n                M = l === 0 ? 0 : j(l),\n                N = 1;\n              X.D[I] = X.Q += M;\n              while (N < 64) {\n                var S = u(X.i),\n                  i = S & 15,\n                  A = S >> 4;\n                if (i === 0) {\n                  if (A < 15) {\n                    break;\n                  }\n                  N += 16;\n                  continue;\n                }\n                N += A;\n                var o = p[N];\n                X.D[I + o] = j(i);\n                N++;\n              }\n            }\n            function $(X, I) {\n              var l = u(X.J),\n                M = l === 0 ? 0 : j(l) << F;\n              X.D[I] = X.Q += M;\n            }\n            function b(X, I) {\n              X.D[I] |= Y() << F;\n            }\n            function P(X, I) {\n              if (r > 0) {\n                r--;\n                return;\n              }\n              var N = E,\n                l = a;\n              while (N <= l) {\n                var M = u(X.i),\n                  S = M & 15,\n                  i = M >> 4;\n                if (S === 0) {\n                  if (i < 15) {\n                    r = m(i) + (1 << i) - 1;\n                    break;\n                  }\n                  N += 16;\n                  continue;\n                }\n                N += i;\n                var A = p[N];\n                X.D[I + A] = j(S) * (1 << F);\n                N++;\n              }\n            }\n            function a4(X, I) {\n              var N = E,\n                l = a,\n                M = 0,\n                S,\n                i;\n              while (N <= l) {\n                var A = I + p[N],\n                  o = X.D[A] < 0 ? -1 : 1;\n                switch (D) {\n                  case 0:\n                    i = u(X.i);\n                    S = i & 15;\n                    M = i >> 4;\n                    if (S === 0) {\n                      if (M < 15) {\n                        r = m(M) + (1 << M);\n                        D = 4;\n                      } else {\n                        M = 16;\n                        D = 1;\n                      }\n                    } else {\n                      if (S !== 1) {\n                        throw new W(\"invalid ACn encoding\");\n                      }\n                      a8 = j(S);\n                      D = M ? 2 : 3;\n                    }\n                    continue;\n                  case 1:\n                  case 2:\n                    if (X.D[A]) {\n                      X.D[A] += o * (Y() << F);\n                    } else {\n                      M--;\n                      if (M === 0) {\n                        D = D === 2 ? 3 : 0;\n                      }\n                    }\n                    break;\n                  case 3:\n                    if (X.D[A]) {\n                      X.D[A] += o * (Y() << F);\n                    } else {\n                      X.D[A] = a8 << F;\n                      D = 0;\n                    }\n                    break;\n                  case 4:\n                    if (X.D[A]) {\n                      X.D[A] += o * (Y() << F);\n                    }\n                    break;\n                }\n                N++;\n              }\n              if (D === 4) {\n                r--;\n                if (r === 0) {\n                  D = 0;\n                }\n              }\n            }\n            function H(X, I, x, l, M) {\n              var S = x / T | 0,\n                i = x % T;\n              q = S * X.A + l;\n              var A = i * X.h + M,\n                o = a2(X, q, A);\n              I(X, o);\n            }\n            function w(X, I, x) {\n              q = x / X.P | 0;\n              var l = x % X.P,\n                M = a2(X, q, l);\n              I(X, M);\n            }\n            var y = G.length;\n            if (U) {\n              if (E === 0) {\n                K = C === 0 ? $ : b;\n              } else {\n                K = C === 0 ? P : a4;\n              }\n            } else {\n              K = v;\n            }\n            if (y === 1) {\n              g = G[0].P * G[0].c;\n            } else {\n              g = T * f.R;\n            }\n            while (x <= g) {\n              var L = n ? Math.min(g - x, n) : g;\n              if (L > 0) {\n                for (O = 0; O < y; O++) {\n                  G[O].Q = 0;\n                }\n                r = 0;\n                if (y === 1) {\n                  X = G[0];\n                  for (e = 0; e < L; e++) {\n                    w(X, K, x);\n                    x++;\n                  }\n                } else {\n                  for (e = 0; e < L; e++) {\n                    for (O = 0; O < y; O++) {\n                      X = G[O];\n                      R = X.h;\n                      c = X.A;\n                      for (_ = 0; _ < c; _++) {\n                        for (N = 0; N < R; N++) {\n                          H(X, K, x, _, N);\n                        }\n                      }\n                    }\n                    x++;\n                  }\n                }\n              }\n              V = 0;\n              k = an(Q, h);\n              if (!k) {\n                break;\n              }\n              if (k.u) {\n                var a6 = L > 0 ? \"unexpected\" : \"excessive\";\n                h = k.offset;\n              }\n              if (k.M >= 65488 && k.M <= 65495) {\n                h += 2;\n              } else {\n                break;\n              }\n            }\n            return h - z;\n          }\n          function al(Q, h, f) {\n            var G = Q.$,\n              n = Q.D,\n              E,\n              a,\n              C,\n              F,\n              d,\n              T,\n              U,\n              z,\n              J,\n              V,\n              Y,\n              u,\n              m,\n              j,\n              v,\n              $,\n              b;\n            if (!G) {\n              throw new W(\"missing required Quantization Table.\");\n            }\n            for (var r = 0; r < 64; r += 8) {\n              J = n[h + r];\n              V = n[h + r + 1];\n              Y = n[h + r + 2];\n              u = n[h + r + 3];\n              m = n[h + r + 4];\n              j = n[h + r + 5];\n              v = n[h + r + 6];\n              $ = n[h + r + 7];\n              J *= G[r];\n              if ((V | Y | u | m | j | v | $) === 0) {\n                b = s * J + 512 >> 10;\n                f[r] = b;\n                f[r + 1] = b;\n                f[r + 2] = b;\n                f[r + 3] = b;\n                f[r + 4] = b;\n                f[r + 5] = b;\n                f[r + 6] = b;\n                f[r + 7] = b;\n                continue;\n              }\n              V *= G[r + 1];\n              Y *= G[r + 2];\n              u *= G[r + 3];\n              m *= G[r + 4];\n              j *= G[r + 5];\n              v *= G[r + 6];\n              $ *= G[r + 7];\n              E = s * J + 128 >> 8;\n              a = s * m + 128 >> 8;\n              C = Y;\n              F = v;\n              d = ad * (V - $) + 128 >> 8;\n              z = ad * (V + $) + 128 >> 8;\n              T = u << 4;\n              U = j << 4;\n              E = E + a + 1 >> 1;\n              a = E - a;\n              b = C * ai + F * ar + 128 >> 8;\n              C = C * ar - F * ai + 128 >> 8;\n              F = b;\n              d = d + U + 1 >> 1;\n              U = d - U;\n              z = z + T + 1 >> 1;\n              T = z - T;\n              E = E + F + 1 >> 1;\n              F = E - F;\n              a = a + C + 1 >> 1;\n              C = a - C;\n              b = d * ao + z * ah + 2048 >> 12;\n              d = d * ah - z * ao + 2048 >> 12;\n              z = b;\n              b = T * ac + U * t + 2048 >> 12;\n              T = T * t - U * ac + 2048 >> 12;\n              U = b;\n              f[r] = E + z;\n              f[r + 7] = E - z;\n              f[r + 1] = a + U;\n              f[r + 6] = a - U;\n              f[r + 2] = C + T;\n              f[r + 5] = C - T;\n              f[r + 3] = F + d;\n              f[r + 4] = F - d;\n            }\n            for (var P = 0; P < 8; ++P) {\n              J = f[P];\n              V = f[P + 8];\n              Y = f[P + 16];\n              u = f[P + 24];\n              m = f[P + 32];\n              j = f[P + 40];\n              v = f[P + 48];\n              $ = f[P + 56];\n              if ((V | Y | u | m | j | v | $) === 0) {\n                b = s * J + 8192 >> 14;\n                if (b < -2040) {\n                  b = 0;\n                } else if (b >= 2024) {\n                  b = 255;\n                } else {\n                  b = b + 2056 >> 4;\n                }\n                n[h + P] = b;\n                n[h + P + 8] = b;\n                n[h + P + 16] = b;\n                n[h + P + 24] = b;\n                n[h + P + 32] = b;\n                n[h + P + 40] = b;\n                n[h + P + 48] = b;\n                n[h + P + 56] = b;\n                continue;\n              }\n              E = s * J + 2048 >> 12;\n              a = s * m + 2048 >> 12;\n              C = Y;\n              F = v;\n              d = ad * (V - $) + 2048 >> 12;\n              z = ad * (V + $) + 2048 >> 12;\n              T = u;\n              U = j;\n              E = (E + a + 1 >> 1) + 4112;\n              a = E - a;\n              b = C * ai + F * ar + 2048 >> 12;\n              C = C * ar - F * ai + 2048 >> 12;\n              F = b;\n              d = d + U + 1 >> 1;\n              U = d - U;\n              z = z + T + 1 >> 1;\n              T = z - T;\n              E = E + F + 1 >> 1;\n              F = E - F;\n              a = a + C + 1 >> 1;\n              C = a - C;\n              b = d * ao + z * ah + 2048 >> 12;\n              d = d * ah - z * ao + 2048 >> 12;\n              z = b;\n              b = T * ac + U * t + 2048 >> 12;\n              T = T * t - U * ac + 2048 >> 12;\n              U = b;\n              J = E + z;\n              $ = E - z;\n              V = a + U;\n              v = a - U;\n              Y = C + T;\n              j = C - T;\n              u = F + d;\n              m = F - d;\n              if (J < 16) {\n                J = 0;\n              } else if (J >= 4080) {\n                J = 255;\n              } else {\n                J >>= 4;\n              }\n              if (V < 16) {\n                V = 0;\n              } else if (V >= 4080) {\n                V = 255;\n              } else {\n                V >>= 4;\n              }\n              if (Y < 16) {\n                Y = 0;\n              } else if (Y >= 4080) {\n                Y = 255;\n              } else {\n                Y >>= 4;\n              }\n              if (u < 16) {\n                u = 0;\n              } else if (u >= 4080) {\n                u = 255;\n              } else {\n                u >>= 4;\n              }\n              if (m < 16) {\n                m = 0;\n              } else if (m >= 4080) {\n                m = 255;\n              } else {\n                m >>= 4;\n              }\n              if (j < 16) {\n                j = 0;\n              } else if (j >= 4080) {\n                j = 255;\n              } else {\n                j >>= 4;\n              }\n              if (v < 16) {\n                v = 0;\n              } else if (v >= 4080) {\n                v = 255;\n              } else {\n                v >>= 4;\n              }\n              if ($ < 16) {\n                $ = 0;\n              } else if ($ >= 4080) {\n                $ = 255;\n              } else {\n                $ >>= 4;\n              }\n              n[h + P] = J;\n              n[h + P + 8] = V;\n              n[h + P + 16] = Y;\n              n[h + P + 24] = u;\n              n[h + P + 32] = m;\n              n[h + P + 40] = j;\n              n[h + P + 48] = v;\n              n[h + P + 56] = $;\n            }\n          }\n          function a0(Q, h) {\n            var f = h.P,\n              G = h.c,\n              n = new Int16Array(64);\n            for (var E = 0; E < G; E++) {\n              for (var a = 0; a < f; a++) {\n                var C = a2(h, E, a);\n                al(h, C, n);\n              }\n            }\n            return h.D;\n          }\n          function an(Q, h, f) {\n            if (f == null) f = h;\n            var G = Q.length - 1,\n              n = f < h ? f : h;\n            if (h >= G) {\n              return null;\n            }\n            var E = Z(Q, h);\n            if (E >= 65472 && E <= 65534) {\n              return {\n                u: null,\n                M: E,\n                offset: h\n              };\n            }\n            var a = Z(Q, n);\n            while (!(a >= 65472 && a <= 65534)) {\n              if (++n >= G) {\n                return null;\n              }\n              a = Z(Q, n);\n            }\n            return {\n              u: E.toString(16),\n              M: a,\n              offset: n\n            };\n          }\n          ak.prototype = {\n            parse(Q, h) {\n              if (h == null) h = {};\n              var f = h.F,\n                E = 0,\n                a = null,\n                C = null,\n                F,\n                d,\n                T = 0;\n              function G() {\n                var o = Z(Q, E);\n                E += 2;\n                var B = E + o - 2,\n                  V = an(Q, B, E);\n                if (V && V.u) {\n                  B = V.offset;\n                }\n                var ab = Q.subarray(E, B);\n                E += ab.length;\n                return ab;\n              }\n              function n(F) {\n                var o = Math.ceil(F.o / 8 / F.X),\n                  B = Math.ceil(F.s / 8 / F.B);\n                for (var Y = 0; Y < F.W.length; Y++) {\n                  R = F.W[Y];\n                  var ab = Math.ceil(Math.ceil(F.o / 8) * R.h / F.X),\n                    af = Math.ceil(Math.ceil(F.s / 8) * R.A / F.B),\n                    ap = o * R.h,\n                    aq = B * R.A,\n                    ae = 64 * aq * (ap + 1);\n                  R.D = new Int16Array(ae);\n                  R.P = ab;\n                  R.c = af;\n                }\n                F.m = o;\n                F.R = B;\n              }\n              var U = [],\n                z = [],\n                J = [],\n                V = Z(Q, E);\n              E += 2;\n              if (V !== 65496) {\n                throw new W(\"SOI not found\");\n              }\n              V = Z(Q, E);\n              E += 2;\n              markerLoop: while (V !== 65497) {\n                var Y, u, m;\n                switch (V) {\n                  case 65504:\n                  case 65505:\n                  case 65506:\n                  case 65507:\n                  case 65508:\n                  case 65509:\n                  case 65510:\n                  case 65511:\n                  case 65512:\n                  case 65513:\n                  case 65514:\n                  case 65515:\n                  case 65516:\n                  case 65517:\n                  case 65518:\n                  case 65519:\n                  case 65534:\n                    var j = G();\n                    if (V === 65504) {\n                      if (j[0] === 74 && j[1] === 70 && j[2] === 73 && j[3] === 70 && j[4] === 0) {\n                        a = {\n                          version: {\n                            d: j[5],\n                            T: j[6]\n                          },\n                          K: j[7],\n                          j: j[8] << 8 | j[9],\n                          H: j[10] << 8 | j[11],\n                          S: j[12],\n                          I: j[13],\n                          C: j.subarray(14, 14 + 3 * j[12] * j[13])\n                        };\n                      }\n                    }\n                    if (V === 65518) {\n                      if (j[0] === 65 && j[1] === 100 && j[2] === 111 && j[3] === 98 && j[4] === 101) {\n                        C = {\n                          version: j[5] << 8 | j[6],\n                          k: j[7] << 8 | j[8],\n                          q: j[9] << 8 | j[10],\n                          a: j[11]\n                        };\n                      }\n                    }\n                    break;\n                  case 65499:\n                    var v = Z(Q, E),\n                      b;\n                    E += 2;\n                    var $ = v + E - 2;\n                    while (E < $) {\n                      var r = Q[E++],\n                        P = new Uint16Array(64);\n                      if (r >> 4 === 0) {\n                        for (u = 0; u < 64; u++) {\n                          b = p[u];\n                          P[b] = Q[E++];\n                        }\n                      } else if (r >> 4 === 1) {\n                        for (u = 0; u < 64; u++) {\n                          b = p[u];\n                          P[b] = Z(Q, E);\n                          E += 2;\n                        }\n                      } else {\n                        throw new W(\"DQT - invalid table spec\");\n                      }\n                      U[r & 15] = P;\n                    }\n                    break;\n                  case 65472:\n                  case 65473:\n                  case 65474:\n                    if (F) {\n                      throw new W(\"Only single frame JPEGs supported\");\n                    }\n                    E += 2;\n                    F = {};\n                    F.G = V === 65473;\n                    F.Z = V === 65474;\n                    F.precision = Q[E++];\n                    var D = Z(Q, E),\n                      a4,\n                      q = 0,\n                      H = 0;\n                    E += 2;\n                    F.s = f || D;\n                    F.o = Z(Q, E);\n                    E += 2;\n                    F.W = [];\n                    F._ = {};\n                    var a8 = Q[E++];\n                    for (Y = 0; Y < a8; Y++) {\n                      a4 = Q[E];\n                      var w = Q[E + 1] >> 4,\n                        y = Q[E + 1] & 15;\n                      if (q < w) {\n                        q = w;\n                      }\n                      if (H < y) {\n                        H = y;\n                      }\n                      var X = Q[E + 2];\n                      m = F.W.push({\n                        h: w,\n                        A: y,\n                        L: X,\n                        $: null\n                      });\n                      F._[a4] = m - 1;\n                      E += 3;\n                    }\n                    F.X = q;\n                    F.B = H;\n                    n(F);\n                    break;\n                  case 65476:\n                    var O = Z(Q, E);\n                    E += 2;\n                    for (Y = 2; Y < O;) {\n                      var _ = Q[E++],\n                        N = new Uint8Array(16),\n                        e = 0;\n                      for (u = 0; u < 16; u++, E++) {\n                        e += N[u] = Q[E];\n                      }\n                      var K = new Uint8Array(e);\n                      for (u = 0; u < e; u++, E++) {\n                        K[u] = Q[E];\n                      }\n                      Y += 17 + e;\n                      (_ >> 4 === 0 ? J : z)[_ & 15] = a5(N, K);\n                    }\n                    break;\n                  case 65501:\n                    E += 2;\n                    d = Z(Q, E);\n                    E += 2;\n                    break;\n                  case 65498:\n                    var x = ++T === 1 && !f,\n                      R;\n                    E += 2;\n                    var k = Q[E++],\n                      g = [];\n                    for (Y = 0; Y < k; Y++) {\n                      var c = Q[E++],\n                        L = F._[c];\n                      R = F.W[L];\n                      R.index = c;\n                      var a6 = Q[E++];\n                      R.J = J[a6 >> 4];\n                      R.i = z[a6 & 15];\n                      g.push(R);\n                    }\n                    var I = Q[E++],\n                      l = Q[E++],\n                      M = Q[E++];\n                    try {\n                      var S = a7(Q, E, F, g, d, I, l, M >> 4, M & 15, x);\n                      E += S;\n                    } catch (ex) {\n                      if (ex instanceof DNLMarkerError) {\n                        return this.parse(Q, {\n                          F: ex.s\n                        });\n                      } else if (ex instanceof EOIMarkerError) {\n                        break markerLoop;\n                      }\n                      throw ex;\n                    }\n                    break;\n                  case 65500:\n                    E += 4;\n                    break;\n                  case 65535:\n                    if (Q[E] !== 255) {\n                      E--;\n                    }\n                    break;\n                  default:\n                    var i = an(Q, E - 2, E - 3);\n                    if (i && i.u) {\n                      E = i.offset;\n                      break;\n                    }\n                    if (E >= Q.length - 1) {\n                      break markerLoop;\n                    }\n                    throw new W(\"JpegImage.parse - unknown marker: \" + V.toString(16));\n                }\n                V = Z(Q, E);\n                E += 2;\n              }\n              this.width = F.o;\n              this.height = F.s;\n              this.g = a;\n              this.b = C;\n              this.W = [];\n              for (Y = 0; Y < F.W.length; Y++) {\n                R = F.W[Y];\n                var A = U[R.L];\n                if (A) {\n                  R.$ = A;\n                }\n                this.W.push({\n                  index: R.index,\n                  e: a0(F, R),\n                  l: R.h / F.X,\n                  t: R.A / F.B,\n                  P: R.P,\n                  c: R.c\n                });\n              }\n              this.p = this.W.length;\n              return undefined;\n            },\n            Y(Q, h, f) {\n              if (f == null) f = !1;\n              var G = this.width / Q,\n                n = this.height / h,\n                E,\n                a,\n                C,\n                F,\n                d,\n                T,\n                U,\n                z,\n                J,\n                V,\n                Y = 0,\n                u,\n                m = this.W.length,\n                j = Q * h * m,\n                v = new Uint8ClampedArray(j),\n                $ = new Uint32Array(Q),\n                b = 4294967288,\n                r;\n              for (U = 0; U < m; U++) {\n                E = this.W[U];\n                a = E.l * G;\n                C = E.t * n;\n                Y = U;\n                u = E.e;\n                F = E.P + 1 << 3;\n                if (a !== r) {\n                  for (d = 0; d < Q; d++) {\n                    z = 0 | d * a;\n                    $[d] = (z & b) << 3 | z & 7;\n                  }\n                  r = a;\n                }\n                for (T = 0; T < h; T++) {\n                  z = 0 | T * C;\n                  V = F * (z & b) | (z & 7) << 3;\n                  for (d = 0; d < Q; d++) {\n                    v[Y] = u[V + $[d]];\n                    Y += m;\n                  }\n                }\n              }\n              var P = this.V;\n              if (!f && m === 4 && !P) {\n                P = new Int32Array([-256, 255, -256, 255, -256, 255, -256, 255]);\n              }\n              if (P) {\n                for (U = 0; U < j;) {\n                  for (z = 0, J = 0; z < m; z++, U++, J += 2) {\n                    v[U] = (v[U] * P[J] >> 8) + P[J + 1];\n                  }\n                }\n              }\n              return v;\n            },\n            get f() {\n              if (this.b) {\n                return !!this.b.a;\n              }\n              if (this.p === 3) {\n                if (this.N === 0) {\n                  return !1;\n                } else if (this.W[0].index === 82 && this.W[1].index === 71 && this.W[2].index === 66) {\n                  return !1;\n                }\n                return !0;\n              }\n              if (this.N === 1) {\n                return !0;\n              }\n              return !1;\n            },\n            z: function aj(Q) {\n              var h, f, G;\n              for (var n = 0, E = Q.length; n < E; n += 3) {\n                h = Q[n];\n                f = Q[n + 1];\n                G = Q[n + 2];\n                Q[n] = h - 179.456 + 1.402 * G;\n                Q[n + 1] = h + 135.459 - .344 * f - .714 * G;\n                Q[n + 2] = h - 226.816 + 1.772 * f;\n              }\n              return Q;\n            },\n            O: function aa(Q) {\n              var h,\n                f,\n                G,\n                n,\n                E = 0;\n              for (var a = 0, C = Q.length; a < C; a += 4) {\n                h = Q[a];\n                f = Q[a + 1];\n                G = Q[a + 2];\n                n = Q[a + 3];\n                Q[E++] = -122.67195406894 + f * (-660635669420364e-19 * f + .000437130475926232 * G - 54080610064599e-18 * h + .00048449797120281 * n - .154362151871126) + G * (-.000957964378445773 * G + .000817076911346625 * h - .00477271405408747 * n + 1.53380253221734) + h * (.000961250184130688 * h - .00266257332283933 * n + .48357088451265) + n * (-.000336197177618394 * n + .484791561490776);\n                Q[E++] = 107.268039397724 + f * (219927104525741e-19 * f - .000640992018297945 * G + .000659397001245577 * h + .000426105652938837 * n - .176491792462875) + G * (-.000778269941513683 * G + .00130872261408275 * h + .000770482631801132 * n - .151051492775562) + h * (.00126935368114843 * h - .00265090189010898 * n + .25802910206845) + n * (-.000318913117588328 * n - .213742400323665);\n                Q[E++] = -20.810012546947 + f * (-.000570115196973677 * f - 263409051004589e-19 * G + .0020741088115012 * h - .00288260236853442 * n + .814272968359295) + G * (-153496057440975e-19 * G - .000132689043961446 * h + .000560833691242812 * n - .195152027534049) + h * (.00174418132927582 * h - .00255243321439347 * n + .116935020465145) + n * (-.000343531996510555 * n + .24165260232407);\n              }\n              return Q.subarray(0, E);\n            },\n            r: function a3(Q) {\n              var h, f, G;\n              for (var n = 0, E = Q.length; n < E; n += 4) {\n                h = Q[n];\n                f = Q[n + 1];\n                G = Q[n + 2];\n                Q[n] = 434.456 - h - 1.402 * G;\n                Q[n + 1] = 119.541 - h + .344 * f + .714 * G;\n                Q[n + 2] = 481.816 - h - 1.772 * f;\n              }\n              return Q;\n            },\n            U: function as(Q) {\n              var h,\n                f,\n                G,\n                n,\n                E = 0;\n              for (var a = 0, C = Q.length; a < C; a += 4) {\n                h = Q[a];\n                f = Q[a + 1];\n                G = Q[a + 2];\n                n = Q[a + 3];\n                Q[E++] = 255 + h * (-6747147073602441e-20 * h + .0008379262121013727 * f + .0002894718188643294 * G + .003264231057537806 * n - 1.1185611867203937) + f * (26374107616089404e-21 * f - 8626949158638572e-20 * G - .0002748769067499491 * n - .02155688794978967) + G * (-3878099212869363e-20 * G - .0003267808279485286 * n + .0686742238595345) - n * (.0003361971776183937 * n + .7430659151342254);\n                Q[E++] = 255 + h * (.00013596372813588848 * h + .000924537132573585 * f + .00010567359618683593 * G + .0004791864687436512 * n - .3109689587515875) + f * (-.00023545346108370344 * f + .0002702845253534714 * G + .0020200308977307156 * n - .7488052167015494) + G * (6834815998235662e-20 * G + .00015168452363460973 * n - .09751927774728933) - n * (.0003189131175883281 * n + .7364883807733168);\n                Q[E++] = 255 + h * (13598650411385308e-21 * h + .00012423956175490851 * f + .0004751985097583589 * G - 36729317476630424e-22 * n - .05562186980264034) + f * (.00016141380598724676 * f + .0009692239130725186 * G + .0007782692450036253 * n - .44015232367526463) + G * (5.068882914068769e-7 * G + .0017778369011375071 * n - .7591454649749609) - n * (.0003435319965105553 * n + .7063770186160144);\n              }\n              return Q.subarray(0, E);\n            },\n            getData: function (Q) {\n              var h = Q.width,\n                f = Q.height,\n                G = Q.forceRGB,\n                n = Q.isSourcePDF;\n              if (this.p > 4) {\n                throw new W(\"Unsupported color mode\");\n              }\n              var E = this.Y(h, f, n);\n              if (this.p === 1 && G) {\n                var a = E.length,\n                  C = new Uint8ClampedArray(a * 3),\n                  F = 0;\n                for (var d = 0; d < a; d++) {\n                  var T = E[d];\n                  C[F++] = T;\n                  C[F++] = T;\n                  C[F++] = T;\n                }\n                return C;\n              } else if (this.p === 3 && this.f) {\n                return this.z(E);\n              } else if (this.p === 4) {\n                if (this.f) {\n                  if (G) {\n                    return this.O(E);\n                  }\n                  return this.r(E);\n                } else if (G) {\n                  return this.U(E);\n                }\n              }\n              return E;\n            }\n          };\n          return ak;\n        }();\n      function a9(p, t) {\n        return p[t] << 24 >> 24;\n      }\n      function Z(p, t) {\n        return p[t] << 8 | p[t + 1];\n      }\n      function am(p, t) {\n        return (p[t] << 24 | p[t + 1] << 16 | p[t + 2] << 8 | p[t + 3]) >>> 0;\n      }\n      UTIF.JpegDecoder = ak;\n    })();\n\n    //UTIF.JpegDecoder = PDFJS.JpegImage;\n\n    UTIF.encodeImage = function (rgba, w, h, metadata) {\n      var idf = {\n        \"t256\": [w],\n        \"t257\": [h],\n        \"t258\": [8, 8, 8, 8],\n        \"t259\": [1],\n        \"t262\": [2],\n        \"t273\": [1000],\n        // strips offset\n        \"t277\": [4],\n        \"t278\": [h],\n        /* rows per strip */\"t279\": [w * h * 4],\n        // strip byte counts\n        \"t282\": [[72, 1]],\n        \"t283\": [[72, 1]],\n        \"t284\": [1],\n        \"t286\": [[0, 1]],\n        \"t287\": [[0, 1]],\n        \"t296\": [1],\n        \"t305\": [\"Photopea (UTIF.js)\"],\n        \"t338\": [1]\n      };\n      if (metadata) for (var i in metadata) idf[i] = metadata[i];\n      var prfx = new Uint8Array(UTIF.encode([idf]));\n      var img = new Uint8Array(rgba);\n      var data = new Uint8Array(1000 + w * h * 4);\n      for (var i = 0; i < prfx.length; i++) data[i] = prfx[i];\n      for (var i = 0; i < img.length; i++) data[1000 + i] = img[i];\n      return data.buffer;\n    };\n    UTIF.encode = function (ifds) {\n      var LE = false;\n      var data = new Uint8Array(20000),\n        offset = 4,\n        bin = LE ? UTIF._binLE : UTIF._binBE;\n      data[0] = data[1] = LE ? 73 : 77;\n      bin.writeUshort(data, 2, 42);\n      var ifdo = 8;\n      bin.writeUint(data, offset, ifdo);\n      offset += 4;\n      for (var i = 0; i < ifds.length; i++) {\n        var noffs = UTIF._writeIFD(bin, UTIF._types.basic, data, ifdo, ifds[i]);\n        ifdo = noffs[1];\n        if (i < ifds.length - 1) {\n          if ((ifdo & 3) != 0) ifdo += 4 - (ifdo & 3); // make each IFD start at multiple of 4\n          bin.writeUint(data, noffs[0], ifdo);\n        }\n      }\n      return data.slice(0, ifdo).buffer;\n    };\n    UTIF.decode = function (buff, prm) {\n      if (prm == null) prm = {\n        parseMN: true,\n        debug: false\n      }; // read MakerNote, debug\n      var data = new Uint8Array(buff),\n        offset = 0;\n      var id = UTIF._binBE.readASCII(data, offset, 2);\n      offset += 2;\n      var bin = id == \"II\" ? UTIF._binLE : UTIF._binBE;\n      var num = bin.readUshort(data, offset);\n      offset += 2;\n      var ifdo = bin.readUint(data, offset);\n      offset += 4;\n      var ifds = [];\n      while (true) {\n        var cnt = bin.readUshort(data, ifdo),\n          typ = bin.readUshort(data, ifdo + 4);\n        if (cnt != 0) if (typ < 1 || 13 < typ) {\n          log(\"error in TIFF\");\n          break;\n        }\n        ;\n        UTIF._readIFD(bin, data, ifdo, ifds, 0, prm);\n        ifdo = bin.readUint(data, ifdo + 2 + cnt * 12);\n        if (ifdo == 0) break;\n      }\n      return ifds;\n    };\n    UTIF.decodeImage = function (buff, img, ifds) {\n      if (img.data) return;\n      var data = new Uint8Array(buff);\n      var id = UTIF._binBE.readASCII(data, 0, 2);\n      if (img[\"t256\"] == null) return; // No width => probably not an image\n      img.isLE = id == \"II\";\n      img.width = img[\"t256\"][0]; //delete img[\"t256\"];\n      img.height = img[\"t257\"][0]; //delete img[\"t257\"];\n\n      var cmpr = img[\"t259\"] ? img[\"t259\"][0] : 1; //delete img[\"t259\"];\n      var fo = img[\"t266\"] ? img[\"t266\"][0] : 1; //delete img[\"t266\"];\n      if (img[\"t284\"] && img[\"t284\"][0] == 2) log(\"PlanarConfiguration 2 should not be used!\");\n      if (cmpr == 7 && img[\"t258\"] && img[\"t258\"].length > 3) img[\"t258\"] = img[\"t258\"].slice(0, 3);\n      var spp = img[\"t277\"] ? img[\"t277\"][0] : 1;\n      var bps = img[\"t258\"] ? img[\"t258\"][0] : 1;\n      var bipp = bps * spp; // bits per pixel\n      /*\r\n      var bipp;  // bits per pixel\r\n      if(img[\"t258\"]) bipp = Math.min(32,img[\"t258\"][0])*img[\"t258\"].length;\r\n      else            bipp = (img[\"t277\"]?img[\"t277\"][0]:1);  \r\n      */\n      // Some .NEF files have t258==14, even though they use 16 bits per pixel\n      if (cmpr == 1 && img[\"t279\"] != null && img[\"t278\"] && img[\"t262\"][0] == 32803) {\n        bipp = Math.round(img[\"t279\"][0] * 8 / (img.width * img[\"t278\"][0]));\n      }\n      if (img[\"t50885\"] && img[\"t50885\"][0] == 4) bipp = img[\"t258\"][0] * 3; // RAW_CANON_40D_SRAW_V103.CR2\n      var bipl = Math.ceil(img.width * bipp / 8) * 8;\n      var soff = img[\"t273\"];\n      if (soff == null || img[\"t322\"]) soff = img[\"t324\"];\n      var bcnt = img[\"t279\"];\n      if (cmpr == 1 && soff.length == 1) bcnt = [img.height * (bipl >>> 3)];\n      if (bcnt == null || img[\"t322\"]) bcnt = img[\"t325\"];\n      //bcnt[0] = Math.min(bcnt[0], data.length);  // Hasselblad, \"RAW_HASSELBLAD_H3D39II.3FR\"\n      var bytes = new Uint8Array(img.height * (bipl >>> 3)),\n        bilen = 0;\n      if (img[\"t322\"] != null)\n        // tiled\n        {\n          var tw = img[\"t322\"][0],\n            th = img[\"t323\"][0];\n          var tx = Math.floor((img.width + tw - 1) / tw);\n          var ty = Math.floor((img.height + th - 1) / th);\n          var tbuff = new Uint8Array(Math.ceil(tw * th * bipp / 8) | 0);\n          console.log(\"====\", tx, ty);\n          for (var y = 0; y < ty; y++) for (var x = 0; x < tx; x++) {\n            var i = y * tx + x;\n            tbuff.fill(0);\n            UTIF.decode._decompress(img, ifds, data, soff[i], bcnt[i], cmpr, tbuff, 0, fo, tw, th);\n            // Might be required for 7 too. Need to check\n            if (cmpr == 6) bytes = tbuff;else UTIF._copyTile(tbuff, Math.ceil(tw * bipp / 8) | 0, th, bytes, Math.ceil(img.width * bipp / 8) | 0, img.height, Math.ceil(x * tw * bipp / 8) | 0, y * th);\n          }\n          bilen = bytes.length * 8;\n        } else\n        // stripped\n        {\n          if (soff == null) return;\n          var rps = img[\"t278\"] ? img[\"t278\"][0] : img.height;\n          rps = Math.min(rps, img.height);\n          //console.log(\"====\", img.width, rps);\n          for (var i = 0; i < soff.length; i++) {\n            UTIF.decode._decompress(img, ifds, data, soff[i], bcnt[i], cmpr, bytes, Math.ceil(bilen / 8) | 0, fo, img.width, rps);\n            bilen += bipl * rps;\n          }\n          bilen = Math.min(bilen, bytes.length * 8);\n        }\n      img.data = new Uint8Array(bytes.buffer, 0, Math.ceil(bilen / 8) | 0);\n    };\n    UTIF.decode._decompress = function (img, ifds, data, off, len, cmpr, tgt, toff, fo, w, h)\n    // fill order\n    {\n      if (img[\"t271\"] && img[\"t271\"][0] == \"Panasonic\" && img[\"t45\"] && img[\"t45\"][0] == 6) cmpr = 34316;\n      //console.log(\"compression\", cmpr);\n      //var time = Date.now();\n      if (false) {} else if (cmpr == 1 /* || (len==tgt.length && cmpr!=32767)*/) for (var j = 0; j < len; j++) tgt[toff + j] = data[off + j];else if (cmpr == 2) UTIF.decode._decodeG2(data, off, len, tgt, toff, w, fo);else if (cmpr == 3) UTIF.decode._decodeG3(data, off, len, tgt, toff, w, fo, img[\"t292\"] ? (img[\"t292\"][0] & 1) == 1 : false);else if (cmpr == 4) UTIF.decode._decodeG4(data, off, len, tgt, toff, w, fo);else if (cmpr == 5) UTIF.decode._decodeLZW(data, off, len, tgt, toff, 8);else if (cmpr == 6) UTIF.decode._decodeOldJPEG(img, data, off, len, tgt, toff);else if (cmpr == 7 || cmpr == 34892) UTIF.decode._decodeNewJPEG(img, data, off, len, tgt, toff);else if (cmpr == 8 || cmpr == 32946) {\n        var src = new Uint8Array(data.buffer, off + 2, len - 6);\n        var bin = pako[\"inflateRaw\"](src);\n        if (toff + bin.length <= tgt.length) tgt.set(bin, toff);\n      } else if (cmpr == 9) UTIF.decode._decodeVC5(data, off, len, tgt, toff, img[\"t33422\"]);else if (cmpr == 32767) UTIF.decode._decodeARW(img, data, off, len, tgt, toff);else if (cmpr == 32773) UTIF.decode._decodePackBits(data, off, len, tgt, toff);else if (cmpr == 32809) UTIF.decode._decodeThunder(data, off, len, tgt, toff);else if (cmpr == 34316) UTIF.decode._decodePanasonic(img, data, off, len, tgt, toff);else if (cmpr == 34713)\n        //for(var j=0; j<len; j++) tgt[toff+j] = data[off+j];\n        UTIF.decode._decodeNikon(img, ifds, data, off, len, tgt, toff);else if (cmpr == 34676) UTIF.decode._decodeLogLuv32(img, data, off, len, tgt, toff);else log(\"Unknown compression\", cmpr);\n\n      //console.log(Date.now()-time);\n\n      var bps = img[\"t258\"] ? Math.min(32, img[\"t258\"][0]) : 1;\n      var noc = img[\"t277\"] ? img[\"t277\"][0] : 1,\n        bpp = bps * noc >>> 3,\n        bpl = Math.ceil(bps * noc * w / 8);\n\n      // convert to Little Endian  /*\n      if (bps == 16 && !img.isLE && img[\"t33422\"] == null)\n        // not DNG\n        for (var y = 0; y < h; y++) {\n          //console.log(\"fixing endianity\");\n          var roff = toff + y * bpl;\n          for (var x = 1; x < bpl; x += 2) {\n            var t = tgt[roff + x];\n            tgt[roff + x] = tgt[roff + x - 1];\n            tgt[roff + x - 1] = t;\n          }\n        } //*/\n\n      if (img[\"t317\"] && img[\"t317\"][0] == 2) {\n        for (var y = 0; y < h; y++) {\n          var ntoff = toff + y * bpl;\n          if (bps == 16) for (var j = bpp; j < bpl; j += 2) {\n            var nv = (tgt[ntoff + j + 1] << 8 | tgt[ntoff + j]) + (tgt[ntoff + j - bpp + 1] << 8 | tgt[ntoff + j - bpp]);\n            tgt[ntoff + j] = nv & 255;\n            tgt[ntoff + j + 1] = nv >>> 8 & 255;\n          } else if (noc == 3) for (var j = 3; j < bpl; j += 3) {\n            tgt[ntoff + j] = tgt[ntoff + j] + tgt[ntoff + j - 3] & 255;\n            tgt[ntoff + j + 1] = tgt[ntoff + j + 1] + tgt[ntoff + j - 2] & 255;\n            tgt[ntoff + j + 2] = tgt[ntoff + j + 2] + tgt[ntoff + j - 1] & 255;\n          } else for (var j = bpp; j < bpl; j++) tgt[ntoff + j] = tgt[ntoff + j] + tgt[ntoff + j - bpp] & 255;\n        }\n      }\n    };\n    UTIF.decode._decodePanasonic = function (img, data, off, len, tgt, toff) {\n      var img_buffer = data.buffer;\n      var rawWidth = img[\"t2\"][0];\n      var rawHeight = img[\"t3\"][0];\n      var bitsPerSample = img[\"t10\"][0];\n      var RW2_Format = img[\"t45\"][0];\n      var bidx = 0;\n      var imageIndex = 0;\n      var vpos = 0;\n      var byte = 0;\n      var arr_a, arr_b;\n      var bytes = RW2_Format == 6 ? new Uint32Array(18) : new Uint8Array(16);\n      var i,\n        j,\n        sh,\n        pred = [0, 0],\n        nonz = [0, 0],\n        isOdd,\n        idx = 0,\n        pixel_base;\n      var row, col, crow;\n      var buffer = new Uint8Array(0x4000);\n      var result = new Uint16Array(tgt.buffer);\n      function getDataRaw(bits) {\n        if (vpos == 0) {\n          var arr_a = new Uint8Array(img_buffer, off + imageIndex + 0x1ff8, 0x4000 - 0x1ff8);\n          var arr_b = new Uint8Array(img_buffer, off + imageIndex, 0x1ff8);\n          buffer.set(arr_a);\n          buffer.set(arr_b, arr_a.length);\n          imageIndex += 0x4000;\n        }\n        if (RW2_Format == 5) {\n          for (i = 0; i < 16; i++) {\n            bytes[i] = buffer[vpos++];\n            vpos &= 0x3FFF;\n          }\n        } else {\n          vpos = vpos - bits & 0x1ffff;\n          byte = vpos >> 3 ^ 0x3ff0;\n          return (buffer[byte] | buffer[byte + 1] << 8) >> (vpos & 7) & ~(-1 << bits);\n        }\n      }\n      // Raw Format 6\n      function getBufferDataRW6(i) {\n        return buffer[vpos + 15 - i];\n      }\n      function readPageRW6() {\n        bytes[0] = getBufferDataRW6(0) << 6 | getBufferDataRW6(1) >> 2; // 14 bit\n        bytes[1] = ((getBufferDataRW6(1) & 0x3) << 12 | getBufferDataRW6(2) << 4 | getBufferDataRW6(3) >> 4) & 0x3fff;\n        bytes[2] = getBufferDataRW6(3) >> 2 & 0x3;\n        bytes[3] = (getBufferDataRW6(3) & 0x3) << 8 | getBufferDataRW6(4);\n        bytes[4] = getBufferDataRW6(5) << 2 | getBufferDataRW6(6) >> 6;\n        bytes[5] = (getBufferDataRW6(6) & 0x3f) << 4 | getBufferDataRW6(7) >> 4;\n        bytes[6] = getBufferDataRW6(7) >> 2 & 0x3;\n        bytes[7] = (getBufferDataRW6(7) & 0x3) << 8 | getBufferDataRW6(8);\n        bytes[8] = getBufferDataRW6(9) << 2 & 0x3fc | getBufferDataRW6(10) >> 6;\n        bytes[9] = (getBufferDataRW6(10) << 4 | getBufferDataRW6(11) >> 4) & 0x3ff;\n        bytes[10] = getBufferDataRW6(11) >> 2 & 0x3;\n        bytes[11] = (getBufferDataRW6(11) & 0x3) << 8 | getBufferDataRW6(12);\n        bytes[12] = (getBufferDataRW6(13) << 2 & 0x3fc | getBufferDataRW6(14) >> 6) & 0x3ff;\n        bytes[13] = (getBufferDataRW6(14) << 4 | getBufferDataRW6(15) >> 4) & 0x3ff;\n        vpos += 16;\n        byte = 0;\n      }\n      function readPageRw6_bps12() {\n        bytes[0] = getBufferDataRW6(0) << 4 | getBufferDataRW6(1) >> 4;\n        bytes[1] = ((getBufferDataRW6(1) & 0xf) << 8 | getBufferDataRW6(2)) & 0xfff;\n        bytes[2] = getBufferDataRW6(3) >> 6 & 0x3;\n        bytes[3] = (getBufferDataRW6(3) & 0x3f) << 2 | getBufferDataRW6(4) >> 6;\n        bytes[4] = (getBufferDataRW6(4) & 0x3f) << 2 | getBufferDataRW6(5) >> 6;\n        bytes[5] = (getBufferDataRW6(5) & 0x3f) << 2 | getBufferDataRW6(6) >> 6;\n        bytes[6] = getBufferDataRW6(6) >> 4 & 0x3;\n        bytes[7] = (getBufferDataRW6(6) & 0xf) << 4 | getBufferDataRW6(7) >> 4;\n        bytes[8] = (getBufferDataRW6(7) & 0xf) << 4 | getBufferDataRW6(8) >> 4;\n        bytes[9] = (getBufferDataRW6(8) & 0xf) << 4 | getBufferDataRW6(9) >> 4;\n        bytes[10] = getBufferDataRW6(9) >> 2 & 0x3;\n        bytes[11] = (getBufferDataRW6(9) & 0x3) << 6 | getBufferDataRW6(10) >> 2;\n        bytes[12] = (getBufferDataRW6(10) & 0x3) << 6 | getBufferDataRW6(11) >> 2;\n        bytes[13] = (getBufferDataRW6(11) & 0x3) << 6 | getBufferDataRW6(12) >> 2;\n        bytes[14] = getBufferDataRW6(12) & 0x3;\n        bytes[15] = getBufferDataRW6(13);\n        bytes[16] = getBufferDataRW6(14);\n        bytes[17] = getBufferDataRW6(15);\n        vpos += 16;\n        byte = 0;\n      }\n      // Main loop\n      function resetPredNonzeros() {\n        pred[0] = 0;\n        pred[1] = 0;\n        nonz[0] = 0;\n        nonz[1] = 0;\n      }\n      if (RW2_Format == 7) {\n        throw RW2_Format;\n\n        // Skatch of version 7 \n        /*\r\n        var pixels_per_block = bitsPerSample == 14 ? 9 : 10;\r\n        \trowbytes = 0|(rawWidth / pixels_per_block * 16);\r\n        for (row = 0; row < rawHeight - 15; row += 16) {\r\n        \tvar rowstoread = Math.min(16, rawHeight - row);\r\n        \tvar readlen = rowbytes*rowstoread;\r\n        \tbuffer = new Uint8Array(image.slice(bidx, bidx+readlen));\r\n        \tvpos = 0;\r\n        \tbidx += readlen; \r\n        \ti = 0;\r\n        \tfor (crow = 0; crow < rowstoread; crow++) {\r\n        \t\tidx = (row + crow) * rawWidth;\r\n        \t\tfor (col = 0; col <= rawWidth - pixels_per_block; col += pixels_per_block) {\r\n        \t\t\tfor(j=0; j < pixels_per_block; j++) bytes[j] = buffer[i++];\r\n        \t\t\tif (bitsPerSample == 12) {\r\n        \t\t\t\tresult[idx ] = ((bytes[1] & 0xF) << 8) + bytes[0];\r\n        \t\t\t\tresult[idx + 1] = 16 * bytes[2] + (bytes[1] >> 4);\r\n        \t\t\t\tresult[idx + 2] = ((bytes[4] & 0xF) << 8) + bytes[3];\r\n        \t\t\t\tresult[idx + 3] = 16 * bytes[5] + (bytes[4] >> 4);\r\n        \t\t\t\tresult[idx + 4] = ((bytes[7] & 0xF) << 8) + bytes[6];\r\n        \t\t\t\tresult[idx + 5] = 16 * bytes[8] + (bytes[7] >> 4);\r\n        \t\t\t\tresult[idx + 6] = ((bytes[10] & 0xF) << 8) + bytes[9];\r\n        \t\t\t\tresult[idx + 7] = 16 * bytes[11] + (bytes[10] >> 4);\r\n        \t\t\t\tresult[idx + 8] = ((bytes[13] & 0xF) << 8) + bytes[12];\r\n        \t\t\t\tresult[idx + 9] = 16 * bytes[14] + (bytes[13] >> 4);\r\n        \t\t\t} else if (bitsPerSample == 14) {\r\n        \t\t\t\tresult[idx] = bytes[0] + ((bytes[1] & 0x3F) << 8);\r\n        \t\t\t\tresult[idx + 1] = (bytes[1] >> 6) + 4 * (bytes[2]) + ((bytes[3] & 0xF) << 10);\r\n        \t\t\t\tresult[idx + 2] = (bytes[3] >> 4) + 16 * (bytes[4]) + ((bytes[5] & 3) << 12);\r\n        \t\t\t\tresult[idx + 3] = ((bytes[5] & 0xFC) >> 2) + (bytes[6] << 6);\r\n        \t\t\t\tresult[idx + 4] = bytes[7] + ((bytes[8] & 0x3F) << 8);\r\n        \t\t\t\tresult[idx + 5] = (bytes[8] >> 6) + 4 * bytes[9] + ((bytes[10] & 0xF) << 10);\r\n        \t\t\t\tresult[idx + 6] = (bytes[10] >> 4) + 16 * bytes[11] + ((bytes[12] & 3) << 12);\r\n        \t\t\t\tresult[idx + 7] = ((bytes[12] & 0xFC) >> 2) + (bytes[13] << 6);\r\n        \t\t\t\tresult[idx + 8] = bytes[14] + ((bytes[15] & 0x3F) << 8);\r\n        \t\t\t}\r\n        \t\t}\r\n        \t}\r\n        }\r\n        */\n      } else if (RW2_Format == 6) {\n        var is12bit = bitsPerSample == 12,\n          readPageRw6Fn = is12bit ? readPageRw6_bps12 : readPageRW6,\n          pixelsPerBlock = is12bit ? 14 : 11,\n          pixelbase0 = is12bit ? 0x80 : 0x200,\n          pixelbase_compare = is12bit ? 0x800 : 0x2000,\n          spix_compare = is12bit ? 0x3fff : 0xffff,\n          pixel_mask = is12bit ? 0xfff : 0x3fff,\n          blocksperrow = rawWidth / pixelsPerBlock,\n          rowbytes = blocksperrow * 16,\n          bufferSize = is12bit ? 18 : 14;\n        for (row = 0; row < rawHeight - 15; row += 16) {\n          var rowstoread = Math.min(16, rawHeight - row);\n          var readlen = rowbytes * rowstoread;\n          buffer = new Uint8Array(img_buffer, off + bidx, readlen); //new Uint8Array(image.slice(bidx, bidx+readlen));\n          vpos = 0;\n          bidx += readlen;\n          for (crow = 0, col = 0; crow < rowstoread; crow++, col = 0) {\n            idx = (row + crow) * rawWidth;\n            for (var rblock = 0; rblock < blocksperrow; rblock++) {\n              readPageRw6Fn();\n              resetPredNonzeros();\n              sh = 0;\n              pixel_base = 0;\n              for (i = 0; i < pixelsPerBlock; i++) {\n                isOdd = i & 1;\n                if (i % 3 == 2) {\n                  var base = byte < bufferSize ? bytes[byte++] : 0;\n                  if (base == 3) base = 4;\n                  pixel_base = pixelbase0 << base;\n                  sh = 1 << base;\n                }\n                var epixel = byte < bufferSize ? bytes[byte++] : 0;\n                if (pred[isOdd]) {\n                  epixel *= sh;\n                  if (pixel_base < pixelbase_compare && nonz[isOdd] > pixel_base) epixel += nonz[isOdd] - pixel_base;\n                  nonz[isOdd] = epixel;\n                } else {\n                  pred[isOdd] = epixel;\n                  if (epixel) nonz[isOdd] = epixel;else epixel = nonz[isOdd];\n                }\n                result[idx + col++] = epixel - 0xf <= spix_compare ? epixel - 0xf & spix_compare : epixel + 0x7ffffff1 >> 0x1f & pixel_mask;\n              }\n            }\n          }\n        }\n      } else if (RW2_Format == 5) {\n        var blockSize = bitsPerSample == 12 ? 10 : 9;\n        for (row = 0; row < rawHeight; row++) {\n          for (col = 0; col < rawWidth; col += blockSize) {\n            getDataRaw(0);\n            // Tuhle podminku pouziva i RW2_Format 7 \n            if (bitsPerSample == 12) {\n              result[idx++] = ((bytes[1] & 0xF) << 8) + bytes[0];\n              result[idx++] = 16 * bytes[2] + (bytes[1] >> 4);\n              result[idx++] = ((bytes[4] & 0xF) << 8) + bytes[3];\n              result[idx++] = 16 * bytes[5] + (bytes[4] >> 4);\n              result[idx++] = ((bytes[7] & 0xF) << 8) + bytes[6];\n              result[idx++] = 16 * bytes[8] + (bytes[7] >> 4);\n              result[idx++] = ((bytes[10] & 0xF) << 8) + bytes[9];\n              result[idx++] = 16 * bytes[11] + (bytes[10] >> 4);\n              result[idx++] = ((bytes[13] & 0xF) << 8) + bytes[12];\n              result[idx++] = 16 * bytes[14] + (bytes[13] >> 4);\n            } else if (bitsPerSample == 14) {\n              result[idx++] = bytes[0] + ((bytes[1] & 0x3F) << 8);\n              result[idx++] = (bytes[1] >> 6) + 4 * bytes[2] + ((bytes[3] & 0xF) << 10);\n              result[idx++] = (bytes[3] >> 4) + 16 * bytes[4] + ((bytes[5] & 3) << 12);\n              result[idx++] = ((bytes[5] & 0xFC) >> 2) + (bytes[6] << 6);\n              result[idx++] = bytes[7] + ((bytes[8] & 0x3F) << 8);\n              result[idx++] = (bytes[8] >> 6) + 4 * bytes[9] + ((bytes[10] & 0xF) << 10);\n              result[idx++] = (bytes[10] >> 4) + 16 * bytes[11] + ((bytes[12] & 3) << 12);\n              result[idx++] = ((bytes[12] & 0xFC) >> 2) + (bytes[13] << 6);\n              result[idx++] = bytes[14] + ((bytes[15] & 0x3F) << 8);\n            }\n          }\n        }\n        //console.log(result[1000000 - 1])\n      } else if (RW2_Format == 4) {\n        for (row = 0; row < rawHeight; row++) {\n          for (col = 0; col < rawWidth; col++) {\n            i = col % 14;\n            isOdd = i & 1;\n            if (i == 0) resetPredNonzeros();\n            if (i % 3 == 2) sh = 4 >> 3 - getDataRaw(2);\n            if (nonz[isOdd]) {\n              j = getDataRaw(8);\n              if (j != 0) {\n                pred[isOdd] -= 0x80 << sh;\n                if (pred[isOdd] < 0 || sh == 4) pred[isOdd] &= ~(-1 << sh);\n                pred[isOdd] += j << sh;\n              }\n            } else {\n              nonz[isOdd] = getDataRaw(8);\n              if (nonz[isOdd] || i > 11) pred[isOdd] = nonz[isOdd] << 4 | getDataRaw(4);\n            }\n            result[idx++] = pred[col & 1];\n          }\n        }\n      } else throw RW2_Format;\n    };\n    UTIF.decode._decodeVC5 = function () {\n      var x = [1, 0, 1, 0, 2, 2, 1, 1, 3, 7, 1, 2, 5, 25, 1, 3, 6, 48, 1, 4, 6, 54, 1, 5, 7, 111, 1, 8, 7, 99, 1, 6, 7, 105, 12, 0, 7, 107, 1, 7, 8, 209, 20, 0, 8, 212, 1, 9, 8, 220, 1, 10, 9, 393, 1, 11, 9, 394, 32, 0, 9, 416, 1, 12, 9, 427, 1, 13, 10, 887, 1, 18, 10, 784, 1, 14, 10, 790, 1, 15, 10, 835, 60, 0, 10, 852, 1, 16, 10, 885, 1, 17, 11, 1571, 1, 19, 11, 1668, 1, 20, 11, 1669, 100, 0, 11, 1707, 1, 21, 11, 1772, 1, 22, 12, 3547, 1, 29, 12, 3164, 1, 24, 12, 3166, 1, 25, 12, 3140, 1, 23, 12, 3413, 1, 26, 12, 3537, 1, 27, 12, 3539, 1, 28, 13, 7093, 1, 35, 13, 6283, 1, 30, 13, 6331, 1, 31, 13, 6335, 180, 0, 13, 6824, 1, 32, 13, 7072, 1, 33, 13, 7077, 320, 0, 13, 7076, 1, 34, 14, 12565, 1, 36, 14, 12661, 1, 37, 14, 12669, 1, 38, 14, 13651, 1, 39, 14, 14184, 1, 40, 15, 28295, 1, 46, 15, 28371, 1, 47, 15, 25320, 1, 42, 15, 25336, 1, 43, 15, 25128, 1, 41, 15, 27300, 1, 44, 15, 28293, 1, 45, 16, 50259, 1, 48, 16, 50643, 1, 49, 16, 50675, 1, 50, 16, 56740, 1, 53, 16, 56584, 1, 51, 16, 56588, 1, 52, 17, 113483, 1, 61, 17, 113482, 1, 60, 17, 101285, 1, 55, 17, 101349, 1, 56, 17, 109205, 1, 57, 17, 109207, 1, 58, 17, 100516, 1, 54, 17, 113171, 1, 59, 18, 202568, 1, 62, 18, 202696, 1, 63, 18, 218408, 1, 64, 18, 218412, 1, 65, 18, 226340, 1, 66, 18, 226356, 1, 67, 18, 226358, 1, 68, 19, 402068, 1, 69, 19, 405138, 1, 70, 19, 405394, 1, 71, 19, 436818, 1, 72, 19, 436826, 1, 73, 19, 452714, 1, 75, 19, 452718, 1, 76, 19, 452682, 1, 74, 20, 804138, 1, 77, 20, 810279, 1, 78, 20, 810790, 1, 79, 20, 873638, 1, 80, 20, 873654, 1, 81, 20, 905366, 1, 82, 20, 905430, 1, 83, 20, 905438, 1, 84, 21, 1608278, 1, 85, 21, 1620557, 1, 86, 21, 1621582, 1, 87, 21, 1621583, 1, 88, 21, 1747310, 1, 89, 21, 1810734, 1, 90, 21, 1810735, 1, 91, 21, 1810863, 1, 92, 21, 1810879, 1, 93, 22, 3621725, 1, 99, 22, 3621757, 1, 100, 22, 3241112, 1, 94, 22, 3494556, 1, 95, 22, 3494557, 1, 96, 22, 3494622, 1, 97, 22, 3494623, 1, 98, 23, 6482227, 1, 102, 23, 6433117, 1, 101, 23, 6989117, 1, 103, 23, 6989119, 1, 105, 23, 6989118, 1, 104, 23, 7243449, 1, 106, 23, 7243512, 1, 107, 24, 13978233, 1, 111, 24, 12964453, 1, 109, 24, 12866232, 1, 108, 24, 14486897, 1, 113, 24, 13978232, 1, 110, 24, 14486896, 1, 112, 24, 14487026, 1, 114, 24, 14487027, 1, 115, 25, 25732598, 1, 225, 25, 25732597, 1, 189, 25, 25732596, 1, 188, 25, 25732595, 1, 203, 25, 25732594, 1, 202, 25, 25732593, 1, 197, 25, 25732592, 1, 207, 25, 25732591, 1, 169, 25, 25732590, 1, 223, 25, 25732589, 1, 159, 25, 25732522, 1, 235, 25, 25732579, 1, 152, 25, 25732575, 1, 192, 25, 25732489, 1, 179, 25, 25732573, 1, 201, 25, 25732472, 1, 172, 25, 25732576, 1, 149, 25, 25732488, 1, 178, 25, 25732566, 1, 120, 25, 25732571, 1, 219, 25, 25732577, 1, 150, 25, 25732487, 1, 127, 25, 25732506, 1, 211, 25, 25732548, 1, 125, 25, 25732588, 1, 158, 25, 25732486, 1, 247, 25, 25732467, 1, 238, 25, 25732508, 1, 163, 25, 25732552, 1, 228, 25, 25732603, 1, 183, 25, 25732513, 1, 217, 25, 25732587, 1, 168, 25, 25732520, 1, 122, 25, 25732484, 1, 128, 25, 25732562, 1, 249, 25, 25732505, 1, 187, 25, 25732504, 1, 186, 25, 25732483, 1, 136, 25, 25928905, 1, 181, 25, 25732560, 1, 255, 25, 25732500, 1, 230, 25, 25732482, 1, 135, 25, 25732555, 1, 233, 25, 25732568, 1, 222, 25, 25732583, 1, 145, 25, 25732481, 1, 134, 25, 25732586, 1, 167, 25, 25732521, 1, 248, 25, 25732518, 1, 209, 25, 25732480, 1, 243, 25, 25732512, 1, 216, 25, 25732509, 1, 164, 25, 25732547, 1, 140, 25, 25732479, 1, 157, 25, 25732544, 1, 239, 25, 25732574, 1, 191, 25, 25732564, 1, 251, 25, 25732478, 1, 156, 25, 25732546, 1, 139, 25, 25732498, 1, 242, 25, 25732557, 1, 133, 25, 25732477, 1, 162, 25, 25732515, 1, 213, 25, 25732584, 1, 165, 25, 25732514, 1, 212, 25, 25732476, 1, 227, 25, 25732494, 1, 198, 25, 25732531, 1, 236, 25, 25732530, 1, 234, 25, 25732529, 1, 117, 25, 25732528, 1, 215, 25, 25732527, 1, 124, 25, 25732526, 1, 123, 25, 25732525, 1, 254, 25, 25732524, 1, 253, 25, 25732523, 1, 148, 25, 25732570, 1, 218, 25, 25732580, 1, 146, 25, 25732581, 1, 147, 25, 25732569, 1, 224, 25, 25732533, 1, 143, 25, 25732540, 1, 184, 25, 25732541, 1, 185, 25, 25732585, 1, 166, 25, 25732556, 1, 132, 25, 25732485, 1, 129, 25, 25732563, 1, 250, 25, 25732578, 1, 151, 25, 25732501, 1, 119, 25, 25732502, 1, 193, 25, 25732536, 1, 176, 25, 25732496, 1, 245, 25, 25732553, 1, 229, 25, 25732516, 1, 206, 25, 25732582, 1, 144, 25, 25732517, 1, 208, 25, 25732558, 1, 137, 25, 25732543, 1, 241, 25, 25732466, 1, 237, 25, 25732507, 1, 190, 25, 25732542, 1, 240, 25, 25732551, 1, 131, 25, 25732554, 1, 232, 25, 25732565, 1, 252, 25, 25732475, 1, 171, 25, 25732493, 1, 205, 25, 25732492, 1, 204, 25, 25732491, 1, 118, 25, 25732490, 1, 214, 25, 25928904, 1, 180, 25, 25732549, 1, 126, 25, 25732602, 1, 182, 25, 25732539, 1, 175, 25, 25732545, 1, 141, 25, 25732559, 1, 138, 25, 25732537, 1, 177, 25, 25732534, 1, 153, 25, 25732503, 1, 194, 25, 25732606, 1, 160, 25, 25732567, 1, 121, 25, 25732538, 1, 174, 25, 25732497, 1, 246, 25, 25732550, 1, 130, 25, 25732572, 1, 200, 25, 25732474, 1, 170, 25, 25732511, 1, 221, 25, 25732601, 1, 196, 25, 25732532, 1, 142, 25, 25732519, 1, 210, 25, 25732495, 1, 199, 25, 25732605, 1, 155, 25, 25732535, 1, 154, 25, 25732499, 1, 244, 25, 25732510, 1, 220, 25, 25732600, 1, 195, 25, 25732607, 1, 161, 25, 25732604, 1, 231, 25, 25732473, 1, 173, 25, 25732599, 1, 226, 26, 51465122, 1, 116, 26, 51465123, 0, 1],\n        o,\n        C,\n        k,\n        P = [3, 3, 3, 3, 2, 2, 2, 1, 1, 1],\n        V = 24576,\n        ar = 16384,\n        H = 8192,\n        az = ar | H;\n      function d(t) {\n        var E = t[1],\n          h = t[0][E >>> 3] >>> 7 - (E & 7) & 1;\n        t[1]++;\n        return h;\n      }\n      function ag(t, E) {\n        if (o == null) {\n          o = {};\n          for (var h = 0; h < x.length; h += 4) o[x[h + 1]] = x.slice(h, h + 4);\n        }\n        var L = d(t),\n          g = o[L];\n        while (g == null) {\n          L = L << 1 | d(t);\n          g = o[L];\n        }\n        var n = g[3];\n        if (n != 0) n = d(t) == 0 ? n : -n;\n        E[0] = g[2];\n        E[1] = n;\n      }\n      function m(t, E) {\n        for (var h = 0; h < E; h++) {\n          if ((t & 1) == 1) t++;\n          t = t >>> 1;\n        }\n        return t;\n      }\n      function A(t, E) {\n        return t >> E;\n      }\n      function O(t, E, h, L, g, n) {\n        E[h] = A(A(11 * t[g] - 4 * t[g + n] + t[g + n + n] + 4, 3) + t[L], 1);\n        E[h + n] = A(A(5 * t[g] + 4 * t[g + n] - t[g + n + n] + 4, 3) - t[L], 1);\n      }\n      function J(t, E, h, L, g, n) {\n        var W = t[g - n] - t[g + n],\n          j = t[g],\n          $ = t[L];\n        E[h] = A(A(W + 4, 3) + j + $, 1);\n        E[h + n] = A(A(-W + 4, 3) + j - $, 1);\n      }\n      function y(t, E, h, L, g, n) {\n        E[h] = A(A(5 * t[g] + 4 * t[g - n] - t[g - n - n] + 4, 3) + t[L], 1);\n        E[h + n] = A(A(11 * t[g] - 4 * t[g - n] + t[g - n - n] + 4, 3) - t[L], 1);\n      }\n      function q(t) {\n        t = t < 0 ? 0 : t > 4095 ? 4095 : t;\n        t = k[t] >>> 2;\n        return t;\n      }\n      function av(t, E, h, L, g, n) {\n        L = new Uint16Array(L.buffer);\n        var W = Date.now(),\n          j = UTIF._binBE,\n          $ = E + h,\n          r,\n          u,\n          X,\n          I,\n          ax,\n          a3,\n          R,\n          ai,\n          aa,\n          ap,\n          ah,\n          ae,\n          aD,\n          al,\n          i,\n          aE,\n          T,\n          B;\n        E += 4;\n        var a5 = n[0] == 1;\n        while (E < $) {\n          var S = j.readShort(t, E),\n            s = j.readUshort(t, E + 2);\n          E += 4;\n          if (S == 12) r = s;else if (S == 20) u = s;else if (S == 21) X = s;else if (S == 48) I = s;else if (S == 53) ax = s;else if (S == 35) a3 = s;else if (S == 62) R = s;else if (S == 101) ai = s;else if (S == 109) aa = s;else if (S == 84) ap = s;else if (S == 106) ah = s;else if (S == 107) ae = s;else if (S == 108) aD = s;else if (S == 102) al = s;else if (S == 104) i = s;else if (S == 105) aE = s;else {\n            var F = S < 0 ? -S : S,\n              D = F & 65280,\n              _ = 0;\n            if (F & az) {\n              if (F & H) {\n                _ = s & 65535;\n                _ += (F & 255) << 16;\n              } else {\n                _ = s & 65535;\n              }\n            }\n            if ((F & V) == V) {\n              if (T == null) {\n                T = [];\n                for (var M = 0; M < 4; M++) T[M] = new Int16Array((u >>> 1) * (X >>> 1));\n                B = new Int16Array((u >>> 1) * (X >>> 1));\n                C = new Int16Array(1024);\n                for (var M = 0; M < 1024; M++) {\n                  var aG = M - 512,\n                    p = Math.abs(aG),\n                    r = Math.floor(768 * p * p * p / (255 * 255 * 255)) + p;\n                  C[M] = Math.sign(aG) * r;\n                }\n                k = new Uint16Array(4096);\n                var aA = (1 << 16) - 1;\n                for (var M = 0; M < 4096; M++) {\n                  var at = M,\n                    a1 = aA * (Math.pow(113, at / 4095) - 1) / 112;\n                  k[M] = Math.min(a1, aA);\n                }\n              }\n              var w = T[R],\n                v = m(u, 1 + P[I]),\n                N = m(X, 1 + P[I]);\n              if (I == 0) {\n                for (var b = 0; b < N; b++) for (var G = 0; G < v; G++) {\n                  var c = E + (b * v + G) * 2;\n                  w[b * (u >>> 1) + G] = t[c] << 8 | t[c + 1];\n                }\n              } else {\n                var a7 = [t, E * 8],\n                  a4 = [],\n                  ay = 0,\n                  aw = v * N,\n                  f = [0, 0],\n                  Q = 0,\n                  s = 0;\n                while (ay < aw) {\n                  ag(a7, f);\n                  Q = f[0];\n                  s = f[1];\n                  while (Q > 0) {\n                    a4[ay++] = s;\n                    Q--;\n                  }\n                }\n                var l = (I - 1) % 3,\n                  aF = l != 1 ? v : 0,\n                  a2 = l != 0 ? N : 0;\n                for (var b = 0; b < N; b++) {\n                  var af = (b + a2) * (u >>> 1) + aF,\n                    au = b * v;\n                  for (var G = 0; G < v; G++) w[af + G] = C[a4[au + G] + 512] * ax;\n                }\n                if (l == 2) {\n                  var i = u >>> 1,\n                    an = v * 2,\n                    a9 = N * 2;\n                  for (var b = 0; b < N; b++) {\n                    for (var G = 0; G < an; G++) {\n                      var M = b * 2 * i + G,\n                        a = b * i + G,\n                        e = N * i + a;\n                      if (b == 0) O(w, B, M, e, a, i);else if (b == N - 1) y(w, B, M, e, a, i);else J(w, B, M, e, a, i);\n                    }\n                  }\n                  var Z = w;\n                  w = B;\n                  B = Z;\n                  for (var b = 0; b < a9; b++) {\n                    for (var G = 0; G < v; G++) {\n                      var M = b * i + 2 * G,\n                        a = b * i + G,\n                        e = v + a;\n                      if (G == 0) O(w, B, M, e, a, 1);else if (G == v - 1) y(w, B, M, e, a, 1);else J(w, B, M, e, a, 1);\n                    }\n                  }\n                  var Z = w;\n                  w = B;\n                  B = Z;\n                  var aC = [],\n                    aB = 2 - ~~((I - 1) / 3);\n                  for (var K = 0; K < 3; K++) aC[K] = aa >> 14 - K * 2 & 3;\n                  var a6 = aC[aB];\n                  if (a6 != 0) for (var b = 0; b < a9; b++) for (var G = 0; G < an; G++) {\n                    var M = b * i + G;\n                    w[M] = w[M] << a6;\n                  }\n                }\n              }\n              if (I == 9 && R == 3) {\n                var a8 = T[0],\n                  ab = T[1],\n                  aq = T[2],\n                  as = T[3];\n                for (var b = 0; b < X; b += 2) for (var G = 0; G < u; G += 2) {\n                  var U = b * u + G,\n                    c = (b >>> 1) * (u >>> 1) + (G >>> 1),\n                    z = a8[c],\n                    ao = ab[c] - 2048,\n                    ak = aq[c] - 2048,\n                    ad = as[c] - 2048,\n                    aj = (ao << 1) + z,\n                    a0 = (ak << 1) + z,\n                    aH = z + ad,\n                    am = z - ad;\n                  if (a5) {\n                    L[U] = q(aH);\n                    L[U + 1] = q(a0);\n                    L[U + u] = q(aj);\n                    L[U + u + 1] = q(am);\n                  } else {\n                    L[U] = q(aj);\n                    L[U + 1] = q(aH);\n                    L[U + u] = q(am);\n                    L[U + u + 1] = q(a0);\n                  }\n                }\n              }\n              E += _ * 4;\n            } else if (F == 16388) {\n              E += _ * 4;\n            } else if (D == 8192 || D == 8448 || D == 9216) {} else throw F.toString(16);\n          }\n        }\n        console.log(Date.now() - W);\n      }\n      return av;\n    }();\n    UTIF.decode._decodeLogLuv32 = function (img, data, off, len, tgt, toff) {\n      var w = img.width,\n        qw = w * 4;\n      var io = 0,\n        out = new Uint8Array(qw);\n      while (io < len) {\n        var oo = 0;\n        while (oo < qw) {\n          var c = data[off + io];\n          io++;\n          if (c < 128) {\n            for (var j = 0; j < c; j++) out[oo + j] = data[off + io + j];\n            oo += c;\n            io += c;\n          } else {\n            c = c - 126;\n            for (var j = 0; j < c; j++) out[oo + j] = data[off + io];\n            oo += c;\n            io++;\n          }\n        }\n        for (var x = 0; x < w; x++) {\n          tgt[toff + 0] = out[x];\n          tgt[toff + 1] = out[x + w];\n          tgt[toff + 2] = out[x + w * 2];\n          tgt[toff + 4] = out[x + w * 3];\n          toff += 6;\n        }\n      }\n    };\n    UTIF.decode._ljpeg_diff = function (data, prm, huff) {\n      var getbithuff = UTIF.decode._getbithuff;\n      var len, diff;\n      len = getbithuff(data, prm, huff[0], huff);\n      diff = getbithuff(data, prm, len, 0);\n      if ((diff & 1 << len - 1) == 0) diff -= (1 << len) - 1;\n      return diff;\n    };\n    UTIF.decode._decodeARW = function (img, inp, off, src_length, tgt, toff) {\n      var raw_width = img[\"t256\"][0],\n        height = img[\"t257\"][0],\n        tiff_bps = img[\"t258\"][0];\n      var bin = img.isLE ? UTIF._binLE : UTIF._binBE;\n      //console.log(raw_width, height, tiff_bps, raw_width*height, src_length);\n      var arw2 = raw_width * height == src_length || raw_width * height * 1.5 == src_length;\n      //arw2 = true;\n      //console.log(\"ARW2: \", arw2, raw_width*height, src_length, tgt.length);\n      if (!arw2) {\n        //\"sony_arw_load_raw\"; // not arw2\n        height += 8;\n        var prm = [off, 0, 0, 0];\n        var huff = new Uint16Array(32770);\n        var tab = [0xf11, 0xf10, 0xe0f, 0xd0e, 0xc0d, 0xb0c, 0xa0b, 0x90a, 0x809, 0x708, 0x607, 0x506, 0x405, 0x304, 0x303, 0x300, 0x202, 0x201];\n        var i,\n          c,\n          n,\n          col,\n          row,\n          sum = 0;\n        var ljpeg_diff = UTIF.decode._ljpeg_diff;\n        huff[0] = 15;\n        for (n = i = 0; i < 18; i++) {\n          var lim = 32768 >>> (tab[i] >>> 8);\n          for (var c = 0; c < lim; c++) huff[++n] = tab[i];\n        }\n        for (col = raw_width; col--;) for (row = 0; row < height + 1; row += 2) {\n          if (row == height) row = 1;\n          sum += ljpeg_diff(inp, prm, huff);\n          if (row < height) {\n            var clr = sum & 4095;\n            UTIF.decode._putsF(tgt, (row * raw_width + col) * tiff_bps, clr << 16 - tiff_bps);\n          }\n        }\n        return;\n      }\n      if (raw_width * height * 1.5 == src_length) {\n        //console.log(\"weird compression\");\n        for (var i = 0; i < src_length; i += 3) {\n          var b0 = inp[off + i + 0],\n            b1 = inp[off + i + 1],\n            b2 = inp[off + i + 2];\n          tgt[toff + i] = b1 << 4 | b0 >>> 4;\n          tgt[toff + i + 1] = b0 << 4 | b2 >>> 4;\n          tgt[toff + i + 2] = b2 << 4 | b1 >>> 4;\n        }\n        return;\n      }\n      var pix = new Uint16Array(16);\n      var row, col, val, max, min, imax, imin, sh, bit, i, dp;\n      var data = new Uint8Array(raw_width + 1);\n      for (row = 0; row < height; row++) {\n        //fread (data, 1, raw_width, ifp);\n        for (var j = 0; j < raw_width; j++) data[j] = inp[off++];\n        for (dp = 0, col = 0; col < raw_width - 30; dp += 16) {\n          max = 0x7ff & (val = bin.readUint(data, dp));\n          min = 0x7ff & val >>> 11;\n          imax = 0x0f & val >>> 22;\n          imin = 0x0f & val >>> 26;\n          for (sh = 0; sh < 4 && 0x80 << sh <= max - min; sh++);\n          for (bit = 30, i = 0; i < 16; i++) if (i == imax) pix[i] = max;else if (i == imin) pix[i] = min;else {\n            pix[i] = ((bin.readUshort(data, dp + (bit >> 3)) >>> (bit & 7) & 0x7f) << sh) + min;\n            if (pix[i] > 0x7ff) pix[i] = 0x7ff;\n            bit += 7;\n          }\n          for (i = 0; i < 16; i++, col += 2) {\n            //RAW(row,col) = curve[pix[i] << 1] >> 2;\n            var clr = pix[i] << 1; //clr = 0xffff;\n            UTIF.decode._putsF(tgt, (row * raw_width + col) * tiff_bps, clr << 16 - tiff_bps);\n          }\n          col -= col & 1 ? 1 : 31;\n        }\n      }\n    };\n    UTIF.decode._decodeNikon = function (img, imgs, data, off, src_length, tgt, toff) {\n      var nikon_tree = [[0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, /* 12-bit lossy */\n      5, 4, 3, 6, 2, 7, 1, 0, 8, 9, 11, 10, 12], [0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, /* 12-bit lossy after split */\n      0x39, 0x5a, 0x38, 0x27, 0x16, 5, 4, 3, 2, 1, 0, 11, 12, 12], [0, 0, 1, 4, 2, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, /* 12-bit lossless */\n      5, 4, 6, 3, 7, 2, 8, 1, 9, 0, 10, 11, 12], [0, 0, 1, 4, 3, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, /* 14-bit lossy */\n      5, 6, 4, 7, 8, 3, 9, 2, 1, 0, 10, 11, 12, 13, 14], [0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, /* 14-bit lossy after split */\n      8, 0x5c, 0x4b, 0x3a, 0x29, 7, 6, 5, 4, 3, 2, 1, 0, 13, 14], [0, 0, 1, 4, 2, 2, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, /* 14-bit lossless */\n      7, 6, 8, 5, 9, 4, 10, 3, 11, 12, 2, 0, 1, 13, 14]];\n      var raw_width = img[\"t256\"][0],\n        height = img[\"t257\"][0],\n        tiff_bps = img[\"t258\"][0];\n      var tree = 0,\n        split = 0;\n      var make_decoder = UTIF.decode._make_decoder;\n      var getbithuff = UTIF.decode._getbithuff;\n      var mn = imgs[0].exifIFD.makerNote,\n        md = mn[\"t150\"] ? mn[\"t150\"] : mn[\"t140\"],\n        mdo = 0; //console.log(mn,md);\n      //console.log(md[0].toString(16), md[1].toString(16), tiff_bps);\n      var ver0 = md[mdo++],\n        ver1 = md[mdo++];\n      if (ver0 == 0x49 || ver1 == 0x58) mdo += 2110;\n      if (ver0 == 0x46) tree = 2;\n      if (tiff_bps == 14) tree += 3;\n      var vpred = [[0, 0], [0, 0]],\n        bin = img.isLE ? UTIF._binLE : UTIF._binBE;\n      for (var i = 0; i < 2; i++) for (var j = 0; j < 2; j++) {\n        vpred[i][j] = bin.readShort(md, mdo);\n        mdo += 2;\n      } // not sure here ... [i][j] or [j][i]\n      //console.log(vpred);\n\n      var max = 1 << tiff_bps & 0x7fff,\n        step = 0;\n      var csize = bin.readShort(md, mdo);\n      mdo += 2;\n      if (csize > 1) step = Math.floor(max / (csize - 1));\n      if (ver0 == 0x44 && ver1 == 0x20 && step > 0) split = bin.readShort(md, 562);\n      var i;\n      var row, col;\n      var len, shl, diff;\n      var min_v = 0;\n      var hpred = [0, 0];\n      var huff = make_decoder(nikon_tree[tree]);\n\n      //var g_input_offset=0, bitbuf=0, vbits=0, reset=0;\n      var prm = [off, 0, 0, 0];\n      //console.log(split);  split = 170;\n\n      for (min_v = row = 0; row < height; row++) {\n        if (split && row == split) {\n          //free (huff);\n          huff = make_decoder(nikon_tree[tree + 1]);\n          //max_v += (min_v = 16) << 1;\n        }\n        for (col = 0; col < raw_width; col++) {\n          i = getbithuff(data, prm, huff[0], huff);\n          len = i & 15;\n          shl = i >>> 4;\n          diff = (getbithuff(data, prm, len - shl, 0) << 1) + 1 << shl >>> 1;\n          if ((diff & 1 << len - 1) == 0) diff -= (1 << len) - (shl == 0 ? 1 : 0);\n          if (col < 2) hpred[col] = vpred[row & 1][col] += diff;else hpred[col & 1] += diff;\n          var clr = Math.min(Math.max(hpred[col & 1], 0), (1 << tiff_bps) - 1);\n          var bti = (row * raw_width + col) * tiff_bps;\n          UTIF.decode._putsF(tgt, bti, clr << 16 - tiff_bps);\n        }\n      }\n    };\n    // put 16 bits\n    UTIF.decode._putsF = function (dt, pos, val) {\n      val = val << 8 - (pos & 7);\n      var o = pos >>> 3;\n      dt[o] |= val >>> 16;\n      dt[o + 1] |= val >>> 8;\n      dt[o + 2] |= val;\n    };\n    UTIF.decode._getbithuff = function (data, prm, nbits, huff) {\n      var zero_after_ff = 0;\n      var get_byte = UTIF.decode._get_byte;\n      var c;\n      var off = prm[0],\n        bitbuf = prm[1],\n        vbits = prm[2],\n        reset = prm[3];\n\n      //if (nbits > 25) return 0;\n      //if (nbits <  0) return bitbuf = vbits = reset = 0;\n      if (nbits == 0 || vbits < 0) return 0;\n      while (!reset && vbits < nbits && (c = data[off++]) != -1 && !(reset = zero_after_ff && c == 0xff && data[off++])) {\n        //console.log(\"byte read into c\");\n        bitbuf = (bitbuf << 8) + c;\n        vbits += 8;\n      }\n      c = bitbuf << 32 - vbits >>> 32 - nbits;\n      if (huff) {\n        vbits -= huff[c + 1] >>> 8; //console.log(c, huff[c]>>8);\n        c = huff[c + 1] & 255;\n      } else vbits -= nbits;\n      if (vbits < 0) throw \"e\";\n      prm[0] = off;\n      prm[1] = bitbuf;\n      prm[2] = vbits;\n      prm[3] = reset;\n      return c;\n    };\n    UTIF.decode._make_decoder = function (source) {\n      var max, len, h, i, j;\n      var huff = [];\n      for (max = 16; max != 0 && !source[max]; max--);\n      var si = 17;\n      huff[0] = max;\n      for (h = len = 1; len <= max; len++) for (i = 0; i < source[len]; i++, ++si) for (j = 0; j < 1 << max - len; j++) if (h <= 1 << max) huff[h++] = len << 8 | source[si];\n      return huff;\n    };\n    UTIF.decode._decodeNewJPEG = function (img, data, off, len, tgt, toff) {\n      len = Math.min(len, data.length - off);\n      var tables = img[\"t347\"],\n        tlen = tables ? tables.length : 0,\n        buff = new Uint8Array(tlen + len);\n      if (tables) {\n        var SOI = 216,\n          EOI = 217,\n          boff = 0;\n        for (var i = 0; i < tlen - 1; i++) {\n          // Skip EOI marker from JPEGTables\n          if (tables[i] == 255 && tables[i + 1] == EOI) break;\n          buff[boff++] = tables[i];\n        }\n\n        // Skip SOI marker from data\n        var byte1 = data[off],\n          byte2 = data[off + 1];\n        if (byte1 != 255 || byte2 != SOI) {\n          buff[boff++] = byte1;\n          buff[boff++] = byte2;\n        }\n        for (var i = 2; i < len; i++) buff[boff++] = data[off + i];\n      } else for (var i = 0; i < len; i++) buff[i] = data[off + i];\n      if (img[\"t262\"][0] == 32803 || img[\"t259\"][0] == 7 && img[\"t262\"][0] == 34892)\n        // lossless JPEG (used in DNG files)\n        {\n          var bps = img[\"t258\"][0]; //, dcdr = new LosslessJpegDecoder();\n          //var time = Date.now();\n          var out = UTIF.LosslessJpegDecode(buff),\n            olen = out.length; //console.log(olen);\n          //var out = ULLJPG(buff), olen=out.length;  //console.log(olen);\n          //console.log(Date.now()-time);\n\n          if (false) {} else if (bps == 16) {\n            if (img.isLE) for (var i = 0; i < olen; i++) {\n              tgt[toff + (i << 1)] = out[i] & 255;\n              tgt[toff + (i << 1) + 1] = out[i] >>> 8;\n            } else for (var i = 0; i < olen; i++) {\n              tgt[toff + (i << 1)] = out[i] >>> 8;\n              tgt[toff + (i << 1) + 1] = out[i] & 255;\n            }\n          } else if (bps == 14 || bps == 12 || bps == 10) {\n            // 4 * 14 == 56 == 7 * 8\n            var rst = 16 - bps;\n            for (var i = 0; i < olen; i++) UTIF.decode._putsF(tgt, i * bps, out[i] << rst);\n          } else if (bps == 8) {\n            for (var i = 0; i < olen; i++) tgt[toff + i] = out[i];\n          } else throw new Error(\"unsupported bit depth \" + bps);\n        } else {\n        var parser = new UTIF.JpegDecoder();\n        parser.parse(buff);\n        var decoded = parser.getData({\n          \"width\": parser.width,\n          \"height\": parser.height,\n          \"forceRGB\": true,\n          \"isSourcePDF\": false\n        });\n        for (var i = 0; i < decoded.length; i++) tgt[toff + i] = decoded[i];\n      }\n\n      // PhotometricInterpretation is 6 (YCbCr) for JPEG, but after decoding we populate data in\n      // RGB format, so updating the tag value\n      if (img[\"t262\"][0] == 6) img[\"t262\"][0] = 2;\n    };\n    UTIF.decode._decodeOldJPEGInit = function (img, data, off, len) {\n      var SOI = 216,\n        EOI = 217,\n        DQT = 219,\n        DHT = 196,\n        DRI = 221,\n        SOF0 = 192,\n        SOS = 218;\n      var joff = 0,\n        soff = 0,\n        tables,\n        sosMarker,\n        isTiled = false,\n        i,\n        j,\n        k;\n      var jpgIchgFmt = img[\"t513\"],\n        jifoff = jpgIchgFmt ? jpgIchgFmt[0] : 0;\n      var jpgIchgFmtLen = img[\"t514\"],\n        jiflen = jpgIchgFmtLen ? jpgIchgFmtLen[0] : 0;\n      var soffTag = img[\"t324\"] || img[\"t273\"] || jpgIchgFmt;\n      var ycbcrss = img[\"t530\"],\n        ssx = 0,\n        ssy = 0;\n      var spp = img[\"t277\"] ? img[\"t277\"][0] : 1;\n      var jpgresint = img[\"t515\"];\n      if (soffTag) {\n        soff = soffTag[0];\n        isTiled = soffTag.length > 1;\n      }\n      if (!isTiled) {\n        if (data[off] == 255 && data[off + 1] == SOI) return {\n          jpegOffset: off\n        };\n        if (jpgIchgFmt != null) {\n          if (data[off + jifoff] == 255 && data[off + jifoff + 1] == SOI) joff = off + jifoff;else log(\"JPEGInterchangeFormat does not point to SOI\");\n          if (jpgIchgFmtLen == null) log(\"JPEGInterchangeFormatLength field is missing\");else if (jifoff >= soff || jifoff + jiflen <= soff) log(\"JPEGInterchangeFormatLength field value is invalid\");\n          if (joff != null) return {\n            jpegOffset: joff\n          };\n        }\n      }\n      if (ycbcrss != null) {\n        ssx = ycbcrss[0];\n        ssy = ycbcrss[1];\n      }\n      if (jpgIchgFmt != null) if (jpgIchgFmtLen != null) if (jiflen >= 2 && jifoff + jiflen <= soff) {\n        if (data[off + jifoff + jiflen - 2] == 255 && data[off + jifoff + jiflen - 1] == SOI) tables = new Uint8Array(jiflen - 2);else tables = new Uint8Array(jiflen);\n        for (i = 0; i < tables.length; i++) tables[i] = data[off + jifoff + i];\n        log(\"Incorrect JPEG interchange format: using JPEGInterchangeFormat offset to derive tables\");\n      } else log(\"JPEGInterchangeFormat+JPEGInterchangeFormatLength > offset to first strip or tile\");\n      if (tables == null) {\n        var ooff = 0,\n          out = [];\n        out[ooff++] = 255;\n        out[ooff++] = SOI;\n        var qtables = img[\"t519\"];\n        if (qtables == null) throw new Error(\"JPEGQTables tag is missing\");\n        for (i = 0; i < qtables.length; i++) {\n          out[ooff++] = 255;\n          out[ooff++] = DQT;\n          out[ooff++] = 0;\n          out[ooff++] = 67;\n          out[ooff++] = i;\n          for (j = 0; j < 64; j++) out[ooff++] = data[off + qtables[i] + j];\n        }\n        for (k = 0; k < 2; k++) {\n          var htables = img[k == 0 ? \"t520\" : \"t521\"];\n          if (htables == null) throw new Error((k == 0 ? \"JPEGDCTables\" : \"JPEGACTables\") + \" tag is missing\");\n          for (i = 0; i < htables.length; i++) {\n            out[ooff++] = 255;\n            out[ooff++] = DHT;\n            //out[ooff++] = 0; out[ooff++] = 67; out[ooff++] = i;\n            var nc = 19;\n            for (j = 0; j < 16; j++) nc += data[off + htables[i] + j];\n            out[ooff++] = nc >>> 8;\n            out[ooff++] = nc & 255;\n            out[ooff++] = i | k << 4;\n            for (j = 0; j < 16; j++) out[ooff++] = data[off + htables[i] + j];\n            for (j = 0; j < nc; j++) out[ooff++] = data[off + htables[i] + 16 + j];\n          }\n        }\n        out[ooff++] = 255;\n        out[ooff++] = SOF0;\n        out[ooff++] = 0;\n        out[ooff++] = 8 + 3 * spp;\n        out[ooff++] = 8;\n        out[ooff++] = img.height >>> 8 & 255;\n        out[ooff++] = img.height & 255;\n        out[ooff++] = img.width >>> 8 & 255;\n        out[ooff++] = img.width & 255;\n        out[ooff++] = spp;\n        if (spp == 1) {\n          out[ooff++] = 1;\n          out[ooff++] = 17;\n          out[ooff++] = 0;\n        } else for (i = 0; i < 3; i++) {\n          out[ooff++] = i + 1;\n          out[ooff++] = i != 0 ? 17 : (ssx & 15) << 4 | ssy & 15;\n          out[ooff++] = i;\n        }\n        if (jpgresint != null && jpgresint[0] != 0) {\n          out[ooff++] = 255;\n          out[ooff++] = DRI;\n          out[ooff++] = 0;\n          out[ooff++] = 4;\n          out[ooff++] = jpgresint[0] >>> 8 & 255;\n          out[ooff++] = jpgresint[0] & 255;\n        }\n        tables = new Uint8Array(out);\n      }\n      var sofpos = -1;\n      i = 0;\n      while (i < tables.length - 1) {\n        if (tables[i] == 255 && tables[i + 1] == SOF0) {\n          sofpos = i;\n          break;\n        }\n        i++;\n      }\n      if (sofpos == -1) {\n        var tmptab = new Uint8Array(tables.length + 10 + 3 * spp);\n        tmptab.set(tables);\n        var tmpoff = tables.length;\n        sofpos = tables.length;\n        tables = tmptab;\n        tables[tmpoff++] = 255;\n        tables[tmpoff++] = SOF0;\n        tables[tmpoff++] = 0;\n        tables[tmpoff++] = 8 + 3 * spp;\n        tables[tmpoff++] = 8;\n        tables[tmpoff++] = img.height >>> 8 & 255;\n        tables[tmpoff++] = img.height & 255;\n        tables[tmpoff++] = img.width >>> 8 & 255;\n        tables[tmpoff++] = img.width & 255;\n        tables[tmpoff++] = spp;\n        if (spp == 1) {\n          tables[tmpoff++] = 1;\n          tables[tmpoff++] = 17;\n          tables[tmpoff++] = 0;\n        } else for (i = 0; i < 3; i++) {\n          tables[tmpoff++] = i + 1;\n          tables[tmpoff++] = i != 0 ? 17 : (ssx & 15) << 4 | ssy & 15;\n          tables[tmpoff++] = i;\n        }\n      }\n      if (data[soff] == 255 && data[soff + 1] == SOS) {\n        var soslen = data[soff + 2] << 8 | data[soff + 3];\n        sosMarker = new Uint8Array(soslen + 2);\n        sosMarker[0] = data[soff];\n        sosMarker[1] = data[soff + 1];\n        sosMarker[2] = data[soff + 2];\n        sosMarker[3] = data[soff + 3];\n        for (i = 0; i < soslen - 2; i++) sosMarker[i + 4] = data[soff + i + 4];\n      } else {\n        sosMarker = new Uint8Array(2 + 6 + 2 * spp);\n        var sosoff = 0;\n        sosMarker[sosoff++] = 255;\n        sosMarker[sosoff++] = SOS;\n        sosMarker[sosoff++] = 0;\n        sosMarker[sosoff++] = 6 + 2 * spp;\n        sosMarker[sosoff++] = spp;\n        if (spp == 1) {\n          sosMarker[sosoff++] = 1;\n          sosMarker[sosoff++] = 0;\n        } else for (i = 0; i < 3; i++) {\n          sosMarker[sosoff++] = i + 1;\n          sosMarker[sosoff++] = i << 4 | i;\n        }\n        sosMarker[sosoff++] = 0;\n        sosMarker[sosoff++] = 63;\n        sosMarker[sosoff++] = 0;\n      }\n      return {\n        jpegOffset: off,\n        tables: tables,\n        sosMarker: sosMarker,\n        sofPosition: sofpos\n      };\n    };\n    UTIF.decode._decodeOldJPEG = function (img, data, off, len, tgt, toff) {\n      var i, dlen, tlen, buff, buffoff;\n      var jpegData = UTIF.decode._decodeOldJPEGInit(img, data, off, len);\n      if (jpegData.jpegOffset != null) {\n        dlen = off + len - jpegData.jpegOffset;\n        buff = new Uint8Array(dlen);\n        for (i = 0; i < dlen; i++) buff[i] = data[jpegData.jpegOffset + i];\n      } else {\n        tlen = jpegData.tables.length;\n        buff = new Uint8Array(tlen + jpegData.sosMarker.length + len + 2);\n        buff.set(jpegData.tables);\n        buffoff = tlen;\n        buff[jpegData.sofPosition + 5] = img.height >>> 8 & 255;\n        buff[jpegData.sofPosition + 6] = img.height & 255;\n        buff[jpegData.sofPosition + 7] = img.width >>> 8 & 255;\n        buff[jpegData.sofPosition + 8] = img.width & 255;\n        if (data[off] != 255 || data[off + 1] != SOS) {\n          buff.set(jpegData.sosMarker, buffoff);\n          buffoff += sosMarker.length;\n        }\n        for (i = 0; i < len; i++) buff[buffoff++] = data[off + i];\n        buff[buffoff++] = 255;\n        buff[buffoff++] = EOI;\n      }\n      var parser = new UTIF.JpegDecoder();\n      parser.parse(buff);\n      var decoded = parser.getData({\n        \"width\": parser.width,\n        \"height\": parser.height,\n        \"forceRGB\": true,\n        \"isSourcePDF\": false\n      });\n      for (var i = 0; i < decoded.length; i++) tgt[toff + i] = decoded[i];\n\n      // PhotometricInterpretation is 6 (YCbCr) for JPEG, but after decoding we populate data in\n      // RGB format, so updating the tag value\n      if (img[\"t262\"] && img[\"t262\"][0] == 6) img[\"t262\"][0] = 2;\n    };\n    UTIF.decode._decodePackBits = function (data, off, len, tgt, toff) {\n      var sa = new Int8Array(data.buffer),\n        ta = new Int8Array(tgt.buffer),\n        lim = off + len;\n      while (off < lim) {\n        var n = sa[off];\n        off++;\n        if (n >= 0 && n < 128) for (var i = 0; i < n + 1; i++) {\n          ta[toff] = sa[off];\n          toff++;\n          off++;\n        }\n        if (n >= -127 && n < 0) {\n          for (var i = 0; i < -n + 1; i++) {\n            ta[toff] = sa[off];\n            toff++;\n          }\n          off++;\n        }\n      }\n      return toff;\n    };\n    UTIF.decode._decodeThunder = function (data, off, len, tgt, toff) {\n      var d2 = [0, 1, 0, -1],\n        d3 = [0, 1, 2, 3, 0, -3, -2, -1];\n      var lim = off + len,\n        qoff = toff * 2,\n        px = 0;\n      while (off < lim) {\n        var b = data[off],\n          msk = b >>> 6,\n          n = b & 63;\n        off++;\n        if (msk == 3) {\n          px = n & 15;\n          tgt[qoff >>> 1] |= px << 4 * (1 - qoff & 1);\n          qoff++;\n        }\n        if (msk == 0) for (var i = 0; i < n; i++) {\n          tgt[qoff >>> 1] |= px << 4 * (1 - qoff & 1);\n          qoff++;\n        }\n        if (msk == 2) for (var i = 0; i < 2; i++) {\n          var d = n >>> 3 * (1 - i) & 7;\n          if (d != 4) {\n            px += d3[d];\n            tgt[qoff >>> 1] |= px << 4 * (1 - qoff & 1);\n            qoff++;\n          }\n        }\n        if (msk == 1) for (var i = 0; i < 3; i++) {\n          var d = n >>> 2 * (2 - i) & 3;\n          if (d != 2) {\n            px += d2[d];\n            tgt[qoff >>> 1] |= px << 4 * (1 - qoff & 1);\n            qoff++;\n          }\n        }\n      }\n    };\n    UTIF.decode._dmap = {\n      \"1\": 0,\n      \"011\": 1,\n      \"000011\": 2,\n      \"0000011\": 3,\n      \"010\": -1,\n      \"000010\": -2,\n      \"0000010\": -3\n    };\n    UTIF.decode._lens = function () {\n      var addKeys = function (lens, arr, i0, inc) {\n        for (var i = 0; i < arr.length; i++) lens[arr[i]] = i0 + i * inc;\n      };\n      var termW = \"00110101,000111,0111,1000,1011,1100,1110,1111,10011,10100,00111,01000,001000,000011,110100,110101,\" // 15\n      + \"101010,101011,0100111,0001100,0001000,0010111,0000011,0000100,0101000,0101011,0010011,0100100,0011000,00000010,00000011,00011010,\" // 31\n      + \"00011011,00010010,00010011,00010100,00010101,00010110,00010111,00101000,00101001,00101010,00101011,00101100,00101101,00000100,00000101,00001010,\" // 47\n      + \"00001011,01010010,01010011,01010100,01010101,00100100,00100101,01011000,01011001,01011010,01011011,01001010,01001011,00110010,00110011,00110100\";\n      var termB = \"0000110111,010,11,10,011,0011,0010,00011,000101,000100,0000100,0000101,0000111,00000100,00000111,000011000,\" // 15\n      + \"0000010111,0000011000,0000001000,00001100111,00001101000,00001101100,00000110111,00000101000,00000010111,00000011000,000011001010,000011001011,000011001100,000011001101,000001101000,000001101001,\" // 31\n      + \"000001101010,000001101011,000011010010,000011010011,000011010100,000011010101,000011010110,000011010111,000001101100,000001101101,000011011010,000011011011,000001010100,000001010101,000001010110,000001010111,\" // 47\n      + \"000001100100,000001100101,000001010010,000001010011,000000100100,000000110111,000000111000,000000100111,000000101000,000001011000,000001011001,000000101011,000000101100,000001011010,000001100110,000001100111\";\n      var makeW = \"11011,10010,010111,0110111,00110110,00110111,01100100,01100101,01101000,01100111,011001100,011001101,011010010,011010011,011010100,011010101,011010110,\" + \"011010111,011011000,011011001,011011010,011011011,010011000,010011001,010011010,011000,010011011\";\n      var makeB = \"0000001111,000011001000,000011001001,000001011011,000000110011,000000110100,000000110101,0000001101100,0000001101101,0000001001010,0000001001011,0000001001100,\" + \"0000001001101,0000001110010,0000001110011,0000001110100,0000001110101,0000001110110,0000001110111,0000001010010,0000001010011,0000001010100,0000001010101,0000001011010,\" + \"0000001011011,0000001100100,0000001100101\";\n      var makeA = \"00000001000,00000001100,00000001101,000000010010,000000010011,000000010100,000000010101,000000010110,000000010111,000000011100,000000011101,000000011110,000000011111\";\n      termW = termW.split(\",\");\n      termB = termB.split(\",\");\n      makeW = makeW.split(\",\");\n      makeB = makeB.split(\",\");\n      makeA = makeA.split(\",\");\n      var lensW = {},\n        lensB = {};\n      addKeys(lensW, termW, 0, 1);\n      addKeys(lensW, makeW, 64, 64);\n      addKeys(lensW, makeA, 1792, 64);\n      addKeys(lensB, termB, 0, 1);\n      addKeys(lensB, makeB, 64, 64);\n      addKeys(lensB, makeA, 1792, 64);\n      return [lensW, lensB];\n    }();\n    UTIF.decode._decodeG4 = function (data, off, slen, tgt, toff, w, fo) {\n      var U = UTIF.decode,\n        boff = off << 3,\n        len = 0,\n        wrd = \"\"; // previous starts with 1\n      var line = [],\n        pline = [];\n      for (var i = 0; i < w; i++) pline.push(0);\n      pline = U._makeDiff(pline);\n      var a0 = 0,\n        a1 = 0,\n        a2 = 0,\n        b1 = 0,\n        b2 = 0,\n        clr = 0;\n      var y = 0,\n        mode = \"\",\n        toRead = 0;\n      var bipl = Math.ceil(w / 8) * 8;\n      while (boff >>> 3 < off + slen) {\n        b1 = U._findDiff(pline, a0 + (a0 == 0 ? 0 : 1), 1 - clr), b2 = U._findDiff(pline, b1, clr); // could be precomputed\n        var bit = 0;\n        if (fo == 1) bit = data[boff >>> 3] >>> 7 - (boff & 7) & 1;\n        if (fo == 2) bit = data[boff >>> 3] >>> (boff & 7) & 1;\n        boff++;\n        wrd += bit;\n        if (mode == \"H\") {\n          if (U._lens[clr][wrd] != null) {\n            var dl = U._lens[clr][wrd];\n            wrd = \"\";\n            len += dl;\n            if (dl < 64) {\n              U._addNtimes(line, len, clr);\n              a0 += len;\n              clr = 1 - clr;\n              len = 0;\n              toRead--;\n              if (toRead == 0) mode = \"\";\n            }\n          }\n        } else {\n          if (wrd == \"0001\") {\n            wrd = \"\";\n            U._addNtimes(line, b2 - a0, clr);\n            a0 = b2;\n          }\n          if (wrd == \"001\") {\n            wrd = \"\";\n            mode = \"H\";\n            toRead = 2;\n          }\n          if (U._dmap[wrd] != null) {\n            a1 = b1 + U._dmap[wrd];\n            U._addNtimes(line, a1 - a0, clr);\n            a0 = a1;\n            wrd = \"\";\n            clr = 1 - clr;\n          }\n        }\n        if (line.length == w && mode == \"\") {\n          U._writeBits(line, tgt, toff * 8 + y * bipl);\n          clr = 0;\n          y++;\n          a0 = 0;\n          pline = U._makeDiff(line);\n          line = [];\n        }\n        //if(wrd.length>150) {  log(wrd);  break;  throw \"e\";  }\n      }\n    };\n    UTIF.decode._findDiff = function (line, x, clr) {\n      for (var i = 0; i < line.length; i += 2) if (line[i] >= x && line[i + 1] == clr) return line[i];\n    };\n    UTIF.decode._makeDiff = function (line) {\n      var out = [];\n      if (line[0] == 1) out.push(0, 1);\n      for (var i = 1; i < line.length; i++) if (line[i - 1] != line[i]) out.push(i, line[i]);\n      out.push(line.length, 0, line.length, 1);\n      return out;\n    };\n    UTIF.decode._decodeG2 = function (data, off, slen, tgt, toff, w, fo) {\n      var U = UTIF.decode,\n        boff = off << 3,\n        len = 0,\n        wrd = \"\";\n      var line = [];\n      var clr = 0;\n      var y = 0;\n      var bipl = Math.ceil(w / 8) * 8;\n      while (boff >>> 3 < off + slen) {\n        var bit = 0;\n        if (fo == 1) bit = data[boff >>> 3] >>> 7 - (boff & 7) & 1;\n        if (fo == 2) bit = data[boff >>> 3] >>> (boff & 7) & 1;\n        boff++;\n        wrd += bit;\n        len = U._lens[clr][wrd];\n        if (len != null) {\n          U._addNtimes(line, len, clr);\n          wrd = \"\";\n          if (len < 64) clr = 1 - clr;\n          if (line.length == w) {\n            U._writeBits(line, tgt, toff * 8 + y * bipl);\n            line = [];\n            y++;\n            clr = 0;\n            if ((boff & 7) != 0) boff += 8 - (boff & 7);\n            if (len >= 64) boff += 8;\n          }\n        }\n      }\n    };\n    UTIF.decode._decodeG3 = function (data, off, slen, tgt, toff, w, fo, twoDim) {\n      var U = UTIF.decode,\n        boff = off << 3,\n        len = 0,\n        wrd = \"\";\n      var line = [],\n        pline = [];\n      for (var i = 0; i < w; i++) line.push(0);\n      var a0 = 0,\n        a1 = 0,\n        a2 = 0,\n        b1 = 0,\n        b2 = 0,\n        clr = 0;\n      var y = -1,\n        mode = \"\",\n        toRead = 0,\n        is1D = true;\n      var bipl = Math.ceil(w / 8) * 8;\n      while (boff >>> 3 < off + slen) {\n        b1 = U._findDiff(pline, a0 + (a0 == 0 ? 0 : 1), 1 - clr), b2 = U._findDiff(pline, b1, clr); // could be precomputed\n        var bit = 0;\n        if (fo == 1) bit = data[boff >>> 3] >>> 7 - (boff & 7) & 1;\n        if (fo == 2) bit = data[boff >>> 3] >>> (boff & 7) & 1;\n        boff++;\n        wrd += bit;\n        if (is1D) {\n          if (U._lens[clr][wrd] != null) {\n            var dl = U._lens[clr][wrd];\n            wrd = \"\";\n            len += dl;\n            if (dl < 64) {\n              U._addNtimes(line, len, clr);\n              clr = 1 - clr;\n              len = 0;\n            }\n          }\n        } else {\n          if (mode == \"H\") {\n            if (U._lens[clr][wrd] != null) {\n              var dl = U._lens[clr][wrd];\n              wrd = \"\";\n              len += dl;\n              if (dl < 64) {\n                U._addNtimes(line, len, clr);\n                a0 += len;\n                clr = 1 - clr;\n                len = 0;\n                toRead--;\n                if (toRead == 0) mode = \"\";\n              }\n            }\n          } else {\n            if (wrd == \"0001\") {\n              wrd = \"\";\n              U._addNtimes(line, b2 - a0, clr);\n              a0 = b2;\n            }\n            if (wrd == \"001\") {\n              wrd = \"\";\n              mode = \"H\";\n              toRead = 2;\n            }\n            if (U._dmap[wrd] != null) {\n              a1 = b1 + U._dmap[wrd];\n              U._addNtimes(line, a1 - a0, clr);\n              a0 = a1;\n              wrd = \"\";\n              clr = 1 - clr;\n            }\n          }\n        }\n        if (wrd.endsWith(\"000000000001\"))\n          // needed for some files\n          {\n            if (y >= 0) U._writeBits(line, tgt, toff * 8 + y * bipl);\n            if (twoDim) {\n              if (fo == 1) is1D = (data[boff >>> 3] >>> 7 - (boff & 7) & 1) == 1;\n              if (fo == 2) is1D = (data[boff >>> 3] >>> (boff & 7) & 1) == 1;\n              boff++;\n            }\n            //log(\"EOL\",y, \"next 1D:\", is1D);\n            wrd = \"\";\n            clr = 0;\n            y++;\n            a0 = 0;\n            pline = U._makeDiff(line);\n            line = [];\n          }\n      }\n      if (line.length == w) U._writeBits(line, tgt, toff * 8 + y * bipl);\n    };\n    UTIF.decode._addNtimes = function (arr, n, val) {\n      for (var i = 0; i < n; i++) arr.push(val);\n    };\n    UTIF.decode._writeBits = function (bits, tgt, boff) {\n      for (var i = 0; i < bits.length; i++) tgt[boff + i >>> 3] |= bits[i] << 7 - (boff + i & 7);\n    };\n    UTIF.decode._decodeLZW = UTIF.decode._decodeLZW = function () {\n      var e,\n        U,\n        Z,\n        u,\n        K = 0,\n        V = 0,\n        g = 0,\n        N = 0,\n        O = function () {\n          var S = e >>> 3,\n            A = U[S] << 16 | U[S + 1] << 8 | U[S + 2],\n            j = A >>> 24 - (e & 7) - V & (1 << V) - 1;\n          e += V;\n          return j;\n        },\n        h = new Uint32Array(4096 * 4),\n        w = 0,\n        m = function (S) {\n          if (S == w) return;\n          w = S;\n          g = 1 << S;\n          N = g + 1;\n          for (var A = 0; A < N + 1; A++) {\n            h[4 * A] = h[4 * A + 3] = A;\n            h[4 * A + 1] = 65535;\n            h[4 * A + 2] = 1;\n          }\n        },\n        i = function (S) {\n          V = S + 1;\n          K = N + 1;\n        },\n        D = function (S) {\n          var A = S << 2,\n            j = h[A + 2],\n            a = u + j - 1;\n          while (A != 65535) {\n            Z[a--] = h[A];\n            A = h[A + 1];\n          }\n          u += j;\n        },\n        L = function (S, A) {\n          var j = K << 2,\n            a = S << 2;\n          h[j] = h[(A << 2) + 3];\n          h[j + 1] = a;\n          h[j + 2] = h[a + 2] + 1;\n          h[j + 3] = h[a + 3];\n          K++;\n          if (K + 1 == 1 << V && V != 12) V++;\n        },\n        T = function (S, A, j, a, n, q) {\n          e = A << 3;\n          U = S;\n          Z = a;\n          u = n;\n          var B = A + j << 3,\n            _ = 0,\n            t = 0;\n          m(q);\n          i(q);\n          while (e < B && (_ = O()) != N) {\n            if (_ == g) {\n              i(q);\n              _ = O();\n              if (_ == N) break;\n              D(_);\n            } else {\n              if (_ < K) {\n                D(_);\n                L(t, _);\n              } else {\n                L(t, t);\n                D(K - 1);\n              }\n            }\n            t = _;\n          }\n          return u;\n        };\n      return T;\n    }();\n    UTIF.tags = {};\n    //UTIF.ttypes = {  256:3,257:3,258:3,   259:3, 262:3,  273:4,  274:3, 277:3,278:4,279:4, 282:5, 283:5, 284:3, 286:5,287:5, 296:3, 305:2, 306:2, 338:3, 513:4, 514:4, 34665:4  };\n    // start at tag 250\n    UTIF._types = function () {\n      var main = new Array(250);\n      main.fill(0);\n      main = main.concat([0, 0, 0, 0, 4, 3, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 0, 0, 2, 2, 2, 2, 4, 3, 0, 0, 3, 4, 4, 3, 3, 5, 5, 3, 2, 5, 5, 0, 0, 0, 0, 4, 4, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 5, 5, 3, 0, 3, 3, 4, 4, 4, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n      var rest = {\n        33432: 2,\n        33434: 5,\n        33437: 5,\n        34665: 4,\n        34850: 3,\n        34853: 4,\n        34855: 3,\n        34864: 3,\n        34866: 4,\n        36864: 7,\n        36867: 2,\n        36868: 2,\n        37121: 7,\n        37377: 10,\n        37378: 5,\n        37380: 10,\n        37381: 5,\n        37383: 3,\n        37384: 3,\n        37385: 3,\n        37386: 5,\n        37510: 7,\n        37520: 2,\n        37521: 2,\n        37522: 2,\n        40960: 7,\n        40961: 3,\n        40962: 4,\n        40963: 4,\n        40965: 4,\n        41486: 5,\n        41487: 5,\n        41488: 3,\n        41985: 3,\n        41986: 3,\n        41987: 3,\n        41988: 5,\n        41989: 3,\n        41990: 3,\n        41993: 3,\n        41994: 3,\n        41995: 7,\n        41996: 3,\n        42032: 2,\n        42033: 2,\n        42034: 5,\n        42036: 2,\n        42037: 2,\n        59932: 7\n      };\n      return {\n        basic: {\n          main: main,\n          rest: rest\n        },\n        gps: {\n          main: [1, 2, 5, 2, 5, 1, 5, 5, 0, 9],\n          rest: {\n            18: 2,\n            29: 2\n          }\n        }\n      };\n    }();\n    UTIF._readIFD = function (bin, data, offset, ifds, depth, prm) {\n      var cnt = bin.readUshort(data, offset);\n      offset += 2;\n      var ifd = {};\n      if (prm.debug) log(\"   \".repeat(depth), ifds.length - 1, \">>>----------------\");\n      for (var i = 0; i < cnt; i++) {\n        var tag = bin.readUshort(data, offset);\n        offset += 2;\n        var type = bin.readUshort(data, offset);\n        offset += 2;\n        var num = bin.readUint(data, offset);\n        offset += 4;\n        var voff = bin.readUint(data, offset);\n        offset += 4;\n        var arr = [];\n        //ifd[\"t\"+tag+\"-\"+UTIF.tags[tag]] = arr;\n        if (type == 1 || type == 7) {\n          var no = num < 5 ? offset - 4 : voff;\n          if (no + num > data.buffer.byteLength) num = data.buffer.byteLength - no;\n          arr = new Uint8Array(data.buffer, no, num);\n        }\n        if (type == 2) {\n          var o0 = num < 5 ? offset - 4 : voff,\n            c = data[o0],\n            len = Math.max(0, Math.min(num - 1, data.length - o0));\n          if (c < 128 || len == 0) arr.push(bin.readASCII(data, o0, len));else arr = new Uint8Array(data.buffer, o0, len);\n        }\n        if (type == 3) {\n          for (var j = 0; j < num; j++) arr.push(bin.readUshort(data, (num < 3 ? offset - 4 : voff) + 2 * j));\n        }\n        if (type == 4 || type == 13) {\n          for (var j = 0; j < num; j++) arr.push(bin.readUint(data, (num < 2 ? offset - 4 : voff) + 4 * j));\n        }\n        if (type == 5 || type == 10) {\n          var ri = type == 5 ? bin.readUint : bin.readInt;\n          for (var j = 0; j < num; j++) arr.push([ri(data, voff + j * 8), ri(data, voff + j * 8 + 4)]);\n        }\n        if (type == 8) {\n          for (var j = 0; j < num; j++) arr.push(bin.readShort(data, (num < 3 ? offset - 4 : voff) + 2 * j));\n        }\n        if (type == 9) {\n          for (var j = 0; j < num; j++) arr.push(bin.readInt(data, (num < 2 ? offset - 4 : voff) + 4 * j));\n        }\n        if (type == 11) {\n          for (var j = 0; j < num; j++) arr.push(bin.readFloat(data, voff + j * 4));\n        }\n        if (type == 12) {\n          for (var j = 0; j < num; j++) arr.push(bin.readDouble(data, voff + j * 8));\n        }\n        if (num != 0 && arr.length == 0) {\n          log(tag, \"unknown TIFF tag type: \", type, \"num:\", num);\n          if (i == 0) return;\n          continue;\n        }\n        if (prm.debug) log(\"   \".repeat(depth), tag, type, UTIF.tags[tag], arr);\n        ifd[\"t\" + tag] = arr;\n        if (tag == 330 && ifd[\"t272\"] && ifd[\"t272\"][0] == \"DSLR-A100\") {} else if (tag == 330 || tag == 34665 || tag == 34853 || tag == 50740 && bin.readUshort(data, bin.readUint(arr, 0)) < 300 || tag == 61440) {\n          var oarr = tag == 50740 ? [bin.readUint(arr, 0)] : arr;\n          var subfd = [];\n          for (var j = 0; j < oarr.length; j++) UTIF._readIFD(bin, data, oarr[j], subfd, depth + 1, prm);\n          if (tag == 330) ifd.subIFD = subfd;\n          if (tag == 34665) ifd.exifIFD = subfd[0];\n          if (tag == 34853) ifd.gpsiIFD = subfd[0]; //console.log(\"gps\", subfd[0]);  }\n          if (tag == 50740) ifd.dngPrvt = subfd[0];\n          if (tag == 61440) ifd.fujiIFD = subfd[0];\n        }\n        if (tag == 37500 && prm.parseMN) {\n          var mn = arr;\n          //console.log(bin.readASCII(mn,0,mn.length), mn);\n          if (bin.readASCII(mn, 0, 5) == \"Nikon\") ifd.makerNote = UTIF[\"decode\"](mn.slice(10).buffer)[0];else if (bin.readASCII(mn, 0, 5) == \"OLYMP\" || bin.readASCII(mn, 0, 9) == \"OM SYSTEM\") {\n            // ???\n            var inds = [8208, 8224, 8240, 8256, 8272];\n            var subsub = [];\n            UTIF._readIFD(bin, mn, mn[1] == 77 ? 16 : mn[5] == 85 ? 12 : 8, subsub, depth + 1, prm);\n            var obj = ifd.makerNote = subsub.pop();\n            for (var j = 0; j < inds.length; j++) {\n              var k = \"t\" + inds[j];\n              if (obj[k] == null) continue;\n              UTIF._readIFD(bin, mn, obj[k][0], subsub, depth + 1, prm);\n              obj[k] = subsub.pop();\n            }\n            if (obj[\"t12288\"]) {\n              UTIF._readIFD(bin, obj[\"t12288\"], 0, subsub, depth + 1, prm);\n              obj[\"t12288\"] = subsub.pop();\n            }\n          } else if (bin.readUshort(data, voff) < 300 && bin.readUshort(data, voff + 4) <= 12) {\n            var subsub = [];\n            UTIF._readIFD(bin, data, voff, subsub, depth + 1, prm);\n            ifd.makerNote = subsub[0];\n          }\n        }\n      }\n      ifds.push(ifd);\n      if (prm.debug) log(\"   \".repeat(depth), \"<<<---------------\");\n      return offset;\n    };\n    UTIF._writeIFD = function (bin, types, data, offset, ifd) {\n      var keys = Object.keys(ifd),\n        knum = keys.length;\n      if (ifd[\"exifIFD\"]) knum--;\n      if (ifd[\"gpsiIFD\"]) knum--;\n      bin.writeUshort(data, offset, knum);\n      offset += 2;\n      var eoff = offset + knum * 12 + 4;\n      for (var ki = 0; ki < keys.length; ki++) {\n        var key = keys[ki];\n        if (key == \"t34665\" || key == \"t34853\") continue;\n        if (key == \"exifIFD\") key = \"t34665\";\n        if (key == \"gpsiIFD\") key = \"t34853\";\n        var tag = parseInt(key.slice(1)),\n          type = types.main[tag];\n        if (type == null) type = types.rest[tag];\n        if (type == null || type == 0) throw new Error(\"unknown type of tag: \" + tag);\n        //console.log(offset+\":\", tag, type, eoff);\n        var val = ifd[key];\n        if (tag == 34665) {\n          var outp = UTIF._writeIFD(bin, types, data, eoff, ifd[\"exifIFD\"]);\n          val = [eoff];\n          eoff = outp[1];\n        }\n        if (tag == 34853) {\n          var outp = UTIF._writeIFD(bin, UTIF._types.gps, data, eoff, ifd[\"gpsiIFD\"]);\n          val = [eoff];\n          eoff = outp[1];\n        }\n        if (type == 2) val = val[0] + \"\\u0000\";\n        var num = val.length;\n        bin.writeUshort(data, offset, tag);\n        offset += 2;\n        bin.writeUshort(data, offset, type);\n        offset += 2;\n        bin.writeUint(data, offset, num);\n        offset += 4;\n        var dlen = [-1, 1, 1, 2, 4, 8, 0, 1, 0, 4, 8, 0, 8][type] * num; //if(dlen<1) throw \"e\";\n        var toff = offset;\n        if (dlen > 4) {\n          bin.writeUint(data, offset, eoff);\n          toff = eoff;\n        }\n        if (type == 1 || type == 7) {\n          for (var i = 0; i < num; i++) data[toff + i] = val[i];\n        } else if (type == 2) {\n          bin.writeASCII(data, toff, val);\n        } else if (type == 3) {\n          for (var i = 0; i < num; i++) bin.writeUshort(data, toff + 2 * i, val[i]);\n        } else if (type == 4) {\n          for (var i = 0; i < num; i++) bin.writeUint(data, toff + 4 * i, val[i]);\n        } else if (type == 5 || type == 10) {\n          var wr = type == 5 ? bin.writeUint : bin.writeInt;\n          for (var i = 0; i < num; i++) {\n            var v = val[i],\n              nu = v[0],\n              de = v[1];\n            if (nu == null) throw \"e\";\n            wr(data, toff + 8 * i, nu);\n            wr(data, toff + 8 * i + 4, de);\n          }\n        } else if (type == 9) {\n          for (var i = 0; i < num; i++) bin.writeInt(data, toff + 4 * i, val[i]);\n        } else if (type == 12) {\n          for (var i = 0; i < num; i++) bin.writeDouble(data, toff + 8 * i, val[i]);\n        } else throw type;\n        if (dlen > 4) {\n          dlen += dlen & 1;\n          eoff += dlen;\n        }\n        offset += 4;\n      }\n      return [offset, eoff];\n    };\n    UTIF.toRGBA8 = function (out, scl) {\n      function gamma(x) {\n        return x < 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1.0 / 2.4) - 0.055;\n      }\n      var w = out.width,\n        h = out.height,\n        area = w * h,\n        qarea = area * 4,\n        data = out.data;\n      var img = new Uint8Array(area * 4);\n      //console.log(out);\n      // 0: WhiteIsZero, 1: BlackIsZero, 2: RGB, 3: Palette color, 4: Transparency mask, 5: CMYK\n      var intp = out[\"t262\"] ? out[\"t262\"][0] : 2,\n        bps = out[\"t258\"] ? Math.min(32, out[\"t258\"][0]) : 1;\n      if (out[\"t262\"] == null && bps == 1) intp = 0;\n      var smpls = out[\"t277\"] ? out[\"t277\"][0] : out[\"t258\"] ? out[\"t258\"].length : [1, 1, 3, 1, 1, 4, 3][intp];\n      var sfmt = out[\"t339\"] ? out[\"t339\"][0] : null;\n      if (intp == 1 && bps == 32 && sfmt != 3) throw \"e\"; // sample format\n      var bpl = Math.ceil(smpls * bps * w / 8);\n\n      //log(\"interpretation: \", intp, \"smpls\", smpls, \"bps\", bps, \"sample format\",sfmt, out);\n\n      if (false) {} else if (intp == 0) {\n        scl = 1 / 256; // \"Photopeatest.tif\"\n        for (var y = 0; y < h; y++) {\n          var off = y * bpl,\n            io = y * w;\n          if (bps == 1) for (var i = 0; i < w; i++) {\n            var qi = io + i << 2,\n              px = data[off + (i >> 3)] >> 7 - (i & 7) & 1;\n            img[qi] = img[qi + 1] = img[qi + 2] = (1 - px) * 255;\n            img[qi + 3] = 255;\n          }\n          if (bps == 4) for (var i = 0; i < w; i++) {\n            var qi = io + i << 2,\n              px = data[off + (i >> 1)] >> 4 - 4 * (i & 1) & 15;\n            img[qi] = img[qi + 1] = img[qi + 2] = (15 - px) * 17;\n            img[qi + 3] = 255;\n          }\n          if (bps == 8) for (var i = 0; i < w; i++) {\n            var qi = io + i << 2,\n              px = data[off + i];\n            img[qi] = img[qi + 1] = img[qi + 2] = 255 - px;\n            img[qi + 3] = 255;\n          }\n          if (bps == 16) for (var i = 0; i < w; i++) {\n            var qi = io + i << 2,\n              o = off + 2 * i,\n              px = data[o + 1] << 8 | data[o];\n            img[qi] = img[qi + 1] = img[qi + 2] = Math.min(255, 255 - ~~(px * scl));\n            img[qi + 3] = 255;\n          } // ladoga.tif\n        }\n      } else if (intp == 1) {\n        if (scl == null) scl = 1 / 256;\n        var f32 = (data.length & 3) == 0 ? new Float32Array(data.buffer) : null;\n        for (var y = 0; y < h; y++) {\n          var off = y * bpl,\n            io = y * w;\n          if (bps == 1) for (var i = 0; i < w; i++) {\n            var qi = io + i << 2,\n              px = data[off + (i >> 3)] >> 7 - (i & 7) & 1;\n            img[qi] = img[qi + 1] = img[qi + 2] = px * 255;\n            img[qi + 3] = 255;\n          }\n          if (bps == 2) for (var i = 0; i < w; i++) {\n            var qi = io + i << 2,\n              px = data[off + (i >> 2)] >> 6 - 2 * (i & 3) & 3;\n            img[qi] = img[qi + 1] = img[qi + 2] = px * 85;\n            img[qi + 3] = 255;\n          }\n          if (bps == 8) for (var i = 0; i < w; i++) {\n            var qi = io + i << 2,\n              px = data[off + i * smpls];\n            img[qi] = img[qi + 1] = img[qi + 2] = px;\n            img[qi + 3] = 255;\n          }\n          if (bps == 16) for (var i = 0; i < w; i++) {\n            var qi = io + i << 2,\n              o = off + 2 * i,\n              px = data[o + 1] << 8 | data[o];\n            img[qi] = img[qi + 1] = img[qi + 2] = Math.min(255, ~~(px * scl));\n            img[qi + 3] = 255;\n          } // ladoga.tif\n          if (bps == 32) for (var i = 0; i < w; i++) {\n            var qi = io + i << 2,\n              o = (off >>> 2) + i,\n              px = f32[o];\n            img[qi] = img[qi + 1] = img[qi + 2] = ~~(0.5 + 255 * px);\n            img[qi + 3] = 255;\n          }\n        }\n      } else if (intp == 2) {\n        if (bps == 8) {\n          if (smpls == 1) for (var i = 0; i < area; i++) {\n            img[4 * i] = img[4 * i + 1] = img[4 * i + 2] = data[i];\n            img[4 * i + 3] = 255;\n          }\n          if (smpls == 3) for (var i = 0; i < area; i++) {\n            var qi = i << 2,\n              ti = i * 3;\n            img[qi] = data[ti];\n            img[qi + 1] = data[ti + 1];\n            img[qi + 2] = data[ti + 2];\n            img[qi + 3] = 255;\n          }\n          if (smpls >= 4) for (var i = 0; i < area; i++) {\n            var qi = i << 2,\n              ti = i * smpls;\n            img[qi] = data[ti];\n            img[qi + 1] = data[ti + 1];\n            img[qi + 2] = data[ti + 2];\n            img[qi + 3] = data[ti + 3];\n          }\n        } else if (bps == 16) {\n          // 3x 16-bit channel\n          if (smpls == 4) for (var i = 0; i < area; i++) {\n            var qi = i << 2,\n              ti = i * 8 + 1;\n            img[qi] = data[ti];\n            img[qi + 1] = data[ti + 2];\n            img[qi + 2] = data[ti + 4];\n            img[qi + 3] = data[ti + 6];\n          }\n          if (smpls == 3) for (var i = 0; i < area; i++) {\n            var qi = i << 2,\n              ti = i * 6 + 1;\n            img[qi] = data[ti];\n            img[qi + 1] = data[ti + 2];\n            img[qi + 2] = data[ti + 4];\n            img[qi + 3] = 255;\n          }\n        } else if (bps == 32) {\n          var ndt = new Float32Array(data.buffer); // t339 is [3,3,3]\n          // check the endianity\n          var min = 0;\n          for (var i = 0; i < ndt.length; i++) min = Math.min(min, ndt[i]);\n          if (min < 0) for (var i = 0; i < data.length; i += 4) {\n            var t = data[i];\n            data[i] = data[i + 3];\n            data[i + 3] = t;\n            t = data[i + 1];\n            data[i + 1] = data[i + 2];\n            data[i + 2] = t;\n          }\n          // gamma correction\n          var pmap = [];\n          for (var i = 0; i < 65536; i++) pmap.push(gamma(i / 65535));\n          for (var i = 0; i < ndt.length; i++) {\n            var cv = Math.max(0, Math.min(1, ndt[i]));\n            ndt[i] = pmap[~~(0.5 + cv * 65535)];\n          }\n          if (smpls == 3) for (var i = 0; i < area; i++) {\n            var qi = i << 2,\n              ti = i * 3;\n            img[qi] = ~~(0.5 + ndt[ti] * 255);\n            img[qi + 1] = ~~(0.5 + ndt[ti + 1] * 255);\n            img[qi + 2] = ~~(0.5 + ndt[ti + 2] * 255);\n            img[qi + 3] = 255;\n          } else if (smpls == 4) for (var i = 0; i < area; i++) {\n            var qi = i << 2,\n              ti = i * 4;\n            img[qi] = ~~(0.5 + ndt[ti] * 255);\n            img[qi + 1] = ~~(0.5 + ndt[ti + 1] * 255);\n            img[qi + 2] = ~~(0.5 + ndt[ti + 2] * 255);\n            img[qi + 3] = ~~(0.5 + ndt[ti + 3] * 255);\n          } else throw smpls;\n        } else throw bps;\n      } else if (intp == 3) {\n        var map = out[\"t320\"];\n        var cn = 1 << bps;\n        var nexta = bps == 8 && smpls > 1 && out[\"t338\"] && out[\"t338\"][0] != 0;\n        for (var y = 0; y < h; y++) for (var x = 0; x < w; x++) {\n          var i = y * w + x;\n          var qi = i << 2,\n            mi = 0;\n          var dof = y * bpl;\n          if (false) {} else if (bps == 1) mi = data[dof + (x >>> 3)] >>> 7 - (x & 7) & 1;else if (bps == 2) mi = data[dof + (x >>> 2)] >>> 6 - 2 * (x & 3) & 3;else if (bps == 4) mi = data[dof + (x >>> 1)] >>> 4 - 4 * (x & 1) & 15;else if (bps == 8) mi = data[dof + x * smpls];else throw bps;\n          img[qi] = map[mi] >> 8;\n          img[qi + 1] = map[cn + mi] >> 8;\n          img[qi + 2] = map[cn + cn + mi] >> 8;\n          img[qi + 3] = nexta ? data[dof + x * smpls + 1] : 255;\n        }\n      } else if (intp == 5) {\n        var gotAlpha = smpls > 4 ? 1 : 0;\n        for (var i = 0; i < area; i++) {\n          var qi = i << 2,\n            si = i * smpls;\n          if (window.UDOC) {\n            var C = data[si],\n              M = data[si + 1],\n              Y = data[si + 2],\n              K = data[si + 3];\n            var c = UDOC.C.cmykToRgb([C * (1 / 255), M * (1 / 255), Y * (1 / 255), K * (1 / 255)]);\n            img[qi] = ~~(0.5 + 255 * c[0]);\n            img[qi + 1] = ~~(0.5 + 255 * c[1]);\n            img[qi + 2] = ~~(0.5 + 255 * c[2]);\n          } else {\n            var C = 255 - data[si],\n              M = 255 - data[si + 1],\n              Y = 255 - data[si + 2],\n              K = (255 - data[si + 3]) * (1 / 255);\n            img[qi] = ~~(C * K + 0.5);\n            img[qi + 1] = ~~(M * K + 0.5);\n            img[qi + 2] = ~~(Y * K + 0.5);\n          }\n          img[qi + 3] = 255 * (1 - gotAlpha) + data[si + 4] * gotAlpha;\n        }\n      } else if (intp == 6 && out[\"t278\"]) {\n        // only for DSC_1538.TIF\n        var rps = out[\"t278\"][0];\n        for (var y = 0; y < h; y += rps) {\n          var i = y * w,\n            len = rps * w;\n          for (var j = 0; j < len; j++) {\n            var qi = 4 * (i + j),\n              si = 3 * i + 4 * (j >>> 1);\n            var Y = data[si + (j & 1)],\n              Cb = data[si + 2] - 128,\n              Cr = data[si + 3] - 128;\n            var r = Y + ((Cr >> 2) + (Cr >> 3) + (Cr >> 5));\n            var g = Y - ((Cb >> 2) + (Cb >> 4) + (Cb >> 5)) - ((Cr >> 1) + (Cr >> 3) + (Cr >> 4) + (Cr >> 5));\n            var b = Y + (Cb + (Cb >> 1) + (Cb >> 2) + (Cb >> 6));\n            img[qi] = Math.max(0, Math.min(255, r));\n            img[qi + 1] = Math.max(0, Math.min(255, g));\n            img[qi + 2] = Math.max(0, Math.min(255, b));\n            img[qi + 3] = 255;\n          }\n        }\n      } else if (intp == 32845) {\n        for (var y = 0; y < h; y++) for (var x = 0; x < w; x++) {\n          var si = (y * w + x) * 6,\n            qi = (y * w + x) * 4;\n          var L = data[si + 1] << 8 | data[si];\n          var L = Math.pow(2, (L + 0.5) / 256 - 64);\n          var u = (data[si + 3] + 0.5) / 410;\n          var v = (data[si + 5] + 0.5) / 410;\n\n          // Luv to xyY\n          var sX = 9 * u / (6 * u - 16 * v + 12);\n          var sY = 4 * v / (6 * u - 16 * v + 12);\n          var bY = L;\n\n          // xyY to XYZ\n          var X = sX * bY / sY,\n            Y = bY,\n            Z = (1 - sX - sY) * bY / sY;\n          var r = 2.690 * X - 1.276 * Y - 0.414 * Z;\n          var g = -1.022 * X + 1.978 * Y + 0.044 * Z;\n          var b = 0.061 * X - 0.224 * Y + 1.163 * Z;\n          img[qi] = gamma(Math.min(r, 1)) * 255;\n          img[qi + 1] = gamma(Math.min(g, 1)) * 255;\n          img[qi + 2] = gamma(Math.min(b, 1)) * 255;\n          img[qi + 3] = 255;\n        }\n      } else log(\"Unknown Photometric interpretation: \" + intp);\n      return img;\n    };\n    UTIF.replaceIMG = function (imgs) {\n      if (imgs == null) imgs = document.getElementsByTagName(\"img\");\n      var sufs = [\"tif\", \"tiff\", \"dng\", \"cr2\", \"nef\"];\n      for (var i = 0; i < imgs.length; i++) {\n        var img = imgs[i],\n          src = img.getAttribute(\"src\");\n        if (src == null) continue;\n        var suff = src.split(\".\").pop().toLowerCase();\n        if (sufs.indexOf(suff) == -1) continue;\n        var xhr = new XMLHttpRequest();\n        UTIF._xhrs.push(xhr);\n        UTIF._imgs.push(img);\n        xhr.open(\"GET\", src);\n        xhr.responseType = \"arraybuffer\";\n        xhr.onload = UTIF._imgLoaded;\n        xhr.send();\n      }\n    };\n    UTIF._xhrs = [];\n    UTIF._imgs = [];\n    UTIF._imgLoaded = function (e) {\n      var ind = UTIF._xhrs.indexOf(e.target),\n        img = UTIF._imgs[ind];\n      UTIF._xhrs.splice(ind, 1);\n      UTIF._imgs.splice(ind, 1);\n      img.setAttribute(\"src\", UTIF.bufferToURI(e.target.response));\n    };\n    UTIF.bufferToURI = function (buff) {\n      var ifds = UTIF.decode(buff); //console.log(ifds);\n      var vsns = ifds,\n        ma = 0,\n        page = vsns[0];\n      if (ifds[0].subIFD) vsns = vsns.concat(ifds[0].subIFD);\n      for (var i = 0; i < vsns.length; i++) {\n        var img = vsns[i];\n        if (img[\"t258\"] == null || img[\"t258\"].length < 3) continue;\n        var ar = img[\"t256\"] * img[\"t257\"];\n        if (ar > ma) {\n          ma = ar;\n          page = img;\n        }\n      }\n      UTIF.decodeImage(buff, page, ifds);\n      var rgba = UTIF.toRGBA8(page),\n        w = page.width,\n        h = page.height;\n      var cnv = document.createElement(\"canvas\");\n      cnv.width = w;\n      cnv.height = h;\n      var ctx = cnv.getContext(\"2d\");\n      var imgd = new ImageData(new Uint8ClampedArray(rgba.buffer), w, h);\n      ctx.putImageData(imgd, 0, 0);\n      return cnv.toDataURL();\n    };\n    UTIF._binBE = {\n      nextZero: function (data, o) {\n        while (data[o] != 0) o++;\n        return o;\n      },\n      readUshort: function (buff, p) {\n        return buff[p] << 8 | buff[p + 1];\n      },\n      readShort: function (buff, p) {\n        var a = UTIF._binBE.ui8;\n        a[0] = buff[p + 1];\n        a[1] = buff[p + 0];\n        return UTIF._binBE.i16[0];\n      },\n      readInt: function (buff, p) {\n        var a = UTIF._binBE.ui8;\n        a[0] = buff[p + 3];\n        a[1] = buff[p + 2];\n        a[2] = buff[p + 1];\n        a[3] = buff[p + 0];\n        return UTIF._binBE.i32[0];\n      },\n      readUint: function (buff, p) {\n        var a = UTIF._binBE.ui8;\n        a[0] = buff[p + 3];\n        a[1] = buff[p + 2];\n        a[2] = buff[p + 1];\n        a[3] = buff[p + 0];\n        return UTIF._binBE.ui32[0];\n      },\n      readASCII: function (buff, p, l) {\n        var s = \"\";\n        for (var i = 0; i < l; i++) s += String.fromCharCode(buff[p + i]);\n        return s;\n      },\n      readFloat: function (buff, p) {\n        var a = UTIF._binBE.ui8;\n        for (var i = 0; i < 4; i++) a[i] = buff[p + 3 - i];\n        return UTIF._binBE.fl32[0];\n      },\n      readDouble: function (buff, p) {\n        var a = UTIF._binBE.ui8;\n        for (var i = 0; i < 8; i++) a[i] = buff[p + 7 - i];\n        return UTIF._binBE.fl64[0];\n      },\n      writeUshort: function (buff, p, n) {\n        buff[p] = n >> 8 & 255;\n        buff[p + 1] = n & 255;\n      },\n      writeInt: function (buff, p, n) {\n        var a = UTIF._binBE.ui8;\n        UTIF._binBE.i32[0] = n;\n        buff[p + 3] = a[0];\n        buff[p + 2] = a[1];\n        buff[p + 1] = a[2];\n        buff[p + 0] = a[3];\n      },\n      writeUint: function (buff, p, n) {\n        buff[p] = n >> 24 & 255;\n        buff[p + 1] = n >> 16 & 255;\n        buff[p + 2] = n >> 8 & 255;\n        buff[p + 3] = n >> 0 & 255;\n      },\n      writeASCII: function (buff, p, s) {\n        for (var i = 0; i < s.length; i++) buff[p + i] = s.charCodeAt(i);\n      },\n      writeDouble: function (buff, p, n) {\n        UTIF._binBE.fl64[0] = n;\n        for (var i = 0; i < 8; i++) buff[p + i] = UTIF._binBE.ui8[7 - i];\n      }\n    };\n    UTIF._binBE.ui8 = new Uint8Array(8);\n    UTIF._binBE.i16 = new Int16Array(UTIF._binBE.ui8.buffer);\n    UTIF._binBE.i32 = new Int32Array(UTIF._binBE.ui8.buffer);\n    UTIF._binBE.ui32 = new Uint32Array(UTIF._binBE.ui8.buffer);\n    UTIF._binBE.fl32 = new Float32Array(UTIF._binBE.ui8.buffer);\n    UTIF._binBE.fl64 = new Float64Array(UTIF._binBE.ui8.buffer);\n    UTIF._binLE = {\n      nextZero: UTIF._binBE.nextZero,\n      readUshort: function (buff, p) {\n        return buff[p + 1] << 8 | buff[p];\n      },\n      readShort: function (buff, p) {\n        var a = UTIF._binBE.ui8;\n        a[0] = buff[p + 0];\n        a[1] = buff[p + 1];\n        return UTIF._binBE.i16[0];\n      },\n      readInt: function (buff, p) {\n        var a = UTIF._binBE.ui8;\n        a[0] = buff[p + 0];\n        a[1] = buff[p + 1];\n        a[2] = buff[p + 2];\n        a[3] = buff[p + 3];\n        return UTIF._binBE.i32[0];\n      },\n      readUint: function (buff, p) {\n        var a = UTIF._binBE.ui8;\n        a[0] = buff[p + 0];\n        a[1] = buff[p + 1];\n        a[2] = buff[p + 2];\n        a[3] = buff[p + 3];\n        return UTIF._binBE.ui32[0];\n      },\n      readASCII: UTIF._binBE.readASCII,\n      readFloat: function (buff, p) {\n        var a = UTIF._binBE.ui8;\n        for (var i = 0; i < 4; i++) a[i] = buff[p + i];\n        return UTIF._binBE.fl32[0];\n      },\n      readDouble: function (buff, p) {\n        var a = UTIF._binBE.ui8;\n        for (var i = 0; i < 8; i++) a[i] = buff[p + i];\n        return UTIF._binBE.fl64[0];\n      },\n      writeUshort: function (buff, p, n) {\n        buff[p] = n & 255;\n        buff[p + 1] = n >> 8 & 255;\n      },\n      writeInt: function (buff, p, n) {\n        var a = UTIF._binBE.ui8;\n        UTIF._binBE.i32[0] = n;\n        buff[p + 0] = a[0];\n        buff[p + 1] = a[1];\n        buff[p + 2] = a[2];\n        buff[p + 3] = a[3];\n      },\n      writeUint: function (buff, p, n) {\n        buff[p] = n >>> 0 & 255;\n        buff[p + 1] = n >>> 8 & 255;\n        buff[p + 2] = n >>> 16 & 255;\n        buff[p + 3] = n >>> 24 & 255;\n      },\n      writeASCII: UTIF._binBE.writeASCII\n    };\n    UTIF._copyTile = function (tb, tw, th, b, w, h, xoff, yoff) {\n      //log(\"copyTile\", tw, th,  w, h, xoff, yoff);\n      var xlim = Math.min(tw, w - xoff);\n      var ylim = Math.min(th, h - yoff);\n      for (var y = 0; y < ylim; y++) {\n        var tof = (yoff + y) * w + xoff;\n        var sof = y * tw;\n        for (var x = 0; x < xlim; x++) b[tof + x] = tb[sof + x];\n      }\n    };\n    UTIF.LosslessJpegDecode = function () {\n      var b, O;\n      function l() {\n        return b[O++];\n      }\n      function m() {\n        return b[O++] << 8 | b[O++];\n      }\n      function a0(h) {\n        var V = l(),\n          I = [0, 0, 0, 255],\n          f = [],\n          G = 8;\n        for (var w = 0; w < 16; w++) f[w] = l();\n        for (var w = 0; w < 16; w++) {\n          for (var x = 0; x < f[w]; x++) {\n            var T = z(I, 0, w + 1, 1);\n            I[T + 3] = l();\n          }\n        }\n        var E = new Uint8Array(1 << G);\n        h[V] = [new Uint8Array(I), E];\n        for (var w = 0; w < 1 << G; w++) {\n          var s = G,\n            _ = w,\n            Y = 0,\n            F = 0;\n          while (I[Y + 3] == 255 && s != 0) {\n            F = _ >> --s & 1;\n            Y = I[Y + F];\n          }\n          E[w] = Y;\n        }\n      }\n      function z(h, V, I, f) {\n        if (h[V + 3] != 255) return 0;\n        if (I == 0) return V;\n        for (var w = 0; w < 2; w++) {\n          if (h[V + w] == 0) {\n            h[V + w] = h.length;\n            h.push(0, 0, f, 255);\n          }\n          var x = z(h, h[V + w], I - 1, f + 1);\n          if (x != 0) return x;\n        }\n        return 0;\n      }\n      function i(h) {\n        var V = h.b,\n          I = h.f;\n        while (V < 25 && h.a < h.d) {\n          var f = h.data[h.a++];\n          if (f == 255 && !h.c) h.a++;\n          I = I << 8 | f;\n          V += 8;\n        }\n        if (V < 0) throw \"e\";\n        h.b = V;\n        h.f = I;\n      }\n      function H(h, V) {\n        if (V.b < h) i(V);\n        return V.f >> (V.b -= h) & 65535 >> 16 - h;\n      }\n      function g(h, V) {\n        var I = h[0],\n          f = 0,\n          w = 255,\n          x = 0;\n        if (V.b < 16) i(V);\n        var T = V.f >> V.b - 8 & 255;\n        f = h[1][T];\n        w = I[f + 3];\n        V.b -= I[f + 2];\n        while (w == 255) {\n          x = V.f >> --V.b & 1;\n          f = I[f + x];\n          w = I[f + 3];\n        }\n        return w;\n      }\n      function P(h, V) {\n        if (h < 32768 >> 16 - V) h += -(1 << V) + 1;\n        return h;\n      }\n      function a2(h, V) {\n        var I = g(h, V);\n        if (I == 0) return 0;\n        if (I == 16) return -32768;\n        var f = H(I, V);\n        return P(f, I);\n      }\n      function X(h, V, I, f, w, x) {\n        var T = 0;\n        for (var G = 0; G < x; G++) {\n          var s = G * V;\n          for (var _ = 0; _ < V; _ += w) {\n            T++;\n            for (var Y = 0; Y < w; Y++) h[s + _ + Y] = a2(f[Y], I);\n          }\n          if (I.e != 0 && T % I.e == 0 && G != 0) {\n            var F = I.a,\n              t = I.data;\n            while (t[F] != 255 || !(208 <= t[F + 1] && t[F + 1] <= 215)) F--;\n            I.a = F + 2;\n            I.f = 0;\n            I.b = 0;\n          }\n        }\n      }\n      function o(h, V) {\n        return P(H(h, V), h);\n      }\n      function a1(h, V, I, f, w) {\n        var x = b.length - O;\n        for (var T = 0; T < x; T += 4) {\n          var G = b[O + T];\n          b[O + T] = b[O + T + 3];\n          b[O + T + 3] = G;\n          var G = b[O + T + 1];\n          b[O + T + 1] = b[O + T + 2];\n          b[O + T + 2] = G;\n        }\n        for (var E = 0; E < w; E++) {\n          var s = 32768,\n            _ = 32768;\n          for (var Y = 0; Y < V; Y += 2) {\n            var F = g(f, I),\n              t = g(f, I);\n            if (F != 0) s += o(F, I);\n            if (t != 0) _ += o(t, I);\n            h[E * V + Y] = s & 65535;\n            h[E * V + Y + 1] = _ & 65535;\n          }\n        }\n      }\n      function C(h) {\n        b = h;\n        O = 0;\n        if (m() != 65496) throw \"e\";\n        var V = [],\n          I = 0,\n          f = 0,\n          w = 0,\n          x = [],\n          T = [],\n          G = [],\n          E = 0,\n          s = 0,\n          _ = 0;\n        while (!0) {\n          var Y = m();\n          if (Y == 65535) {\n            O--;\n            continue;\n          }\n          var F = m();\n          if (Y == 65475) {\n            f = l();\n            s = m();\n            _ = m();\n            E = l();\n            for (var t = 0; t < E; t++) {\n              var a = l(),\n                J = l(),\n                r = l();\n              if (r != 0) throw \"e\";\n              V[a] = [t, J >> 4, J & 15];\n            }\n          } else if (Y == 65476) {\n            var a3 = O + F - 2;\n            while (O < a3) a0(T);\n          } else if (Y == 65498) {\n            O++;\n            for (var t = 0; t < E; t++) {\n              var a5 = l(),\n                v = V[a5];\n              G[v[0]] = T[l() >>> 4];\n              x[v[0]] = v.slice(1);\n            }\n            I = l();\n            O += 2;\n            break;\n          } else if (Y == 65501) {\n            w = m();\n          } else {\n            O += F - 2;\n          }\n        }\n        var a4 = f > 8 ? Uint16Array : Uint8Array,\n          $ = new a4(s * _ * E),\n          M = {\n            b: 0,\n            f: 0,\n            c: I == 8,\n            a: O,\n            data: b,\n            d: b.length,\n            e: w\n          };\n        if (M.c) a1($, _ * E, M, G[0], s);else {\n          var c = [],\n            p = 0,\n            D = 0;\n          for (var t = 0; t < E; t++) {\n            var N = x[t],\n              S = N[0],\n              K = N[1];\n            if (S > p) p = S;\n            if (K > D) D = K;\n            c.push(S * K);\n          }\n          if (p != 1 || D != 1) {\n            if (E != 3 || c[1] != 1 || c[2] != 1) throw \"e\";\n            if (p != 2 || D != 1 && D != 2) throw \"e\";\n            var u = [],\n              Z = 0;\n            for (var t = 0; t < E; t++) {\n              for (var R = 0; R < c[t]; R++) u.push(G[t]);\n              Z += c[t];\n            }\n            var B = _ / p,\n              e = s / D,\n              d = B * e;\n            X($, B * Z, M, u, Z, e);\n            j($, I, B, e, Z - 2, Z, Z, f);\n            var A = new Uint16Array(d * c[0]);\n            if (p == 2 && D == 2) {\n              for (var t = 0; t < d; t++) {\n                A[4 * t] = $[6 * t];\n                A[4 * t + 1] = $[6 * t + 1];\n                A[4 * t + 2] = $[6 * t + 2];\n                A[4 * t + 3] = $[6 * t + 3];\n              }\n              j(A, I, B * 4, e, 0, 1, 1, f);\n              for (var t = 0; t < d; t++) {\n                $[6 * t] = A[4 * t];\n                $[6 * t + 1] = A[4 * t + 1];\n                $[6 * t + 2] = A[4 * t + 2];\n                $[6 * t + 3] = A[4 * t + 3];\n              }\n            }\n            if (p == 2 && D == 1) {\n              for (var t = 0; t < d; t++) {\n                A[2 * t] = $[4 * t];\n                A[2 * t + 1] = $[4 * t + 1];\n              }\n              j(A, I, B * 2, e, 0, 1, 1, f);\n              for (var t = 0; t < d; t++) {\n                $[4 * t] = A[2 * t];\n                $[4 * t + 1] = A[2 * t + 1];\n              }\n            }\n            var n = $.slice(0);\n            for (var K = 0; K < s; K++) {\n              if (D == 2) for (var S = 0; S < _; S++) {\n                var q = (K * _ + S) * E,\n                  k = ((K >>> 1) * B + (S >>> 1)) * Z,\n                  y = (K & 1) * 2 + (S & 1);\n                $[q] = n[k + y];\n                $[q + 1] = n[k + 4];\n                $[q + 2] = n[k + 5];\n              } else for (var S = 0; S < _; S++) {\n                var q = (K * _ + S) * E,\n                  k = (K * B + (S >>> 1)) * Z,\n                  y = S & 1;\n                $[q] = n[k + y];\n                $[q + 1] = n[k + 2];\n                $[q + 2] = n[k + 3];\n              }\n            }\n          } else {\n            X($, _ * E, M, G, E, s);\n            if (w == 0) j($, I, _, s, 0, E, E, f);else {\n              var U = Math.floor(w / _);\n              for (var K = 0; K < s; K += U) {\n                var L = $.slice(K * _ * E, (K + U) * _ * E);\n                j(L, I, _, U, 0, E, E, f);\n                $.set(L, K * _ * E);\n              }\n            }\n          }\n        }\n        return $;\n      }\n      function j(h, V, I, f, w, x, G, E) {\n        var s = I * G;\n        for (var _ = w; _ < x; _++) h[_] += 1 << E - 1;\n        for (var Y = G; Y < s; Y += G) for (var _ = w; _ < x; _++) h[Y + _] += h[Y + _ - G];\n        for (var F = 1; F < f; F++) {\n          var t = F * s;\n          for (var _ = w; _ < x; _++) h[t + _] += h[t + _ - s];\n          for (var Y = G; Y < s; Y += G) {\n            for (var _ = w; _ < x; _++) {\n              var a = t + Y + _,\n                J = a - s,\n                r = h[a - G],\n                Q = 0;\n              if (V == 0) Q = 0;else if (V == 1) Q = r;else if (V == 2) Q = h[J];else if (V == 3) Q = h[J - G];else if (V == 4) Q = r + (h[J] - h[J - G]);else if (V == 5) Q = r + (h[J] - h[J - G] >>> 1);else if (V == 6) Q = h[J] + (r - h[J - G] >>> 1);else if (V == 7) Q = r + h[J] >>> 1;else throw V;\n              h[a] += Q;\n            }\n          }\n        }\n      }\n      return C;\n    }();\n    (function () {\n      var G = 0,\n        F = 1,\n        i = 2,\n        b = 3,\n        J = 4,\n        N = 5,\n        E = 6,\n        s = 7,\n        c = 8,\n        T = 9,\n        a3 = 10,\n        f = 11,\n        q = 12,\n        M = 13,\n        m = 14,\n        x = 15,\n        L = 16,\n        $ = 17,\n        p = 18;\n      function a5(t) {\n        var Z = UTIF._binBE.readUshort,\n          u = {\n            b: Z(t, 0),\n            i: t[2],\n            C: t[3],\n            u: t[4],\n            q: Z(t, 5),\n            k: Z(t, 7),\n            e: Z(t, 9),\n            l: Z(t, 11),\n            s: t[13],\n            d: Z(t, 14)\n          };\n        if (u.b != 18771 || u.i > 1 || u.q < 6 || u.q % 6 || u.e < 768 || u.e % 24 || u.l != 768 || u.k < u.l || u.k % u.l || u.k - u.e >= u.l || u.s > 16 || u.s != u.k / u.l || u.s != Math.ceil(u.e / u.l) || u.d != u.q / 6 || u.u != 12 && u.u != 14 && u.u != 16 || u.C != 16 && u.C != 0) {\n          throw \"Invalid data\";\n        }\n        if (u.i == 0) {\n          throw \"Not implemented. We need this file!\";\n        }\n        u.h = u.C == 16;\n        u.m = (u.h ? u.l * 2 / 3 : u.l >>> 1) | 0;\n        u.A = u.m + 2;\n        u.f = 64;\n        u.g = (1 << u.u) - 1;\n        u.n = 4 * u.u;\n        return u;\n      }\n      function a7(t, Z) {\n        var u = new Array(Z.s),\n          e = 4 * Z.s,\n          Q = 16 + e;\n        if (e & 12) Q += 16 - (e & 12);\n        for (var V = 0, O = 16; V < Z.s; O += 4) {\n          var o = UTIF._binBE.readUint(t, O);\n          u[V] = t.slice(Q, Q + o);\n          u[V].j = 0;\n          u[V].a = 0;\n          Q += o;\n          V++;\n        }\n        if (Q != t.length) throw \"Invalid data\";\n        return u;\n      }\n      function a6(t, Z) {\n        for (var u = -Z[4], e = 0; u <= Z[4]; e++, u++) {\n          t[e] = u <= -Z[3] ? -4 : u <= -Z[2] ? -3 : u <= -Z[1] ? -2 : u < -Z[0] ? -1 : u <= Z[0] ? 0 : u < Z[1] ? 1 : u < Z[2] ? 2 : u < Z[3] ? 3 : 4;\n        }\n      }\n      function a1(t, Z, u) {\n        var e = [Z, 3 * Z + 18, 5 * Z + 67, 7 * Z + 276, u];\n        t.o = Z;\n        t.w = (e[4] + 2 * Z) / (2 * Z + 1) + 1 | 0;\n        t.v = Math.ceil(Math.log2(t.w));\n        t.t = 9;\n        a6(t.c, e);\n      }\n      function a2(t) {\n        var Z = {\n          c: new Int8Array(2 << t.u)\n        };\n        a1(Z, 0, t.g);\n        return Z;\n      }\n      function D(t) {\n        var Z = [[], [], []],\n          u = Math.max(2, t.w + 32 >>> 6);\n        for (var e = 0; e < 3; e++) {\n          for (var Q = 0; Q < 41; Q++) {\n            Z[e][Q] = [u, 1];\n          }\n        }\n        return Z;\n      }\n      function a4(t) {\n        for (var Z = -1, u = 0; !u; Z++) {\n          u = t[t.j] >>> 7 - t.a & 1;\n          t.a++;\n          t.a &= 7;\n          if (!t.a) t.j++;\n        }\n        return Z;\n      }\n      function K(t, Z) {\n        var u = 0,\n          e = 8 - t.a,\n          Q = t.j,\n          V = t.a;\n        if (Z) {\n          if (Z >= e) {\n            do {\n              u <<= e;\n              Z -= e;\n              u |= t[t.j] & (1 << e) - 1;\n              t.j++;\n              e = 8;\n            } while (Z >= 8);\n          }\n          if (Z) {\n            u <<= Z;\n            e -= Z;\n            u |= t[t.j] >>> e & (1 << Z) - 1;\n          }\n          t.a = 8 - e;\n        }\n        return u;\n      }\n      function a0(t, Z) {\n        var u = 0;\n        if (Z < t) {\n          while (u <= 14 && Z << ++u < t);\n        }\n        return u;\n      }\n      function r(t, Z, u, e, Q, V, O, o) {\n        if (o == null) o = 0;\n        var X = V + 1,\n          k = X % 2,\n          j = 0,\n          I = 0,\n          a = 0,\n          l,\n          R,\n          w = e[Q],\n          S = e[Q - 1],\n          H = e[Q - 2][X],\n          g = S[X - 1],\n          Y = S[X],\n          P = S[X + 1],\n          A = w[X - 1],\n          v = w[X + 1],\n          y = Math.abs,\n          d,\n          C,\n          n,\n          h;\n        if (k) {\n          d = y(P - Y);\n          C = y(H - Y);\n          n = y(g - Y);\n        }\n        if (k) {\n          h = d > n && C < d ? H + g : d < n && C < n ? H + P : P + g;\n          h = h + 2 * Y >>> 2;\n          if (o) {\n            w[X] = h;\n            return;\n          }\n          l = Z.t * Z.c[t.g + Y - H] + Z.c[t.g + g - Y];\n        } else {\n          h = Y > g && Y > P || Y < g && Y < P ? v + A + 2 * Y >>> 2 : A + v >>> 1;\n          l = Z.t * Z.c[t.g + Y - g] + Z.c[t.g + g - A];\n        }\n        R = y(l);\n        var W = a4(u);\n        if (W < t.n - Z.v - 1) {\n          var z = a0(O[R][0], O[R][1]);\n          a = K(u, z) + (W << z);\n        } else {\n          a = K(u, Z.v) + 1;\n        }\n        a = a & 1 ? -1 - (a >>> 1) : a >>> 1;\n        O[R][0] += y(a);\n        if (O[R][1] == t.f) {\n          O[R][0] >>>= 1;\n          O[R][1] >>>= 1;\n        }\n        O[R][1]++;\n        h = l < 0 ? h - a : h + a;\n        if (t.i) {\n          if (h < 0) h += Z.w;else if (h > t.g) h -= Z.w;\n        }\n        w[X] = h >= 0 ? Math.min(h, t.g) : 0;\n      }\n      function U(t, Z, u) {\n        var e = t[0].length;\n        for (var Q = Z; Q <= u; Q++) {\n          t[Q][0] = t[Q - 1][1];\n          t[Q][e - 1] = t[Q - 1][e - 2];\n        }\n      }\n      function B(t) {\n        U(t, s, q);\n        U(t, i, J);\n        U(t, x, $);\n      }\n      function _(t, Z, u, e, Q, V, O, o, X, k, j, I, a) {\n        var l = 0,\n          R = 1,\n          w = Q < M && Q > J;\n        while (R < t.m) {\n          if (l < t.m) {\n            r(t, Z, u, e, Q, l, O[X], t.h && (w && k || !w && (j || (l & I) == a)));\n            r(t, Z, u, e, V, l, O[X], t.h && (!w && k || w && (j || (l & I) == a)));\n            l += 2;\n          }\n          if (l > 8) {\n            r(t, Z, u, e, Q, R, o[X]);\n            r(t, Z, u, e, V, R, o[X]);\n            R += 2;\n          }\n        }\n        B(e);\n      }\n      function a8(t, Z, u, e, Q, V) {\n        _(t, Z, u, e, i, s, Q, V, 0, 0, 1, 0, 8);\n        _(t, Z, u, e, c, x, Q, V, 1, 0, 1, 0, 8);\n        _(t, Z, u, e, b, T, Q, V, 2, 1, 0, 3, 0);\n        _(t, Z, u, e, a3, L, Q, V, 0, 0, 0, 3, 2);\n        _(t, Z, u, e, J, f, Q, V, 1, 0, 0, 3, 2);\n        _(t, Z, u, e, q, $, Q, V, 2, 1, 0, 3, 0);\n      }\n      function a9(t, Z, u, e, Q, V) {\n        var O = V.length,\n          o = t.l;\n        if (Q + 1 == t.s) o = t.e - Q * t.l;\n        var X = 6 * t.e * e + Q * t.l;\n        for (var k = 0; k < 6; k++) {\n          for (var j = 0; j < o; j++) {\n            var I = V[k % O][j % O],\n              a;\n            if (I == 0) {\n              a = i + (k >>> 1);\n            } else if (I == 2) {\n              a = x + (k >>> 1);\n            } else {\n              a = s + k;\n            }\n            var l = t.h ? (j * 2 / 3 & 2147483646 | j % 3 & 1) + (j % 3 >>> 1) : j >>> 1;\n            Z[X + j] = u[a][l + 1];\n          }\n          X += t.e;\n        }\n      }\n      UTIF._decompressRAF = function (t, Z) {\n        var u = a5(t),\n          e = a7(t, u),\n          Q = a2(u),\n          V = new Int16Array(u.e * u.q);\n        if (Z == null) {\n          Z = u.h ? [[1, 1, 0, 1, 1, 2], [1, 1, 2, 1, 1, 0], [2, 0, 1, 0, 2, 1], [1, 1, 2, 1, 1, 0], [1, 1, 0, 1, 1, 2], [0, 2, 1, 2, 0, 1]] : [[0, 1], [3, 2]];\n        }\n        var O = [[G, b], [F, J], [N, f], [E, q], [M, L], [m, $]],\n          o = [];\n        for (var X = 0; X < p; X++) {\n          o[X] = new Uint16Array(u.A);\n        }\n        for (var k = 0; k < u.s; k++) {\n          var j = D(Q),\n            I = D(Q);\n          for (var X = 0; X < p; X++) {\n            for (var a = 0; a < u.A; a++) {\n              o[X][a] = 0;\n            }\n          }\n          for (var l = 0; l < u.d; l++) {\n            a8(u, Q, e[k], o, j, I);\n            for (var X = 0; X < 6; X++) {\n              for (var a = 0; a < u.A; a++) {\n                o[O[X][0]][a] = o[O[X][1]][a];\n              }\n            }\n            a9(u, V, o, l, k, Z);\n            for (var X = i; X < p; X++) {\n              if ([N, E, M, m].indexOf(X) == -1) {\n                for (var a = 0; a < u.A; a++) {\n                  o[X][a] = 0;\n                }\n              }\n            }\n            B(o);\n          }\n        }\n        return V;\n      };\n    })();\n  })(UTIF, pako);\n})();", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n  buffer[offset + i - d] |= s * 128;\n};", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnsiStringType = exports.StringType = exports.BufferType = exports.Uint8ArrayType = exports.IgnoreType = exports.Float80_LE = exports.Float80_BE = exports.Float64_LE = exports.Float64_BE = exports.Float32_LE = exports.Float32_BE = exports.Float16_LE = exports.Float16_BE = exports.INT64_BE = exports.UINT64_BE = exports.INT64_LE = exports.UINT64_LE = exports.INT32_LE = exports.INT32_BE = exports.INT24_BE = exports.INT24_LE = exports.INT16_LE = exports.INT16_BE = exports.INT8 = exports.UINT32_BE = exports.UINT32_LE = exports.UINT24_BE = exports.UINT24_LE = exports.UINT16_BE = exports.UINT16_LE = exports.UINT8 = void 0;\nconst ieee754 = require(\"ieee754\");\n// Primitive types\nfunction dv(array) {\n  return new DataView(array.buffer, array.byteOffset);\n}\n/**\n * 8-bit unsigned integer\n */\nexports.UINT8 = {\n  len: 1,\n  get(array, offset) {\n    return dv(array).getUint8(offset);\n  },\n  put(array, offset, value) {\n    dv(array).setUint8(offset, value);\n    return offset + 1;\n  }\n};\n/**\n * 16-bit unsigned integer, Little Endian byte order\n */\nexports.UINT16_LE = {\n  len: 2,\n  get(array, offset) {\n    return dv(array).getUint16(offset, true);\n  },\n  put(array, offset, value) {\n    dv(array).setUint16(offset, value, true);\n    return offset + 2;\n  }\n};\n/**\n * 16-bit unsigned integer, Big Endian byte order\n */\nexports.UINT16_BE = {\n  len: 2,\n  get(array, offset) {\n    return dv(array).getUint16(offset);\n  },\n  put(array, offset, value) {\n    dv(array).setUint16(offset, value);\n    return offset + 2;\n  }\n};\n/**\n * 24-bit unsigned integer, Little Endian byte order\n */\nexports.UINT24_LE = {\n  len: 3,\n  get(array, offset) {\n    const dataView = dv(array);\n    return dataView.getUint8(offset) + (dataView.getUint16(offset + 1, true) << 8);\n  },\n  put(array, offset, value) {\n    const dataView = dv(array);\n    dataView.setUint8(offset, value & 0xff);\n    dataView.setUint16(offset + 1, value >> 8, true);\n    return offset + 3;\n  }\n};\n/**\n * 24-bit unsigned integer, Big Endian byte order\n */\nexports.UINT24_BE = {\n  len: 3,\n  get(array, offset) {\n    const dataView = dv(array);\n    return (dataView.getUint16(offset) << 8) + dataView.getUint8(offset + 2);\n  },\n  put(array, offset, value) {\n    const dataView = dv(array);\n    dataView.setUint16(offset, value >> 8);\n    dataView.setUint8(offset + 2, value & 0xff);\n    return offset + 3;\n  }\n};\n/**\n * 32-bit unsigned integer, Little Endian byte order\n */\nexports.UINT32_LE = {\n  len: 4,\n  get(array, offset) {\n    return dv(array).getUint32(offset, true);\n  },\n  put(array, offset, value) {\n    dv(array).setUint32(offset, value, true);\n    return offset + 4;\n  }\n};\n/**\n * 32-bit unsigned integer, Big Endian byte order\n */\nexports.UINT32_BE = {\n  len: 4,\n  get(array, offset) {\n    return dv(array).getUint32(offset);\n  },\n  put(array, offset, value) {\n    dv(array).setUint32(offset, value);\n    return offset + 4;\n  }\n};\n/**\n * 8-bit signed integer\n */\nexports.INT8 = {\n  len: 1,\n  get(array, offset) {\n    return dv(array).getInt8(offset);\n  },\n  put(array, offset, value) {\n    dv(array).setInt8(offset, value);\n    return offset + 1;\n  }\n};\n/**\n * 16-bit signed integer, Big Endian byte order\n */\nexports.INT16_BE = {\n  len: 2,\n  get(array, offset) {\n    return dv(array).getInt16(offset);\n  },\n  put(array, offset, value) {\n    dv(array).setInt16(offset, value);\n    return offset + 2;\n  }\n};\n/**\n * 16-bit signed integer, Little Endian byte order\n */\nexports.INT16_LE = {\n  len: 2,\n  get(array, offset) {\n    return dv(array).getInt16(offset, true);\n  },\n  put(array, offset, value) {\n    dv(array).setInt16(offset, value, true);\n    return offset + 2;\n  }\n};\n/**\n * 24-bit signed integer, Little Endian byte order\n */\nexports.INT24_LE = {\n  len: 3,\n  get(array, offset) {\n    const unsigned = exports.UINT24_LE.get(array, offset);\n    return unsigned > 0x7fffff ? unsigned - 0x1000000 : unsigned;\n  },\n  put(array, offset, value) {\n    const dataView = dv(array);\n    dataView.setUint8(offset, value & 0xff);\n    dataView.setUint16(offset + 1, value >> 8, true);\n    return offset + 3;\n  }\n};\n/**\n * 24-bit signed integer, Big Endian byte order\n */\nexports.INT24_BE = {\n  len: 3,\n  get(array, offset) {\n    const unsigned = exports.UINT24_BE.get(array, offset);\n    return unsigned > 0x7fffff ? unsigned - 0x1000000 : unsigned;\n  },\n  put(array, offset, value) {\n    const dataView = dv(array);\n    dataView.setUint16(offset, value >> 8);\n    dataView.setUint8(offset + 2, value & 0xff);\n    return offset + 3;\n  }\n};\n/**\n * 32-bit signed integer, Big Endian byte order\n */\nexports.INT32_BE = {\n  len: 4,\n  get(array, offset) {\n    return dv(array).getInt32(offset);\n  },\n  put(array, offset, value) {\n    dv(array).setInt32(offset, value);\n    return offset + 4;\n  }\n};\n/**\n * 32-bit signed integer, Big Endian byte order\n */\nexports.INT32_LE = {\n  len: 4,\n  get(array, offset) {\n    return dv(array).getInt32(offset, true);\n  },\n  put(array, offset, value) {\n    dv(array).setInt32(offset, value, true);\n    return offset + 4;\n  }\n};\n/**\n * 64-bit unsigned integer, Little Endian byte order\n */\nexports.UINT64_LE = {\n  len: 8,\n  get(array, offset) {\n    return dv(array).getBigUint64(offset, true);\n  },\n  put(array, offset, value) {\n    dv(array).setBigUint64(offset, value, true);\n    return offset + 8;\n  }\n};\n/**\n * 64-bit signed integer, Little Endian byte order\n */\nexports.INT64_LE = {\n  len: 8,\n  get(array, offset) {\n    return dv(array).getBigInt64(offset, true);\n  },\n  put(array, offset, value) {\n    dv(array).setBigInt64(offset, value, true);\n    return offset + 8;\n  }\n};\n/**\n * 64-bit unsigned integer, Big Endian byte order\n */\nexports.UINT64_BE = {\n  len: 8,\n  get(array, offset) {\n    return dv(array).getBigUint64(offset);\n  },\n  put(array, offset, value) {\n    dv(array).setBigUint64(offset, value);\n    return offset + 8;\n  }\n};\n/**\n * 64-bit signed integer, Big Endian byte order\n */\nexports.INT64_BE = {\n  len: 8,\n  get(array, offset) {\n    return dv(array).getBigInt64(offset);\n  },\n  put(array, offset, value) {\n    dv(array).setBigInt64(offset, value);\n    return offset + 8;\n  }\n};\n/**\n * IEEE 754 16-bit (half precision) float, big endian\n */\nexports.Float16_BE = {\n  len: 2,\n  get(dataView, offset) {\n    return ieee754.read(dataView, offset, false, 10, this.len);\n  },\n  put(dataView, offset, value) {\n    ieee754.write(dataView, value, offset, false, 10, this.len);\n    return offset + this.len;\n  }\n};\n/**\n * IEEE 754 16-bit (half precision) float, little endian\n */\nexports.Float16_LE = {\n  len: 2,\n  get(array, offset) {\n    return ieee754.read(array, offset, true, 10, this.len);\n  },\n  put(array, offset, value) {\n    ieee754.write(array, value, offset, true, 10, this.len);\n    return offset + this.len;\n  }\n};\n/**\n * IEEE 754 32-bit (single precision) float, big endian\n */\nexports.Float32_BE = {\n  len: 4,\n  get(array, offset) {\n    return dv(array).getFloat32(offset);\n  },\n  put(array, offset, value) {\n    dv(array).setFloat32(offset, value);\n    return offset + 4;\n  }\n};\n/**\n * IEEE 754 32-bit (single precision) float, little endian\n */\nexports.Float32_LE = {\n  len: 4,\n  get(array, offset) {\n    return dv(array).getFloat32(offset, true);\n  },\n  put(array, offset, value) {\n    dv(array).setFloat32(offset, value, true);\n    return offset + 4;\n  }\n};\n/**\n * IEEE 754 64-bit (double precision) float, big endian\n */\nexports.Float64_BE = {\n  len: 8,\n  get(array, offset) {\n    return dv(array).getFloat64(offset);\n  },\n  put(array, offset, value) {\n    dv(array).setFloat64(offset, value);\n    return offset + 8;\n  }\n};\n/**\n * IEEE 754 64-bit (double precision) float, little endian\n */\nexports.Float64_LE = {\n  len: 8,\n  get(array, offset) {\n    return dv(array).getFloat64(offset, true);\n  },\n  put(array, offset, value) {\n    dv(array).setFloat64(offset, value, true);\n    return offset + 8;\n  }\n};\n/**\n * IEEE 754 80-bit (extended precision) float, big endian\n */\nexports.Float80_BE = {\n  len: 10,\n  get(array, offset) {\n    return ieee754.read(array, offset, false, 63, this.len);\n  },\n  put(array, offset, value) {\n    ieee754.write(array, value, offset, false, 63, this.len);\n    return offset + this.len;\n  }\n};\n/**\n * IEEE 754 80-bit (extended precision) float, little endian\n */\nexports.Float80_LE = {\n  len: 10,\n  get(array, offset) {\n    return ieee754.read(array, offset, true, 63, this.len);\n  },\n  put(array, offset, value) {\n    ieee754.write(array, value, offset, true, 63, this.len);\n    return offset + this.len;\n  }\n};\n/**\n * Ignore a given number of bytes\n */\nclass IgnoreType {\n  /**\n   * @param len number of bytes to ignore\n   */\n  constructor(len) {\n    this.len = len;\n  }\n  // ToDo: don't read, but skip data\n  get(array, off) {}\n}\nexports.IgnoreType = IgnoreType;\nclass Uint8ArrayType {\n  constructor(len) {\n    this.len = len;\n  }\n  get(array, offset) {\n    return array.subarray(offset, offset + this.len);\n  }\n}\nexports.Uint8ArrayType = Uint8ArrayType;\nclass BufferType {\n  constructor(len) {\n    this.len = len;\n  }\n  get(uint8Array, off) {\n    return Buffer.from(uint8Array.subarray(off, off + this.len));\n  }\n}\nexports.BufferType = BufferType;\n/**\n * Consume a fixed number of bytes from the stream and return a string with a specified encoding.\n */\nclass StringType {\n  constructor(len, encoding) {\n    this.len = len;\n    this.encoding = encoding;\n  }\n  get(uint8Array, offset) {\n    return Buffer.from(uint8Array).toString(this.encoding, offset, offset + this.len);\n  }\n}\nexports.StringType = StringType;\n/**\n * ANSI Latin 1 String\n * Using windows-1252 / ISO 8859-1 decoding\n */\nclass AnsiStringType {\n  constructor(len) {\n    this.len = len;\n  }\n  static decode(buffer, offset, until) {\n    let str = '';\n    for (let i = offset; i < until; ++i) {\n      str += AnsiStringType.codePointToString(AnsiStringType.singleByteDecoder(buffer[i]));\n    }\n    return str;\n  }\n  static inRange(a, min, max) {\n    return min <= a && a <= max;\n  }\n  static codePointToString(cp) {\n    if (cp <= 0xFFFF) {\n      return String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      return String.fromCharCode((cp >> 10) + 0xD800, (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  static singleByteDecoder(bite) {\n    if (AnsiStringType.inRange(bite, 0x00, 0x7F)) {\n      return bite;\n    }\n    const codePoint = AnsiStringType.windows1252[bite - 0x80];\n    if (codePoint === null) {\n      throw Error('invaliding encoding');\n    }\n    return codePoint;\n  }\n  get(buffer, offset = 0) {\n    return AnsiStringType.decode(buffer, offset, offset + this.len);\n  }\n}\nexports.AnsiStringType = AnsiStringType;\nAnsiStringType.windows1252 = [8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 352, 8249, 338, 141, 381, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482, 353, 8250, 339, 157, 382, 376, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255];", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EndOfStreamError = exports.defaultMessages = void 0;\nexports.defaultMessages = 'End-Of-Stream';\n/**\r\n * Thrown on read operation of the end of file or stream has been reached\r\n */\nclass EndOfStreamError extends Error {\n  constructor() {\n    super(exports.defaultMessages);\n  }\n}\nexports.EndOfStreamError = EndOfStreamError;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Deferred = void 0;\nclass Deferred {\n  constructor() {\n    this.resolve = () => null;\n    this.reject = () => null;\n    this.promise = new Promise((resolve, reject) => {\n      this.reject = reject;\n      this.resolve = resolve;\n    });\n  }\n}\nexports.Deferred = Deferred;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StreamReader = exports.EndOfStreamError = void 0;\nconst EndOfFileStream_1 = require(\"./EndOfFileStream\");\nconst Deferred_1 = require(\"./Deferred\");\nvar EndOfFileStream_2 = require(\"./EndOfFileStream\");\nObject.defineProperty(exports, \"EndOfStreamError\", {\n  enumerable: true,\n  get: function () {\n    return EndOfFileStream_2.EndOfStreamError;\n  }\n});\nconst maxStreamReadSize = 1 * 1024 * 1024; // Maximum request length on read-stream operation\nclass StreamReader {\n  constructor(s) {\n    this.s = s;\n    /**\r\n     * Deferred used for postponed read request (as not data is yet available to read)\r\n     */\n    this.deferred = null;\n    this.endOfStream = false;\n    /**\r\n     * Store peeked data\r\n     * @type {Array}\r\n     */\n    this.peekQueue = [];\n    if (!s.read || !s.once) {\n      throw new Error('Expected an instance of stream.Readable');\n    }\n    this.s.once('end', () => this.reject(new EndOfFileStream_1.EndOfStreamError()));\n    this.s.once('error', err => this.reject(err));\n    this.s.once('close', () => this.reject(new Error('Stream closed')));\n  }\n  /**\r\n   * Read ahead (peek) from stream. Subsequent read or peeks will return the same data\r\n   * @param uint8Array - Uint8Array (or Buffer) to store data read from stream in\r\n   * @param offset - Offset target\r\n   * @param length - Number of bytes to read\r\n   * @returns Number of bytes peeked\r\n   */\n  async peek(uint8Array, offset, length) {\n    const bytesRead = await this.read(uint8Array, offset, length);\n    this.peekQueue.push(uint8Array.subarray(offset, offset + bytesRead)); // Put read data back to peek buffer\n    return bytesRead;\n  }\n  /**\r\n   * Read chunk from stream\r\n   * @param buffer - Target Uint8Array (or Buffer) to store data read from stream in\r\n   * @param offset - Offset target\r\n   * @param length - Number of bytes to read\r\n   * @returns Number of bytes read\r\n   */\n  async read(buffer, offset, length) {\n    if (length === 0) {\n      return 0;\n    }\n    if (this.peekQueue.length === 0 && this.endOfStream) {\n      throw new EndOfFileStream_1.EndOfStreamError();\n    }\n    let remaining = length;\n    let bytesRead = 0;\n    // consume peeked data first\n    while (this.peekQueue.length > 0 && remaining > 0) {\n      const peekData = this.peekQueue.pop(); // Front of queue\n      if (!peekData) throw new Error('peekData should be defined');\n      const lenCopy = Math.min(peekData.length, remaining);\n      buffer.set(peekData.subarray(0, lenCopy), offset + bytesRead);\n      bytesRead += lenCopy;\n      remaining -= lenCopy;\n      if (lenCopy < peekData.length) {\n        // remainder back to queue\n        this.peekQueue.push(peekData.subarray(lenCopy));\n      }\n    }\n    // continue reading from stream if required\n    while (remaining > 0 && !this.endOfStream) {\n      const reqLen = Math.min(remaining, maxStreamReadSize);\n      const chunkLen = await this.readFromStream(buffer, offset + bytesRead, reqLen);\n      bytesRead += chunkLen;\n      if (chunkLen < reqLen) break;\n      remaining -= chunkLen;\n    }\n    return bytesRead;\n  }\n  /**\r\n   * Read chunk from stream\r\n   * @param buffer Target Uint8Array (or Buffer) to store data read from stream in\r\n   * @param offset Offset target\r\n   * @param length Number of bytes to read\r\n   * @returns Number of bytes read\r\n   */\n  async readFromStream(buffer, offset, length) {\n    const readBuffer = this.s.read(length);\n    if (readBuffer) {\n      buffer.set(readBuffer, offset);\n      return readBuffer.length;\n    } else {\n      const request = {\n        buffer,\n        offset,\n        length,\n        deferred: new Deferred_1.Deferred()\n      };\n      this.deferred = request.deferred;\n      this.s.once('readable', () => {\n        this.readDeferred(request);\n      });\n      return request.deferred.promise;\n    }\n  }\n  /**\r\n   * Process deferred read request\r\n   * @param request Deferred read request\r\n   */\n  readDeferred(request) {\n    const readBuffer = this.s.read(request.length);\n    if (readBuffer) {\n      request.buffer.set(readBuffer, request.offset);\n      request.deferred.resolve(readBuffer.length);\n      this.deferred = null;\n    } else {\n      this.s.once('readable', () => {\n        this.readDeferred(request);\n      });\n    }\n  }\n  reject(err) {\n    this.endOfStream = true;\n    if (this.deferred) {\n      this.deferred.reject(err);\n      this.deferred = null;\n    }\n  }\n}\nexports.StreamReader = StreamReader;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StreamReader = exports.EndOfStreamError = void 0;\nvar EndOfFileStream_1 = require(\"./EndOfFileStream\");\nObject.defineProperty(exports, \"EndOfStreamError\", {\n  enumerable: true,\n  get: function () {\n    return EndOfFileStream_1.EndOfStreamError;\n  }\n});\nvar StreamReader_1 = require(\"./StreamReader\");\nObject.defineProperty(exports, \"StreamReader\", {\n  enumerable: true,\n  get: function () {\n    return StreamReader_1.StreamReader;\n  }\n});", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbstractTokenizer = void 0;\nconst peek_readable_1 = require(\"peek-readable\");\n/**\r\n * Core tokenizer\r\n */\nclass AbstractTokenizer {\n  constructor(fileInfo) {\n    /**\r\n     * Tokenizer-stream position\r\n     */\n    this.position = 0;\n    this.numBuffer = new Uint8Array(8);\n    this.fileInfo = fileInfo ? fileInfo : {};\n  }\n  /**\r\n   * Read a token from the tokenizer-stream\r\n   * @param token - The token to read\r\n   * @param position - If provided, the desired position in the tokenizer-stream\r\n   * @returns Promise with token data\r\n   */\n  async readToken(token, position = this.position) {\n    const uint8Array = Buffer.alloc(token.len);\n    const len = await this.readBuffer(uint8Array, {\n      position\n    });\n    if (len < token.len) throw new peek_readable_1.EndOfStreamError();\n    return token.get(uint8Array, 0);\n  }\n  /**\r\n   * Peek a token from the tokenizer-stream.\r\n   * @param token - Token to peek from the tokenizer-stream.\r\n   * @param position - Offset where to begin reading within the file. If position is null, data will be read from the current file position.\r\n   * @returns Promise with token data\r\n   */\n  async peekToken(token, position = this.position) {\n    const uint8Array = Buffer.alloc(token.len);\n    const len = await this.peekBuffer(uint8Array, {\n      position\n    });\n    if (len < token.len) throw new peek_readable_1.EndOfStreamError();\n    return token.get(uint8Array, 0);\n  }\n  /**\r\n   * Read a numeric token from the stream\r\n   * @param token - Numeric token\r\n   * @returns Promise with number\r\n   */\n  async readNumber(token) {\n    const len = await this.readBuffer(this.numBuffer, {\n      length: token.len\n    });\n    if (len < token.len) throw new peek_readable_1.EndOfStreamError();\n    return token.get(this.numBuffer, 0);\n  }\n  /**\r\n   * Read a numeric token from the stream\r\n   * @param token - Numeric token\r\n   * @returns Promise with number\r\n   */\n  async peekNumber(token) {\n    const len = await this.peekBuffer(this.numBuffer, {\n      length: token.len\n    });\n    if (len < token.len) throw new peek_readable_1.EndOfStreamError();\n    return token.get(this.numBuffer, 0);\n  }\n  /**\r\n   * Ignore number of bytes, advances the pointer in under tokenizer-stream.\r\n   * @param length - Number of bytes to ignore\r\n   * @return resolves the number of bytes ignored, equals length if this available, otherwise the number of bytes available\r\n   */\n  async ignore(length) {\n    if (this.fileInfo.size !== undefined) {\n      const bytesLeft = this.fileInfo.size - this.position;\n      if (length > bytesLeft) {\n        this.position += bytesLeft;\n        return bytesLeft;\n      }\n    }\n    this.position += length;\n    return length;\n  }\n  async close() {\n    // empty\n  }\n  normalizeOptions(uint8Array, options) {\n    if (options && options.position !== undefined && options.position < this.position) {\n      throw new Error('`options.position` must be equal or greater than `tokenizer.position`');\n    }\n    if (options) {\n      return {\n        mayBeLess: options.mayBeLess === true,\n        offset: options.offset ? options.offset : 0,\n        length: options.length ? options.length : uint8Array.length - (options.offset ? options.offset : 0),\n        position: options.position ? options.position : this.position\n      };\n    }\n    return {\n      mayBeLess: false,\n      offset: 0,\n      length: uint8Array.length,\n      position: this.position\n    };\n  }\n}\nexports.AbstractTokenizer = AbstractTokenizer;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReadStreamTokenizer = void 0;\nconst AbstractTokenizer_1 = require(\"./AbstractTokenizer\");\nconst peek_readable_1 = require(\"peek-readable\");\nconst maxBufferSize = 256000;\nclass ReadStreamTokenizer extends AbstractTokenizer_1.AbstractTokenizer {\n  constructor(stream, fileInfo) {\n    super(fileInfo);\n    this.streamReader = new peek_readable_1.StreamReader(stream);\n  }\n  /**\r\n   * Get file information, an HTTP-client may implement this doing a HEAD request\r\n   * @return Promise with file information\r\n   */\n  async getFileInfo() {\n    return this.fileInfo;\n  }\n  /**\r\n   * Read buffer from tokenizer\r\n   * @param uint8Array - Target Uint8Array to fill with data read from the tokenizer-stream\r\n   * @param options - Read behaviour options\r\n   * @returns Promise with number of bytes read\r\n   */\n  async readBuffer(uint8Array, options) {\n    const normOptions = this.normalizeOptions(uint8Array, options);\n    const skipBytes = normOptions.position - this.position;\n    if (skipBytes > 0) {\n      await this.ignore(skipBytes);\n      return this.readBuffer(uint8Array, options);\n    } else if (skipBytes < 0) {\n      throw new Error('`options.position` must be equal or greater than `tokenizer.position`');\n    }\n    if (normOptions.length === 0) {\n      return 0;\n    }\n    const bytesRead = await this.streamReader.read(uint8Array, normOptions.offset, normOptions.length);\n    this.position += bytesRead;\n    if ((!options || !options.mayBeLess) && bytesRead < normOptions.length) {\n      throw new peek_readable_1.EndOfStreamError();\n    }\n    return bytesRead;\n  }\n  /**\r\n   * Peek (read ahead) buffer from tokenizer\r\n   * @param uint8Array - Uint8Array (or Buffer) to write data to\r\n   * @param options - Read behaviour options\r\n   * @returns Promise with number of bytes peeked\r\n   */\n  async peekBuffer(uint8Array, options) {\n    const normOptions = this.normalizeOptions(uint8Array, options);\n    let bytesRead = 0;\n    if (normOptions.position) {\n      const skipBytes = normOptions.position - this.position;\n      if (skipBytes > 0) {\n        const skipBuffer = new Uint8Array(normOptions.length + skipBytes);\n        bytesRead = await this.peekBuffer(skipBuffer, {\n          mayBeLess: normOptions.mayBeLess\n        });\n        uint8Array.set(skipBuffer.subarray(skipBytes), normOptions.offset);\n        return bytesRead - skipBytes;\n      } else if (skipBytes < 0) {\n        throw new Error('Cannot peek from a negative offset in a stream');\n      }\n    }\n    if (normOptions.length > 0) {\n      try {\n        bytesRead = await this.streamReader.peek(uint8Array, normOptions.offset, normOptions.length);\n      } catch (err) {\n        if (options && options.mayBeLess && err instanceof peek_readable_1.EndOfStreamError) {\n          return 0;\n        }\n        throw err;\n      }\n      if (!normOptions.mayBeLess && bytesRead < normOptions.length) {\n        throw new peek_readable_1.EndOfStreamError();\n      }\n    }\n    return bytesRead;\n  }\n  async ignore(length) {\n    // debug(`ignore ${this.position}...${this.position + length - 1}`);\n    const bufSize = Math.min(maxBufferSize, length);\n    const buf = new Uint8Array(bufSize);\n    let totBytesRead = 0;\n    while (totBytesRead < length) {\n      const remaining = length - totBytesRead;\n      const bytesRead = await this.readBuffer(buf, {\n        length: Math.min(bufSize, remaining)\n      });\n      if (bytesRead < 0) {\n        return bytesRead;\n      }\n      totBytesRead += bytesRead;\n    }\n    return totBytesRead;\n  }\n}\nexports.ReadStreamTokenizer = ReadStreamTokenizer;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BufferTokenizer = void 0;\nconst peek_readable_1 = require(\"peek-readable\");\nconst AbstractTokenizer_1 = require(\"./AbstractTokenizer\");\nclass BufferTokenizer extends AbstractTokenizer_1.AbstractTokenizer {\n  /**\r\n   * Construct BufferTokenizer\r\n   * @param uint8Array - Uint8Array to tokenize\r\n   * @param fileInfo - Pass additional file information to the tokenizer\r\n   */\n  constructor(uint8Array, fileInfo) {\n    super(fileInfo);\n    this.uint8Array = uint8Array;\n    this.fileInfo.size = this.fileInfo.size ? this.fileInfo.size : uint8Array.length;\n  }\n  /**\r\n   * Read buffer from tokenizer\r\n   * @param uint8Array - Uint8Array to tokenize\r\n   * @param options - Read behaviour options\r\n   * @returns {Promise<number>}\r\n   */\n  async readBuffer(uint8Array, options) {\n    if (options && options.position) {\n      if (options.position < this.position) {\n        throw new Error('`options.position` must be equal or greater than `tokenizer.position`');\n      }\n      this.position = options.position;\n    }\n    const bytesRead = await this.peekBuffer(uint8Array, options);\n    this.position += bytesRead;\n    return bytesRead;\n  }\n  /**\r\n   * Peek (read ahead) buffer from tokenizer\r\n   * @param uint8Array\r\n   * @param options - Read behaviour options\r\n   * @returns {Promise<number>}\r\n   */\n  async peekBuffer(uint8Array, options) {\n    const normOptions = this.normalizeOptions(uint8Array, options);\n    const bytes2read = Math.min(this.uint8Array.length - normOptions.position, normOptions.length);\n    if (!normOptions.mayBeLess && bytes2read < normOptions.length) {\n      throw new peek_readable_1.EndOfStreamError();\n    } else {\n      uint8Array.set(this.uint8Array.subarray(normOptions.position, normOptions.position + bytes2read), normOptions.offset);\n      return bytes2read;\n    }\n  }\n  async close() {\n    // empty\n  }\n}\nexports.BufferTokenizer = BufferTokenizer;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromBuffer = exports.fromStream = exports.EndOfStreamError = void 0;\nconst ReadStreamTokenizer_1 = require(\"./ReadStreamTokenizer\");\nconst BufferTokenizer_1 = require(\"./BufferTokenizer\");\nvar peek_readable_1 = require(\"peek-readable\");\nObject.defineProperty(exports, \"EndOfStreamError\", {\n  enumerable: true,\n  get: function () {\n    return peek_readable_1.EndOfStreamError;\n  }\n});\n/**\r\n * Construct ReadStreamTokenizer from given Stream.\r\n * Will set fileSize, if provided given Stream has set the .path property/\r\n * @param stream - Read from Node.js Stream.Readable\r\n * @param fileInfo - Pass the file information, like size and MIME-type of the corresponding stream.\r\n * @returns ReadStreamTokenizer\r\n */\nfunction fromStream(stream, fileInfo) {\n  fileInfo = fileInfo ? fileInfo : {};\n  return new ReadStreamTokenizer_1.ReadStreamTokenizer(stream, fileInfo);\n}\nexports.fromStream = fromStream;\n/**\r\n * Construct ReadStreamTokenizer from given Buffer.\r\n * @param uint8Array - Uint8Array to tokenize\r\n * @param fileInfo - Pass additional file information to the tokenizer\r\n * @returns BufferTokenizer\r\n */\nfunction fromBuffer(uint8Array, fileInfo) {\n  return new BufferTokenizer_1.BufferTokenizer(uint8Array, fileInfo);\n}\nexports.fromBuffer = fromBuffer;", "'use strict';\n\nexports.stringToBytes = string => [...string].map(character => character.charCodeAt(0));\n\n/**\nChecks whether the TAR checksum is valid.\n\n@param {Buffer} buffer - The TAR header `[offset ... offset + 512]`.\n@param {number} offset - TAR header offset.\n@returns {boolean} `true` if the TAR checksum is valid, otherwise `false`.\n*/\nexports.tarHeaderChecksumMatches = (buffer, offset = 0) => {\n  const readSum = parseInt(buffer.toString('utf8', 148, 154).replace(/\\0.*$/, '').trim(), 8); // Read sum in header\n  if (isNaN(readSum)) {\n    return false;\n  }\n  let sum = 8 * 0x20; // Initialize signed bit sum\n\n  for (let i = offset; i < offset + 148; i++) {\n    sum += buffer[i];\n  }\n  for (let i = offset + 156; i < offset + 512; i++) {\n    sum += buffer[i];\n  }\n  return readSum === sum;\n};\n\n/**\nID3 UINT32 sync-safe tokenizer token.\n28 bits (representing up to 256MB) integer, the msb is 0 to avoid \"false syncsignals\".\n*/\nexports.uint32SyncSafeToken = {\n  get: (buffer, offset) => {\n    return buffer[offset + 3] & 0x7F | buffer[offset + 2] << 7 | buffer[offset + 1] << 14 | buffer[offset] << 21;\n  },\n  len: 4\n};", "'use strict';\n\nmodule.exports = {\n  extensions: ['jpg', 'png', 'apng', 'gif', 'webp', 'flif', 'xcf', 'cr2', 'cr3', 'orf', 'arw', 'dng', 'nef', 'rw2', 'raf', 'tif', 'bmp', 'icns', 'jxr', 'psd', 'indd', 'zip', 'tar', 'rar', 'gz', 'bz2', '7z', 'dmg', 'mp4', 'mid', 'mkv', 'webm', 'mov', 'avi', 'mpg', 'mp2', 'mp3', 'm4a', 'oga', 'ogg', 'ogv', 'opus', 'flac', 'wav', 'spx', 'amr', 'pdf', 'epub', 'exe', 'swf', 'rtf', 'wasm', 'woff', 'woff2', 'eot', 'ttf', 'otf', 'ico', 'flv', 'ps', 'xz', 'sqlite', 'nes', 'crx', 'xpi', 'cab', 'deb', 'ar', 'rpm', 'Z', 'lz', 'cfb', 'mxf', 'mts', 'blend', 'bpg', 'docx', 'pptx', 'xlsx', '3gp', '3g2', 'jp2', 'jpm', 'jpx', 'mj2', 'aif', 'qcp', 'odt', 'ods', 'odp', 'xml', 'mobi', 'heic', 'cur', 'ktx', 'ape', 'wv', 'dcm', 'ics', 'glb', 'pcap', 'dsf', 'lnk', 'alias', 'voc', 'ac3', 'm4v', 'm4p', 'm4b', 'f4v', 'f4p', 'f4b', 'f4a', 'mie', 'asf', 'ogm', 'ogx', 'mpc', 'arrow', 'shp', 'aac', 'mp1', 'it', 's3m', 'xm', 'ai', 'skp', 'avif', 'eps', 'lzh', 'pgp', 'asar', 'stl', 'chm', '3mf', 'zst', 'jxl', 'vcf'],\n  mimeTypes: ['image/jpeg', 'image/png', 'image/gif', 'image/webp', 'image/flif', 'image/x-xcf', 'image/x-canon-cr2', 'image/x-canon-cr3', 'image/tiff', 'image/bmp', 'image/vnd.ms-photo', 'image/vnd.adobe.photoshop', 'application/x-indesign', 'application/epub+zip', 'application/x-xpinstall', 'application/vnd.oasis.opendocument.text', 'application/vnd.oasis.opendocument.spreadsheet', 'application/vnd.oasis.opendocument.presentation', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/zip', 'application/x-tar', 'application/x-rar-compressed', 'application/gzip', 'application/x-bzip2', 'application/x-7z-compressed', 'application/x-apple-diskimage', 'application/x-apache-arrow', 'video/mp4', 'audio/midi', 'video/x-matroska', 'video/webm', 'video/quicktime', 'video/vnd.avi', 'audio/vnd.wave', 'audio/qcelp', 'audio/x-ms-asf', 'video/x-ms-asf', 'application/vnd.ms-asf', 'video/mpeg', 'video/3gpp', 'audio/mpeg', 'audio/mp4',\n  // RFC 4337\n  'audio/opus', 'video/ogg', 'audio/ogg', 'application/ogg', 'audio/x-flac', 'audio/ape', 'audio/wavpack', 'audio/amr', 'application/pdf', 'application/x-msdownload', 'application/x-shockwave-flash', 'application/rtf', 'application/wasm', 'font/woff', 'font/woff2', 'application/vnd.ms-fontobject', 'font/ttf', 'font/otf', 'image/x-icon', 'video/x-flv', 'application/postscript', 'application/eps', 'application/x-xz', 'application/x-sqlite3', 'application/x-nintendo-nes-rom', 'application/x-google-chrome-extension', 'application/vnd.ms-cab-compressed', 'application/x-deb', 'application/x-unix-archive', 'application/x-rpm', 'application/x-compress', 'application/x-lzip', 'application/x-cfb', 'application/x-mie', 'application/mxf', 'video/mp2t', 'application/x-blender', 'image/bpg', 'image/jp2', 'image/jpx', 'image/jpm', 'image/mj2', 'audio/aiff', 'application/xml', 'application/x-mobipocket-ebook', 'image/heif', 'image/heif-sequence', 'image/heic', 'image/heic-sequence', 'image/icns', 'image/ktx', 'application/dicom', 'audio/x-musepack', 'text/calendar', 'text/vcard', 'model/gltf-binary', 'application/vnd.tcpdump.pcap', 'audio/x-dsf',\n  // Non-standard\n  'application/x.ms.shortcut',\n  // Invented by us\n  'application/x.apple.alias',\n  // Invented by us\n  'audio/x-voc', 'audio/vnd.dolby.dd-raw', 'audio/x-m4a', 'image/apng', 'image/x-olympus-orf', 'image/x-sony-arw', 'image/x-adobe-dng', 'image/x-nikon-nef', 'image/x-panasonic-rw2', 'image/x-fujifilm-raf', 'video/x-m4v', 'video/3gpp2', 'application/x-esri-shape', 'audio/aac', 'audio/x-it', 'audio/x-s3m', 'audio/x-xm', 'video/MP1S', 'video/MP2P', 'application/vnd.sketchup.skp', 'image/avif', 'application/x-lzh-compressed', 'application/pgp-encrypted', 'application/x-asar', 'model/stl', 'application/vnd.ms-htmlhelp', 'model/3mf', 'image/jxl', 'application/zstd']\n};", "'use strict';\n\nconst Token = require('token-types');\nconst strtok3 = require('strtok3/lib/core');\nconst {\n  stringToBytes,\n  tarHeaderChecksumMatches,\n  uint32SyncSafeToken\n} = require('./util');\nconst supported = require('./supported');\nconst minimumBytes = 4100; // A fair amount of file-types are detectable within this range\n\nasync function fromStream(stream) {\n  const tokenizer = await strtok3.fromStream(stream);\n  try {\n    return await fromTokenizer(tokenizer);\n  } finally {\n    await tokenizer.close();\n  }\n}\nasync function fromBuffer(input) {\n  if (!(input instanceof Uint8Array || input instanceof ArrayBuffer || Buffer.isBuffer(input))) {\n    throw new TypeError(`Expected the \\`input\\` argument to be of type \\`Uint8Array\\` or \\`Buffer\\` or \\`ArrayBuffer\\`, got \\`${typeof input}\\``);\n  }\n  const buffer = input instanceof Buffer ? input : Buffer.from(input);\n  if (!(buffer && buffer.length > 1)) {\n    return;\n  }\n  const tokenizer = strtok3.fromBuffer(buffer);\n  return fromTokenizer(tokenizer);\n}\nfunction _check(buffer, headers, options) {\n  options = {\n    offset: 0,\n    ...options\n  };\n  for (const [index, header] of headers.entries()) {\n    // If a bitmask is set\n    if (options.mask) {\n      // If header doesn't equal `buf` with bits masked off\n      if (header !== (options.mask[index] & buffer[index + options.offset])) {\n        return false;\n      }\n    } else if (header !== buffer[index + options.offset]) {\n      return false;\n    }\n  }\n  return true;\n}\nasync function fromTokenizer(tokenizer) {\n  try {\n    return _fromTokenizer(tokenizer);\n  } catch (error) {\n    if (!(error instanceof strtok3.EndOfStreamError)) {\n      throw error;\n    }\n  }\n}\nasync function _fromTokenizer(tokenizer) {\n  let buffer = Buffer.alloc(minimumBytes);\n  const bytesRead = 12;\n  const check = (header, options) => _check(buffer, header, options);\n  const checkString = (header, options) => check(stringToBytes(header), options);\n\n  // Keep reading until EOF if the file size is unknown.\n  if (!tokenizer.fileInfo.size) {\n    tokenizer.fileInfo.size = Number.MAX_SAFE_INTEGER;\n  }\n  await tokenizer.peekBuffer(buffer, {\n    length: bytesRead,\n    mayBeLess: true\n  });\n\n  // -- 2-byte signatures --\n\n  if (check([0x42, 0x4D])) {\n    return {\n      ext: 'bmp',\n      mime: 'image/bmp'\n    };\n  }\n  if (check([0x0B, 0x77])) {\n    return {\n      ext: 'ac3',\n      mime: 'audio/vnd.dolby.dd-raw'\n    };\n  }\n  if (check([0x78, 0x01])) {\n    return {\n      ext: 'dmg',\n      mime: 'application/x-apple-diskimage'\n    };\n  }\n  if (check([0x4D, 0x5A])) {\n    return {\n      ext: 'exe',\n      mime: 'application/x-msdownload'\n    };\n  }\n  if (check([0x25, 0x21])) {\n    await tokenizer.peekBuffer(buffer, {\n      length: 24,\n      mayBeLess: true\n    });\n    if (checkString('PS-Adobe-', {\n      offset: 2\n    }) && checkString(' EPSF-', {\n      offset: 14\n    })) {\n      return {\n        ext: 'eps',\n        mime: 'application/eps'\n      };\n    }\n    return {\n      ext: 'ps',\n      mime: 'application/postscript'\n    };\n  }\n  if (check([0x1F, 0xA0]) || check([0x1F, 0x9D])) {\n    return {\n      ext: 'Z',\n      mime: 'application/x-compress'\n    };\n  }\n\n  // -- 3-byte signatures --\n\n  if (check([0xFF, 0xD8, 0xFF])) {\n    return {\n      ext: 'jpg',\n      mime: 'image/jpeg'\n    };\n  }\n  if (check([0x49, 0x49, 0xBC])) {\n    return {\n      ext: 'jxr',\n      mime: 'image/vnd.ms-photo'\n    };\n  }\n  if (check([0x1F, 0x8B, 0x8])) {\n    return {\n      ext: 'gz',\n      mime: 'application/gzip'\n    };\n  }\n  if (check([0x42, 0x5A, 0x68])) {\n    return {\n      ext: 'bz2',\n      mime: 'application/x-bzip2'\n    };\n  }\n  if (checkString('ID3')) {\n    await tokenizer.ignore(6); // Skip ID3 header until the header size\n    const id3HeaderLen = await tokenizer.readToken(uint32SyncSafeToken);\n    if (tokenizer.position + id3HeaderLen > tokenizer.fileInfo.size) {\n      // Guess file type based on ID3 header for backward compatibility\n      return {\n        ext: 'mp3',\n        mime: 'audio/mpeg'\n      };\n    }\n    await tokenizer.ignore(id3HeaderLen);\n    return fromTokenizer(tokenizer); // Skip ID3 header, recursion\n  }\n\n  // Musepack, SV7\n  if (checkString('MP+')) {\n    return {\n      ext: 'mpc',\n      mime: 'audio/x-musepack'\n    };\n  }\n  if ((buffer[0] === 0x43 || buffer[0] === 0x46) && check([0x57, 0x53], {\n    offset: 1\n  })) {\n    return {\n      ext: 'swf',\n      mime: 'application/x-shockwave-flash'\n    };\n  }\n\n  // -- 4-byte signatures --\n\n  if (check([0x47, 0x49, 0x46])) {\n    return {\n      ext: 'gif',\n      mime: 'image/gif'\n    };\n  }\n  if (checkString('FLIF')) {\n    return {\n      ext: 'flif',\n      mime: 'image/flif'\n    };\n  }\n  if (checkString('8BPS')) {\n    return {\n      ext: 'psd',\n      mime: 'image/vnd.adobe.photoshop'\n    };\n  }\n  if (checkString('WEBP', {\n    offset: 8\n  })) {\n    return {\n      ext: 'webp',\n      mime: 'image/webp'\n    };\n  }\n\n  // Musepack, SV8\n  if (checkString('MPCK')) {\n    return {\n      ext: 'mpc',\n      mime: 'audio/x-musepack'\n    };\n  }\n  if (checkString('FORM')) {\n    return {\n      ext: 'aif',\n      mime: 'audio/aiff'\n    };\n  }\n  if (checkString('icns', {\n    offset: 0\n  })) {\n    return {\n      ext: 'icns',\n      mime: 'image/icns'\n    };\n  }\n\n  // Zip-based file formats\n  // Need to be before the `zip` check\n  if (check([0x50, 0x4B, 0x3, 0x4])) {\n    // Local file header signature\n    try {\n      while (tokenizer.position + 30 < tokenizer.fileInfo.size) {\n        await tokenizer.readBuffer(buffer, {\n          length: 30\n        });\n\n        // https://en.wikipedia.org/wiki/Zip_(file_format)#File_headers\n        const zipHeader = {\n          compressedSize: buffer.readUInt32LE(18),\n          uncompressedSize: buffer.readUInt32LE(22),\n          filenameLength: buffer.readUInt16LE(26),\n          extraFieldLength: buffer.readUInt16LE(28)\n        };\n        zipHeader.filename = await tokenizer.readToken(new Token.StringType(zipHeader.filenameLength, 'utf-8'));\n        await tokenizer.ignore(zipHeader.extraFieldLength);\n\n        // Assumes signed `.xpi` from addons.mozilla.org\n        if (zipHeader.filename === 'META-INF/mozilla.rsa') {\n          return {\n            ext: 'xpi',\n            mime: 'application/x-xpinstall'\n          };\n        }\n        if (zipHeader.filename.endsWith('.rels') || zipHeader.filename.endsWith('.xml')) {\n          const type = zipHeader.filename.split('/')[0];\n          switch (type) {\n            case '_rels':\n              break;\n            case 'word':\n              return {\n                ext: 'docx',\n                mime: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n              };\n            case 'ppt':\n              return {\n                ext: 'pptx',\n                mime: 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n              };\n            case 'xl':\n              return {\n                ext: 'xlsx',\n                mime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n              };\n            default:\n              break;\n          }\n        }\n        if (zipHeader.filename.startsWith('xl/')) {\n          return {\n            ext: 'xlsx',\n            mime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n          };\n        }\n        if (zipHeader.filename.startsWith('3D/') && zipHeader.filename.endsWith('.model')) {\n          return {\n            ext: '3mf',\n            mime: 'model/3mf'\n          };\n        }\n\n        // The docx, xlsx and pptx file types extend the Office Open XML file format:\n        // https://en.wikipedia.org/wiki/Office_Open_XML_file_formats\n        // We look for:\n        // - one entry named '[Content_Types].xml' or '_rels/.rels',\n        // - one entry indicating specific type of file.\n        // MS Office, OpenOffice and LibreOffice may put the parts in different order, so the check should not rely on it.\n        if (zipHeader.filename === 'mimetype' && zipHeader.compressedSize === zipHeader.uncompressedSize) {\n          const mimeType = await tokenizer.readToken(new Token.StringType(zipHeader.compressedSize, 'utf-8'));\n          switch (mimeType) {\n            case 'application/epub+zip':\n              return {\n                ext: 'epub',\n                mime: 'application/epub+zip'\n              };\n            case 'application/vnd.oasis.opendocument.text':\n              return {\n                ext: 'odt',\n                mime: 'application/vnd.oasis.opendocument.text'\n              };\n            case 'application/vnd.oasis.opendocument.spreadsheet':\n              return {\n                ext: 'ods',\n                mime: 'application/vnd.oasis.opendocument.spreadsheet'\n              };\n            case 'application/vnd.oasis.opendocument.presentation':\n              return {\n                ext: 'odp',\n                mime: 'application/vnd.oasis.opendocument.presentation'\n              };\n            default:\n          }\n        }\n\n        // Try to find next header manually when current one is corrupted\n        if (zipHeader.compressedSize === 0) {\n          let nextHeaderIndex = -1;\n          while (nextHeaderIndex < 0 && tokenizer.position < tokenizer.fileInfo.size) {\n            await tokenizer.peekBuffer(buffer, {\n              mayBeLess: true\n            });\n            nextHeaderIndex = buffer.indexOf('504B0304', 0, 'hex');\n            // Move position to the next header if found, skip the whole buffer otherwise\n            await tokenizer.ignore(nextHeaderIndex >= 0 ? nextHeaderIndex : buffer.length);\n          }\n        } else {\n          await tokenizer.ignore(zipHeader.compressedSize);\n        }\n      }\n    } catch (error) {\n      if (!(error instanceof strtok3.EndOfStreamError)) {\n        throw error;\n      }\n    }\n    return {\n      ext: 'zip',\n      mime: 'application/zip'\n    };\n  }\n  if (checkString('OggS')) {\n    // This is an OGG container\n    await tokenizer.ignore(28);\n    const type = Buffer.alloc(8);\n    await tokenizer.readBuffer(type);\n\n    // Needs to be before `ogg` check\n    if (_check(type, [0x4F, 0x70, 0x75, 0x73, 0x48, 0x65, 0x61, 0x64])) {\n      return {\n        ext: 'opus',\n        mime: 'audio/opus'\n      };\n    }\n\n    // If ' theora' in header.\n    if (_check(type, [0x80, 0x74, 0x68, 0x65, 0x6F, 0x72, 0x61])) {\n      return {\n        ext: 'ogv',\n        mime: 'video/ogg'\n      };\n    }\n\n    // If '\\x01video' in header.\n    if (_check(type, [0x01, 0x76, 0x69, 0x64, 0x65, 0x6F, 0x00])) {\n      return {\n        ext: 'ogm',\n        mime: 'video/ogg'\n      };\n    }\n\n    // If ' FLAC' in header  https://xiph.org/flac/faq.html\n    if (_check(type, [0x7F, 0x46, 0x4C, 0x41, 0x43])) {\n      return {\n        ext: 'oga',\n        mime: 'audio/ogg'\n      };\n    }\n\n    // 'Speex  ' in header https://en.wikipedia.org/wiki/Speex\n    if (_check(type, [0x53, 0x70, 0x65, 0x65, 0x78, 0x20, 0x20])) {\n      return {\n        ext: 'spx',\n        mime: 'audio/ogg'\n      };\n    }\n\n    // If '\\x01vorbis' in header\n    if (_check(type, [0x01, 0x76, 0x6F, 0x72, 0x62, 0x69, 0x73])) {\n      return {\n        ext: 'ogg',\n        mime: 'audio/ogg'\n      };\n    }\n\n    // Default OGG container https://www.iana.org/assignments/media-types/application/ogg\n    return {\n      ext: 'ogx',\n      mime: 'application/ogg'\n    };\n  }\n  if (check([0x50, 0x4B]) && (buffer[2] === 0x3 || buffer[2] === 0x5 || buffer[2] === 0x7) && (buffer[3] === 0x4 || buffer[3] === 0x6 || buffer[3] === 0x8)) {\n    return {\n      ext: 'zip',\n      mime: 'application/zip'\n    };\n  }\n\n  //\n\n  // File Type Box (https://en.wikipedia.org/wiki/ISO_base_media_file_format)\n  // It's not required to be first, but it's recommended to be. Almost all ISO base media files start with `ftyp` box.\n  // `ftyp` box must contain a brand major identifier, which must consist of ISO 8859-1 printable characters.\n  // Here we check for 8859-1 printable characters (for simplicity, it's a mask which also catches one non-printable character).\n  if (checkString('ftyp', {\n    offset: 4\n  }) && (buffer[8] & 0x60) !== 0x00 // Brand major, first character ASCII?\n  ) {\n    // They all can have MIME `video/mp4` except `application/mp4` special-case which is hard to detect.\n    // For some cases, we're specific, everything else falls to `video/mp4` with `mp4` extension.\n    const brandMajor = buffer.toString('binary', 8, 12).replace('\\0', ' ').trim();\n    switch (brandMajor) {\n      case 'avif':\n        return {\n          ext: 'avif',\n          mime: 'image/avif'\n        };\n      case 'mif1':\n        return {\n          ext: 'heic',\n          mime: 'image/heif'\n        };\n      case 'msf1':\n        return {\n          ext: 'heic',\n          mime: 'image/heif-sequence'\n        };\n      case 'heic':\n      case 'heix':\n        return {\n          ext: 'heic',\n          mime: 'image/heic'\n        };\n      case 'hevc':\n      case 'hevx':\n        return {\n          ext: 'heic',\n          mime: 'image/heic-sequence'\n        };\n      case 'qt':\n        return {\n          ext: 'mov',\n          mime: 'video/quicktime'\n        };\n      case 'M4V':\n      case 'M4VH':\n      case 'M4VP':\n        return {\n          ext: 'm4v',\n          mime: 'video/x-m4v'\n        };\n      case 'M4P':\n        return {\n          ext: 'm4p',\n          mime: 'video/mp4'\n        };\n      case 'M4B':\n        return {\n          ext: 'm4b',\n          mime: 'audio/mp4'\n        };\n      case 'M4A':\n        return {\n          ext: 'm4a',\n          mime: 'audio/x-m4a'\n        };\n      case 'F4V':\n        return {\n          ext: 'f4v',\n          mime: 'video/mp4'\n        };\n      case 'F4P':\n        return {\n          ext: 'f4p',\n          mime: 'video/mp4'\n        };\n      case 'F4A':\n        return {\n          ext: 'f4a',\n          mime: 'audio/mp4'\n        };\n      case 'F4B':\n        return {\n          ext: 'f4b',\n          mime: 'audio/mp4'\n        };\n      case 'crx':\n        return {\n          ext: 'cr3',\n          mime: 'image/x-canon-cr3'\n        };\n      default:\n        if (brandMajor.startsWith('3g')) {\n          if (brandMajor.startsWith('3g2')) {\n            return {\n              ext: '3g2',\n              mime: 'video/3gpp2'\n            };\n          }\n          return {\n            ext: '3gp',\n            mime: 'video/3gpp'\n          };\n        }\n        return {\n          ext: 'mp4',\n          mime: 'video/mp4'\n        };\n    }\n  }\n  if (checkString('MThd')) {\n    return {\n      ext: 'mid',\n      mime: 'audio/midi'\n    };\n  }\n  if (checkString('wOFF') && (check([0x00, 0x01, 0x00, 0x00], {\n    offset: 4\n  }) || checkString('OTTO', {\n    offset: 4\n  }))) {\n    return {\n      ext: 'woff',\n      mime: 'font/woff'\n    };\n  }\n  if (checkString('wOF2') && (check([0x00, 0x01, 0x00, 0x00], {\n    offset: 4\n  }) || checkString('OTTO', {\n    offset: 4\n  }))) {\n    return {\n      ext: 'woff2',\n      mime: 'font/woff2'\n    };\n  }\n  if (check([0xD4, 0xC3, 0xB2, 0xA1]) || check([0xA1, 0xB2, 0xC3, 0xD4])) {\n    return {\n      ext: 'pcap',\n      mime: 'application/vnd.tcpdump.pcap'\n    };\n  }\n\n  // Sony DSD Stream File (DSF)\n  if (checkString('DSD ')) {\n    return {\n      ext: 'dsf',\n      mime: 'audio/x-dsf' // Non-standard\n    };\n  }\n  if (checkString('LZIP')) {\n    return {\n      ext: 'lz',\n      mime: 'application/x-lzip'\n    };\n  }\n  if (checkString('fLaC')) {\n    return {\n      ext: 'flac',\n      mime: 'audio/x-flac'\n    };\n  }\n  if (check([0x42, 0x50, 0x47, 0xFB])) {\n    return {\n      ext: 'bpg',\n      mime: 'image/bpg'\n    };\n  }\n  if (checkString('wvpk')) {\n    return {\n      ext: 'wv',\n      mime: 'audio/wavpack'\n    };\n  }\n  if (checkString('%PDF')) {\n    await tokenizer.ignore(1350);\n    const maxBufferSize = 10 * 1024 * 1024;\n    const buffer = Buffer.alloc(Math.min(maxBufferSize, tokenizer.fileInfo.size));\n    await tokenizer.readBuffer(buffer, {\n      mayBeLess: true\n    });\n\n    // Check if this is an Adobe Illustrator file\n    if (buffer.includes(Buffer.from('AIPrivateData'))) {\n      return {\n        ext: 'ai',\n        mime: 'application/postscript'\n      };\n    }\n\n    // Assume this is just a normal PDF\n    return {\n      ext: 'pdf',\n      mime: 'application/pdf'\n    };\n  }\n  if (check([0x00, 0x61, 0x73, 0x6D])) {\n    return {\n      ext: 'wasm',\n      mime: 'application/wasm'\n    };\n  }\n\n  // TIFF, little-endian type\n  if (check([0x49, 0x49, 0x2A, 0x0])) {\n    if (checkString('CR', {\n      offset: 8\n    })) {\n      return {\n        ext: 'cr2',\n        mime: 'image/x-canon-cr2'\n      };\n    }\n    if (check([0x1C, 0x00, 0xFE, 0x00], {\n      offset: 8\n    }) || check([0x1F, 0x00, 0x0B, 0x00], {\n      offset: 8\n    })) {\n      return {\n        ext: 'nef',\n        mime: 'image/x-nikon-nef'\n      };\n    }\n    if (check([0x08, 0x00, 0x00, 0x00], {\n      offset: 4\n    }) && (check([0x2D, 0x00, 0xFE, 0x00], {\n      offset: 8\n    }) || check([0x27, 0x00, 0xFE, 0x00], {\n      offset: 8\n    }))) {\n      return {\n        ext: 'dng',\n        mime: 'image/x-adobe-dng'\n      };\n    }\n    buffer = Buffer.alloc(24);\n    await tokenizer.peekBuffer(buffer);\n    if ((check([0x10, 0xFB, 0x86, 0x01], {\n      offset: 4\n    }) || check([0x08, 0x00, 0x00, 0x00], {\n      offset: 4\n    })) &&\n    // This pattern differentiates ARW from other TIFF-ish file types:\n    check([0x00, 0xFE, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x01], {\n      offset: 9\n    })) {\n      return {\n        ext: 'arw',\n        mime: 'image/x-sony-arw'\n      };\n    }\n    return {\n      ext: 'tif',\n      mime: 'image/tiff'\n    };\n  }\n\n  // TIFF, big-endian type\n  if (check([0x4D, 0x4D, 0x0, 0x2A])) {\n    return {\n      ext: 'tif',\n      mime: 'image/tiff'\n    };\n  }\n  if (checkString('MAC ')) {\n    return {\n      ext: 'ape',\n      mime: 'audio/ape'\n    };\n  }\n\n  // https://github.com/threatstack/libmagic/blob/master/magic/Magdir/matroska\n  if (check([0x1A, 0x45, 0xDF, 0xA3])) {\n    // Root element: EBML\n    async function readField() {\n      const msb = await tokenizer.peekNumber(Token.UINT8);\n      let mask = 0x80;\n      let ic = 0; // 0 = A, 1 = B, 2 = C, 3 = D\n\n      while ((msb & mask) === 0 && mask !== 0) {\n        ++ic;\n        mask >>= 1;\n      }\n      const id = Buffer.alloc(ic + 1);\n      await tokenizer.readBuffer(id);\n      return id;\n    }\n    async function readElement() {\n      const id = await readField();\n      const lenField = await readField();\n      lenField[0] ^= 0x80 >> lenField.length - 1;\n      const nrLen = Math.min(6, lenField.length); // JavaScript can max read 6 bytes integer\n      return {\n        id: id.readUIntBE(0, id.length),\n        len: lenField.readUIntBE(lenField.length - nrLen, nrLen)\n      };\n    }\n    async function readChildren(level, children) {\n      while (children > 0) {\n        const e = await readElement();\n        if (e.id === 0x4282) {\n          return tokenizer.readToken(new Token.StringType(e.len, 'utf-8')); // Return DocType\n        }\n        await tokenizer.ignore(e.len); // ignore payload\n        --children;\n      }\n    }\n    const re = await readElement();\n    const docType = await readChildren(1, re.len);\n    switch (docType) {\n      case 'webm':\n        return {\n          ext: 'webm',\n          mime: 'video/webm'\n        };\n      case 'matroska':\n        return {\n          ext: 'mkv',\n          mime: 'video/x-matroska'\n        };\n      default:\n        return;\n    }\n  }\n\n  // RIFF file format which might be AVI, WAV, QCP, etc\n  if (check([0x52, 0x49, 0x46, 0x46])) {\n    if (check([0x41, 0x56, 0x49], {\n      offset: 8\n    })) {\n      return {\n        ext: 'avi',\n        mime: 'video/vnd.avi'\n      };\n    }\n    if (check([0x57, 0x41, 0x56, 0x45], {\n      offset: 8\n    })) {\n      return {\n        ext: 'wav',\n        mime: 'audio/vnd.wave'\n      };\n    }\n\n    // QLCM, QCP file\n    if (check([0x51, 0x4C, 0x43, 0x4D], {\n      offset: 8\n    })) {\n      return {\n        ext: 'qcp',\n        mime: 'audio/qcelp'\n      };\n    }\n  }\n  if (checkString('SQLi')) {\n    return {\n      ext: 'sqlite',\n      mime: 'application/x-sqlite3'\n    };\n  }\n  if (check([0x4E, 0x45, 0x53, 0x1A])) {\n    return {\n      ext: 'nes',\n      mime: 'application/x-nintendo-nes-rom'\n    };\n  }\n  if (checkString('Cr24')) {\n    return {\n      ext: 'crx',\n      mime: 'application/x-google-chrome-extension'\n    };\n  }\n  if (checkString('MSCF') || checkString('ISc(')) {\n    return {\n      ext: 'cab',\n      mime: 'application/vnd.ms-cab-compressed'\n    };\n  }\n  if (check([0xED, 0xAB, 0xEE, 0xDB])) {\n    return {\n      ext: 'rpm',\n      mime: 'application/x-rpm'\n    };\n  }\n  if (check([0xC5, 0xD0, 0xD3, 0xC6])) {\n    return {\n      ext: 'eps',\n      mime: 'application/eps'\n    };\n  }\n  if (check([0x28, 0xB5, 0x2F, 0xFD])) {\n    return {\n      ext: 'zst',\n      mime: 'application/zstd'\n    };\n  }\n\n  // -- 5-byte signatures --\n\n  if (check([0x4F, 0x54, 0x54, 0x4F, 0x00])) {\n    return {\n      ext: 'otf',\n      mime: 'font/otf'\n    };\n  }\n  if (checkString('#!AMR')) {\n    return {\n      ext: 'amr',\n      mime: 'audio/amr'\n    };\n  }\n  if (checkString('{\\\\rtf')) {\n    return {\n      ext: 'rtf',\n      mime: 'application/rtf'\n    };\n  }\n  if (check([0x46, 0x4C, 0x56, 0x01])) {\n    return {\n      ext: 'flv',\n      mime: 'video/x-flv'\n    };\n  }\n  if (checkString('IMPM')) {\n    return {\n      ext: 'it',\n      mime: 'audio/x-it'\n    };\n  }\n  if (checkString('-lh0-', {\n    offset: 2\n  }) || checkString('-lh1-', {\n    offset: 2\n  }) || checkString('-lh2-', {\n    offset: 2\n  }) || checkString('-lh3-', {\n    offset: 2\n  }) || checkString('-lh4-', {\n    offset: 2\n  }) || checkString('-lh5-', {\n    offset: 2\n  }) || checkString('-lh6-', {\n    offset: 2\n  }) || checkString('-lh7-', {\n    offset: 2\n  }) || checkString('-lzs-', {\n    offset: 2\n  }) || checkString('-lz4-', {\n    offset: 2\n  }) || checkString('-lz5-', {\n    offset: 2\n  }) || checkString('-lhd-', {\n    offset: 2\n  })) {\n    return {\n      ext: 'lzh',\n      mime: 'application/x-lzh-compressed'\n    };\n  }\n\n  // MPEG program stream (PS or MPEG-PS)\n  if (check([0x00, 0x00, 0x01, 0xBA])) {\n    //  MPEG-PS, MPEG-1 Part 1\n    if (check([0x21], {\n      offset: 4,\n      mask: [0xF1]\n    })) {\n      return {\n        ext: 'mpg',\n        // May also be .ps, .mpeg\n        mime: 'video/MP1S'\n      };\n    }\n\n    // MPEG-PS, MPEG-2 Part 1\n    if (check([0x44], {\n      offset: 4,\n      mask: [0xC4]\n    })) {\n      return {\n        ext: 'mpg',\n        // May also be .mpg, .m2p, .vob or .sub\n        mime: 'video/MP2P'\n      };\n    }\n  }\n  if (checkString('ITSF')) {\n    return {\n      ext: 'chm',\n      mime: 'application/vnd.ms-htmlhelp'\n    };\n  }\n\n  // -- 6-byte signatures --\n\n  if (check([0xFD, 0x37, 0x7A, 0x58, 0x5A, 0x00])) {\n    return {\n      ext: 'xz',\n      mime: 'application/x-xz'\n    };\n  }\n  if (checkString('<?xml ')) {\n    return {\n      ext: 'xml',\n      mime: 'application/xml'\n    };\n  }\n  if (check([0x37, 0x7A, 0xBC, 0xAF, 0x27, 0x1C])) {\n    return {\n      ext: '7z',\n      mime: 'application/x-7z-compressed'\n    };\n  }\n  if (check([0x52, 0x61, 0x72, 0x21, 0x1A, 0x7]) && (buffer[6] === 0x0 || buffer[6] === 0x1)) {\n    return {\n      ext: 'rar',\n      mime: 'application/x-rar-compressed'\n    };\n  }\n  if (checkString('solid ')) {\n    return {\n      ext: 'stl',\n      mime: 'model/stl'\n    };\n  }\n\n  // -- 7-byte signatures --\n\n  if (checkString('BLENDER')) {\n    return {\n      ext: 'blend',\n      mime: 'application/x-blender'\n    };\n  }\n  if (checkString('!<arch>')) {\n    await tokenizer.ignore(8);\n    const str = await tokenizer.readToken(new Token.StringType(13, 'ascii'));\n    if (str === 'debian-binary') {\n      return {\n        ext: 'deb',\n        mime: 'application/x-deb'\n      };\n    }\n    return {\n      ext: 'ar',\n      mime: 'application/x-unix-archive'\n    };\n  }\n\n  // -- 8-byte signatures --\n\n  if (check([0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A])) {\n    // APNG format (https://wiki.mozilla.org/APNG_Specification)\n    // 1. Find the first IDAT (image data) chunk (49 44 41 54)\n    // 2. Check if there is an \"acTL\" chunk before the IDAT one (61 63 54 4C)\n\n    // Offset calculated as follows:\n    // - 8 bytes: PNG signature\n    // - 4 (length) + 4 (chunk type) + 13 (chunk data) + 4 (CRC): IHDR chunk\n\n    await tokenizer.ignore(8); // ignore PNG signature\n\n    async function readChunkHeader() {\n      return {\n        length: await tokenizer.readToken(Token.INT32_BE),\n        type: await tokenizer.readToken(new Token.StringType(4, 'binary'))\n      };\n    }\n    do {\n      const chunk = await readChunkHeader();\n      if (chunk.length < 0) {\n        return; // Invalid chunk length\n      }\n      switch (chunk.type) {\n        case 'IDAT':\n          return {\n            ext: 'png',\n            mime: 'image/png'\n          };\n        case 'acTL':\n          return {\n            ext: 'apng',\n            mime: 'image/apng'\n          };\n        default:\n          await tokenizer.ignore(chunk.length + 4);\n        // Ignore chunk-data + CRC\n      }\n    } while (tokenizer.position + 8 < tokenizer.fileInfo.size);\n    return {\n      ext: 'png',\n      mime: 'image/png'\n    };\n  }\n  if (check([0x41, 0x52, 0x52, 0x4F, 0x57, 0x31, 0x00, 0x00])) {\n    return {\n      ext: 'arrow',\n      mime: 'application/x-apache-arrow'\n    };\n  }\n  if (check([0x67, 0x6C, 0x54, 0x46, 0x02, 0x00, 0x00, 0x00])) {\n    return {\n      ext: 'glb',\n      mime: 'model/gltf-binary'\n    };\n  }\n\n  // `mov` format variants\n  if (check([0x66, 0x72, 0x65, 0x65], {\n    offset: 4\n  }) ||\n  // `free`\n  check([0x6D, 0x64, 0x61, 0x74], {\n    offset: 4\n  }) ||\n  // `mdat` MJPEG\n  check([0x6D, 0x6F, 0x6F, 0x76], {\n    offset: 4\n  }) ||\n  // `moov`\n  check([0x77, 0x69, 0x64, 0x65], {\n    offset: 4\n  }) // `wide`\n  ) {\n    return {\n      ext: 'mov',\n      mime: 'video/quicktime'\n    };\n  }\n\n  // -- 9-byte signatures --\n\n  if (check([0x49, 0x49, 0x52, 0x4F, 0x08, 0x00, 0x00, 0x00, 0x18])) {\n    return {\n      ext: 'orf',\n      mime: 'image/x-olympus-orf'\n    };\n  }\n  if (checkString('gimp xcf ')) {\n    return {\n      ext: 'xcf',\n      mime: 'image/x-xcf'\n    };\n  }\n\n  // -- 12-byte signatures --\n\n  if (check([0x49, 0x49, 0x55, 0x00, 0x18, 0x00, 0x00, 0x00, 0x88, 0xE7, 0x74, 0xD8])) {\n    return {\n      ext: 'rw2',\n      mime: 'image/x-panasonic-rw2'\n    };\n  }\n\n  // ASF_Header_Object first 80 bytes\n  if (check([0x30, 0x26, 0xB2, 0x75, 0x8E, 0x66, 0xCF, 0x11, 0xA6, 0xD9])) {\n    async function readHeader() {\n      const guid = Buffer.alloc(16);\n      await tokenizer.readBuffer(guid);\n      return {\n        id: guid,\n        size: Number(await tokenizer.readToken(Token.UINT64_LE))\n      };\n    }\n    await tokenizer.ignore(30);\n    // Search for header should be in first 1KB of file.\n    while (tokenizer.position + 24 < tokenizer.fileInfo.size) {\n      const header = await readHeader();\n      let payload = header.size - 24;\n      if (_check(header.id, [0x91, 0x07, 0xDC, 0xB7, 0xB7, 0xA9, 0xCF, 0x11, 0x8E, 0xE6, 0x00, 0xC0, 0x0C, 0x20, 0x53, 0x65])) {\n        // Sync on Stream-Properties-Object (B7DC0791-A9B7-11CF-8EE6-00C00C205365)\n        const typeId = Buffer.alloc(16);\n        payload -= await tokenizer.readBuffer(typeId);\n        if (_check(typeId, [0x40, 0x9E, 0x69, 0xF8, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B])) {\n          // Found audio:\n          return {\n            ext: 'asf',\n            mime: 'audio/x-ms-asf'\n          };\n        }\n        if (_check(typeId, [0xC0, 0xEF, 0x19, 0xBC, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B])) {\n          // Found video:\n          return {\n            ext: 'asf',\n            mime: 'video/x-ms-asf'\n          };\n        }\n        break;\n      }\n      await tokenizer.ignore(payload);\n    }\n\n    // Default to ASF generic extension\n    return {\n      ext: 'asf',\n      mime: 'application/vnd.ms-asf'\n    };\n  }\n  if (check([0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A])) {\n    return {\n      ext: 'ktx',\n      mime: 'image/ktx'\n    };\n  }\n  if ((check([0x7E, 0x10, 0x04]) || check([0x7E, 0x18, 0x04])) && check([0x30, 0x4D, 0x49, 0x45], {\n    offset: 4\n  })) {\n    return {\n      ext: 'mie',\n      mime: 'application/x-mie'\n    };\n  }\n  if (check([0x27, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], {\n    offset: 2\n  })) {\n    return {\n      ext: 'shp',\n      mime: 'application/x-esri-shape'\n    };\n  }\n  if (check([0x00, 0x00, 0x00, 0x0C, 0x6A, 0x50, 0x20, 0x20, 0x0D, 0x0A, 0x87, 0x0A])) {\n    // JPEG-2000 family\n\n    await tokenizer.ignore(20);\n    const type = await tokenizer.readToken(new Token.StringType(4, 'ascii'));\n    switch (type) {\n      case 'jp2 ':\n        return {\n          ext: 'jp2',\n          mime: 'image/jp2'\n        };\n      case 'jpx ':\n        return {\n          ext: 'jpx',\n          mime: 'image/jpx'\n        };\n      case 'jpm ':\n        return {\n          ext: 'jpm',\n          mime: 'image/jpm'\n        };\n      case 'mjp2':\n        return {\n          ext: 'mj2',\n          mime: 'image/mj2'\n        };\n      default:\n        return;\n    }\n  }\n  if (check([0xFF, 0x0A]) || check([0x00, 0x00, 0x00, 0x0C, 0x4A, 0x58, 0x4C, 0x20, 0x0D, 0x0A, 0x87, 0x0A])) {\n    return {\n      ext: 'jxl',\n      mime: 'image/jxl'\n    };\n  }\n\n  // -- Unsafe signatures --\n\n  if (check([0x0, 0x0, 0x1, 0xBA]) || check([0x0, 0x0, 0x1, 0xB3])) {\n    return {\n      ext: 'mpg',\n      mime: 'video/mpeg'\n    };\n  }\n  if (check([0x00, 0x01, 0x00, 0x00, 0x00])) {\n    return {\n      ext: 'ttf',\n      mime: 'font/ttf'\n    };\n  }\n  if (check([0x00, 0x00, 0x01, 0x00])) {\n    return {\n      ext: 'ico',\n      mime: 'image/x-icon'\n    };\n  }\n  if (check([0x00, 0x00, 0x02, 0x00])) {\n    return {\n      ext: 'cur',\n      mime: 'image/x-icon'\n    };\n  }\n  if (check([0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1])) {\n    // Detected Microsoft Compound File Binary File (MS-CFB) Format.\n    return {\n      ext: 'cfb',\n      mime: 'application/x-cfb'\n    };\n  }\n\n  // Increase sample size from 12 to 256.\n  await tokenizer.peekBuffer(buffer, {\n    length: Math.min(256, tokenizer.fileInfo.size),\n    mayBeLess: true\n  });\n\n  // -- 15-byte signatures --\n\n  if (checkString('BEGIN:')) {\n    if (checkString('VCARD', {\n      offset: 6\n    })) {\n      return {\n        ext: 'vcf',\n        mime: 'text/vcard'\n      };\n    }\n    if (checkString('VCALENDAR', {\n      offset: 6\n    })) {\n      return {\n        ext: 'ics',\n        mime: 'text/calendar'\n      };\n    }\n  }\n\n  // `raf` is here just to keep all the raw image detectors together.\n  if (checkString('FUJIFILMCCD-RAW')) {\n    return {\n      ext: 'raf',\n      mime: 'image/x-fujifilm-raf'\n    };\n  }\n  if (checkString('Extended Module:')) {\n    return {\n      ext: 'xm',\n      mime: 'audio/x-xm'\n    };\n  }\n  if (checkString('Creative Voice File')) {\n    return {\n      ext: 'voc',\n      mime: 'audio/x-voc'\n    };\n  }\n  if (check([0x04, 0x00, 0x00, 0x00]) && buffer.length >= 16) {\n    // Rough & quick check Pickle/ASAR\n    const jsonSize = buffer.readUInt32LE(12);\n    if (jsonSize > 12 && buffer.length >= jsonSize + 16) {\n      try {\n        const header = buffer.slice(16, jsonSize + 16).toString();\n        const json = JSON.parse(header);\n        // Check if Pickle is ASAR\n        if (json.files) {\n          // Final check, assuring Pickle/ASAR format\n          return {\n            ext: 'asar',\n            mime: 'application/x-asar'\n          };\n        }\n      } catch (_) {}\n    }\n  }\n  if (check([0x06, 0x0E, 0x2B, 0x34, 0x02, 0x05, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02])) {\n    return {\n      ext: 'mxf',\n      mime: 'application/mxf'\n    };\n  }\n  if (checkString('SCRM', {\n    offset: 44\n  })) {\n    return {\n      ext: 's3m',\n      mime: 'audio/x-s3m'\n    };\n  }\n  if (check([0x47], {\n    offset: 4\n  }) && (check([0x47], {\n    offset: 192\n  }) || check([0x47], {\n    offset: 196\n  }))) {\n    return {\n      ext: 'mts',\n      mime: 'video/mp2t'\n    };\n  }\n  if (check([0x42, 0x4F, 0x4F, 0x4B, 0x4D, 0x4F, 0x42, 0x49], {\n    offset: 60\n  })) {\n    return {\n      ext: 'mobi',\n      mime: 'application/x-mobipocket-ebook'\n    };\n  }\n  if (check([0x44, 0x49, 0x43, 0x4D], {\n    offset: 128\n  })) {\n    return {\n      ext: 'dcm',\n      mime: 'application/dicom'\n    };\n  }\n  if (check([0x4C, 0x00, 0x00, 0x00, 0x01, 0x14, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46])) {\n    return {\n      ext: 'lnk',\n      mime: 'application/x.ms.shortcut' // Invented by us\n    };\n  }\n  if (check([0x62, 0x6F, 0x6F, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x6D, 0x61, 0x72, 0x6B, 0x00, 0x00, 0x00, 0x00])) {\n    return {\n      ext: 'alias',\n      mime: 'application/x.apple.alias' // Invented by us\n    };\n  }\n  if (check([0x4C, 0x50], {\n    offset: 34\n  }) && (check([0x00, 0x00, 0x01], {\n    offset: 8\n  }) || check([0x01, 0x00, 0x02], {\n    offset: 8\n  }) || check([0x02, 0x00, 0x02], {\n    offset: 8\n  }))) {\n    return {\n      ext: 'eot',\n      mime: 'application/vnd.ms-fontobject'\n    };\n  }\n  if (check([0x06, 0x06, 0xED, 0xF5, 0xD8, 0x1D, 0x46, 0xE5, 0xBD, 0x31, 0xEF, 0xE7, 0xFE, 0x74, 0xB7, 0x1D])) {\n    return {\n      ext: 'indd',\n      mime: 'application/x-indesign'\n    };\n  }\n\n  // Increase sample size from 256 to 512\n  await tokenizer.peekBuffer(buffer, {\n    length: Math.min(512, tokenizer.fileInfo.size),\n    mayBeLess: true\n  });\n\n  // Requires a buffer size of 512 bytes\n  if (tarHeaderChecksumMatches(buffer)) {\n    return {\n      ext: 'tar',\n      mime: 'application/x-tar'\n    };\n  }\n  if (check([0xFF, 0xFE, 0xFF, 0x0E, 0x53, 0x00, 0x6B, 0x00, 0x65, 0x00, 0x74, 0x00, 0x63, 0x00, 0x68, 0x00, 0x55, 0x00, 0x70, 0x00, 0x20, 0x00, 0x4D, 0x00, 0x6F, 0x00, 0x64, 0x00, 0x65, 0x00, 0x6C, 0x00])) {\n    return {\n      ext: 'skp',\n      mime: 'application/vnd.sketchup.skp'\n    };\n  }\n  if (checkString('-----BEGIN PGP MESSAGE-----')) {\n    return {\n      ext: 'pgp',\n      mime: 'application/pgp-encrypted'\n    };\n  }\n\n  // Check MPEG 1 or 2 Layer 3 header, or 'layer 0' for ADTS (MPEG sync-word 0xFFE)\n  if (buffer.length >= 2 && check([0xFF, 0xE0], {\n    offset: 0,\n    mask: [0xFF, 0xE0]\n  })) {\n    if (check([0x10], {\n      offset: 1,\n      mask: [0x16]\n    })) {\n      // Check for (ADTS) MPEG-2\n      if (check([0x08], {\n        offset: 1,\n        mask: [0x08]\n      })) {\n        return {\n          ext: 'aac',\n          mime: 'audio/aac'\n        };\n      }\n\n      // Must be (ADTS) MPEG-4\n      return {\n        ext: 'aac',\n        mime: 'audio/aac'\n      };\n    }\n\n    // MPEG 1 or 2 Layer 3 header\n    // Check for MPEG layer 3\n    if (check([0x02], {\n      offset: 1,\n      mask: [0x06]\n    })) {\n      return {\n        ext: 'mp3',\n        mime: 'audio/mpeg'\n      };\n    }\n\n    // Check for MPEG layer 2\n    if (check([0x04], {\n      offset: 1,\n      mask: [0x06]\n    })) {\n      return {\n        ext: 'mp2',\n        mime: 'audio/mpeg'\n      };\n    }\n\n    // Check for MPEG layer 1\n    if (check([0x06], {\n      offset: 1,\n      mask: [0x06]\n    })) {\n      return {\n        ext: 'mp1',\n        mime: 'audio/mpeg'\n      };\n    }\n  }\n}\nconst stream = readableStream => new Promise((resolve, reject) => {\n  // Using `eval` to work around issues when bundling with Webpack\n  const stream = eval('require')('stream'); // eslint-disable-line no-eval\n\n  readableStream.on('error', reject);\n  readableStream.once('readable', async () => {\n    // Set up output stream\n    const pass = new stream.PassThrough();\n    let outputStream;\n    if (stream.pipeline) {\n      outputStream = stream.pipeline(readableStream, pass, () => {});\n    } else {\n      outputStream = readableStream.pipe(pass);\n    }\n\n    // Read the input stream and detect the filetype\n    const chunk = readableStream.read(minimumBytes) || readableStream.read() || Buffer.alloc(0);\n    try {\n      const fileType = await fromBuffer(chunk);\n      pass.fileType = fileType;\n    } catch (error) {\n      reject(error);\n    }\n    resolve(outputStream);\n  });\n});\nconst fileType = {\n  fromStream,\n  fromTokenizer,\n  fromBuffer,\n  stream\n};\nObject.defineProperty(fileType, 'extensions', {\n  get() {\n    return new Set(supported.extensions);\n  }\n});\nObject.defineProperty(fileType, 'mimeTypes', {\n  get() {\n    return new Set(supported.mimeTypes);\n  }\n});\nmodule.exports = fileType;", "'use strict';\n\n/**\n * @param typeMap [Object] Map of MIME type -> Array[extensions]\n * @param ...\n */\nfunction Mime() {\n  this._types = Object.create(null);\n  this._extensions = Object.create(null);\n  for (let i = 0; i < arguments.length; i++) {\n    this.define(arguments[i]);\n  }\n  this.define = this.define.bind(this);\n  this.getType = this.getType.bind(this);\n  this.getExtension = this.getExtension.bind(this);\n}\n\n/**\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\n *\n * If a type declares an extension that has already been defined, an error will\n * be thrown.  To suppress this error and force the extension to be associated\n * with the new type, pass `force`=true.  Alternatively, you may prefix the\n * extension with \"*\" to map the type to extension, without mapping the\n * extension to the type.\n *\n * e.g. mime.define({'audio/wav', ['wav']}, {'audio/x-wav', ['*wav']});\n *\n *\n * @param map (Object) type definitions\n * @param force (Boolean) if true, force overriding of existing definitions\n */\nMime.prototype.define = function (typeMap, force) {\n  for (let type in typeMap) {\n    let extensions = typeMap[type].map(function (t) {\n      return t.toLowerCase();\n    });\n    type = type.toLowerCase();\n    for (let i = 0; i < extensions.length; i++) {\n      const ext = extensions[i];\n\n      // '*' prefix = not the preferred type for this extension.  So fixup the\n      // extension, and skip it.\n      if (ext[0] === '*') {\n        continue;\n      }\n      if (!force && ext in this._types) {\n        throw new Error('Attempt to change mapping for \"' + ext + '\" extension from \"' + this._types[ext] + '\" to \"' + type + '\". Pass `force=true` to allow this, otherwise remove \"' + ext + '\" from the list of extensions for \"' + type + '\".');\n      }\n      this._types[ext] = type;\n    }\n\n    // Use first extension as default\n    if (force || !this._extensions[type]) {\n      const ext = extensions[0];\n      this._extensions[type] = ext[0] !== '*' ? ext : ext.substr(1);\n    }\n  }\n};\n\n/**\n * Lookup a mime type based on extension\n */\nMime.prototype.getType = function (path) {\n  path = String(path);\n  let last = path.replace(/^.*[/\\\\]/, '').toLowerCase();\n  let ext = last.replace(/^.*\\./, '').toLowerCase();\n  let hasPath = last.length < path.length;\n  let hasDot = ext.length < last.length - 1;\n  return (hasDot || !hasPath) && this._types[ext] || null;\n};\n\n/**\n * Return file extension associated with a mime type\n */\nMime.prototype.getExtension = function (type) {\n  type = /^\\s*([^;\\s]*)/.test(type) && RegExp.$1;\n  return type && this._extensions[type.toLowerCase()] || null;\n};\nmodule.exports = Mime;", "module.exports = {\n  \"application/andrew-inset\": [\"ez\"],\n  \"application/applixware\": [\"aw\"],\n  \"application/atom+xml\": [\"atom\"],\n  \"application/atomcat+xml\": [\"atomcat\"],\n  \"application/atomdeleted+xml\": [\"atomdeleted\"],\n  \"application/atomsvc+xml\": [\"atomsvc\"],\n  \"application/atsc-dwd+xml\": [\"dwd\"],\n  \"application/atsc-held+xml\": [\"held\"],\n  \"application/atsc-rsat+xml\": [\"rsat\"],\n  \"application/bdoc\": [\"bdoc\"],\n  \"application/calendar+xml\": [\"xcs\"],\n  \"application/ccxml+xml\": [\"ccxml\"],\n  \"application/cdfx+xml\": [\"cdfx\"],\n  \"application/cdmi-capability\": [\"cdmia\"],\n  \"application/cdmi-container\": [\"cdmic\"],\n  \"application/cdmi-domain\": [\"cdmid\"],\n  \"application/cdmi-object\": [\"cdmio\"],\n  \"application/cdmi-queue\": [\"cdmiq\"],\n  \"application/cu-seeme\": [\"cu\"],\n  \"application/dash+xml\": [\"mpd\"],\n  \"application/davmount+xml\": [\"davmount\"],\n  \"application/docbook+xml\": [\"dbk\"],\n  \"application/dssc+der\": [\"dssc\"],\n  \"application/dssc+xml\": [\"xdssc\"],\n  \"application/ecmascript\": [\"es\", \"ecma\"],\n  \"application/emma+xml\": [\"emma\"],\n  \"application/emotionml+xml\": [\"emotionml\"],\n  \"application/epub+zip\": [\"epub\"],\n  \"application/exi\": [\"exi\"],\n  \"application/express\": [\"exp\"],\n  \"application/fdt+xml\": [\"fdt\"],\n  \"application/font-tdpfr\": [\"pfr\"],\n  \"application/geo+json\": [\"geojson\"],\n  \"application/gml+xml\": [\"gml\"],\n  \"application/gpx+xml\": [\"gpx\"],\n  \"application/gxf\": [\"gxf\"],\n  \"application/gzip\": [\"gz\"],\n  \"application/hjson\": [\"hjson\"],\n  \"application/hyperstudio\": [\"stk\"],\n  \"application/inkml+xml\": [\"ink\", \"inkml\"],\n  \"application/ipfix\": [\"ipfix\"],\n  \"application/its+xml\": [\"its\"],\n  \"application/java-archive\": [\"jar\", \"war\", \"ear\"],\n  \"application/java-serialized-object\": [\"ser\"],\n  \"application/java-vm\": [\"class\"],\n  \"application/javascript\": [\"js\", \"mjs\"],\n  \"application/json\": [\"json\", \"map\"],\n  \"application/json5\": [\"json5\"],\n  \"application/jsonml+json\": [\"jsonml\"],\n  \"application/ld+json\": [\"jsonld\"],\n  \"application/lgr+xml\": [\"lgr\"],\n  \"application/lost+xml\": [\"lostxml\"],\n  \"application/mac-binhex40\": [\"hqx\"],\n  \"application/mac-compactpro\": [\"cpt\"],\n  \"application/mads+xml\": [\"mads\"],\n  \"application/manifest+json\": [\"webmanifest\"],\n  \"application/marc\": [\"mrc\"],\n  \"application/marcxml+xml\": [\"mrcx\"],\n  \"application/mathematica\": [\"ma\", \"nb\", \"mb\"],\n  \"application/mathml+xml\": [\"mathml\"],\n  \"application/mbox\": [\"mbox\"],\n  \"application/mediaservercontrol+xml\": [\"mscml\"],\n  \"application/metalink+xml\": [\"metalink\"],\n  \"application/metalink4+xml\": [\"meta4\"],\n  \"application/mets+xml\": [\"mets\"],\n  \"application/mmt-aei+xml\": [\"maei\"],\n  \"application/mmt-usd+xml\": [\"musd\"],\n  \"application/mods+xml\": [\"mods\"],\n  \"application/mp21\": [\"m21\", \"mp21\"],\n  \"application/mp4\": [\"mp4s\", \"m4p\"],\n  \"application/msword\": [\"doc\", \"dot\"],\n  \"application/mxf\": [\"mxf\"],\n  \"application/n-quads\": [\"nq\"],\n  \"application/n-triples\": [\"nt\"],\n  \"application/node\": [\"cjs\"],\n  \"application/octet-stream\": [\"bin\", \"dms\", \"lrf\", \"mar\", \"so\", \"dist\", \"distz\", \"pkg\", \"bpk\", \"dump\", \"elc\", \"deploy\", \"exe\", \"dll\", \"deb\", \"dmg\", \"iso\", \"img\", \"msi\", \"msp\", \"msm\", \"buffer\"],\n  \"application/oda\": [\"oda\"],\n  \"application/oebps-package+xml\": [\"opf\"],\n  \"application/ogg\": [\"ogx\"],\n  \"application/omdoc+xml\": [\"omdoc\"],\n  \"application/onenote\": [\"onetoc\", \"onetoc2\", \"onetmp\", \"onepkg\"],\n  \"application/oxps\": [\"oxps\"],\n  \"application/p2p-overlay+xml\": [\"relo\"],\n  \"application/patch-ops-error+xml\": [\"xer\"],\n  \"application/pdf\": [\"pdf\"],\n  \"application/pgp-encrypted\": [\"pgp\"],\n  \"application/pgp-signature\": [\"asc\", \"sig\"],\n  \"application/pics-rules\": [\"prf\"],\n  \"application/pkcs10\": [\"p10\"],\n  \"application/pkcs7-mime\": [\"p7m\", \"p7c\"],\n  \"application/pkcs7-signature\": [\"p7s\"],\n  \"application/pkcs8\": [\"p8\"],\n  \"application/pkix-attr-cert\": [\"ac\"],\n  \"application/pkix-cert\": [\"cer\"],\n  \"application/pkix-crl\": [\"crl\"],\n  \"application/pkix-pkipath\": [\"pkipath\"],\n  \"application/pkixcmp\": [\"pki\"],\n  \"application/pls+xml\": [\"pls\"],\n  \"application/postscript\": [\"ai\", \"eps\", \"ps\"],\n  \"application/provenance+xml\": [\"provx\"],\n  \"application/pskc+xml\": [\"pskcxml\"],\n  \"application/raml+yaml\": [\"raml\"],\n  \"application/rdf+xml\": [\"rdf\", \"owl\"],\n  \"application/reginfo+xml\": [\"rif\"],\n  \"application/relax-ng-compact-syntax\": [\"rnc\"],\n  \"application/resource-lists+xml\": [\"rl\"],\n  \"application/resource-lists-diff+xml\": [\"rld\"],\n  \"application/rls-services+xml\": [\"rs\"],\n  \"application/route-apd+xml\": [\"rapd\"],\n  \"application/route-s-tsid+xml\": [\"sls\"],\n  \"application/route-usd+xml\": [\"rusd\"],\n  \"application/rpki-ghostbusters\": [\"gbr\"],\n  \"application/rpki-manifest\": [\"mft\"],\n  \"application/rpki-roa\": [\"roa\"],\n  \"application/rsd+xml\": [\"rsd\"],\n  \"application/rss+xml\": [\"rss\"],\n  \"application/rtf\": [\"rtf\"],\n  \"application/sbml+xml\": [\"sbml\"],\n  \"application/scvp-cv-request\": [\"scq\"],\n  \"application/scvp-cv-response\": [\"scs\"],\n  \"application/scvp-vp-request\": [\"spq\"],\n  \"application/scvp-vp-response\": [\"spp\"],\n  \"application/sdp\": [\"sdp\"],\n  \"application/senml+xml\": [\"senmlx\"],\n  \"application/sensml+xml\": [\"sensmlx\"],\n  \"application/set-payment-initiation\": [\"setpay\"],\n  \"application/set-registration-initiation\": [\"setreg\"],\n  \"application/shf+xml\": [\"shf\"],\n  \"application/sieve\": [\"siv\", \"sieve\"],\n  \"application/smil+xml\": [\"smi\", \"smil\"],\n  \"application/sparql-query\": [\"rq\"],\n  \"application/sparql-results+xml\": [\"srx\"],\n  \"application/srgs\": [\"gram\"],\n  \"application/srgs+xml\": [\"grxml\"],\n  \"application/sru+xml\": [\"sru\"],\n  \"application/ssdl+xml\": [\"ssdl\"],\n  \"application/ssml+xml\": [\"ssml\"],\n  \"application/swid+xml\": [\"swidtag\"],\n  \"application/tei+xml\": [\"tei\", \"teicorpus\"],\n  \"application/thraud+xml\": [\"tfi\"],\n  \"application/timestamped-data\": [\"tsd\"],\n  \"application/toml\": [\"toml\"],\n  \"application/trig\": [\"trig\"],\n  \"application/ttml+xml\": [\"ttml\"],\n  \"application/ubjson\": [\"ubj\"],\n  \"application/urc-ressheet+xml\": [\"rsheet\"],\n  \"application/urc-targetdesc+xml\": [\"td\"],\n  \"application/voicexml+xml\": [\"vxml\"],\n  \"application/wasm\": [\"wasm\"],\n  \"application/widget\": [\"wgt\"],\n  \"application/winhlp\": [\"hlp\"],\n  \"application/wsdl+xml\": [\"wsdl\"],\n  \"application/wspolicy+xml\": [\"wspolicy\"],\n  \"application/xaml+xml\": [\"xaml\"],\n  \"application/xcap-att+xml\": [\"xav\"],\n  \"application/xcap-caps+xml\": [\"xca\"],\n  \"application/xcap-diff+xml\": [\"xdf\"],\n  \"application/xcap-el+xml\": [\"xel\"],\n  \"application/xcap-ns+xml\": [\"xns\"],\n  \"application/xenc+xml\": [\"xenc\"],\n  \"application/xhtml+xml\": [\"xhtml\", \"xht\"],\n  \"application/xliff+xml\": [\"xlf\"],\n  \"application/xml\": [\"xml\", \"xsl\", \"xsd\", \"rng\"],\n  \"application/xml-dtd\": [\"dtd\"],\n  \"application/xop+xml\": [\"xop\"],\n  \"application/xproc+xml\": [\"xpl\"],\n  \"application/xslt+xml\": [\"*xsl\", \"xslt\"],\n  \"application/xspf+xml\": [\"xspf\"],\n  \"application/xv+xml\": [\"mxml\", \"xhvml\", \"xvml\", \"xvm\"],\n  \"application/yang\": [\"yang\"],\n  \"application/yin+xml\": [\"yin\"],\n  \"application/zip\": [\"zip\"],\n  \"audio/3gpp\": [\"*3gpp\"],\n  \"audio/adpcm\": [\"adp\"],\n  \"audio/amr\": [\"amr\"],\n  \"audio/basic\": [\"au\", \"snd\"],\n  \"audio/midi\": [\"mid\", \"midi\", \"kar\", \"rmi\"],\n  \"audio/mobile-xmf\": [\"mxmf\"],\n  \"audio/mp3\": [\"*mp3\"],\n  \"audio/mp4\": [\"m4a\", \"mp4a\"],\n  \"audio/mpeg\": [\"mpga\", \"mp2\", \"mp2a\", \"mp3\", \"m2a\", \"m3a\"],\n  \"audio/ogg\": [\"oga\", \"ogg\", \"spx\", \"opus\"],\n  \"audio/s3m\": [\"s3m\"],\n  \"audio/silk\": [\"sil\"],\n  \"audio/wav\": [\"wav\"],\n  \"audio/wave\": [\"*wav\"],\n  \"audio/webm\": [\"weba\"],\n  \"audio/xm\": [\"xm\"],\n  \"font/collection\": [\"ttc\"],\n  \"font/otf\": [\"otf\"],\n  \"font/ttf\": [\"ttf\"],\n  \"font/woff\": [\"woff\"],\n  \"font/woff2\": [\"woff2\"],\n  \"image/aces\": [\"exr\"],\n  \"image/apng\": [\"apng\"],\n  \"image/avif\": [\"avif\"],\n  \"image/bmp\": [\"bmp\"],\n  \"image/cgm\": [\"cgm\"],\n  \"image/dicom-rle\": [\"drle\"],\n  \"image/emf\": [\"emf\"],\n  \"image/fits\": [\"fits\"],\n  \"image/g3fax\": [\"g3\"],\n  \"image/gif\": [\"gif\"],\n  \"image/heic\": [\"heic\"],\n  \"image/heic-sequence\": [\"heics\"],\n  \"image/heif\": [\"heif\"],\n  \"image/heif-sequence\": [\"heifs\"],\n  \"image/hej2k\": [\"hej2\"],\n  \"image/hsj2\": [\"hsj2\"],\n  \"image/ief\": [\"ief\"],\n  \"image/jls\": [\"jls\"],\n  \"image/jp2\": [\"jp2\", \"jpg2\"],\n  \"image/jpeg\": [\"jpeg\", \"jpg\", \"jpe\"],\n  \"image/jph\": [\"jph\"],\n  \"image/jphc\": [\"jhc\"],\n  \"image/jpm\": [\"jpm\"],\n  \"image/jpx\": [\"jpx\", \"jpf\"],\n  \"image/jxr\": [\"jxr\"],\n  \"image/jxra\": [\"jxra\"],\n  \"image/jxrs\": [\"jxrs\"],\n  \"image/jxs\": [\"jxs\"],\n  \"image/jxsc\": [\"jxsc\"],\n  \"image/jxsi\": [\"jxsi\"],\n  \"image/jxss\": [\"jxss\"],\n  \"image/ktx\": [\"ktx\"],\n  \"image/ktx2\": [\"ktx2\"],\n  \"image/png\": [\"png\"],\n  \"image/sgi\": [\"sgi\"],\n  \"image/svg+xml\": [\"svg\", \"svgz\"],\n  \"image/t38\": [\"t38\"],\n  \"image/tiff\": [\"tif\", \"tiff\"],\n  \"image/tiff-fx\": [\"tfx\"],\n  \"image/webp\": [\"webp\"],\n  \"image/wmf\": [\"wmf\"],\n  \"message/disposition-notification\": [\"disposition-notification\"],\n  \"message/global\": [\"u8msg\"],\n  \"message/global-delivery-status\": [\"u8dsn\"],\n  \"message/global-disposition-notification\": [\"u8mdn\"],\n  \"message/global-headers\": [\"u8hdr\"],\n  \"message/rfc822\": [\"eml\", \"mime\"],\n  \"model/3mf\": [\"3mf\"],\n  \"model/gltf+json\": [\"gltf\"],\n  \"model/gltf-binary\": [\"glb\"],\n  \"model/iges\": [\"igs\", \"iges\"],\n  \"model/mesh\": [\"msh\", \"mesh\", \"silo\"],\n  \"model/mtl\": [\"mtl\"],\n  \"model/obj\": [\"obj\"],\n  \"model/step+xml\": [\"stpx\"],\n  \"model/step+zip\": [\"stpz\"],\n  \"model/step-xml+zip\": [\"stpxz\"],\n  \"model/stl\": [\"stl\"],\n  \"model/vrml\": [\"wrl\", \"vrml\"],\n  \"model/x3d+binary\": [\"*x3db\", \"x3dbz\"],\n  \"model/x3d+fastinfoset\": [\"x3db\"],\n  \"model/x3d+vrml\": [\"*x3dv\", \"x3dvz\"],\n  \"model/x3d+xml\": [\"x3d\", \"x3dz\"],\n  \"model/x3d-vrml\": [\"x3dv\"],\n  \"text/cache-manifest\": [\"appcache\", \"manifest\"],\n  \"text/calendar\": [\"ics\", \"ifb\"],\n  \"text/coffeescript\": [\"coffee\", \"litcoffee\"],\n  \"text/css\": [\"css\"],\n  \"text/csv\": [\"csv\"],\n  \"text/html\": [\"html\", \"htm\", \"shtml\"],\n  \"text/jade\": [\"jade\"],\n  \"text/jsx\": [\"jsx\"],\n  \"text/less\": [\"less\"],\n  \"text/markdown\": [\"markdown\", \"md\"],\n  \"text/mathml\": [\"mml\"],\n  \"text/mdx\": [\"mdx\"],\n  \"text/n3\": [\"n3\"],\n  \"text/plain\": [\"txt\", \"text\", \"conf\", \"def\", \"list\", \"log\", \"in\", \"ini\"],\n  \"text/richtext\": [\"rtx\"],\n  \"text/rtf\": [\"*rtf\"],\n  \"text/sgml\": [\"sgml\", \"sgm\"],\n  \"text/shex\": [\"shex\"],\n  \"text/slim\": [\"slim\", \"slm\"],\n  \"text/spdx\": [\"spdx\"],\n  \"text/stylus\": [\"stylus\", \"styl\"],\n  \"text/tab-separated-values\": [\"tsv\"],\n  \"text/troff\": [\"t\", \"tr\", \"roff\", \"man\", \"me\", \"ms\"],\n  \"text/turtle\": [\"ttl\"],\n  \"text/uri-list\": [\"uri\", \"uris\", \"urls\"],\n  \"text/vcard\": [\"vcard\"],\n  \"text/vtt\": [\"vtt\"],\n  \"text/xml\": [\"*xml\"],\n  \"text/yaml\": [\"yaml\", \"yml\"],\n  \"video/3gpp\": [\"3gp\", \"3gpp\"],\n  \"video/3gpp2\": [\"3g2\"],\n  \"video/h261\": [\"h261\"],\n  \"video/h263\": [\"h263\"],\n  \"video/h264\": [\"h264\"],\n  \"video/iso.segment\": [\"m4s\"],\n  \"video/jpeg\": [\"jpgv\"],\n  \"video/jpm\": [\"*jpm\", \"jpgm\"],\n  \"video/mj2\": [\"mj2\", \"mjp2\"],\n  \"video/mp2t\": [\"ts\"],\n  \"video/mp4\": [\"mp4\", \"mp4v\", \"mpg4\"],\n  \"video/mpeg\": [\"mpeg\", \"mpg\", \"mpe\", \"m1v\", \"m2v\"],\n  \"video/ogg\": [\"ogv\"],\n  \"video/quicktime\": [\"qt\", \"mov\"],\n  \"video/webm\": [\"webm\"]\n};", "'use strict';\n\nlet Mime = require('./Mime');\nmodule.exports = new Mime(require('./types/standard'));", "/*jslint browser: true, devel: true, bitwise: false, debug: true, eqeq: false, es5: true, evil: false, forin: false, newcap: false, nomen: true, plusplus: true, regexp: false, unparam: false, sloppy: true, stupid: false, sub: false, todo: true, vars: true, white: true */\n\nmodule.exports = {\n  parseSections: function (stream, iterator) {\n    var len, markerType;\n    stream.setBigEndian(true);\n    //stop reading the stream at the SOS (Start of Stream) marker,\n    //because its length is not stored in the header so we can't\n    //know where to jump to. The only marker after that is just EOI (End Of Image) anyway\n    while (stream.remainingLength() > 0 && markerType !== 0xDA) {\n      if (stream.nextUInt8() !== 0xFF) {\n        throw new Error('Invalid JPEG section offset');\n      }\n      markerType = stream.nextUInt8();\n      //don't read size from markers that have no datas\n      if (markerType >= 0xD0 && markerType <= 0xD9 || markerType === 0xDA) {\n        len = 0;\n      } else {\n        len = stream.nextUInt16() - 2;\n      }\n      iterator(markerType, stream.branch(0, len));\n      stream.skip(len);\n    }\n  },\n  //stream should be located after SOF section size and in big endian mode, like passed to parseSections iterator\n  getSizeFromSOFSection: function (stream) {\n    stream.skip(1);\n    return {\n      height: stream.nextUInt16(),\n      width: stream.nextUInt16()\n    };\n  },\n  getSectionName: function (markerType) {\n    var name, index;\n    switch (markerType) {\n      case 0xD8:\n        name = 'SOI';\n        break;\n      case 0xC4:\n        name = 'DHT';\n        break;\n      case 0xDB:\n        name = 'DQT';\n        break;\n      case 0xDD:\n        name = 'DRI';\n        break;\n      case 0xDA:\n        name = 'SOS';\n        break;\n      case 0xFE:\n        name = 'COM';\n        break;\n      case 0xD9:\n        name = 'EOI';\n        break;\n      default:\n        if (markerType >= 0xE0 && markerType <= 0xEF) {\n          name = 'APP';\n          index = markerType - 0xE0;\n        } else if (markerType >= 0xC0 && markerType <= 0xCF && markerType !== 0xC4 && markerType !== 0xC8 && markerType !== 0xCC) {\n          name = 'SOF';\n          index = markerType - 0xC0;\n        } else if (markerType >= 0xD0 && markerType <= 0xD7) {\n          name = 'RST';\n          index = markerType - 0xD0;\n        }\n        break;\n    }\n    var nameStruct = {\n      name: name\n    };\n    if (typeof index === 'number') {\n      nameStruct.index = index;\n    }\n    return nameStruct;\n  }\n};", "/*jslint browser: true, devel: true, bitwise: false, debug: true, eqeq: false, es5: true, evil: false, forin: false, newcap: false, nomen: true, plusplus: true, regexp: false, unparam: false, sloppy: true, stupid: false, sub: false, todo: true, vars: true, white: true */\n\nfunction readExifValue(format, stream) {\n  switch (format) {\n    case 1:\n      return stream.nextUInt8();\n    case 3:\n      return stream.nextUInt16();\n    case 4:\n      return stream.nextUInt32();\n    case 5:\n      return [stream.nextUInt32(), stream.nextUInt32()];\n    case 6:\n      return stream.nextInt8();\n    case 8:\n      return stream.nextUInt16();\n    case 9:\n      return stream.nextUInt32();\n    case 10:\n      return [stream.nextInt32(), stream.nextInt32()];\n    case 11:\n      return stream.nextFloat();\n    case 12:\n      return stream.nextDouble();\n    default:\n      throw new Error('Invalid format while decoding: ' + format);\n  }\n}\nfunction getBytesPerComponent(format) {\n  switch (format) {\n    case 1:\n    case 2:\n    case 6:\n    case 7:\n      return 1;\n    case 3:\n    case 8:\n      return 2;\n    case 4:\n    case 9:\n    case 11:\n      return 4;\n    case 5:\n    case 10:\n    case 12:\n      return 8;\n    default:\n      return 0;\n  }\n}\nfunction readExifTag(tiffMarker, stream) {\n  var tagType = stream.nextUInt16(),\n    format = stream.nextUInt16(),\n    bytesPerComponent = getBytesPerComponent(format),\n    components = stream.nextUInt32(),\n    valueBytes = bytesPerComponent * components,\n    values,\n    value,\n    c;\n\n  /* if the value is bigger then 4 bytes, the value is in the data section of the IFD\n  and the value present in the tag is the offset starting from the tiff header. So we replace the stream\n  with a stream that is located at the given offset in the data section. s*/\n  if (valueBytes > 4) {\n    stream = tiffMarker.openWithOffset(stream.nextUInt32());\n  }\n  //we don't want to read strings as arrays\n  if (format === 2) {\n    values = stream.nextString(components);\n    //cut off \\0 characters\n    var lastNull = values.indexOf('\\0');\n    if (lastNull !== -1) {\n      values = values.substr(0, lastNull);\n    }\n  } else if (format === 7) {\n    values = stream.nextBuffer(components);\n  } else if (format !== 0) {\n    values = [];\n    for (c = 0; c < components; ++c) {\n      values.push(readExifValue(format, stream));\n    }\n  }\n  //since our stream is a stateful object, we need to skip remaining bytes\n  //so our offset stays correct\n  if (valueBytes < 4) {\n    stream.skip(4 - valueBytes);\n  }\n  return [tagType, values, format];\n}\nfunction readIFDSection(tiffMarker, stream, iterator) {\n  var numberOfEntries = stream.nextUInt16(),\n    tag,\n    i;\n  for (i = 0; i < numberOfEntries; ++i) {\n    tag = readExifTag(tiffMarker, stream);\n    iterator(tag[0], tag[1], tag[2]);\n  }\n}\nfunction readHeader(stream) {\n  var exifHeader = stream.nextString(6);\n  if (exifHeader !== 'Exif\\0\\0') {\n    throw new Error('Invalid EXIF header');\n  }\n  var tiffMarker = stream.mark();\n  var tiffHeader = stream.nextUInt16();\n  if (tiffHeader === 0x4949) {\n    stream.setBigEndian(false);\n  } else if (tiffHeader === 0x4D4D) {\n    stream.setBigEndian(true);\n  } else {\n    throw new Error('Invalid TIFF header');\n  }\n  if (stream.nextUInt16() !== 0x002A) {\n    throw new Error('Invalid TIFF data');\n  }\n  return tiffMarker;\n}\nmodule.exports = {\n  IFD0: 1,\n  IFD1: 2,\n  GPSIFD: 3,\n  SubIFD: 4,\n  InteropIFD: 5,\n  parseTags: function (stream, iterator) {\n    var tiffMarker;\n    try {\n      tiffMarker = readHeader(stream);\n    } catch (e) {\n      return false; //ignore APP1 sections with invalid headers\n    }\n    var subIfdOffset, gpsOffset, interopOffset;\n    var ifd0Stream = tiffMarker.openWithOffset(stream.nextUInt32()),\n      IFD0 = this.IFD0;\n    readIFDSection(tiffMarker, ifd0Stream, function (tagType, value, format) {\n      switch (tagType) {\n        case 0x8825:\n          gpsOffset = value[0];\n          break;\n        case 0x8769:\n          subIfdOffset = value[0];\n          break;\n        default:\n          iterator(IFD0, tagType, value, format);\n          break;\n      }\n    });\n    var ifd1Offset = ifd0Stream.nextUInt32();\n    if (ifd1Offset !== 0) {\n      var ifd1Stream = tiffMarker.openWithOffset(ifd1Offset);\n      readIFDSection(tiffMarker, ifd1Stream, iterator.bind(null, this.IFD1));\n    }\n    if (gpsOffset) {\n      var gpsStream = tiffMarker.openWithOffset(gpsOffset);\n      readIFDSection(tiffMarker, gpsStream, iterator.bind(null, this.GPSIFD));\n    }\n    if (subIfdOffset) {\n      var subIfdStream = tiffMarker.openWithOffset(subIfdOffset),\n        InteropIFD = this.InteropIFD;\n      readIFDSection(tiffMarker, subIfdStream, function (tagType, value, format) {\n        if (tagType === 0xA005) {\n          interopOffset = value[0];\n        } else {\n          iterator(InteropIFD, tagType, value, format);\n        }\n      });\n    }\n    if (interopOffset) {\n      var interopStream = tiffMarker.openWithOffset(interopOffset);\n      readIFDSection(tiffMarker, interopStream, iterator.bind(null, this.InteropIFD));\n    }\n    return true;\n  }\n};", "function parseNumber(s) {\n  return parseInt(s, 10);\n}\n\n//in seconds\nvar hours = 3600;\nvar minutes = 60;\n\n//take date (year, month, day) and time (hour, minutes, seconds) digits in UTC\n//and return a timestamp in seconds\nfunction parseDateTimeParts(dateParts, timeParts) {\n  dateParts = dateParts.map(parseNumber);\n  timeParts = timeParts.map(parseNumber);\n  var year = dateParts[0];\n  var month = dateParts[1] - 1;\n  var day = dateParts[2];\n  var hours = timeParts[0];\n  var minutes = timeParts[1];\n  var seconds = timeParts[2];\n  var date = Date.UTC(year, month, day, hours, minutes, seconds, 0);\n  var timestamp = date / 1000;\n  return timestamp;\n}\n\n//parse date with \"2004-09-04T23:39:06-08:00\" format,\n//one of the formats supported by ISO 8601, and\n//convert to utc timestamp in seconds\nfunction parseDateWithTimezoneFormat(dateTimeStr) {\n  var dateParts = dateTimeStr.substr(0, 10).split('-');\n  var timeParts = dateTimeStr.substr(11, 8).split(':');\n  var timezoneStr = dateTimeStr.substr(19, 6);\n  var timezoneParts = timezoneStr.split(':').map(parseNumber);\n  var timezoneOffset = timezoneParts[0] * hours + timezoneParts[1] * minutes;\n  var timestamp = parseDateTimeParts(dateParts, timeParts);\n  //minus because the timezoneOffset describes\n  //how much the described time is ahead of UTC\n  timestamp -= timezoneOffset;\n  if (typeof timestamp === 'number' && !isNaN(timestamp)) {\n    return timestamp;\n  }\n}\n\n//parse date with \"YYYY:MM:DD hh:mm:ss\" format, convert to utc timestamp in seconds\nfunction parseDateWithSpecFormat(dateTimeStr) {\n  var parts = dateTimeStr.split(' '),\n    dateParts = parts[0].split(':'),\n    timeParts = parts[1].split(':');\n  var timestamp = parseDateTimeParts(dateParts, timeParts);\n  if (typeof timestamp === 'number' && !isNaN(timestamp)) {\n    return timestamp;\n  }\n}\nfunction parseExifDate(dateTimeStr) {\n  //some easy checks to determine two common date formats\n\n  //is the date in the standard \"YYYY:MM:DD hh:mm:ss\" format?\n  var isSpecFormat = dateTimeStr.length === 19 && dateTimeStr.charAt(4) === ':';\n  //is the date in the non-standard format,\n  //\"2004-09-04T23:39:06-08:00\" to include a timezone?\n  var isTimezoneFormat = dateTimeStr.length === 25 && dateTimeStr.charAt(10) === 'T';\n  var timestamp;\n  if (isTimezoneFormat) {\n    return parseDateWithTimezoneFormat(dateTimeStr);\n  } else if (isSpecFormat) {\n    return parseDateWithSpecFormat(dateTimeStr);\n  }\n}\nmodule.exports = {\n  parseDateWithSpecFormat: parseDateWithSpecFormat,\n  parseDateWithTimezoneFormat: parseDateWithTimezoneFormat,\n  parseExifDate: parseExifDate\n};", "var exif = require('./exif');\nvar date = require('./date');\nvar degreeTags = [{\n  section: exif.GPSIFD,\n  type: 0x0002,\n  name: 'GPSLatitude',\n  refType: 0x0001,\n  refName: 'GPSLatitudeRef',\n  posVal: 'N'\n}, {\n  section: exif.GPSIFD,\n  type: 0x0004,\n  name: 'GPSLongitude',\n  refType: 0x0003,\n  refName: 'GPSLongitudeRef',\n  posVal: 'E'\n}];\nvar dateTags = [{\n  section: exif.SubIFD,\n  type: 0x0132,\n  name: 'ModifyDate'\n}, {\n  section: exif.SubIFD,\n  type: 0x9003,\n  name: 'DateTimeOriginal'\n}, {\n  section: exif.SubIFD,\n  type: 0x9004,\n  name: 'CreateDate'\n}, {\n  section: exif.SubIFD,\n  type: 0x0132,\n  name: 'ModifyDate'\n}];\nmodule.exports = {\n  castDegreeValues: function (getTagValue, setTagValue) {\n    degreeTags.forEach(function (t) {\n      var degreeVal = getTagValue(t);\n      if (degreeVal) {\n        var degreeRef = getTagValue({\n          section: t.section,\n          type: t.refType,\n          name: t.refName\n        });\n        var degreeNumRef = degreeRef === t.posVal ? 1 : -1;\n        var degree = (degreeVal[0] + degreeVal[1] / 60 + degreeVal[2] / 3600) * degreeNumRef;\n        setTagValue(t, degree);\n      }\n    });\n  },\n  castDateValues: function (getTagValue, setTagValue) {\n    dateTags.forEach(function (t) {\n      var dateStrVal = getTagValue(t);\n      if (dateStrVal) {\n        //some easy checks to determine two common date formats\n        var timestamp = date.parseExifDate(dateStrVal);\n        if (typeof timestamp !== 'undefined') {\n          setTagValue(t, timestamp);\n        }\n      }\n    });\n  },\n  simplifyValue: function (values, format) {\n    if (Array.isArray(values)) {\n      values = values.map(function (value) {\n        if (format === 10 || format === 5) {\n          return value[0] / value[1];\n        }\n        return value;\n      });\n      if (values.length === 1) {\n        values = values[0];\n      }\n    }\n    return values;\n  }\n};", "module.exports = {\n  exif: {\n    0x0001: \"InteropIndex\",\n    0x0002: \"InteropVersion\",\n    0x000B: \"ProcessingSoftware\",\n    0x00FE: \"SubfileType\",\n    0x00FF: \"OldSubfileType\",\n    0x0100: \"ImageWidth\",\n    0x0101: \"ImageHeight\",\n    0x0102: \"BitsPerSample\",\n    0x0103: \"Compression\",\n    0x0106: \"PhotometricInterpretation\",\n    0x0107: \"Thresholding\",\n    0x0108: \"CellWidth\",\n    0x0109: \"CellLength\",\n    0x010A: \"FillOrder\",\n    0x010D: \"DocumentName\",\n    0x010E: \"ImageDescription\",\n    0x010F: \"Make\",\n    0x0110: \"Model\",\n    0x0111: \"StripOffsets\",\n    0x0112: \"Orientation\",\n    0x0115: \"SamplesPerPixel\",\n    0x0116: \"RowsPerStrip\",\n    0x0117: \"StripByteCounts\",\n    0x0118: \"MinSampleValue\",\n    0x0119: \"MaxSampleValue\",\n    0x011A: \"XResolution\",\n    0x011B: \"YResolution\",\n    0x011C: \"PlanarConfiguration\",\n    0x011D: \"PageName\",\n    0x011E: \"XPosition\",\n    0x011F: \"YPosition\",\n    0x0120: \"FreeOffsets\",\n    0x0121: \"FreeByteCounts\",\n    0x0122: \"GrayResponseUnit\",\n    0x0123: \"GrayResponseCurve\",\n    0x0124: \"T4Options\",\n    0x0125: \"T6Options\",\n    0x0128: \"ResolutionUnit\",\n    0x0129: \"PageNumber\",\n    0x012C: \"ColorResponseUnit\",\n    0x012D: \"TransferFunction\",\n    0x0131: \"Software\",\n    0x0132: \"ModifyDate\",\n    0x013B: \"Artist\",\n    0x013C: \"HostComputer\",\n    0x013D: \"Predictor\",\n    0x013E: \"WhitePoint\",\n    0x013F: \"PrimaryChromaticities\",\n    0x0140: \"ColorMap\",\n    0x0141: \"HalftoneHints\",\n    0x0142: \"TileWidth\",\n    0x0143: \"TileLength\",\n    0x0144: \"TileOffsets\",\n    0x0145: \"TileByteCounts\",\n    0x0146: \"BadFaxLines\",\n    0x0147: \"CleanFaxData\",\n    0x0148: \"ConsecutiveBadFaxLines\",\n    0x014A: \"SubIFD\",\n    0x014C: \"InkSet\",\n    0x014D: \"InkNames\",\n    0x014E: \"NumberofInks\",\n    0x0150: \"DotRange\",\n    0x0151: \"TargetPrinter\",\n    0x0152: \"ExtraSamples\",\n    0x0153: \"SampleFormat\",\n    0x0154: \"SMinSampleValue\",\n    0x0155: \"SMaxSampleValue\",\n    0x0156: \"TransferRange\",\n    0x0157: \"ClipPath\",\n    0x0158: \"XClipPathUnits\",\n    0x0159: \"YClipPathUnits\",\n    0x015A: \"Indexed\",\n    0x015B: \"JPEGTables\",\n    0x015F: \"OPIProxy\",\n    0x0190: \"GlobalParametersIFD\",\n    0x0191: \"ProfileType\",\n    0x0192: \"FaxProfile\",\n    0x0193: \"CodingMethods\",\n    0x0194: \"VersionYear\",\n    0x0195: \"ModeNumber\",\n    0x01B1: \"Decode\",\n    0x01B2: \"DefaultImageColor\",\n    0x01B3: \"T82Options\",\n    0x01B5: \"JPEGTables\",\n    0x0200: \"JPEGProc\",\n    0x0201: \"ThumbnailOffset\",\n    0x0202: \"ThumbnailLength\",\n    0x0203: \"JPEGRestartInterval\",\n    0x0205: \"JPEGLosslessPredictors\",\n    0x0206: \"JPEGPointTransforms\",\n    0x0207: \"JPEGQTables\",\n    0x0208: \"JPEGDCTables\",\n    0x0209: \"JPEGACTables\",\n    0x0211: \"YCbCrCoefficients\",\n    0x0212: \"YCbCrSubSampling\",\n    0x0213: \"YCbCrPositioning\",\n    0x0214: \"ReferenceBlackWhite\",\n    0x022F: \"StripRowCounts\",\n    0x02BC: \"ApplicationNotes\",\n    0x03E7: \"USPTOMiscellaneous\",\n    0x1000: \"RelatedImageFileFormat\",\n    0x1001: \"RelatedImageWidth\",\n    0x1002: \"RelatedImageHeight\",\n    0x4746: \"Rating\",\n    0x4747: \"XP_DIP_XML\",\n    0x4748: \"StitchInfo\",\n    0x4749: \"RatingPercent\",\n    0x800D: \"ImageID\",\n    0x80A3: \"WangTag1\",\n    0x80A4: \"WangAnnotation\",\n    0x80A5: \"WangTag3\",\n    0x80A6: \"WangTag4\",\n    0x80E3: \"Matteing\",\n    0x80E4: \"DataType\",\n    0x80E5: \"ImageDepth\",\n    0x80E6: \"TileDepth\",\n    0x827D: \"Model2\",\n    0x828D: \"CFARepeatPatternDim\",\n    0x828E: \"CFAPattern2\",\n    0x828F: \"BatteryLevel\",\n    0x8290: \"KodakIFD\",\n    0x8298: \"Copyright\",\n    0x829A: \"ExposureTime\",\n    0x829D: \"FNumber\",\n    0x82A5: \"MDFileTag\",\n    0x82A6: \"MDScalePixel\",\n    0x82A7: \"MDColorTable\",\n    0x82A8: \"MDLabName\",\n    0x82A9: \"MDSampleInfo\",\n    0x82AA: \"MDPrepDate\",\n    0x82AB: \"MDPrepTime\",\n    0x82AC: \"MDFileUnits\",\n    0x830E: \"PixelScale\",\n    0x8335: \"AdventScale\",\n    0x8336: \"AdventRevision\",\n    0x835C: \"UIC1Tag\",\n    0x835D: \"UIC2Tag\",\n    0x835E: \"UIC3Tag\",\n    0x835F: \"UIC4Tag\",\n    0x83BB: \"IPTC-NAA\",\n    0x847E: \"IntergraphPacketData\",\n    0x847F: \"IntergraphFlagRegisters\",\n    0x8480: \"IntergraphMatrix\",\n    0x8481: \"INGRReserved\",\n    0x8482: \"ModelTiePoint\",\n    0x84E0: \"Site\",\n    0x84E1: \"ColorSequence\",\n    0x84E2: \"IT8Header\",\n    0x84E3: \"RasterPadding\",\n    0x84E4: \"BitsPerRunLength\",\n    0x84E5: \"BitsPerExtendedRunLength\",\n    0x84E6: \"ColorTable\",\n    0x84E7: \"ImageColorIndicator\",\n    0x84E8: \"BackgroundColorIndicator\",\n    0x84E9: \"ImageColorValue\",\n    0x84EA: \"BackgroundColorValue\",\n    0x84EB: \"PixelIntensityRange\",\n    0x84EC: \"TransparencyIndicator\",\n    0x84ED: \"ColorCharacterization\",\n    0x84EE: \"HCUsage\",\n    0x84EF: \"TrapIndicator\",\n    0x84F0: \"CMYKEquivalent\",\n    0x8546: \"SEMInfo\",\n    0x8568: \"AFCP_IPTC\",\n    0x85B8: \"PixelMagicJBIGOptions\",\n    0x85D8: \"ModelTransform\",\n    0x8602: \"WB_GRGBLevels\",\n    0x8606: \"LeafData\",\n    0x8649: \"PhotoshopSettings\",\n    0x8769: \"ExifOffset\",\n    0x8773: \"ICC_Profile\",\n    0x877F: \"TIFF_FXExtensions\",\n    0x8780: \"MultiProfiles\",\n    0x8781: \"SharedData\",\n    0x8782: \"T88Options\",\n    0x87AC: \"ImageLayer\",\n    0x87AF: \"GeoTiffDirectory\",\n    0x87B0: \"GeoTiffDoubleParams\",\n    0x87B1: \"GeoTiffAsciiParams\",\n    0x8822: \"ExposureProgram\",\n    0x8824: \"SpectralSensitivity\",\n    0x8825: \"GPSInfo\",\n    0x8827: \"ISO\",\n    0x8828: \"Opto-ElectricConvFactor\",\n    0x8829: \"Interlace\",\n    0x882A: \"TimeZoneOffset\",\n    0x882B: \"SelfTimerMode\",\n    0x8830: \"SensitivityType\",\n    0x8831: \"StandardOutputSensitivity\",\n    0x8832: \"RecommendedExposureIndex\",\n    0x8833: \"ISOSpeed\",\n    0x8834: \"ISOSpeedLatitudeyyy\",\n    0x8835: \"ISOSpeedLatitudezzz\",\n    0x885C: \"FaxRecvParams\",\n    0x885D: \"FaxSubAddress\",\n    0x885E: \"FaxRecvTime\",\n    0x888A: \"LeafSubIFD\",\n    0x9000: \"ExifVersion\",\n    0x9003: \"DateTimeOriginal\",\n    0x9004: \"CreateDate\",\n    0x9101: \"ComponentsConfiguration\",\n    0x9102: \"CompressedBitsPerPixel\",\n    0x9201: \"ShutterSpeedValue\",\n    0x9202: \"ApertureValue\",\n    0x9203: \"BrightnessValue\",\n    0x9204: \"ExposureCompensation\",\n    0x9205: \"MaxApertureValue\",\n    0x9206: \"SubjectDistance\",\n    0x9207: \"MeteringMode\",\n    0x9208: \"LightSource\",\n    0x9209: \"Flash\",\n    0x920A: \"FocalLength\",\n    0x920B: \"FlashEnergy\",\n    0x920C: \"SpatialFrequencyResponse\",\n    0x920D: \"Noise\",\n    0x920E: \"FocalPlaneXResolution\",\n    0x920F: \"FocalPlaneYResolution\",\n    0x9210: \"FocalPlaneResolutionUnit\",\n    0x9211: \"ImageNumber\",\n    0x9212: \"SecurityClassification\",\n    0x9213: \"ImageHistory\",\n    0x9214: \"SubjectArea\",\n    0x9215: \"ExposureIndex\",\n    0x9216: \"TIFF-EPStandardID\",\n    0x9217: \"SensingMethod\",\n    0x923A: \"CIP3DataFile\",\n    0x923B: \"CIP3Sheet\",\n    0x923C: \"CIP3Side\",\n    0x923F: \"StoNits\",\n    0x927C: \"MakerNote\",\n    0x9286: \"UserComment\",\n    0x9290: \"SubSecTime\",\n    0x9291: \"SubSecTimeOriginal\",\n    0x9292: \"SubSecTimeDigitized\",\n    0x932F: \"MSDocumentText\",\n    0x9330: \"MSPropertySetStorage\",\n    0x9331: \"MSDocumentTextPosition\",\n    0x935C: \"ImageSourceData\",\n    0x9C9B: \"XPTitle\",\n    0x9C9C: \"XPComment\",\n    0x9C9D: \"XPAuthor\",\n    0x9C9E: \"XPKeywords\",\n    0x9C9F: \"XPSubject\",\n    0xA000: \"FlashpixVersion\",\n    0xA001: \"ColorSpace\",\n    0xA002: \"ExifImageWidth\",\n    0xA003: \"ExifImageHeight\",\n    0xA004: \"RelatedSoundFile\",\n    0xA005: \"InteropOffset\",\n    0xA20B: \"FlashEnergy\",\n    0xA20C: \"SpatialFrequencyResponse\",\n    0xA20D: \"Noise\",\n    0xA20E: \"FocalPlaneXResolution\",\n    0xA20F: \"FocalPlaneYResolution\",\n    0xA210: \"FocalPlaneResolutionUnit\",\n    0xA211: \"ImageNumber\",\n    0xA212: \"SecurityClassification\",\n    0xA213: \"ImageHistory\",\n    0xA214: \"SubjectLocation\",\n    0xA215: \"ExposureIndex\",\n    0xA216: \"TIFF-EPStandardID\",\n    0xA217: \"SensingMethod\",\n    0xA300: \"FileSource\",\n    0xA301: \"SceneType\",\n    0xA302: \"CFAPattern\",\n    0xA401: \"CustomRendered\",\n    0xA402: \"ExposureMode\",\n    0xA403: \"WhiteBalance\",\n    0xA404: \"DigitalZoomRatio\",\n    0xA405: \"FocalLengthIn35mmFormat\",\n    0xA406: \"SceneCaptureType\",\n    0xA407: \"GainControl\",\n    0xA408: \"Contrast\",\n    0xA409: \"Saturation\",\n    0xA40A: \"Sharpness\",\n    0xA40B: \"DeviceSettingDescription\",\n    0xA40C: \"SubjectDistanceRange\",\n    0xA420: \"ImageUniqueID\",\n    0xA430: \"OwnerName\",\n    0xA431: \"SerialNumber\",\n    0xA432: \"LensInfo\",\n    0xA433: \"LensMake\",\n    0xA434: \"LensModel\",\n    0xA435: \"LensSerialNumber\",\n    0xA480: \"GDALMetadata\",\n    0xA481: \"GDALNoData\",\n    0xA500: \"Gamma\",\n    0xAFC0: \"ExpandSoftware\",\n    0xAFC1: \"ExpandLens\",\n    0xAFC2: \"ExpandFilm\",\n    0xAFC3: \"ExpandFilterLens\",\n    0xAFC4: \"ExpandScanner\",\n    0xAFC5: \"ExpandFlashLamp\",\n    0xBC01: \"PixelFormat\",\n    0xBC02: \"Transformation\",\n    0xBC03: \"Uncompressed\",\n    0xBC04: \"ImageType\",\n    0xBC80: \"ImageWidth\",\n    0xBC81: \"ImageHeight\",\n    0xBC82: \"WidthResolution\",\n    0xBC83: \"HeightResolution\",\n    0xBCC0: \"ImageOffset\",\n    0xBCC1: \"ImageByteCount\",\n    0xBCC2: \"AlphaOffset\",\n    0xBCC3: \"AlphaByteCount\",\n    0xBCC4: \"ImageDataDiscard\",\n    0xBCC5: \"AlphaDataDiscard\",\n    0xC427: \"OceScanjobDesc\",\n    0xC428: \"OceApplicationSelector\",\n    0xC429: \"OceIDNumber\",\n    0xC42A: \"OceImageLogic\",\n    0xC44F: \"Annotations\",\n    0xC4A5: \"PrintIM\",\n    0xC580: \"USPTOOriginalContentType\",\n    0xC612: \"DNGVersion\",\n    0xC613: \"DNGBackwardVersion\",\n    0xC614: \"UniqueCameraModel\",\n    0xC615: \"LocalizedCameraModel\",\n    0xC616: \"CFAPlaneColor\",\n    0xC617: \"CFALayout\",\n    0xC618: \"LinearizationTable\",\n    0xC619: \"BlackLevelRepeatDim\",\n    0xC61A: \"BlackLevel\",\n    0xC61B: \"BlackLevelDeltaH\",\n    0xC61C: \"BlackLevelDeltaV\",\n    0xC61D: \"WhiteLevel\",\n    0xC61E: \"DefaultScale\",\n    0xC61F: \"DefaultCropOrigin\",\n    0xC620: \"DefaultCropSize\",\n    0xC621: \"ColorMatrix1\",\n    0xC622: \"ColorMatrix2\",\n    0xC623: \"CameraCalibration1\",\n    0xC624: \"CameraCalibration2\",\n    0xC625: \"ReductionMatrix1\",\n    0xC626: \"ReductionMatrix2\",\n    0xC627: \"AnalogBalance\",\n    0xC628: \"AsShotNeutral\",\n    0xC629: \"AsShotWhiteXY\",\n    0xC62A: \"BaselineExposure\",\n    0xC62B: \"BaselineNoise\",\n    0xC62C: \"BaselineSharpness\",\n    0xC62D: \"BayerGreenSplit\",\n    0xC62E: \"LinearResponseLimit\",\n    0xC62F: \"CameraSerialNumber\",\n    0xC630: \"DNGLensInfo\",\n    0xC631: \"ChromaBlurRadius\",\n    0xC632: \"AntiAliasStrength\",\n    0xC633: \"ShadowScale\",\n    0xC634: \"DNGPrivateData\",\n    0xC635: \"MakerNoteSafety\",\n    0xC640: \"RawImageSegmentation\",\n    0xC65A: \"CalibrationIlluminant1\",\n    0xC65B: \"CalibrationIlluminant2\",\n    0xC65C: \"BestQualityScale\",\n    0xC65D: \"RawDataUniqueID\",\n    0xC660: \"AliasLayerMetadata\",\n    0xC68B: \"OriginalRawFileName\",\n    0xC68C: \"OriginalRawFileData\",\n    0xC68D: \"ActiveArea\",\n    0xC68E: \"MaskedAreas\",\n    0xC68F: \"AsShotICCProfile\",\n    0xC690: \"AsShotPreProfileMatrix\",\n    0xC691: \"CurrentICCProfile\",\n    0xC692: \"CurrentPreProfileMatrix\",\n    0xC6BF: \"ColorimetricReference\",\n    0xC6D2: \"PanasonicTitle\",\n    0xC6D3: \"PanasonicTitle2\",\n    0xC6F3: \"CameraCalibrationSig\",\n    0xC6F4: \"ProfileCalibrationSig\",\n    0xC6F5: \"ProfileIFD\",\n    0xC6F6: \"AsShotProfileName\",\n    0xC6F7: \"NoiseReductionApplied\",\n    0xC6F8: \"ProfileName\",\n    0xC6F9: \"ProfileHueSatMapDims\",\n    0xC6FA: \"ProfileHueSatMapData1\",\n    0xC6FB: \"ProfileHueSatMapData2\",\n    0xC6FC: \"ProfileToneCurve\",\n    0xC6FD: \"ProfileEmbedPolicy\",\n    0xC6FE: \"ProfileCopyright\",\n    0xC714: \"ForwardMatrix1\",\n    0xC715: \"ForwardMatrix2\",\n    0xC716: \"PreviewApplicationName\",\n    0xC717: \"PreviewApplicationVersion\",\n    0xC718: \"PreviewSettingsName\",\n    0xC719: \"PreviewSettingsDigest\",\n    0xC71A: \"PreviewColorSpace\",\n    0xC71B: \"PreviewDateTime\",\n    0xC71C: \"RawImageDigest\",\n    0xC71D: \"OriginalRawFileDigest\",\n    0xC71E: \"SubTileBlockSize\",\n    0xC71F: \"RowInterleaveFactor\",\n    0xC725: \"ProfileLookTableDims\",\n    0xC726: \"ProfileLookTableData\",\n    0xC740: \"OpcodeList1\",\n    0xC741: \"OpcodeList2\",\n    0xC74E: \"OpcodeList3\",\n    0xC761: \"NoiseProfile\",\n    0xC763: \"TimeCodes\",\n    0xC764: \"FrameRate\",\n    0xC772: \"TStop\",\n    0xC789: \"ReelName\",\n    0xC791: \"OriginalDefaultFinalSize\",\n    0xC792: \"OriginalBestQualitySize\",\n    0xC793: \"OriginalDefaultCropSize\",\n    0xC7A1: \"CameraLabel\",\n    0xC7A3: \"ProfileHueSatMapEncoding\",\n    0xC7A4: \"ProfileLookTableEncoding\",\n    0xC7A5: \"BaselineExposureOffset\",\n    0xC7A6: \"DefaultBlackRender\",\n    0xC7A7: \"NewRawImageDigest\",\n    0xC7A8: \"RawToPreviewGain\",\n    0xC7B5: \"DefaultUserCrop\",\n    0xEA1C: \"Padding\",\n    0xEA1D: \"OffsetSchema\",\n    0xFDE8: \"OwnerName\",\n    0xFDE9: \"SerialNumber\",\n    0xFDEA: \"Lens\",\n    0xFE00: \"KDC_IFD\",\n    0xFE4C: \"RawFile\",\n    0xFE4D: \"Converter\",\n    0xFE4E: \"WhiteBalance\",\n    0xFE51: \"Exposure\",\n    0xFE52: \"Shadows\",\n    0xFE53: \"Brightness\",\n    0xFE54: \"Contrast\",\n    0xFE55: \"Saturation\",\n    0xFE56: \"Sharpness\",\n    0xFE57: \"Smoothness\",\n    0xFE58: \"MoireFilter\"\n  },\n  gps: {\n    0x0000: 'GPSVersionID',\n    0x0001: 'GPSLatitudeRef',\n    0x0002: 'GPSLatitude',\n    0x0003: 'GPSLongitudeRef',\n    0x0004: 'GPSLongitude',\n    0x0005: 'GPSAltitudeRef',\n    0x0006: 'GPSAltitude',\n    0x0007: 'GPSTimeStamp',\n    0x0008: 'GPSSatellites',\n    0x0009: 'GPSStatus',\n    0x000A: 'GPSMeasureMode',\n    0x000B: 'GPSDOP',\n    0x000C: 'GPSSpeedRef',\n    0x000D: 'GPSSpeed',\n    0x000E: 'GPSTrackRef',\n    0x000F: 'GPSTrack',\n    0x0010: 'GPSImgDirectionRef',\n    0x0011: 'GPSImgDirection',\n    0x0012: 'GPSMapDatum',\n    0x0013: 'GPSDestLatitudeRef',\n    0x0014: 'GPSDestLatitude',\n    0x0015: 'GPSDestLongitudeRef',\n    0x0016: 'GPSDestLongitude',\n    0x0017: 'GPSDestBearingRef',\n    0x0018: 'GPSDestBearing',\n    0x0019: 'GPSDestDistanceRef',\n    0x001A: 'GPSDestDistance',\n    0x001B: 'GPSProcessingMethod',\n    0x001C: 'GPSAreaInformation',\n    0x001D: 'GPSDateStamp',\n    0x001E: 'GPSDifferential',\n    0x001F: 'GPSHPositioningError'\n  }\n};", "/*jslint browser: true, devel: true, bitwise: false, debug: true, eqeq: false, es5: true, evil: false, forin: false, newcap: false, nomen: true, plusplus: true, regexp: false, unparam: false, sloppy: true, stupid: false, sub: false, todo: true, vars: true, white: true */\n\nvar jpeg = require('./jpeg'),\n  exif = require('./exif'),\n  simplify = require('./simplify');\nfunction ExifResult(startMarker, tags, imageSize, thumbnailOffset, thumbnailLength, thumbnailType, app1Offset) {\n  this.startMarker = startMarker;\n  this.tags = tags;\n  this.imageSize = imageSize;\n  this.thumbnailOffset = thumbnailOffset;\n  this.thumbnailLength = thumbnailLength;\n  this.thumbnailType = thumbnailType;\n  this.app1Offset = app1Offset;\n}\nExifResult.prototype = {\n  hasThumbnail: function (mime) {\n    if (!this.thumbnailOffset || !this.thumbnailLength) {\n      return false;\n    }\n    if (typeof mime !== 'string') {\n      return true;\n    }\n    if (mime.toLowerCase().trim() === 'image/jpeg') {\n      return this.thumbnailType === 6;\n    }\n    if (mime.toLowerCase().trim() === 'image/tiff') {\n      return this.thumbnailType === 1;\n    }\n    return false;\n  },\n  getThumbnailOffset: function () {\n    return this.app1Offset + 6 + this.thumbnailOffset;\n  },\n  getThumbnailLength: function () {\n    return this.thumbnailLength;\n  },\n  getThumbnailBuffer: function () {\n    return this._getThumbnailStream().nextBuffer(this.thumbnailLength);\n  },\n  _getThumbnailStream: function () {\n    return this.startMarker.openWithOffset(this.getThumbnailOffset());\n  },\n  getImageSize: function () {\n    return this.imageSize;\n  },\n  getThumbnailSize: function () {\n    var stream = this._getThumbnailStream(),\n      size;\n    jpeg.parseSections(stream, function (sectionType, sectionStream) {\n      if (jpeg.getSectionName(sectionType).name === 'SOF') {\n        size = jpeg.getSizeFromSOFSection(sectionStream);\n      }\n    });\n    return size;\n  }\n};\nfunction Parser(stream) {\n  this.stream = stream;\n  this.flags = {\n    readBinaryTags: false,\n    resolveTagNames: true,\n    simplifyValues: true,\n    imageSize: true,\n    hidePointers: true,\n    returnTags: true\n  };\n}\nParser.prototype = {\n  enableBinaryFields: function (enable) {\n    this.flags.readBinaryTags = !!enable;\n    return this;\n  },\n  enablePointers: function (enable) {\n    this.flags.hidePointers = !enable;\n    return this;\n  },\n  enableTagNames: function (enable) {\n    this.flags.resolveTagNames = !!enable;\n    return this;\n  },\n  enableImageSize: function (enable) {\n    this.flags.imageSize = !!enable;\n    return this;\n  },\n  enableReturnTags: function (enable) {\n    this.flags.returnTags = !!enable;\n    return this;\n  },\n  enableSimpleValues: function (enable) {\n    this.flags.simplifyValues = !!enable;\n    return this;\n  },\n  parse: function () {\n    var start = this.stream.mark(),\n      stream = start.openWithOffset(0),\n      flags = this.flags,\n      tags,\n      imageSize,\n      thumbnailOffset,\n      thumbnailLength,\n      thumbnailType,\n      app1Offset,\n      tagNames,\n      getTagValue,\n      setTagValue;\n    if (flags.resolveTagNames) {\n      tagNames = require('./exif-tags');\n    }\n    if (flags.resolveTagNames) {\n      tags = {};\n      getTagValue = function (t) {\n        return tags[t.name];\n      };\n      setTagValue = function (t, value) {\n        tags[t.name] = value;\n      };\n    } else {\n      tags = [];\n      getTagValue = function (t) {\n        var i;\n        for (i = 0; i < tags.length; ++i) {\n          if (tags[i].type === t.type && tags[i].section === t.section) {\n            return tags.value;\n          }\n        }\n      };\n      setTagValue = function (t, value) {\n        var i;\n        for (i = 0; i < tags.length; ++i) {\n          if (tags[i].type === t.type && tags[i].section === t.section) {\n            tags.value = value;\n            return;\n          }\n        }\n      };\n    }\n    jpeg.parseSections(stream, function (sectionType, sectionStream) {\n      var validExifHeaders,\n        sectionOffset = sectionStream.offsetFrom(start);\n      if (sectionType === 0xE1) {\n        validExifHeaders = exif.parseTags(sectionStream, function (ifdSection, tagType, value, format) {\n          //ignore binary fields if disabled\n          if (!flags.readBinaryTags && format === 7) {\n            return;\n          }\n          if (tagType === 0x0201) {\n            thumbnailOffset = value[0];\n            if (flags.hidePointers) {\n              return;\n            }\n          } else if (tagType === 0x0202) {\n            thumbnailLength = value[0];\n            if (flags.hidePointers) {\n              return;\n            }\n          } else if (tagType === 0x0103) {\n            thumbnailType = value[0];\n            if (flags.hidePointers) {\n              return;\n            }\n          }\n          //if flag is set to not store tags, return here after storing pointers\n          if (!flags.returnTags) {\n            return;\n          }\n          if (flags.simplifyValues) {\n            value = simplify.simplifyValue(value, format);\n          }\n          if (flags.resolveTagNames) {\n            var sectionTagNames = ifdSection === exif.GPSIFD ? tagNames.gps : tagNames.exif;\n            var name = sectionTagNames[tagType];\n            if (!name) {\n              name = tagNames.exif[tagType];\n            }\n            if (!tags.hasOwnProperty(name)) {\n              tags[name] = value;\n            }\n          } else {\n            tags.push({\n              section: ifdSection,\n              type: tagType,\n              value: value\n            });\n          }\n        });\n        if (validExifHeaders) {\n          app1Offset = sectionOffset;\n        }\n      } else if (flags.imageSize && jpeg.getSectionName(sectionType).name === 'SOF') {\n        imageSize = jpeg.getSizeFromSOFSection(sectionStream);\n      }\n    });\n    if (flags.simplifyValues) {\n      simplify.castDegreeValues(getTagValue, setTagValue);\n      simplify.castDateValues(getTagValue, setTagValue);\n    }\n    return new ExifResult(start, tags, imageSize, thumbnailOffset, thumbnailLength, thumbnailType, app1Offset);\n  }\n};\nmodule.exports = Parser;", "/*jslint browser: true, devel: true, bitwise: false, debug: true, eqeq: false, es5: true, evil: false, forin: false, newcap: false, nomen: true, plusplus: true, regexp: false, unparam: false, sloppy: true, stupid: false, sub: false, todo: true, vars: true, white: true */\n\nfunction DOMBufferStream(arrayBuffer, offset, length, bigEndian, global, parentOffset) {\n  this.global = global;\n  offset = offset || 0;\n  length = length || arrayBuffer.byteLength - offset;\n  this.arrayBuffer = arrayBuffer.slice(offset, offset + length);\n  this.view = new global.DataView(this.arrayBuffer, 0, this.arrayBuffer.byteLength);\n  this.setBigEndian(bigEndian);\n  this.offset = 0;\n  this.parentOffset = (parentOffset || 0) + offset;\n}\nDOMBufferStream.prototype = {\n  setBigEndian: function (bigEndian) {\n    this.littleEndian = !bigEndian;\n  },\n  nextUInt8: function () {\n    var value = this.view.getUint8(this.offset);\n    this.offset += 1;\n    return value;\n  },\n  nextInt8: function () {\n    var value = this.view.getInt8(this.offset);\n    this.offset += 1;\n    return value;\n  },\n  nextUInt16: function () {\n    var value = this.view.getUint16(this.offset, this.littleEndian);\n    this.offset += 2;\n    return value;\n  },\n  nextUInt32: function () {\n    var value = this.view.getUint32(this.offset, this.littleEndian);\n    this.offset += 4;\n    return value;\n  },\n  nextInt16: function () {\n    var value = this.view.getInt16(this.offset, this.littleEndian);\n    this.offset += 2;\n    return value;\n  },\n  nextInt32: function () {\n    var value = this.view.getInt32(this.offset, this.littleEndian);\n    this.offset += 4;\n    return value;\n  },\n  nextFloat: function () {\n    var value = this.view.getFloat32(this.offset, this.littleEndian);\n    this.offset += 4;\n    return value;\n  },\n  nextDouble: function () {\n    var value = this.view.getFloat64(this.offset, this.littleEndian);\n    this.offset += 8;\n    return value;\n  },\n  nextBuffer: function (length) {\n    //this won't work in IE10\n    var value = this.arrayBuffer.slice(this.offset, this.offset + length);\n    this.offset += length;\n    return value;\n  },\n  remainingLength: function () {\n    return this.arrayBuffer.byteLength - this.offset;\n  },\n  nextString: function (length) {\n    var value = this.arrayBuffer.slice(this.offset, this.offset + length);\n    value = String.fromCharCode.apply(null, new this.global.Uint8Array(value));\n    this.offset += length;\n    return value;\n  },\n  mark: function () {\n    var self = this;\n    return {\n      openWithOffset: function (offset) {\n        offset = (offset || 0) + this.offset;\n        return new DOMBufferStream(self.arrayBuffer, offset, self.arrayBuffer.byteLength - offset, !self.littleEndian, self.global, self.parentOffset);\n      },\n      offset: this.offset,\n      getParentOffset: function () {\n        return self.parentOffset;\n      }\n    };\n  },\n  offsetFrom: function (marker) {\n    return this.parentOffset + this.offset - (marker.offset + marker.getParentOffset());\n  },\n  skip: function (amount) {\n    this.offset += amount;\n  },\n  branch: function (offset, length) {\n    length = typeof length === 'number' ? length : this.arrayBuffer.byteLength - (this.offset + offset);\n    return new DOMBufferStream(this.arrayBuffer, this.offset + offset, length, !this.littleEndian, this.global, this.parentOffset);\n  }\n};\nmodule.exports = DOMBufferStream;", "function BufferStream(buffer, offset, length, bigEndian) {\n  this.buffer = buffer;\n  this.offset = offset || 0;\n  length = typeof length === 'number' ? length : buffer.length;\n  this.endPosition = this.offset + length;\n  this.setBigEndian(bigEndian);\n}\nBufferStream.prototype = {\n  setBigEndian: function (bigEndian) {\n    this.bigEndian = !!bigEndian;\n  },\n  nextUInt8: function () {\n    var value = this.buffer.readUInt8(this.offset);\n    this.offset += 1;\n    return value;\n  },\n  nextInt8: function () {\n    var value = this.buffer.readInt8(this.offset);\n    this.offset += 1;\n    return value;\n  },\n  nextUInt16: function () {\n    var value = this.bigEndian ? this.buffer.readUInt16BE(this.offset) : this.buffer.readUInt16LE(this.offset);\n    this.offset += 2;\n    return value;\n  },\n  nextUInt32: function () {\n    var value = this.bigEndian ? this.buffer.readUInt32BE(this.offset) : this.buffer.readUInt32LE(this.offset);\n    this.offset += 4;\n    return value;\n  },\n  nextInt16: function () {\n    var value = this.bigEndian ? this.buffer.readInt16BE(this.offset) : this.buffer.readInt16LE(this.offset);\n    this.offset += 2;\n    return value;\n  },\n  nextInt32: function () {\n    var value = this.bigEndian ? this.buffer.readInt32BE(this.offset) : this.buffer.readInt32LE(this.offset);\n    this.offset += 4;\n    return value;\n  },\n  nextFloat: function () {\n    var value = this.bigEndian ? this.buffer.readFloatBE(this.offset) : this.buffer.readFloatLE(this.offset);\n    this.offset += 4;\n    return value;\n  },\n  nextDouble: function () {\n    var value = this.bigEndian ? this.buffer.readDoubleBE(this.offset) : this.buffer.readDoubleLE(this.offset);\n    this.offset += 8;\n    return value;\n  },\n  nextBuffer: function (length) {\n    var value = this.buffer.slice(this.offset, this.offset + length);\n    this.offset += length;\n    return value;\n  },\n  remainingLength: function () {\n    return this.endPosition - this.offset;\n  },\n  nextString: function (length) {\n    var value = this.buffer.toString('utf8', this.offset, this.offset + length);\n    this.offset += length;\n    return value;\n  },\n  mark: function () {\n    var self = this;\n    return {\n      openWithOffset: function (offset) {\n        offset = (offset || 0) + this.offset;\n        return new BufferStream(self.buffer, offset, self.endPosition - offset, self.bigEndian);\n      },\n      offset: this.offset\n    };\n  },\n  offsetFrom: function (marker) {\n    return this.offset - marker.offset;\n  },\n  skip: function (amount) {\n    this.offset += amount;\n  },\n  branch: function (offset, length) {\n    length = typeof length === 'number' ? length : this.endPosition - (this.offset + offset);\n    return new BufferStream(this.buffer, this.offset + offset, length, this.bigEndian);\n  }\n};\nmodule.exports = BufferStream;", "var Parser = require('./lib/parser');\nfunction getGlobal() {\n  return (1, eval)('this');\n}\nmodule.exports = {\n  create: function (buffer, global) {\n    global = global || getGlobal();\n    if (buffer instanceof global.ArrayBuffer) {\n      var DOMBufferStream = require('./lib/dom-bufferstream');\n      return new Parser(new DOMBufferStream(buffer, 0, buffer.byteLength, true, global));\n    } else {\n      var NodeBufferStream = require('./lib/bufferstream');\n      return new Parser(new NodeBufferStream(buffer, 0, buffer.length, true));\n    }\n  }\n};", "'use strict';\n\n/**\n * Converter\n *\n * @param {string|Array} srcAlphabet\n * @param {string|Array} dstAlphabet\n * @constructor\n */\nfunction Converter(srcAlphabet, dstAlphabet) {\n  if (!srcAlphabet || !dstAlphabet || !srcAlphabet.length || !dstAlphabet.length) {\n    throw new Error('Bad alphabet');\n  }\n  this.srcAlphabet = srcAlphabet;\n  this.dstAlphabet = dstAlphabet;\n}\n\n/**\n * Convert number from source alphabet to destination alphabet\n *\n * @param {string|Array} number - number represented as a string or array of points\n *\n * @returns {string|Array}\n */\nConverter.prototype.convert = function (number) {\n  var i,\n    divide,\n    newlen,\n    numberMap = {},\n    fromBase = this.srcAlphabet.length,\n    toBase = this.dstAlphabet.length,\n    length = number.length,\n    result = typeof number === 'string' ? '' : [];\n  if (!this.isValid(number)) {\n    throw new Error('Number \"' + number + '\" contains of non-alphabetic digits (' + this.srcAlphabet + ')');\n  }\n  if (this.srcAlphabet === this.dstAlphabet) {\n    return number;\n  }\n  for (i = 0; i < length; i++) {\n    numberMap[i] = this.srcAlphabet.indexOf(number[i]);\n  }\n  do {\n    divide = 0;\n    newlen = 0;\n    for (i = 0; i < length; i++) {\n      divide = divide * fromBase + numberMap[i];\n      if (divide >= toBase) {\n        numberMap[newlen++] = parseInt(divide / toBase, 10);\n        divide = divide % toBase;\n      } else if (newlen > 0) {\n        numberMap[newlen++] = 0;\n      }\n    }\n    length = newlen;\n    result = this.dstAlphabet.slice(divide, divide + 1).concat(result);\n  } while (newlen !== 0);\n  return result;\n};\n\n/**\n * Valid number with source alphabet\n *\n * @param {number} number\n *\n * @returns {boolean}\n */\nConverter.prototype.isValid = function (number) {\n  var i = 0;\n  for (; i < number.length; ++i) {\n    if (this.srcAlphabet.indexOf(number[i]) === -1) {\n      return false;\n    }\n  }\n  return true;\n};\nmodule.exports = Converter;", "var Converter = require('./src/converter');\n\n/**\n * Function get source and destination alphabet and return convert function\n *\n * @param {string|Array} srcAlphabet\n * @param {string|Array} dstAlphabet\n *\n * @returns {function(number|Array)}\n */\nfunction anyBase(srcAlphabet, dstAlphabet) {\n  var converter = new Converter(srcAlphabet, dstAlphabet);\n  /**\n   * Convert function\n   *\n   * @param {string|Array} number\n   *\n   * @return {string|Array} number\n   */\n  return function (number) {\n    return converter.convert(number);\n  };\n}\n;\nanyBase.BIN = '01';\nanyBase.OCT = '01234567';\nanyBase.DEC = '0123456789';\nanyBase.HEX = '0123456789abcdef';\nmodule.exports = anyBase;", "module.exports = function parseBMFontAscii(data) {\n  if (!data) throw new Error('no data provided');\n  data = data.toString().trim();\n  var output = {\n    pages: [],\n    chars: [],\n    kernings: []\n  };\n  var lines = data.split(/\\r\\n?|\\n/g);\n  if (lines.length === 0) throw new Error('no data in BMFont file');\n  for (var i = 0; i < lines.length; i++) {\n    var lineData = splitLine(lines[i], i);\n    if (!lineData)\n      //skip empty lines\n      continue;\n    if (lineData.key === 'page') {\n      if (typeof lineData.data.id !== 'number') throw new Error('malformed file at line ' + i + ' -- needs page id=N');\n      if (typeof lineData.data.file !== 'string') throw new Error('malformed file at line ' + i + ' -- needs page file=\"path\"');\n      output.pages[lineData.data.id] = lineData.data.file;\n    } else if (lineData.key === 'chars' || lineData.key === 'kernings') {\n      //... do nothing for these two ...\n    } else if (lineData.key === 'char') {\n      output.chars.push(lineData.data);\n    } else if (lineData.key === 'kerning') {\n      output.kernings.push(lineData.data);\n    } else {\n      output[lineData.key] = lineData.data;\n    }\n  }\n  return output;\n};\nfunction splitLine(line, idx) {\n  line = line.replace(/\\t+/g, ' ').trim();\n  if (!line) return null;\n  var space = line.indexOf(' ');\n  if (space === -1) throw new Error(\"no named row at line \" + idx);\n  var key = line.substring(0, space);\n  line = line.substring(space + 1);\n  //clear \"letter\" field as it is non-standard and\n  //requires additional complexity to parse \" / = symbols\n  line = line.replace(/letter=[\\'\\\"]\\S+[\\'\\\"]/gi, '');\n  line = line.split(\"=\");\n  line = line.map(function (str) {\n    return str.trim().match(/(\".*?\"|[^\"\\s]+)+(?=\\s*|\\s*$)/g);\n  });\n  var data = [];\n  for (var i = 0; i < line.length; i++) {\n    var dt = line[i];\n    if (i === 0) {\n      data.push({\n        key: dt[0],\n        data: \"\"\n      });\n    } else if (i === line.length - 1) {\n      data[data.length - 1].data = parseData(dt[0]);\n    } else {\n      data[data.length - 1].data = parseData(dt[0]);\n      data.push({\n        key: dt[1],\n        data: \"\"\n      });\n    }\n  }\n  var out = {\n    key: key,\n    data: {}\n  };\n  data.forEach(function (v) {\n    out.data[v.key] = v.data;\n  });\n  return out;\n}\nfunction parseData(data) {\n  if (!data || data.length === 0) return \"\";\n  if (data.indexOf('\"') === 0 || data.indexOf(\"'\") === 0) return data.substring(1, data.length - 1);\n  if (data.indexOf(',') !== -1) return parseIntList(data);\n  return parseInt(data, 10);\n}\nfunction parseIntList(data) {\n  return data.split(',').map(function (val) {\n    return parseInt(val, 10);\n  });\n}", "// Generated by CoffeeScript 1.12.7\n(function () {\n  exports.defaults = {\n    \"0.1\": {\n      explicitCharkey: false,\n      trim: true,\n      normalize: true,\n      normalizeTags: false,\n      attrkey: \"@\",\n      charkey: \"#\",\n      explicitArray: false,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: false,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      childkey: '@@',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      emptyTag: ''\n    },\n    \"0.2\": {\n      explicitCharkey: false,\n      trim: false,\n      normalize: false,\n      normalizeTags: false,\n      attrkey: \"$\",\n      charkey: \"_\",\n      explicitArray: true,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: true,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      preserveChildrenOrder: false,\n      childkey: '$$',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      rootName: 'root',\n      xmldec: {\n        'version': '1.0',\n        'encoding': 'UTF-8',\n        'standalone': true\n      },\n      doctype: null,\n      renderOpts: {\n        'pretty': true,\n        'indent': '  ',\n        'newline': '\\n'\n      },\n      headless: false,\n      chunkSize: 10000,\n      emptyTag: '',\n      cdata: false\n    }\n  };\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var assign,\n    getValue,\n    isArray,\n    isEmpty,\n    isFunction,\n    isObject,\n    isPlainObject,\n    slice = [].slice,\n    hasProp = {}.hasOwnProperty;\n  assign = function () {\n    var i, key, len, source, sources, target;\n    target = arguments[0], sources = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (isFunction(Object.assign)) {\n      Object.assign.apply(null, arguments);\n    } else {\n      for (i = 0, len = sources.length; i < len; i++) {\n        source = sources[i];\n        if (source != null) {\n          for (key in source) {\n            if (!hasProp.call(source, key)) continue;\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n  isFunction = function (val) {\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\n  };\n  isObject = function (val) {\n    var ref;\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\n  };\n  isArray = function (val) {\n    if (isFunction(Array.isArray)) {\n      return Array.isArray(val);\n    } else {\n      return Object.prototype.toString.call(val) === '[object Array]';\n    }\n  };\n  isEmpty = function (val) {\n    var key;\n    if (isArray(val)) {\n      return !val.length;\n    } else {\n      for (key in val) {\n        if (!hasProp.call(val, key)) continue;\n        return false;\n      }\n      return true;\n    }\n  };\n  isPlainObject = function (val) {\n    var ctor, proto;\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && typeof ctor === 'function' && ctor instanceof ctor && Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object);\n  };\n  getValue = function (obj) {\n    if (isFunction(obj.valueOf)) {\n      return obj.valueOf();\n    } else {\n      return obj;\n    }\n  };\n  module.exports.assign = assign;\n  module.exports.isFunction = isFunction;\n  module.exports.isObject = isObject;\n  module.exports.isArray = isArray;\n  module.exports.isEmpty = isEmpty;\n  module.exports.isPlainObject = isPlainObject;\n  module.exports.getValue = getValue;\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var XMLDOMImplementation;\n  module.exports = XMLDOMImplementation = function () {\n    function XMLDOMImplementation() {}\n    XMLDOMImplementation.prototype.hasFeature = function (feature, version) {\n      return true;\n    };\n    XMLDOMImplementation.prototype.createDocumentType = function (qualifiedName, publicId, systemId) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n    XMLDOMImplementation.prototype.createDocument = function (namespaceURI, qualifiedName, doctype) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n    XMLDOMImplementation.prototype.createHTMLDocument = function (title) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n    XMLDOMImplementation.prototype.getFeature = function (feature, version) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n    return XMLDOMImplementation;\n  }();\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var XMLDOMErrorHandler;\n  module.exports = XMLDOMErrorHandler = function () {\n    function XMLDOMErrorHandler() {}\n    XMLDOMErrorHandler.prototype.handleError = function (error) {\n      throw new Error(error);\n    };\n    return XMLDOMErrorHandler;\n  }();\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var XMLDOMStringList;\n  module.exports = XMLDOMStringList = function () {\n    function XMLDOMStringList(arr) {\n      this.arr = arr || [];\n    }\n    Object.defineProperty(XMLDOMStringList.prototype, 'length', {\n      get: function () {\n        return this.arr.length;\n      }\n    });\n    XMLDOMStringList.prototype.item = function (index) {\n      return this.arr[index] || null;\n    };\n    XMLDOMStringList.prototype.contains = function (str) {\n      return this.arr.indexOf(str) !== -1;\n    };\n    return XMLDOMStringList;\n  }();\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var XMLDOMConfiguration, XMLDOMErrorHandler, XMLDOMStringList;\n  XMLDOMErrorHandler = require('./XMLDOMErrorHandler');\n  XMLDOMStringList = require('./XMLDOMStringList');\n  module.exports = XMLDOMConfiguration = function () {\n    function XMLDOMConfiguration() {\n      var clonedSelf;\n      this.defaultParams = {\n        \"canonical-form\": false,\n        \"cdata-sections\": false,\n        \"comments\": false,\n        \"datatype-normalization\": false,\n        \"element-content-whitespace\": true,\n        \"entities\": true,\n        \"error-handler\": new XMLDOMErrorHandler(),\n        \"infoset\": true,\n        \"validate-if-schema\": false,\n        \"namespaces\": true,\n        \"namespace-declarations\": true,\n        \"normalize-characters\": false,\n        \"schema-location\": '',\n        \"schema-type\": '',\n        \"split-cdata-sections\": true,\n        \"validate\": false,\n        \"well-formed\": true\n      };\n      this.params = clonedSelf = Object.create(this.defaultParams);\n    }\n    Object.defineProperty(XMLDOMConfiguration.prototype, 'parameterNames', {\n      get: function () {\n        return new XMLDOMStringList(Object.keys(this.defaultParams));\n      }\n    });\n    XMLDOMConfiguration.prototype.getParameter = function (name) {\n      if (this.params.hasOwnProperty(name)) {\n        return this.params[name];\n      } else {\n        return null;\n      }\n    };\n    XMLDOMConfiguration.prototype.canSetParameter = function (name, value) {\n      return true;\n    };\n    XMLDOMConfiguration.prototype.setParameter = function (name, value) {\n      if (value != null) {\n        return this.params[name] = value;\n      } else {\n        return delete this.params[name];\n      }\n    };\n    return XMLDOMConfiguration;\n  }();\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  module.exports = {\n    Element: 1,\n    Attribute: 2,\n    Text: 3,\n    CData: 4,\n    EntityReference: 5,\n    EntityDeclaration: 6,\n    ProcessingInstruction: 7,\n    Comment: 8,\n    Document: 9,\n    DocType: 10,\n    DocumentFragment: 11,\n    NotationDeclaration: 12,\n    Declaration: 201,\n    Raw: 202,\n    AttributeDeclaration: 203,\n    ElementDeclaration: 204,\n    Dummy: 205\n  };\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType, XMLAttribute, XMLNode;\n  NodeType = require('./NodeType');\n  XMLNode = require('./XMLNode');\n  module.exports = XMLAttribute = function () {\n    function XMLAttribute(parent, name, value) {\n      this.parent = parent;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      if (name == null) {\n        throw new Error(\"Missing attribute name. \" + this.debugInfo(name));\n      }\n      this.name = this.stringify.name(name);\n      this.value = this.stringify.attValue(value);\n      this.type = NodeType.Attribute;\n      this.isId = false;\n      this.schemaTypeInfo = null;\n    }\n    Object.defineProperty(XMLAttribute.prototype, 'nodeType', {\n      get: function () {\n        return this.type;\n      }\n    });\n    Object.defineProperty(XMLAttribute.prototype, 'ownerElement', {\n      get: function () {\n        return this.parent;\n      }\n    });\n    Object.defineProperty(XMLAttribute.prototype, 'textContent', {\n      get: function () {\n        return this.value;\n      },\n      set: function (value) {\n        return this.value = value || '';\n      }\n    });\n    Object.defineProperty(XMLAttribute.prototype, 'namespaceURI', {\n      get: function () {\n        return '';\n      }\n    });\n    Object.defineProperty(XMLAttribute.prototype, 'prefix', {\n      get: function () {\n        return '';\n      }\n    });\n    Object.defineProperty(XMLAttribute.prototype, 'localName', {\n      get: function () {\n        return this.name;\n      }\n    });\n    Object.defineProperty(XMLAttribute.prototype, 'specified', {\n      get: function () {\n        return true;\n      }\n    });\n    XMLAttribute.prototype.clone = function () {\n      return Object.create(this);\n    };\n    XMLAttribute.prototype.toString = function (options) {\n      return this.options.writer.attribute(this, this.options.writer.filterOptions(options));\n    };\n    XMLAttribute.prototype.debugInfo = function (name) {\n      name = name || this.name;\n      if (name == null) {\n        return \"parent: <\" + this.parent.name + \">\";\n      } else {\n        return \"attribute: {\" + name + \"}, parent: <\" + this.parent.name + \">\";\n      }\n    };\n    XMLAttribute.prototype.isEqualNode = function (node) {\n      if (node.namespaceURI !== this.namespaceURI) {\n        return false;\n      }\n      if (node.prefix !== this.prefix) {\n        return false;\n      }\n      if (node.localName !== this.localName) {\n        return false;\n      }\n      if (node.value !== this.value) {\n        return false;\n      }\n      return true;\n    };\n    return XMLAttribute;\n  }();\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var XMLNamedNodeMap;\n  module.exports = XMLNamedNodeMap = function () {\n    function XMLNamedNodeMap(nodes) {\n      this.nodes = nodes;\n    }\n    Object.defineProperty(XMLNamedNodeMap.prototype, 'length', {\n      get: function () {\n        return Object.keys(this.nodes).length || 0;\n      }\n    });\n    XMLNamedNodeMap.prototype.clone = function () {\n      return this.nodes = null;\n    };\n    XMLNamedNodeMap.prototype.getNamedItem = function (name) {\n      return this.nodes[name];\n    };\n    XMLNamedNodeMap.prototype.setNamedItem = function (node) {\n      var oldNode;\n      oldNode = this.nodes[node.nodeName];\n      this.nodes[node.nodeName] = node;\n      return oldNode || null;\n    };\n    XMLNamedNodeMap.prototype.removeNamedItem = function (name) {\n      var oldNode;\n      oldNode = this.nodes[name];\n      delete this.nodes[name];\n      return oldNode || null;\n    };\n    XMLNamedNodeMap.prototype.item = function (index) {\n      return this.nodes[Object.keys(this.nodes)[index]] || null;\n    };\n    XMLNamedNodeMap.prototype.getNamedItemNS = function (namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n    XMLNamedNodeMap.prototype.setNamedItemNS = function (node) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n    XMLNamedNodeMap.prototype.removeNamedItemNS = function (namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n    return XMLNamedNodeMap;\n  }();\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n    XMLAttribute,\n    XMLElement,\n    XMLNamedNodeMap,\n    XMLNode,\n    getValue,\n    isFunction,\n    isObject,\n    ref,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, getValue = ref.getValue;\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType');\n  XMLAttribute = require('./XMLAttribute');\n  XMLNamedNodeMap = require('./XMLNamedNodeMap');\n  module.exports = XMLElement = function (superClass) {\n    extend(XMLElement, superClass);\n    function XMLElement(parent, name, attributes) {\n      var child, j, len, ref1;\n      XMLElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing element name. \" + this.debugInfo());\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.Element;\n      this.attribs = {};\n      this.schemaTypeInfo = null;\n      if (attributes != null) {\n        this.attribute(attributes);\n      }\n      if (parent.type === NodeType.Document) {\n        this.isRoot = true;\n        this.documentObject = parent;\n        parent.rootObject = this;\n        if (parent.children) {\n          ref1 = parent.children;\n          for (j = 0, len = ref1.length; j < len; j++) {\n            child = ref1[j];\n            if (child.type === NodeType.DocType) {\n              child.name = this.name;\n              break;\n            }\n          }\n        }\n      }\n    }\n    Object.defineProperty(XMLElement.prototype, 'tagName', {\n      get: function () {\n        return this.name;\n      }\n    });\n    Object.defineProperty(XMLElement.prototype, 'namespaceURI', {\n      get: function () {\n        return '';\n      }\n    });\n    Object.defineProperty(XMLElement.prototype, 'prefix', {\n      get: function () {\n        return '';\n      }\n    });\n    Object.defineProperty(XMLElement.prototype, 'localName', {\n      get: function () {\n        return this.name;\n      }\n    });\n    Object.defineProperty(XMLElement.prototype, 'id', {\n      get: function () {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n    Object.defineProperty(XMLElement.prototype, 'className', {\n      get: function () {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n    Object.defineProperty(XMLElement.prototype, 'classList', {\n      get: function () {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n    Object.defineProperty(XMLElement.prototype, 'attributes', {\n      get: function () {\n        if (!this.attributeMap || !this.attributeMap.nodes) {\n          this.attributeMap = new XMLNamedNodeMap(this.attribs);\n        }\n        return this.attributeMap;\n      }\n    });\n    XMLElement.prototype.clone = function () {\n      var att, attName, clonedSelf, ref1;\n      clonedSelf = Object.create(this);\n      if (clonedSelf.isRoot) {\n        clonedSelf.documentObject = null;\n      }\n      clonedSelf.attribs = {};\n      ref1 = this.attribs;\n      for (attName in ref1) {\n        if (!hasProp.call(ref1, attName)) continue;\n        att = ref1[attName];\n        clonedSelf.attribs[attName] = att.clone();\n      }\n      clonedSelf.children = [];\n      this.children.forEach(function (child) {\n        var clonedChild;\n        clonedChild = child.clone();\n        clonedChild.parent = clonedSelf;\n        return clonedSelf.children.push(clonedChild);\n      });\n      return clonedSelf;\n    };\n    XMLElement.prototype.attribute = function (name, value) {\n      var attName, attValue;\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (this.options.keepNullAttributes && value == null) {\n          this.attribs[name] = new XMLAttribute(this, name, \"\");\n        } else if (value != null) {\n          this.attribs[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n    XMLElement.prototype.removeAttribute = function (name) {\n      var attName, j, len;\n      if (name == null) {\n        throw new Error(\"Missing attribute name. \" + this.debugInfo());\n      }\n      name = getValue(name);\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          attName = name[j];\n          delete this.attribs[attName];\n        }\n      } else {\n        delete this.attribs[name];\n      }\n      return this;\n    };\n    XMLElement.prototype.toString = function (options) {\n      return this.options.writer.element(this, this.options.writer.filterOptions(options));\n    };\n    XMLElement.prototype.att = function (name, value) {\n      return this.attribute(name, value);\n    };\n    XMLElement.prototype.a = function (name, value) {\n      return this.attribute(name, value);\n    };\n    XMLElement.prototype.getAttribute = function (name) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name].value;\n      } else {\n        return null;\n      }\n    };\n    XMLElement.prototype.setAttribute = function (name, value) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLElement.prototype.getAttributeNode = function (name) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name];\n      } else {\n        return null;\n      }\n    };\n    XMLElement.prototype.setAttributeNode = function (newAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLElement.prototype.removeAttributeNode = function (oldAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLElement.prototype.getElementsByTagName = function (name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLElement.prototype.getAttributeNS = function (namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLElement.prototype.setAttributeNS = function (namespaceURI, qualifiedName, value) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLElement.prototype.removeAttributeNS = function (namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLElement.prototype.getAttributeNodeNS = function (namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLElement.prototype.setAttributeNodeNS = function (newAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLElement.prototype.getElementsByTagNameNS = function (namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLElement.prototype.hasAttribute = function (name) {\n      return this.attribs.hasOwnProperty(name);\n    };\n    XMLElement.prototype.hasAttributeNS = function (namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLElement.prototype.setIdAttribute = function (name, isId) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name].isId;\n      } else {\n        return isId;\n      }\n    };\n    XMLElement.prototype.setIdAttributeNS = function (namespaceURI, localName, isId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLElement.prototype.setIdAttributeNode = function (idAttr, isId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLElement.prototype.getElementsByTagName = function (tagname) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLElement.prototype.getElementsByTagNameNS = function (namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLElement.prototype.getElementsByClassName = function (classNames) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLElement.prototype.isEqualNode = function (node) {\n      var i, j, ref1;\n      if (!XMLElement.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.namespaceURI !== this.namespaceURI) {\n        return false;\n      }\n      if (node.prefix !== this.prefix) {\n        return false;\n      }\n      if (node.localName !== this.localName) {\n        return false;\n      }\n      if (node.attribs.length !== this.attribs.length) {\n        return false;\n      }\n      for (i = j = 0, ref1 = this.attribs.length - 1; 0 <= ref1 ? j <= ref1 : j >= ref1; i = 0 <= ref1 ? ++j : --j) {\n        if (!this.attribs[i].isEqualNode(node.attribs[i])) {\n          return false;\n        }\n      }\n      return true;\n    };\n    return XMLElement;\n  }(XMLNode);\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var XMLCharacterData,\n    XMLNode,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  XMLNode = require('./XMLNode');\n  module.exports = XMLCharacterData = function (superClass) {\n    extend(XMLCharacterData, superClass);\n    function XMLCharacterData(parent) {\n      XMLCharacterData.__super__.constructor.call(this, parent);\n      this.value = '';\n    }\n    Object.defineProperty(XMLCharacterData.prototype, 'data', {\n      get: function () {\n        return this.value;\n      },\n      set: function (value) {\n        return this.value = value || '';\n      }\n    });\n    Object.defineProperty(XMLCharacterData.prototype, 'length', {\n      get: function () {\n        return this.value.length;\n      }\n    });\n    Object.defineProperty(XMLCharacterData.prototype, 'textContent', {\n      get: function () {\n        return this.value;\n      },\n      set: function (value) {\n        return this.value = value || '';\n      }\n    });\n    XMLCharacterData.prototype.clone = function () {\n      return Object.create(this);\n    };\n    XMLCharacterData.prototype.substringData = function (offset, count) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLCharacterData.prototype.appendData = function (arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLCharacterData.prototype.insertData = function (offset, arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLCharacterData.prototype.deleteData = function (offset, count) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLCharacterData.prototype.replaceData = function (offset, count, arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLCharacterData.prototype.isEqualNode = function (node) {\n      if (!XMLCharacterData.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.data !== this.data) {\n        return false;\n      }\n      return true;\n    };\n    return XMLCharacterData;\n  }(XMLNode);\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n    XMLCData,\n    XMLCharacterData,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  NodeType = require('./NodeType');\n  XMLCharacterData = require('./XMLCharacterData');\n  module.exports = XMLCData = function (superClass) {\n    extend(XMLCData, superClass);\n    function XMLCData(parent, text) {\n      XMLCData.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing CDATA text. \" + this.debugInfo());\n      }\n      this.name = \"#cdata-section\";\n      this.type = NodeType.CData;\n      this.value = this.stringify.cdata(text);\n    }\n    XMLCData.prototype.clone = function () {\n      return Object.create(this);\n    };\n    XMLCData.prototype.toString = function (options) {\n      return this.options.writer.cdata(this, this.options.writer.filterOptions(options));\n    };\n    return XMLCData;\n  }(XMLCharacterData);\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n    XMLCharacterData,\n    XMLComment,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  NodeType = require('./NodeType');\n  XMLCharacterData = require('./XMLCharacterData');\n  module.exports = XMLComment = function (superClass) {\n    extend(XMLComment, superClass);\n    function XMLComment(parent, text) {\n      XMLComment.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing comment text. \" + this.debugInfo());\n      }\n      this.name = \"#comment\";\n      this.type = NodeType.Comment;\n      this.value = this.stringify.comment(text);\n    }\n    XMLComment.prototype.clone = function () {\n      return Object.create(this);\n    };\n    XMLComment.prototype.toString = function (options) {\n      return this.options.writer.comment(this, this.options.writer.filterOptions(options));\n    };\n    return XMLComment;\n  }(XMLCharacterData);\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n    XMLDeclaration,\n    XMLNode,\n    isObject,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  isObject = require('./Utility').isObject;\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType');\n  module.exports = XMLDeclaration = function (superClass) {\n    extend(XMLDeclaration, superClass);\n    function XMLDeclaration(parent, version, encoding, standalone) {\n      var ref;\n      XMLDeclaration.__super__.constructor.call(this, parent);\n      if (isObject(version)) {\n        ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;\n      }\n      if (!version) {\n        version = '1.0';\n      }\n      this.type = NodeType.Declaration;\n      this.version = this.stringify.xmlVersion(version);\n      if (encoding != null) {\n        this.encoding = this.stringify.xmlEncoding(encoding);\n      }\n      if (standalone != null) {\n        this.standalone = this.stringify.xmlStandalone(standalone);\n      }\n    }\n    XMLDeclaration.prototype.toString = function (options) {\n      return this.options.writer.declaration(this, this.options.writer.filterOptions(options));\n    };\n    return XMLDeclaration;\n  }(XMLNode);\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n    XMLDTDAttList,\n    XMLNode,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType');\n  module.exports = XMLDTDAttList = function (superClass) {\n    extend(XMLDTDAttList, superClass);\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      XMLDTDAttList.__super__.constructor.call(this, parent);\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name. \" + this.debugInfo(elementName));\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type. \" + this.debugInfo(elementName));\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default. \" + this.debugInfo(elementName));\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n      this.elementName = this.stringify.name(elementName);\n      this.type = NodeType.AttributeDeclaration;\n      this.attributeName = this.stringify.name(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      if (defaultValue) {\n        this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      }\n      this.defaultValueType = defaultValueType;\n    }\n    XMLDTDAttList.prototype.toString = function (options) {\n      return this.options.writer.dtdAttList(this, this.options.writer.filterOptions(options));\n    };\n    return XMLDTDAttList;\n  }(XMLNode);\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n    XMLDTDEntity,\n    XMLNode,\n    isObject,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  isObject = require('./Utility').isObject;\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType');\n  module.exports = XMLDTDEntity = function (superClass) {\n    extend(XMLDTDEntity, superClass);\n    function XMLDTDEntity(parent, pe, name, value) {\n      XMLDTDEntity.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD entity name. \" + this.debugInfo(name));\n      }\n      if (value == null) {\n        throw new Error(\"Missing DTD entity value. \" + this.debugInfo(name));\n      }\n      this.pe = !!pe;\n      this.name = this.stringify.name(name);\n      this.type = NodeType.EntityDeclaration;\n      if (!isObject(value)) {\n        this.value = this.stringify.dtdEntityValue(value);\n        this.internal = true;\n      } else {\n        if (!value.pubID && !value.sysID) {\n          throw new Error(\"Public and/or system identifiers are required for an external entity. \" + this.debugInfo(name));\n        }\n        if (value.pubID && !value.sysID) {\n          throw new Error(\"System identifier is required for a public external entity. \" + this.debugInfo(name));\n        }\n        this.internal = false;\n        if (value.pubID != null) {\n          this.pubID = this.stringify.dtdPubID(value.pubID);\n        }\n        if (value.sysID != null) {\n          this.sysID = this.stringify.dtdSysID(value.sysID);\n        }\n        if (value.nData != null) {\n          this.nData = this.stringify.dtdNData(value.nData);\n        }\n        if (this.pe && this.nData) {\n          throw new Error(\"Notation declaration is not allowed in a parameter entity. \" + this.debugInfo(name));\n        }\n      }\n    }\n    Object.defineProperty(XMLDTDEntity.prototype, 'publicId', {\n      get: function () {\n        return this.pubID;\n      }\n    });\n    Object.defineProperty(XMLDTDEntity.prototype, 'systemId', {\n      get: function () {\n        return this.sysID;\n      }\n    });\n    Object.defineProperty(XMLDTDEntity.prototype, 'notationName', {\n      get: function () {\n        return this.nData || null;\n      }\n    });\n    Object.defineProperty(XMLDTDEntity.prototype, 'inputEncoding', {\n      get: function () {\n        return null;\n      }\n    });\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlEncoding', {\n      get: function () {\n        return null;\n      }\n    });\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlVersion', {\n      get: function () {\n        return null;\n      }\n    });\n    XMLDTDEntity.prototype.toString = function (options) {\n      return this.options.writer.dtdEntity(this, this.options.writer.filterOptions(options));\n    };\n    return XMLDTDEntity;\n  }(XMLNode);\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n    XMLDTDElement,\n    XMLNode,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType');\n  module.exports = XMLDTDElement = function (superClass) {\n    extend(XMLDTDElement, superClass);\n    function XMLDTDElement(parent, name, value) {\n      XMLDTDElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n      if (!value) {\n        value = '(#PCDATA)';\n      }\n      if (Array.isArray(value)) {\n        value = '(' + value.join(',') + ')';\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.ElementDeclaration;\n      this.value = this.stringify.dtdElementValue(value);\n    }\n    XMLDTDElement.prototype.toString = function (options) {\n      return this.options.writer.dtdElement(this, this.options.writer.filterOptions(options));\n    };\n    return XMLDTDElement;\n  }(XMLNode);\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n    XMLDTDNotation,\n    XMLNode,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType');\n  module.exports = XMLDTDNotation = function (superClass) {\n    extend(XMLDTDNotation, superClass);\n    function XMLDTDNotation(parent, name, value) {\n      XMLDTDNotation.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD notation name. \" + this.debugInfo(name));\n      }\n      if (!value.pubID && !value.sysID) {\n        throw new Error(\"Public or system identifiers are required for an external entity. \" + this.debugInfo(name));\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.NotationDeclaration;\n      if (value.pubID != null) {\n        this.pubID = this.stringify.dtdPubID(value.pubID);\n      }\n      if (value.sysID != null) {\n        this.sysID = this.stringify.dtdSysID(value.sysID);\n      }\n    }\n    Object.defineProperty(XMLDTDNotation.prototype, 'publicId', {\n      get: function () {\n        return this.pubID;\n      }\n    });\n    Object.defineProperty(XMLDTDNotation.prototype, 'systemId', {\n      get: function () {\n        return this.sysID;\n      }\n    });\n    XMLDTDNotation.prototype.toString = function (options) {\n      return this.options.writer.dtdNotation(this, this.options.writer.filterOptions(options));\n    };\n    return XMLDTDNotation;\n  }(XMLNode);\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n    XMLDTDAttList,\n    XMLDTDElement,\n    XMLDTDEntity,\n    XMLDTDNotation,\n    XMLDocType,\n    XMLNamedNodeMap,\n    XMLNode,\n    isObject,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  isObject = require('./Utility').isObject;\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType');\n  XMLDTDAttList = require('./XMLDTDAttList');\n  XMLDTDEntity = require('./XMLDTDEntity');\n  XMLDTDElement = require('./XMLDTDElement');\n  XMLDTDNotation = require('./XMLDTDNotation');\n  XMLNamedNodeMap = require('./XMLNamedNodeMap');\n  module.exports = XMLDocType = function (superClass) {\n    extend(XMLDocType, superClass);\n    function XMLDocType(parent, pubID, sysID) {\n      var child, i, len, ref, ref1, ref2;\n      XMLDocType.__super__.constructor.call(this, parent);\n      this.type = NodeType.DocType;\n      if (parent.children) {\n        ref = parent.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.Element) {\n            this.name = child.name;\n            break;\n          }\n        }\n      }\n      this.documentObject = parent;\n      if (isObject(pubID)) {\n        ref1 = pubID, pubID = ref1.pubID, sysID = ref1.sysID;\n      }\n      if (sysID == null) {\n        ref2 = [pubID, sysID], sysID = ref2[0], pubID = ref2[1];\n      }\n      if (pubID != null) {\n        this.pubID = this.stringify.dtdPubID(pubID);\n      }\n      if (sysID != null) {\n        this.sysID = this.stringify.dtdSysID(sysID);\n      }\n    }\n    Object.defineProperty(XMLDocType.prototype, 'entities', {\n      get: function () {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.EntityDeclaration && !child.pe) {\n            nodes[child.name] = child;\n          }\n        }\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n    Object.defineProperty(XMLDocType.prototype, 'notations', {\n      get: function () {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.NotationDeclaration) {\n            nodes[child.name] = child;\n          }\n        }\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n    Object.defineProperty(XMLDocType.prototype, 'publicId', {\n      get: function () {\n        return this.pubID;\n      }\n    });\n    Object.defineProperty(XMLDocType.prototype, 'systemId', {\n      get: function () {\n        return this.sysID;\n      }\n    });\n    Object.defineProperty(XMLDocType.prototype, 'internalSubset', {\n      get: function () {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n    XMLDocType.prototype.element = function (name, value) {\n      var child;\n      child = new XMLDTDElement(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n    XMLDocType.prototype.attList = function (elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var child;\n      child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.children.push(child);\n      return this;\n    };\n    XMLDocType.prototype.entity = function (name, value) {\n      var child;\n      child = new XMLDTDEntity(this, false, name, value);\n      this.children.push(child);\n      return this;\n    };\n    XMLDocType.prototype.pEntity = function (name, value) {\n      var child;\n      child = new XMLDTDEntity(this, true, name, value);\n      this.children.push(child);\n      return this;\n    };\n    XMLDocType.prototype.notation = function (name, value) {\n      var child;\n      child = new XMLDTDNotation(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n    XMLDocType.prototype.toString = function (options) {\n      return this.options.writer.docType(this, this.options.writer.filterOptions(options));\n    };\n    XMLDocType.prototype.ele = function (name, value) {\n      return this.element(name, value);\n    };\n    XMLDocType.prototype.att = function (elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n    };\n    XMLDocType.prototype.ent = function (name, value) {\n      return this.entity(name, value);\n    };\n    XMLDocType.prototype.pent = function (name, value) {\n      return this.pEntity(name, value);\n    };\n    XMLDocType.prototype.not = function (name, value) {\n      return this.notation(name, value);\n    };\n    XMLDocType.prototype.up = function () {\n      return this.root() || this.documentObject;\n    };\n    XMLDocType.prototype.isEqualNode = function (node) {\n      if (!XMLDocType.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.name !== this.name) {\n        return false;\n      }\n      if (node.publicId !== this.publicId) {\n        return false;\n      }\n      if (node.systemId !== this.systemId) {\n        return false;\n      }\n      return true;\n    };\n    return XMLDocType;\n  }(XMLNode);\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n    XMLNode,\n    XMLRaw,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  NodeType = require('./NodeType');\n  XMLNode = require('./XMLNode');\n  module.exports = XMLRaw = function (superClass) {\n    extend(XMLRaw, superClass);\n    function XMLRaw(parent, text) {\n      XMLRaw.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing raw text. \" + this.debugInfo());\n      }\n      this.type = NodeType.Raw;\n      this.value = this.stringify.raw(text);\n    }\n    XMLRaw.prototype.clone = function () {\n      return Object.create(this);\n    };\n    XMLRaw.prototype.toString = function (options) {\n      return this.options.writer.raw(this, this.options.writer.filterOptions(options));\n    };\n    return XMLRaw;\n  }(XMLNode);\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n    XMLCharacterData,\n    XMLText,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  NodeType = require('./NodeType');\n  XMLCharacterData = require('./XMLCharacterData');\n  module.exports = XMLText = function (superClass) {\n    extend(XMLText, superClass);\n    function XMLText(parent, text) {\n      XMLText.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing element text. \" + this.debugInfo());\n      }\n      this.name = \"#text\";\n      this.type = NodeType.Text;\n      this.value = this.stringify.text(text);\n    }\n    Object.defineProperty(XMLText.prototype, 'isElementContentWhitespace', {\n      get: function () {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n    Object.defineProperty(XMLText.prototype, 'wholeText', {\n      get: function () {\n        var next, prev, str;\n        str = '';\n        prev = this.previousSibling;\n        while (prev) {\n          str = prev.data + str;\n          prev = prev.previousSibling;\n        }\n        str += this.data;\n        next = this.nextSibling;\n        while (next) {\n          str = str + next.data;\n          next = next.nextSibling;\n        }\n        return str;\n      }\n    });\n    XMLText.prototype.clone = function () {\n      return Object.create(this);\n    };\n    XMLText.prototype.toString = function (options) {\n      return this.options.writer.text(this, this.options.writer.filterOptions(options));\n    };\n    XMLText.prototype.splitText = function (offset) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLText.prototype.replaceWholeText = function (content) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    return XMLText;\n  }(XMLCharacterData);\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n    XMLCharacterData,\n    XMLProcessingInstruction,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  NodeType = require('./NodeType');\n  XMLCharacterData = require('./XMLCharacterData');\n  module.exports = XMLProcessingInstruction = function (superClass) {\n    extend(XMLProcessingInstruction, superClass);\n    function XMLProcessingInstruction(parent, target, value) {\n      XMLProcessingInstruction.__super__.constructor.call(this, parent);\n      if (target == null) {\n        throw new Error(\"Missing instruction target. \" + this.debugInfo());\n      }\n      this.type = NodeType.ProcessingInstruction;\n      this.target = this.stringify.insTarget(target);\n      this.name = this.target;\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n    XMLProcessingInstruction.prototype.clone = function () {\n      return Object.create(this);\n    };\n    XMLProcessingInstruction.prototype.toString = function (options) {\n      return this.options.writer.processingInstruction(this, this.options.writer.filterOptions(options));\n    };\n    XMLProcessingInstruction.prototype.isEqualNode = function (node) {\n      if (!XMLProcessingInstruction.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.target !== this.target) {\n        return false;\n      }\n      return true;\n    };\n    return XMLProcessingInstruction;\n  }(XMLCharacterData);\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n    XMLDummy,\n    XMLNode,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType');\n  module.exports = XMLDummy = function (superClass) {\n    extend(XMLDummy, superClass);\n    function XMLDummy(parent) {\n      XMLDummy.__super__.constructor.call(this, parent);\n      this.type = NodeType.Dummy;\n    }\n    XMLDummy.prototype.clone = function () {\n      return Object.create(this);\n    };\n    XMLDummy.prototype.toString = function (options) {\n      return '';\n    };\n    return XMLDummy;\n  }(XMLNode);\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var XMLNodeList;\n  module.exports = XMLNodeList = function () {\n    function XMLNodeList(nodes) {\n      this.nodes = nodes;\n    }\n    Object.defineProperty(XMLNodeList.prototype, 'length', {\n      get: function () {\n        return this.nodes.length || 0;\n      }\n    });\n    XMLNodeList.prototype.clone = function () {\n      return this.nodes = null;\n    };\n    XMLNodeList.prototype.item = function (index) {\n      return this.nodes[index] || null;\n    };\n    return XMLNodeList;\n  }();\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  module.exports = {\n    Disconnected: 1,\n    Preceding: 2,\n    Following: 4,\n    Contains: 8,\n    ContainedBy: 16,\n    ImplementationSpecific: 32\n  };\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var DocumentPosition,\n    NodeType,\n    XMLCData,\n    XMLComment,\n    XMLDeclaration,\n    XMLDocType,\n    XMLDummy,\n    XMLElement,\n    XMLNamedNodeMap,\n    XMLNode,\n    XMLNodeList,\n    XMLProcessingInstruction,\n    XMLRaw,\n    XMLText,\n    getValue,\n    isEmpty,\n    isFunction,\n    isObject,\n    ref1,\n    hasProp = {}.hasOwnProperty;\n  ref1 = require('./Utility'), isObject = ref1.isObject, isFunction = ref1.isFunction, isEmpty = ref1.isEmpty, getValue = ref1.getValue;\n  XMLElement = null;\n  XMLCData = null;\n  XMLComment = null;\n  XMLDeclaration = null;\n  XMLDocType = null;\n  XMLRaw = null;\n  XMLText = null;\n  XMLProcessingInstruction = null;\n  XMLDummy = null;\n  NodeType = null;\n  XMLNodeList = null;\n  XMLNamedNodeMap = null;\n  DocumentPosition = null;\n  module.exports = XMLNode = function () {\n    function XMLNode(parent1) {\n      this.parent = parent1;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      this.value = null;\n      this.children = [];\n      this.baseURI = null;\n      if (!XMLElement) {\n        XMLElement = require('./XMLElement');\n        XMLCData = require('./XMLCData');\n        XMLComment = require('./XMLComment');\n        XMLDeclaration = require('./XMLDeclaration');\n        XMLDocType = require('./XMLDocType');\n        XMLRaw = require('./XMLRaw');\n        XMLText = require('./XMLText');\n        XMLProcessingInstruction = require('./XMLProcessingInstruction');\n        XMLDummy = require('./XMLDummy');\n        NodeType = require('./NodeType');\n        XMLNodeList = require('./XMLNodeList');\n        XMLNamedNodeMap = require('./XMLNamedNodeMap');\n        DocumentPosition = require('./DocumentPosition');\n      }\n    }\n    Object.defineProperty(XMLNode.prototype, 'nodeName', {\n      get: function () {\n        return this.name;\n      }\n    });\n    Object.defineProperty(XMLNode.prototype, 'nodeType', {\n      get: function () {\n        return this.type;\n      }\n    });\n    Object.defineProperty(XMLNode.prototype, 'nodeValue', {\n      get: function () {\n        return this.value;\n      }\n    });\n    Object.defineProperty(XMLNode.prototype, 'parentNode', {\n      get: function () {\n        return this.parent;\n      }\n    });\n    Object.defineProperty(XMLNode.prototype, 'childNodes', {\n      get: function () {\n        if (!this.childNodeList || !this.childNodeList.nodes) {\n          this.childNodeList = new XMLNodeList(this.children);\n        }\n        return this.childNodeList;\n      }\n    });\n    Object.defineProperty(XMLNode.prototype, 'firstChild', {\n      get: function () {\n        return this.children[0] || null;\n      }\n    });\n    Object.defineProperty(XMLNode.prototype, 'lastChild', {\n      get: function () {\n        return this.children[this.children.length - 1] || null;\n      }\n    });\n    Object.defineProperty(XMLNode.prototype, 'previousSibling', {\n      get: function () {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i - 1] || null;\n      }\n    });\n    Object.defineProperty(XMLNode.prototype, 'nextSibling', {\n      get: function () {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i + 1] || null;\n      }\n    });\n    Object.defineProperty(XMLNode.prototype, 'ownerDocument', {\n      get: function () {\n        return this.document() || null;\n      }\n    });\n    Object.defineProperty(XMLNode.prototype, 'textContent', {\n      get: function () {\n        var child, j, len, ref2, str;\n        if (this.nodeType === NodeType.Element || this.nodeType === NodeType.DocumentFragment) {\n          str = '';\n          ref2 = this.children;\n          for (j = 0, len = ref2.length; j < len; j++) {\n            child = ref2[j];\n            if (child.textContent) {\n              str += child.textContent;\n            }\n          }\n          return str;\n        } else {\n          return null;\n        }\n      },\n      set: function (value) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n    XMLNode.prototype.setParent = function (parent) {\n      var child, j, len, ref2, results;\n      this.parent = parent;\n      if (parent) {\n        this.options = parent.options;\n        this.stringify = parent.stringify;\n      }\n      ref2 = this.children;\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        results.push(child.setParent(this));\n      }\n      return results;\n    };\n    XMLNode.prototype.element = function (name, attributes, text) {\n      var childNode, item, j, k, key, lastChild, len, len1, ref2, ref3, val;\n      lastChild = null;\n      if (attributes === null && text == null) {\n        ref2 = [{}, null], attributes = ref2[0], text = ref2[1];\n      }\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref3 = [attributes, text], text = ref3[0], attributes = ref3[1];\n      }\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          item = name[j];\n          lastChild = this.element(item);\n        }\n      } else if (isFunction(name)) {\n        lastChild = this.element(name.apply());\n      } else if (isObject(name)) {\n        for (key in name) {\n          if (!hasProp.call(name, key)) continue;\n          val = name[key];\n          if (isFunction(val)) {\n            val = val.apply();\n          }\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n          } else if (!this.options.separateArrayItems && Array.isArray(val) && isEmpty(val)) {\n            lastChild = this.dummy();\n          } else if (isObject(val) && isEmpty(val)) {\n            lastChild = this.element(key);\n          } else if (!this.options.keepNullNodes && val == null) {\n            lastChild = this.dummy();\n          } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n            for (k = 0, len1 = val.length; k < len1; k++) {\n              item = val[k];\n              childNode = {};\n              childNode[key] = item;\n              lastChild = this.element(childNode);\n            }\n          } else if (isObject(val)) {\n            if (!this.options.ignoreDecorators && this.stringify.convertTextKey && key.indexOf(this.stringify.convertTextKey) === 0) {\n              lastChild = this.element(val);\n            } else {\n              lastChild = this.element(key);\n              lastChild.element(val);\n            }\n          } else {\n            lastChild = this.element(key, val);\n          }\n        }\n      } else if (!this.options.keepNullNodes && text === null) {\n        lastChild = this.dummy();\n      } else {\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n          lastChild = this.text(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n          lastChild = this.cdata(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n          lastChild = this.comment(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n          lastChild = this.raw(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n        } else {\n          lastChild = this.node(name, attributes, text);\n        }\n      }\n      if (lastChild == null) {\n        throw new Error(\"Could not create any elements with: \" + name + \". \" + this.debugInfo());\n      }\n      return lastChild;\n    };\n    XMLNode.prototype.insertBefore = function (name, attributes, text) {\n      var child, i, newChild, refChild, removed;\n      if (name != null ? name.type : void 0) {\n        newChild = name;\n        refChild = attributes;\n        newChild.setParent(this);\n        if (refChild) {\n          i = children.indexOf(refChild);\n          removed = children.splice(i);\n          children.push(newChild);\n          Array.prototype.push.apply(children, removed);\n        } else {\n          children.push(newChild);\n        }\n        return newChild;\n      } else {\n        if (this.isRoot) {\n          throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n        }\n        i = this.parent.children.indexOf(this);\n        removed = this.parent.children.splice(i);\n        child = this.parent.element(name, attributes, text);\n        Array.prototype.push.apply(this.parent.children, removed);\n        return child;\n      }\n    };\n    XMLNode.prototype.insertAfter = function (name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n    XMLNode.prototype.remove = function () {\n      var i, ref2;\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element. \" + this.debugInfo());\n      }\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref2 = [])), ref2;\n      return this.parent;\n    };\n    XMLNode.prototype.node = function (name, attributes, text) {\n      var child, ref2;\n      if (name != null) {\n        name = getValue(name);\n      }\n      attributes || (attributes = {});\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref2 = [attributes, text], text = ref2[0], attributes = ref2[1];\n      }\n      child = new XMLElement(this, name, attributes);\n      if (text != null) {\n        child.text(text);\n      }\n      this.children.push(child);\n      return child;\n    };\n    XMLNode.prototype.text = function (value) {\n      var child;\n      if (isObject(value)) {\n        this.element(value);\n      }\n      child = new XMLText(this, value);\n      this.children.push(child);\n      return this;\n    };\n    XMLNode.prototype.cdata = function (value) {\n      var child;\n      child = new XMLCData(this, value);\n      this.children.push(child);\n      return this;\n    };\n    XMLNode.prototype.comment = function (value) {\n      var child;\n      child = new XMLComment(this, value);\n      this.children.push(child);\n      return this;\n    };\n    XMLNode.prototype.commentBefore = function (value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n    XMLNode.prototype.commentAfter = function (value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n    XMLNode.prototype.raw = function (value) {\n      var child;\n      child = new XMLRaw(this, value);\n      this.children.push(child);\n      return this;\n    };\n    XMLNode.prototype.dummy = function () {\n      var child;\n      child = new XMLDummy(this);\n      return child;\n    };\n    XMLNode.prototype.instruction = function (target, value) {\n      var insTarget, insValue, instruction, j, len;\n      if (target != null) {\n        target = getValue(target);\n      }\n      if (value != null) {\n        value = getValue(value);\n      }\n      if (Array.isArray(target)) {\n        for (j = 0, len = target.length; j < len; j++) {\n          insTarget = target[j];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        instruction = new XMLProcessingInstruction(this, target, value);\n        this.children.push(instruction);\n      }\n      return this;\n    };\n    XMLNode.prototype.instructionBefore = function (target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n    XMLNode.prototype.instructionAfter = function (target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n    XMLNode.prototype.declaration = function (version, encoding, standalone) {\n      var doc, xmldec;\n      doc = this.document();\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n      if (doc.children.length === 0) {\n        doc.children.unshift(xmldec);\n      } else if (doc.children[0].type === NodeType.Declaration) {\n        doc.children[0] = xmldec;\n      } else {\n        doc.children.unshift(xmldec);\n      }\n      return doc.root() || doc;\n    };\n    XMLNode.prototype.dtd = function (pubID, sysID) {\n      var child, doc, doctype, i, j, k, len, len1, ref2, ref3;\n      doc = this.document();\n      doctype = new XMLDocType(doc, pubID, sysID);\n      ref2 = doc.children;\n      for (i = j = 0, len = ref2.length; j < len; i = ++j) {\n        child = ref2[i];\n        if (child.type === NodeType.DocType) {\n          doc.children[i] = doctype;\n          return doctype;\n        }\n      }\n      ref3 = doc.children;\n      for (i = k = 0, len1 = ref3.length; k < len1; i = ++k) {\n        child = ref3[i];\n        if (child.isRoot) {\n          doc.children.splice(i, 0, doctype);\n          return doctype;\n        }\n      }\n      doc.children.push(doctype);\n      return doctype;\n    };\n    XMLNode.prototype.up = function () {\n      if (this.isRoot) {\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n      }\n      return this.parent;\n    };\n    XMLNode.prototype.root = function () {\n      var node;\n      node = this;\n      while (node) {\n        if (node.type === NodeType.Document) {\n          return node.rootObject;\n        } else if (node.isRoot) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n    XMLNode.prototype.document = function () {\n      var node;\n      node = this;\n      while (node) {\n        if (node.type === NodeType.Document) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n    XMLNode.prototype.end = function (options) {\n      return this.document().end(options);\n    };\n    XMLNode.prototype.prev = function () {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i < 1) {\n        throw new Error(\"Already at the first node. \" + this.debugInfo());\n      }\n      return this.parent.children[i - 1];\n    };\n    XMLNode.prototype.next = function () {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node. \" + this.debugInfo());\n      }\n      return this.parent.children[i + 1];\n    };\n    XMLNode.prototype.importDocument = function (doc) {\n      var clonedRoot;\n      clonedRoot = doc.root().clone();\n      clonedRoot.parent = this;\n      clonedRoot.isRoot = false;\n      this.children.push(clonedRoot);\n      return this;\n    };\n    XMLNode.prototype.debugInfo = function (name) {\n      var ref2, ref3;\n      name = name || this.name;\n      if (name == null && !((ref2 = this.parent) != null ? ref2.name : void 0)) {\n        return \"\";\n      } else if (name == null) {\n        return \"parent: <\" + this.parent.name + \">\";\n      } else if (!((ref3 = this.parent) != null ? ref3.name : void 0)) {\n        return \"node: <\" + name + \">\";\n      } else {\n        return \"node: <\" + name + \">, parent: <\" + this.parent.name + \">\";\n      }\n    };\n    XMLNode.prototype.ele = function (name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n    XMLNode.prototype.nod = function (name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n    XMLNode.prototype.txt = function (value) {\n      return this.text(value);\n    };\n    XMLNode.prototype.dat = function (value) {\n      return this.cdata(value);\n    };\n    XMLNode.prototype.com = function (value) {\n      return this.comment(value);\n    };\n    XMLNode.prototype.ins = function (target, value) {\n      return this.instruction(target, value);\n    };\n    XMLNode.prototype.doc = function () {\n      return this.document();\n    };\n    XMLNode.prototype.dec = function (version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n    XMLNode.prototype.e = function (name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n    XMLNode.prototype.n = function (name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n    XMLNode.prototype.t = function (value) {\n      return this.text(value);\n    };\n    XMLNode.prototype.d = function (value) {\n      return this.cdata(value);\n    };\n    XMLNode.prototype.c = function (value) {\n      return this.comment(value);\n    };\n    XMLNode.prototype.r = function (value) {\n      return this.raw(value);\n    };\n    XMLNode.prototype.i = function (target, value) {\n      return this.instruction(target, value);\n    };\n    XMLNode.prototype.u = function () {\n      return this.up();\n    };\n    XMLNode.prototype.importXMLBuilder = function (doc) {\n      return this.importDocument(doc);\n    };\n    XMLNode.prototype.replaceChild = function (newChild, oldChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLNode.prototype.removeChild = function (oldChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLNode.prototype.appendChild = function (newChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLNode.prototype.hasChildNodes = function () {\n      return this.children.length !== 0;\n    };\n    XMLNode.prototype.cloneNode = function (deep) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLNode.prototype.normalize = function () {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLNode.prototype.isSupported = function (feature, version) {\n      return true;\n    };\n    XMLNode.prototype.hasAttributes = function () {\n      return this.attribs.length !== 0;\n    };\n    XMLNode.prototype.compareDocumentPosition = function (other) {\n      var ref, res;\n      ref = this;\n      if (ref === other) {\n        return 0;\n      } else if (this.document() !== other.document()) {\n        res = DocumentPosition.Disconnected | DocumentPosition.ImplementationSpecific;\n        if (Math.random() < 0.5) {\n          res |= DocumentPosition.Preceding;\n        } else {\n          res |= DocumentPosition.Following;\n        }\n        return res;\n      } else if (ref.isAncestor(other)) {\n        return DocumentPosition.Contains | DocumentPosition.Preceding;\n      } else if (ref.isDescendant(other)) {\n        return DocumentPosition.Contains | DocumentPosition.Following;\n      } else if (ref.isPreceding(other)) {\n        return DocumentPosition.Preceding;\n      } else {\n        return DocumentPosition.Following;\n      }\n    };\n    XMLNode.prototype.isSameNode = function (other) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLNode.prototype.lookupPrefix = function (namespaceURI) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLNode.prototype.isDefaultNamespace = function (namespaceURI) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLNode.prototype.lookupNamespaceURI = function (prefix) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLNode.prototype.isEqualNode = function (node) {\n      var i, j, ref2;\n      if (node.nodeType !== this.nodeType) {\n        return false;\n      }\n      if (node.children.length !== this.children.length) {\n        return false;\n      }\n      for (i = j = 0, ref2 = this.children.length - 1; 0 <= ref2 ? j <= ref2 : j >= ref2; i = 0 <= ref2 ? ++j : --j) {\n        if (!this.children[i].isEqualNode(node.children[i])) {\n          return false;\n        }\n      }\n      return true;\n    };\n    XMLNode.prototype.getFeature = function (feature, version) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLNode.prototype.setUserData = function (key, data, handler) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLNode.prototype.getUserData = function (key) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLNode.prototype.contains = function (other) {\n      if (!other) {\n        return false;\n      }\n      return other === this || this.isDescendant(other);\n    };\n    XMLNode.prototype.isDescendant = function (node) {\n      var child, isDescendantChild, j, len, ref2;\n      ref2 = this.children;\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        if (node === child) {\n          return true;\n        }\n        isDescendantChild = child.isDescendant(node);\n        if (isDescendantChild) {\n          return true;\n        }\n      }\n      return false;\n    };\n    XMLNode.prototype.isAncestor = function (node) {\n      return node.isDescendant(this);\n    };\n    XMLNode.prototype.isPreceding = function (node) {\n      var nodePos, thisPos;\n      nodePos = this.treePosition(node);\n      thisPos = this.treePosition(this);\n      if (nodePos === -1 || thisPos === -1) {\n        return false;\n      } else {\n        return nodePos < thisPos;\n      }\n    };\n    XMLNode.prototype.isFollowing = function (node) {\n      var nodePos, thisPos;\n      nodePos = this.treePosition(node);\n      thisPos = this.treePosition(this);\n      if (nodePos === -1 || thisPos === -1) {\n        return false;\n      } else {\n        return nodePos > thisPos;\n      }\n    };\n    XMLNode.prototype.treePosition = function (node) {\n      var found, pos;\n      pos = 0;\n      found = false;\n      this.foreachTreeNode(this.document(), function (childNode) {\n        pos++;\n        if (!found && childNode === node) {\n          return found = true;\n        }\n      });\n      if (found) {\n        return pos;\n      } else {\n        return -1;\n      }\n    };\n    XMLNode.prototype.foreachTreeNode = function (node, func) {\n      var child, j, len, ref2, res;\n      node || (node = this.document());\n      ref2 = node.children;\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        if (res = func(child)) {\n          return res;\n        } else {\n          res = this.foreachTreeNode(child, func);\n          if (res) {\n            return res;\n          }\n        }\n      }\n    };\n    return XMLNode;\n  }();\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var XMLStringifier,\n    bind = function (fn, me) {\n      return function () {\n        return fn.apply(me, arguments);\n      };\n    },\n    hasProp = {}.hasOwnProperty;\n  module.exports = XMLStringifier = function () {\n    function XMLStringifier(options) {\n      this.assertLegalName = bind(this.assertLegalName, this);\n      this.assertLegalChar = bind(this.assertLegalChar, this);\n      var key, ref, value;\n      options || (options = {});\n      this.options = options;\n      if (!this.options.version) {\n        this.options.version = '1.0';\n      }\n      ref = options.stringify || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n    }\n    XMLStringifier.prototype.name = function (val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalName('' + val || '');\n    };\n    XMLStringifier.prototype.text = function (val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar(this.textEscape('' + val || ''));\n    };\n    XMLStringifier.prototype.cdata = function (val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      val = val.replace(']]>', ']]]]><![CDATA[>');\n      return this.assertLegalChar(val);\n    };\n    XMLStringifier.prototype.comment = function (val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (val.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n    XMLStringifier.prototype.raw = function (val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return '' + val || '';\n    };\n    XMLStringifier.prototype.attValue = function (val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar(this.attEscape(val = '' + val || ''));\n    };\n    XMLStringifier.prototype.insTarget = function (val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n    XMLStringifier.prototype.insValue = function (val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (val.match(/\\?>/)) {\n        throw new Error(\"Invalid processing instruction value: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n    XMLStringifier.prototype.xmlVersion = function (val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (!val.match(/1\\.[0-9]+/)) {\n        throw new Error(\"Invalid version number: \" + val);\n      }\n      return val;\n    };\n    XMLStringifier.prototype.xmlEncoding = function (val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n        throw new Error(\"Invalid encoding: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n    XMLStringifier.prototype.xmlStandalone = function (val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      if (val) {\n        return \"yes\";\n      } else {\n        return \"no\";\n      }\n    };\n    XMLStringifier.prototype.dtdPubID = function (val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n    XMLStringifier.prototype.dtdSysID = function (val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n    XMLStringifier.prototype.dtdElementValue = function (val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n    XMLStringifier.prototype.dtdAttType = function (val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n    XMLStringifier.prototype.dtdAttDefault = function (val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n    XMLStringifier.prototype.dtdEntityValue = function (val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n    XMLStringifier.prototype.dtdNData = function (val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n    XMLStringifier.prototype.convertAttKey = '@';\n    XMLStringifier.prototype.convertPIKey = '?';\n    XMLStringifier.prototype.convertTextKey = '#text';\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n    XMLStringifier.prototype.convertRawKey = '#raw';\n    XMLStringifier.prototype.assertLegalChar = function (str) {\n      var regex, res;\n      if (this.options.noValidation) {\n        return str;\n      }\n      regex = '';\n      if (this.options.version === '1.0') {\n        regex = /[\\0-\\x08\\x0B\\f\\x0E-\\x1F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n        if (res = str.match(regex)) {\n          throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n        }\n      } else if (this.options.version === '1.1') {\n        regex = /[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n        if (res = str.match(regex)) {\n          throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n        }\n      }\n      return str;\n    };\n    XMLStringifier.prototype.assertLegalName = function (str) {\n      var regex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      this.assertLegalChar(str);\n      regex = /^([:A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])([\\x2D\\.0-:A-Z_a-z\\xB7\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u203F\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])*$/;\n      if (!str.match(regex)) {\n        throw new Error(\"Invalid character in name\");\n      }\n      return str;\n    };\n    XMLStringifier.prototype.textEscape = function (str) {\n      var ampregex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      ampregex = this.options.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n    };\n    XMLStringifier.prototype.attEscape = function (str) {\n      var ampregex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      ampregex = this.options.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n    };\n    return XMLStringifier;\n  }();\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  module.exports = {\n    None: 0,\n    OpenTag: 1,\n    InsideTag: 2,\n    CloseTag: 3\n  };\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n    WriterState,\n    XMLCData,\n    XMLComment,\n    XMLDTDAttList,\n    XMLDTDElement,\n    XMLDTDEntity,\n    XMLDTDNotation,\n    XMLDeclaration,\n    XMLDocType,\n    XMLDummy,\n    XMLElement,\n    XMLProcessingInstruction,\n    XMLRaw,\n    XMLText,\n    XMLWriterBase,\n    assign,\n    hasProp = {}.hasOwnProperty;\n  assign = require('./Utility').assign;\n  NodeType = require('./NodeType');\n  XMLDeclaration = require('./XMLDeclaration');\n  XMLDocType = require('./XMLDocType');\n  XMLCData = require('./XMLCData');\n  XMLComment = require('./XMLComment');\n  XMLElement = require('./XMLElement');\n  XMLRaw = require('./XMLRaw');\n  XMLText = require('./XMLText');\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n  XMLDummy = require('./XMLDummy');\n  XMLDTDAttList = require('./XMLDTDAttList');\n  XMLDTDElement = require('./XMLDTDElement');\n  XMLDTDEntity = require('./XMLDTDEntity');\n  XMLDTDNotation = require('./XMLDTDNotation');\n  WriterState = require('./WriterState');\n  module.exports = XMLWriterBase = function () {\n    function XMLWriterBase(options) {\n      var key, ref, value;\n      options || (options = {});\n      this.options = options;\n      ref = options.writer || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[\"_\" + key] = this[key];\n        this[key] = value;\n      }\n    }\n    XMLWriterBase.prototype.filterOptions = function (options) {\n      var filteredOptions, ref, ref1, ref2, ref3, ref4, ref5, ref6;\n      options || (options = {});\n      options = assign({}, this.options, options);\n      filteredOptions = {\n        writer: this\n      };\n      filteredOptions.pretty = options.pretty || false;\n      filteredOptions.allowEmpty = options.allowEmpty || false;\n      filteredOptions.indent = (ref = options.indent) != null ? ref : '  ';\n      filteredOptions.newline = (ref1 = options.newline) != null ? ref1 : '\\n';\n      filteredOptions.offset = (ref2 = options.offset) != null ? ref2 : 0;\n      filteredOptions.dontPrettyTextNodes = (ref3 = (ref4 = options.dontPrettyTextNodes) != null ? ref4 : options.dontprettytextnodes) != null ? ref3 : 0;\n      filteredOptions.spaceBeforeSlash = (ref5 = (ref6 = options.spaceBeforeSlash) != null ? ref6 : options.spacebeforeslash) != null ? ref5 : '';\n      if (filteredOptions.spaceBeforeSlash === true) {\n        filteredOptions.spaceBeforeSlash = ' ';\n      }\n      filteredOptions.suppressPrettyCount = 0;\n      filteredOptions.user = {};\n      filteredOptions.state = WriterState.None;\n      return filteredOptions;\n    };\n    XMLWriterBase.prototype.indent = function (node, options, level) {\n      var indentLevel;\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else if (options.pretty) {\n        indentLevel = (level || 0) + options.offset + 1;\n        if (indentLevel > 0) {\n          return new Array(indentLevel).join(options.indent);\n        }\n      }\n      return '';\n    };\n    XMLWriterBase.prototype.endline = function (node, options, level) {\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else {\n        return options.newline;\n      }\n    };\n    XMLWriterBase.prototype.attribute = function (att, options, level) {\n      var r;\n      this.openAttribute(att, options, level);\n      r = ' ' + att.name + '=\"' + att.value + '\"';\n      this.closeAttribute(att, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.cdata = function (node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<![CDATA[';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ']]>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.comment = function (node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!-- ';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ' -->' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.declaration = function (node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?xml';\n      options.state = WriterState.InsideTag;\n      r += ' version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.docType = function (node, options, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      r += '<!DOCTYPE ' + node.root().name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        r += ']';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.element = function (node, options, level) {\n      var att, child, childNodeCount, firstChildNode, i, j, len, len1, name, prettySuppressed, r, ref, ref1, ref2;\n      level || (level = 0);\n      prettySuppressed = false;\n      r = '';\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r += this.indent(node, options, level) + '<' + node.name;\n      ref = node.attribs;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att, options, level);\n      }\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function (e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\n      })) {\n        if (options.allowEmpty) {\n          r += '>';\n          options.state = WriterState.CloseTag;\n          r += '</' + node.name + '>' + this.endline(node, options, level);\n        } else {\n          options.state = WriterState.CloseTag;\n          r += options.spaceBeforeSlash + '/>' + this.endline(node, options, level);\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && firstChildNode.value != null) {\n        r += '>';\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        r += this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        r += '</' + node.name + '>' + this.endline(node, options, level);\n      } else {\n        if (options.dontPrettyTextNodes) {\n          ref1 = node.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            if ((child.type === NodeType.Text || child.type === NodeType.Raw) && child.value != null) {\n              options.suppressPrettyCount++;\n              prettySuppressed = true;\n              break;\n            }\n          }\n        }\n        r += '>' + this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref2 = node.children;\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        r += this.indent(node, options, level) + '</' + node.name + '>';\n        if (prettySuppressed) {\n          options.suppressPrettyCount--;\n        }\n        r += this.endline(node, options, level);\n        options.state = WriterState.None;\n      }\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.writeChildNode = function (node, options, level) {\n      switch (node.type) {\n        case NodeType.CData:\n          return this.cdata(node, options, level);\n        case NodeType.Comment:\n          return this.comment(node, options, level);\n        case NodeType.Element:\n          return this.element(node, options, level);\n        case NodeType.Raw:\n          return this.raw(node, options, level);\n        case NodeType.Text:\n          return this.text(node, options, level);\n        case NodeType.ProcessingInstruction:\n          return this.processingInstruction(node, options, level);\n        case NodeType.Dummy:\n          return '';\n        case NodeType.Declaration:\n          return this.declaration(node, options, level);\n        case NodeType.DocType:\n          return this.docType(node, options, level);\n        case NodeType.AttributeDeclaration:\n          return this.dtdAttList(node, options, level);\n        case NodeType.ElementDeclaration:\n          return this.dtdElement(node, options, level);\n        case NodeType.EntityDeclaration:\n          return this.dtdEntity(node, options, level);\n        case NodeType.NotationDeclaration:\n          return this.dtdNotation(node, options, level);\n        default:\n          throw new Error(\"Unknown XML node type: \" + node.constructor.name);\n      }\n    };\n    XMLWriterBase.prototype.processingInstruction = function (node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?';\n      options.state = WriterState.InsideTag;\n      r += node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.raw = function (node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.text = function (node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.dtdAttList = function (node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ATTLIST';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.dtdElement = function (node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ELEMENT';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name + ' ' + node.value;\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.dtdEntity = function (node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ENTITY';\n      options.state = WriterState.InsideTag;\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.dtdNotation = function (node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!NOTATION';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n    XMLWriterBase.prototype.openNode = function (node, options, level) {};\n    XMLWriterBase.prototype.closeNode = function (node, options, level) {};\n    XMLWriterBase.prototype.openAttribute = function (att, options, level) {};\n    XMLWriterBase.prototype.closeAttribute = function (att, options, level) {};\n    return XMLWriterBase;\n  }();\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var XMLStringWriter,\n    XMLWriterBase,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  XMLWriterBase = require('./XMLWriterBase');\n  module.exports = XMLStringWriter = function (superClass) {\n    extend(XMLStringWriter, superClass);\n    function XMLStringWriter(options) {\n      XMLStringWriter.__super__.constructor.call(this, options);\n    }\n    XMLStringWriter.prototype.document = function (doc, options) {\n      var child, i, len, r, ref;\n      options = this.filterOptions(options);\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        r += this.writeChildNode(child, options, 0);\n      }\n      if (options.pretty && r.slice(-options.newline.length) === options.newline) {\n        r = r.slice(0, -options.newline.length);\n      }\n      return r;\n    };\n    return XMLStringWriter;\n  }(XMLWriterBase);\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n    XMLDOMConfiguration,\n    XMLDOMImplementation,\n    XMLDocument,\n    XMLNode,\n    XMLStringWriter,\n    XMLStringifier,\n    isPlainObject,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  isPlainObject = require('./Utility').isPlainObject;\n  XMLDOMImplementation = require('./XMLDOMImplementation');\n  XMLDOMConfiguration = require('./XMLDOMConfiguration');\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType');\n  XMLStringifier = require('./XMLStringifier');\n  XMLStringWriter = require('./XMLStringWriter');\n  module.exports = XMLDocument = function (superClass) {\n    extend(XMLDocument, superClass);\n    function XMLDocument(options) {\n      XMLDocument.__super__.constructor.call(this, null);\n      this.name = \"#document\";\n      this.type = NodeType.Document;\n      this.documentURI = null;\n      this.domConfig = new XMLDOMConfiguration();\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.stringify = new XMLStringifier(options);\n    }\n    Object.defineProperty(XMLDocument.prototype, 'implementation', {\n      value: new XMLDOMImplementation()\n    });\n    Object.defineProperty(XMLDocument.prototype, 'doctype', {\n      get: function () {\n        var child, i, len, ref;\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.DocType) {\n            return child;\n          }\n        }\n        return null;\n      }\n    });\n    Object.defineProperty(XMLDocument.prototype, 'documentElement', {\n      get: function () {\n        return this.rootObject || null;\n      }\n    });\n    Object.defineProperty(XMLDocument.prototype, 'inputEncoding', {\n      get: function () {\n        return null;\n      }\n    });\n    Object.defineProperty(XMLDocument.prototype, 'strictErrorChecking', {\n      get: function () {\n        return false;\n      }\n    });\n    Object.defineProperty(XMLDocument.prototype, 'xmlEncoding', {\n      get: function () {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].encoding;\n        } else {\n          return null;\n        }\n      }\n    });\n    Object.defineProperty(XMLDocument.prototype, 'xmlStandalone', {\n      get: function () {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].standalone === 'yes';\n        } else {\n          return false;\n        }\n      }\n    });\n    Object.defineProperty(XMLDocument.prototype, 'xmlVersion', {\n      get: function () {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].version;\n        } else {\n          return \"1.0\";\n        }\n      }\n    });\n    Object.defineProperty(XMLDocument.prototype, 'URL', {\n      get: function () {\n        return this.documentURI;\n      }\n    });\n    Object.defineProperty(XMLDocument.prototype, 'origin', {\n      get: function () {\n        return null;\n      }\n    });\n    Object.defineProperty(XMLDocument.prototype, 'compatMode', {\n      get: function () {\n        return null;\n      }\n    });\n    Object.defineProperty(XMLDocument.prototype, 'characterSet', {\n      get: function () {\n        return null;\n      }\n    });\n    Object.defineProperty(XMLDocument.prototype, 'contentType', {\n      get: function () {\n        return null;\n      }\n    });\n    XMLDocument.prototype.end = function (writer) {\n      var writerOptions;\n      writerOptions = {};\n      if (!writer) {\n        writer = this.options.writer;\n      } else if (isPlainObject(writer)) {\n        writerOptions = writer;\n        writer = this.options.writer;\n      }\n      return writer.document(this, writer.filterOptions(writerOptions));\n    };\n    XMLDocument.prototype.toString = function (options) {\n      return this.options.writer.document(this, this.options.writer.filterOptions(options));\n    };\n    XMLDocument.prototype.createElement = function (tagName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLDocument.prototype.createDocumentFragment = function () {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLDocument.prototype.createTextNode = function (data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLDocument.prototype.createComment = function (data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLDocument.prototype.createCDATASection = function (data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLDocument.prototype.createProcessingInstruction = function (target, data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLDocument.prototype.createAttribute = function (name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLDocument.prototype.createEntityReference = function (name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLDocument.prototype.getElementsByTagName = function (tagname) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLDocument.prototype.importNode = function (importedNode, deep) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLDocument.prototype.createElementNS = function (namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLDocument.prototype.createAttributeNS = function (namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLDocument.prototype.getElementsByTagNameNS = function (namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLDocument.prototype.getElementById = function (elementId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLDocument.prototype.adoptNode = function (source) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLDocument.prototype.normalizeDocument = function () {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLDocument.prototype.renameNode = function (node, namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLDocument.prototype.getElementsByClassName = function (classNames) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLDocument.prototype.createEvent = function (eventInterface) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLDocument.prototype.createRange = function () {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLDocument.prototype.createNodeIterator = function (root, whatToShow, filter) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    XMLDocument.prototype.createTreeWalker = function (root, whatToShow, filter) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n    return XMLDocument;\n  }(XMLNode);\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n    WriterState,\n    XMLAttribute,\n    XMLCData,\n    XMLComment,\n    XMLDTDAttList,\n    XMLDTDElement,\n    XMLDTDEntity,\n    XMLDTDNotation,\n    XMLDeclaration,\n    XMLDocType,\n    XMLDocument,\n    XMLDocumentCB,\n    XMLElement,\n    XMLProcessingInstruction,\n    XMLRaw,\n    XMLStringWriter,\n    XMLStringifier,\n    XMLText,\n    getValue,\n    isFunction,\n    isObject,\n    isPlainObject,\n    ref,\n    hasProp = {}.hasOwnProperty;\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject, getValue = ref.getValue;\n  NodeType = require('./NodeType');\n  XMLDocument = require('./XMLDocument');\n  XMLElement = require('./XMLElement');\n  XMLCData = require('./XMLCData');\n  XMLComment = require('./XMLComment');\n  XMLRaw = require('./XMLRaw');\n  XMLText = require('./XMLText');\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n  XMLDeclaration = require('./XMLDeclaration');\n  XMLDocType = require('./XMLDocType');\n  XMLDTDAttList = require('./XMLDTDAttList');\n  XMLDTDEntity = require('./XMLDTDEntity');\n  XMLDTDElement = require('./XMLDTDElement');\n  XMLDTDNotation = require('./XMLDTDNotation');\n  XMLAttribute = require('./XMLAttribute');\n  XMLStringifier = require('./XMLStringifier');\n  XMLStringWriter = require('./XMLStringWriter');\n  WriterState = require('./WriterState');\n  module.exports = XMLDocumentCB = function () {\n    function XMLDocumentCB(options, onData, onEnd) {\n      var writerOptions;\n      this.name = \"?xml\";\n      this.type = NodeType.Document;\n      options || (options = {});\n      writerOptions = {};\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      } else if (isPlainObject(options.writer)) {\n        writerOptions = options.writer;\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.writer = options.writer;\n      this.writerOptions = this.writer.filterOptions(writerOptions);\n      this.stringify = new XMLStringifier(options);\n      this.onDataCallback = onData || function () {};\n      this.onEndCallback = onEnd || function () {};\n      this.currentNode = null;\n      this.currentLevel = -1;\n      this.openTags = {};\n      this.documentStarted = false;\n      this.documentCompleted = false;\n      this.root = null;\n    }\n    XMLDocumentCB.prototype.createChildNode = function (node) {\n      var att, attName, attributes, child, i, len, ref1, ref2;\n      switch (node.type) {\n        case NodeType.CData:\n          this.cdata(node.value);\n          break;\n        case NodeType.Comment:\n          this.comment(node.value);\n          break;\n        case NodeType.Element:\n          attributes = {};\n          ref1 = node.attribs;\n          for (attName in ref1) {\n            if (!hasProp.call(ref1, attName)) continue;\n            att = ref1[attName];\n            attributes[attName] = att.value;\n          }\n          this.node(node.name, attributes);\n          break;\n        case NodeType.Dummy:\n          this.dummy();\n          break;\n        case NodeType.Raw:\n          this.raw(node.value);\n          break;\n        case NodeType.Text:\n          this.text(node.value);\n          break;\n        case NodeType.ProcessingInstruction:\n          this.instruction(node.target, node.value);\n          break;\n        default:\n          throw new Error(\"This XML node type is not supported in a JS object: \" + node.constructor.name);\n      }\n      ref2 = node.children;\n      for (i = 0, len = ref2.length; i < len; i++) {\n        child = ref2[i];\n        this.createChildNode(child);\n        if (child.type === NodeType.Element) {\n          this.up();\n        }\n      }\n      return this;\n    };\n    XMLDocumentCB.prototype.dummy = function () {\n      return this;\n    };\n    XMLDocumentCB.prototype.node = function (name, attributes, text) {\n      var ref1;\n      if (name == null) {\n        throw new Error(\"Missing node name.\");\n      }\n      if (this.root && this.currentLevel === -1) {\n        throw new Error(\"Document can only have one root node. \" + this.debugInfo(name));\n      }\n      this.openCurrent();\n      name = getValue(name);\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      this.currentNode = new XMLElement(this, name, attributes);\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      if (text != null) {\n        this.text(text);\n      }\n      return this;\n    };\n    XMLDocumentCB.prototype.element = function (name, attributes, text) {\n      var child, i, len, oldValidationFlag, ref1, root;\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        this.dtdElement.apply(this, arguments);\n      } else {\n        if (Array.isArray(name) || isObject(name) || isFunction(name)) {\n          oldValidationFlag = this.options.noValidation;\n          this.options.noValidation = true;\n          root = new XMLDocument(this.options).element('TEMP_ROOT');\n          root.element(name);\n          this.options.noValidation = oldValidationFlag;\n          ref1 = root.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            this.createChildNode(child);\n            if (child.type === NodeType.Element) {\n              this.up();\n            }\n          }\n        } else {\n          this.node(name, attributes, text);\n        }\n      }\n      return this;\n    };\n    XMLDocumentCB.prototype.attribute = function (name, value) {\n      var attName, attValue;\n      if (!this.currentNode || this.currentNode.children) {\n        throw new Error(\"att() can only be used immediately after an ele() call in callback mode. \" + this.debugInfo(name));\n      }\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (this.options.keepNullAttributes && value == null) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, \"\");\n        } else if (value != null) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n    XMLDocumentCB.prototype.text = function (value) {\n      var node;\n      this.openCurrent();\n      node = new XMLText(this, value);\n      this.onData(this.writer.text(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n    XMLDocumentCB.prototype.cdata = function (value) {\n      var node;\n      this.openCurrent();\n      node = new XMLCData(this, value);\n      this.onData(this.writer.cdata(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n    XMLDocumentCB.prototype.comment = function (value) {\n      var node;\n      this.openCurrent();\n      node = new XMLComment(this, value);\n      this.onData(this.writer.comment(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n    XMLDocumentCB.prototype.raw = function (value) {\n      var node;\n      this.openCurrent();\n      node = new XMLRaw(this, value);\n      this.onData(this.writer.raw(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n    XMLDocumentCB.prototype.instruction = function (target, value) {\n      var i, insTarget, insValue, len, node;\n      this.openCurrent();\n      if (target != null) {\n        target = getValue(target);\n      }\n      if (value != null) {\n        value = getValue(value);\n      }\n      if (Array.isArray(target)) {\n        for (i = 0, len = target.length; i < len; i++) {\n          insTarget = target[i];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        node = new XMLProcessingInstruction(this, target, value);\n        this.onData(this.writer.processingInstruction(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      }\n      return this;\n    };\n    XMLDocumentCB.prototype.declaration = function (version, encoding, standalone) {\n      var node;\n      this.openCurrent();\n      if (this.documentStarted) {\n        throw new Error(\"declaration() must be the first node.\");\n      }\n      node = new XMLDeclaration(this, version, encoding, standalone);\n      this.onData(this.writer.declaration(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n    XMLDocumentCB.prototype.doctype = function (root, pubID, sysID) {\n      this.openCurrent();\n      if (root == null) {\n        throw new Error(\"Missing root node name.\");\n      }\n      if (this.root) {\n        throw new Error(\"dtd() must come before the root node.\");\n      }\n      this.currentNode = new XMLDocType(this, pubID, sysID);\n      this.currentNode.rootNodeName = root;\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      return this;\n    };\n    XMLDocumentCB.prototype.dtdElement = function (name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDElement(this, name, value);\n      this.onData(this.writer.dtdElement(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n    XMLDocumentCB.prototype.attList = function (elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.onData(this.writer.dtdAttList(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n    XMLDocumentCB.prototype.entity = function (name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, false, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n    XMLDocumentCB.prototype.pEntity = function (name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, true, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n    XMLDocumentCB.prototype.notation = function (name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDNotation(this, name, value);\n      this.onData(this.writer.dtdNotation(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n    XMLDocumentCB.prototype.up = function () {\n      if (this.currentLevel < 0) {\n        throw new Error(\"The document node has no parent.\");\n      }\n      if (this.currentNode) {\n        if (this.currentNode.children) {\n          this.closeNode(this.currentNode);\n        } else {\n          this.openNode(this.currentNode);\n        }\n        this.currentNode = null;\n      } else {\n        this.closeNode(this.openTags[this.currentLevel]);\n      }\n      delete this.openTags[this.currentLevel];\n      this.currentLevel--;\n      return this;\n    };\n    XMLDocumentCB.prototype.end = function () {\n      while (this.currentLevel >= 0) {\n        this.up();\n      }\n      return this.onEnd();\n    };\n    XMLDocumentCB.prototype.openCurrent = function () {\n      if (this.currentNode) {\n        this.currentNode.children = true;\n        return this.openNode(this.currentNode);\n      }\n    };\n    XMLDocumentCB.prototype.openNode = function (node) {\n      var att, chunk, name, ref1;\n      if (!node.isOpen) {\n        if (!this.root && this.currentLevel === 0 && node.type === NodeType.Element) {\n          this.root = node;\n        }\n        chunk = '';\n        if (node.type === NodeType.Element) {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<' + node.name;\n          ref1 = node.attribs;\n          for (name in ref1) {\n            if (!hasProp.call(ref1, name)) continue;\n            att = ref1[name];\n            chunk += this.writer.attribute(att, this.writerOptions, this.currentLevel);\n          }\n          chunk += (node.children ? '>' : '/>') + this.writer.endline(node, this.writerOptions, this.currentLevel);\n          this.writerOptions.state = WriterState.InsideTag;\n        } else {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<!DOCTYPE ' + node.rootNodeName;\n          if (node.pubID && node.sysID) {\n            chunk += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n          } else if (node.sysID) {\n            chunk += ' SYSTEM \"' + node.sysID + '\"';\n          }\n          if (node.children) {\n            chunk += ' [';\n            this.writerOptions.state = WriterState.InsideTag;\n          } else {\n            this.writerOptions.state = WriterState.CloseTag;\n            chunk += '>';\n          }\n          chunk += this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n        this.onData(chunk, this.currentLevel);\n        return node.isOpen = true;\n      }\n    };\n    XMLDocumentCB.prototype.closeNode = function (node) {\n      var chunk;\n      if (!node.isClosed) {\n        chunk = '';\n        this.writerOptions.state = WriterState.CloseTag;\n        if (node.type === NodeType.Element) {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '</' + node.name + '>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\n        } else {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + ']>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n        this.writerOptions.state = WriterState.None;\n        this.onData(chunk, this.currentLevel);\n        return node.isClosed = true;\n      }\n    };\n    XMLDocumentCB.prototype.onData = function (chunk, level) {\n      this.documentStarted = true;\n      return this.onDataCallback(chunk, level + 1);\n    };\n    XMLDocumentCB.prototype.onEnd = function () {\n      this.documentCompleted = true;\n      return this.onEndCallback();\n    };\n    XMLDocumentCB.prototype.debugInfo = function (name) {\n      if (name == null) {\n        return \"\";\n      } else {\n        return \"node: <\" + name + \">\";\n      }\n    };\n    XMLDocumentCB.prototype.ele = function () {\n      return this.element.apply(this, arguments);\n    };\n    XMLDocumentCB.prototype.nod = function (name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n    XMLDocumentCB.prototype.txt = function (value) {\n      return this.text(value);\n    };\n    XMLDocumentCB.prototype.dat = function (value) {\n      return this.cdata(value);\n    };\n    XMLDocumentCB.prototype.com = function (value) {\n      return this.comment(value);\n    };\n    XMLDocumentCB.prototype.ins = function (target, value) {\n      return this.instruction(target, value);\n    };\n    XMLDocumentCB.prototype.dec = function (version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n    XMLDocumentCB.prototype.dtd = function (root, pubID, sysID) {\n      return this.doctype(root, pubID, sysID);\n    };\n    XMLDocumentCB.prototype.e = function (name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n    XMLDocumentCB.prototype.n = function (name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n    XMLDocumentCB.prototype.t = function (value) {\n      return this.text(value);\n    };\n    XMLDocumentCB.prototype.d = function (value) {\n      return this.cdata(value);\n    };\n    XMLDocumentCB.prototype.c = function (value) {\n      return this.comment(value);\n    };\n    XMLDocumentCB.prototype.r = function (value) {\n      return this.raw(value);\n    };\n    XMLDocumentCB.prototype.i = function (target, value) {\n      return this.instruction(target, value);\n    };\n    XMLDocumentCB.prototype.att = function () {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n    XMLDocumentCB.prototype.a = function () {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n    XMLDocumentCB.prototype.ent = function (name, value) {\n      return this.entity(name, value);\n    };\n    XMLDocumentCB.prototype.pent = function (name, value) {\n      return this.pEntity(name, value);\n    };\n    XMLDocumentCB.prototype.not = function (name, value) {\n      return this.notation(name, value);\n    };\n    return XMLDocumentCB;\n  }();\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n    WriterState,\n    XMLStreamWriter,\n    XMLWriterBase,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  NodeType = require('./NodeType');\n  XMLWriterBase = require('./XMLWriterBase');\n  WriterState = require('./WriterState');\n  module.exports = XMLStreamWriter = function (superClass) {\n    extend(XMLStreamWriter, superClass);\n    function XMLStreamWriter(stream, options) {\n      this.stream = stream;\n      XMLStreamWriter.__super__.constructor.call(this, options);\n    }\n    XMLStreamWriter.prototype.endline = function (node, options, level) {\n      if (node.isLastRootNode && options.state === WriterState.CloseTag) {\n        return '';\n      } else {\n        return XMLStreamWriter.__super__.endline.call(this, node, options, level);\n      }\n    };\n    XMLStreamWriter.prototype.document = function (doc, options) {\n      var child, i, j, k, len, len1, ref, ref1, results;\n      ref = doc.children;\n      for (i = j = 0, len = ref.length; j < len; i = ++j) {\n        child = ref[i];\n        child.isLastRootNode = i === doc.children.length - 1;\n      }\n      options = this.filterOptions(options);\n      ref1 = doc.children;\n      results = [];\n      for (k = 0, len1 = ref1.length; k < len1; k++) {\n        child = ref1[k];\n        results.push(this.writeChildNode(child, options, 0));\n      }\n      return results;\n    };\n    XMLStreamWriter.prototype.attribute = function (att, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.attribute.call(this, att, options, level));\n    };\n    XMLStreamWriter.prototype.cdata = function (node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.cdata.call(this, node, options, level));\n    };\n    XMLStreamWriter.prototype.comment = function (node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.comment.call(this, node, options, level));\n    };\n    XMLStreamWriter.prototype.declaration = function (node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.declaration.call(this, node, options, level));\n    };\n    XMLStreamWriter.prototype.docType = function (node, options, level) {\n      var child, j, len, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      this.stream.write(this.indent(node, options, level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (j = 0, len = ref.length; j < len; j++) {\n          child = ref[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        this.stream.write(']');\n      }\n      options.state = WriterState.CloseTag;\n      this.stream.write(options.spaceBeforeSlash + '>');\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    };\n    XMLStreamWriter.prototype.element = function (node, options, level) {\n      var att, child, childNodeCount, firstChildNode, j, len, name, prettySuppressed, ref, ref1;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      this.stream.write(this.indent(node, options, level) + '<' + node.name);\n      ref = node.attribs;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        this.attribute(att, options, level);\n      }\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function (e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\n      })) {\n        if (options.allowEmpty) {\n          this.stream.write('>');\n          options.state = WriterState.CloseTag;\n          this.stream.write('</' + node.name + '>');\n        } else {\n          options.state = WriterState.CloseTag;\n          this.stream.write(options.spaceBeforeSlash + '/>');\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && firstChildNode.value != null) {\n        this.stream.write('>');\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref1 = node.children;\n        for (j = 0, len = ref1.length; j < len; j++) {\n          child = ref1[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        this.stream.write(this.indent(node, options, level) + '</' + node.name + '>');\n      }\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    };\n    XMLStreamWriter.prototype.processingInstruction = function (node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.processingInstruction.call(this, node, options, level));\n    };\n    XMLStreamWriter.prototype.raw = function (node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.raw.call(this, node, options, level));\n    };\n    XMLStreamWriter.prototype.text = function (node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.text.call(this, node, options, level));\n    };\n    XMLStreamWriter.prototype.dtdAttList = function (node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdAttList.call(this, node, options, level));\n    };\n    XMLStreamWriter.prototype.dtdElement = function (node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdElement.call(this, node, options, level));\n    };\n    XMLStreamWriter.prototype.dtdEntity = function (node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdEntity.call(this, node, options, level));\n    };\n    XMLStreamWriter.prototype.dtdNotation = function (node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdNotation.call(this, node, options, level));\n    };\n    return XMLStreamWriter;\n  }(XMLWriterBase);\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType, WriterState, XMLDOMImplementation, XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref;\n  ref = require('./Utility'), assign = ref.assign, isFunction = ref.isFunction;\n  XMLDOMImplementation = require('./XMLDOMImplementation');\n  XMLDocument = require('./XMLDocument');\n  XMLDocumentCB = require('./XMLDocumentCB');\n  XMLStringWriter = require('./XMLStringWriter');\n  XMLStreamWriter = require('./XMLStreamWriter');\n  NodeType = require('./NodeType');\n  WriterState = require('./WriterState');\n  module.exports.create = function (name, xmldec, doctype, options) {\n    var doc, root;\n    if (name == null) {\n      throw new Error(\"Root element needs a name.\");\n    }\n    options = assign({}, xmldec, doctype, options);\n    doc = new XMLDocument(options);\n    root = doc.element(name);\n    if (!options.headless) {\n      doc.declaration(options);\n      if (options.pubID != null || options.sysID != null) {\n        doc.dtd(options);\n      }\n    }\n    return root;\n  };\n  module.exports.begin = function (options, onData, onEnd) {\n    var ref1;\n    if (isFunction(options)) {\n      ref1 = [options, onData], onData = ref1[0], onEnd = ref1[1];\n      options = {};\n    }\n    if (onData) {\n      return new XMLDocumentCB(options, onData, onEnd);\n    } else {\n      return new XMLDocument(options);\n    }\n  };\n  module.exports.stringWriter = function (options) {\n    return new XMLStringWriter(options);\n  };\n  module.exports.streamWriter = function (stream, options) {\n    return new XMLStreamWriter(stream, options);\n  };\n  module.exports.implementation = new XMLDOMImplementation();\n  module.exports.nodeType = NodeType;\n  module.exports.writerState = WriterState;\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  \"use strict\";\n\n  var builder,\n    defaults,\n    escapeCDATA,\n    requiresCDATA,\n    wrapCDATA,\n    hasProp = {}.hasOwnProperty;\n  builder = require('xmlbuilder');\n  defaults = require('./defaults').defaults;\n  requiresCDATA = function (entry) {\n    return typeof entry === \"string\" && (entry.indexOf('&') >= 0 || entry.indexOf('>') >= 0 || entry.indexOf('<') >= 0);\n  };\n  wrapCDATA = function (entry) {\n    return \"<![CDATA[\" + escapeCDATA(entry) + \"]]>\";\n  };\n  escapeCDATA = function (entry) {\n    return entry.replace(']]>', ']]]]><![CDATA[>');\n  };\n  exports.Builder = function () {\n    function Builder(opts) {\n      var key, ref, value;\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n    }\n    Builder.prototype.buildObject = function (rootObj) {\n      var attrkey, charkey, render, rootElement, rootName;\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      if (Object.keys(rootObj).length === 1 && this.options.rootName === defaults['0.2'].rootName) {\n        rootName = Object.keys(rootObj)[0];\n        rootObj = rootObj[rootName];\n      } else {\n        rootName = this.options.rootName;\n      }\n      render = function (_this) {\n        return function (element, obj) {\n          var attr, child, entry, index, key, value;\n          if (typeof obj !== 'object') {\n            if (_this.options.cdata && requiresCDATA(obj)) {\n              element.raw(wrapCDATA(obj));\n            } else {\n              element.txt(obj);\n            }\n          } else if (Array.isArray(obj)) {\n            for (index in obj) {\n              if (!hasProp.call(obj, index)) continue;\n              child = obj[index];\n              for (key in child) {\n                entry = child[key];\n                element = render(element.ele(key), entry).up();\n              }\n            }\n          } else {\n            for (key in obj) {\n              if (!hasProp.call(obj, key)) continue;\n              child = obj[key];\n              if (key === attrkey) {\n                if (typeof child === \"object\") {\n                  for (attr in child) {\n                    value = child[attr];\n                    element = element.att(attr, value);\n                  }\n                }\n              } else if (key === charkey) {\n                if (_this.options.cdata && requiresCDATA(child)) {\n                  element = element.raw(wrapCDATA(child));\n                } else {\n                  element = element.txt(child);\n                }\n              } else if (Array.isArray(child)) {\n                for (index in child) {\n                  if (!hasProp.call(child, index)) continue;\n                  entry = child[index];\n                  if (typeof entry === 'string') {\n                    if (_this.options.cdata && requiresCDATA(entry)) {\n                      element = element.ele(key).raw(wrapCDATA(entry)).up();\n                    } else {\n                      element = element.ele(key, entry).up();\n                    }\n                  } else {\n                    element = render(element.ele(key), entry).up();\n                  }\n                }\n              } else if (typeof child === \"object\") {\n                element = render(element.ele(key), child).up();\n              } else {\n                if (typeof child === 'string' && _this.options.cdata && requiresCDATA(child)) {\n                  element = element.ele(key).raw(wrapCDATA(child)).up();\n                } else {\n                  if (child == null) {\n                    child = '';\n                  }\n                  element = element.ele(key, child.toString()).up();\n                }\n              }\n            }\n          }\n          return element;\n        };\n      }(this);\n      rootElement = builder.create(rootName, this.options.xmldec, this.options.doctype, {\n        headless: this.options.headless,\n        allowSurrogateChars: this.options.allowSurrogateChars\n      });\n      return render(rootElement, rootObj).end(this.options.renderOpts);\n    };\n    return Builder;\n  }();\n}).call(this);", ";\n(function (sax) {\n  // wrapper for non-node envs\n  sax.parser = function (strict, opt) {\n    return new SAXParser(strict, opt);\n  };\n  sax.SAXParser = SAXParser;\n  sax.SAXStream = SAXStream;\n  sax.createStream = createStream;\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024;\n  var buffers = ['comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype', 'procInstName', 'procInstBody', 'entity', 'attribName', 'attribValue', 'cdata', 'script'];\n  sax.EVENTS = ['text', 'processinginstruction', 'sgmldeclaration', 'doctype', 'comment', 'opentagstart', 'attribute', 'opentag', 'closetag', 'opencdata', 'cdata', 'closecdata', 'error', 'end', 'ready', 'script', 'opennamespace', 'closenamespace'];\n  function SAXParser(strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt);\n    }\n    var parser = this;\n    clearBuffers(parser);\n    parser.q = parser.c = '';\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH;\n    parser.opt = opt || {};\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags;\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase';\n    parser.tags = [];\n    parser.closed = parser.closedRoot = parser.sawRoot = false;\n    parser.tag = parser.error = null;\n    parser.strict = !!strict;\n    parser.noscript = !!(strict || parser.opt.noscript);\n    parser.state = S.BEGIN;\n    parser.strictEntities = parser.opt.strictEntities;\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES);\n    parser.attribList = [];\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS);\n    }\n\n    // disallow unquoted attribute values if not otherwise configured\n    // and strict mode is true\n    if (parser.opt.unquotedAttributeValues === undefined) {\n      parser.opt.unquotedAttributeValues = !strict;\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false;\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0;\n    }\n    emit(parser, 'onready');\n  }\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F() {}\n      F.prototype = o;\n      var newf = new F();\n      return newf;\n    };\n  }\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = [];\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i);\n      return a;\n    };\n  }\n  function checkBufferLength(parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10);\n    var maxActual = 0;\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length;\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser);\n            break;\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata);\n            parser.cdata = '';\n            break;\n          case 'script':\n            emitNode(parser, 'onscript', parser.script);\n            parser.script = '';\n            break;\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i]);\n        }\n      }\n      maxActual = Math.max(maxActual, len);\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual;\n    parser.bufferCheckPosition = m + parser.position;\n  }\n  function clearBuffers(parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = '';\n    }\n  }\n  function flushBuffers(parser) {\n    closeText(parser);\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata);\n      parser.cdata = '';\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script);\n      parser.script = '';\n    }\n  }\n  SAXParser.prototype = {\n    end: function () {\n      end(this);\n    },\n    write: write,\n    resume: function () {\n      this.error = null;\n      return this;\n    },\n    close: function () {\n      return this.write(null);\n    },\n    flush: function () {\n      flushBuffers(this);\n    }\n  };\n  var Stream;\n  try {\n    Stream = require('stream').Stream;\n  } catch (ex) {\n    Stream = function () {};\n  }\n  if (!Stream) Stream = function () {};\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end';\n  });\n  function createStream(strict, opt) {\n    return new SAXStream(strict, opt);\n  }\n  function SAXStream(strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt);\n    }\n    Stream.apply(this);\n    this._parser = new SAXParser(strict, opt);\n    this.writable = true;\n    this.readable = true;\n    var me = this;\n    this._parser.onend = function () {\n      me.emit('end');\n    };\n    this._parser.onerror = function (er) {\n      me.emit('error', er);\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null;\n    };\n    this._decoder = null;\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev];\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev);\n            me._parser['on' + ev] = h;\n            return h;\n          }\n          me.on(ev, h);\n        },\n        enumerable: true,\n        configurable: false\n      });\n    });\n  }\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  });\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function' && Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder;\n        this._decoder = new SD('utf8');\n      }\n      data = this._decoder.write(data);\n    }\n    this._parser.write(data.toString());\n    this.emit('data', data);\n    return true;\n  };\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk);\n    }\n    this._parser.end();\n    return true;\n  };\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this;\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments);\n        args.splice(0, 0, ev);\n        me.emit.apply(me, args);\n      };\n    }\n    return Stream.prototype.on.call(me, ev, handler);\n  };\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA[';\n  var DOCTYPE = 'DOCTYPE';\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace';\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/';\n  var rootNS = {\n    xml: XML_NAMESPACE,\n    xmlns: XMLNS_NAMESPACE\n  };\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/;\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/;\n  function isWhitespace(c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t';\n  }\n  function isQuote(c) {\n    return c === '\"' || c === '\\'';\n  }\n  function isAttribEnd(c) {\n    return c === '>' || isWhitespace(c);\n  }\n  function isMatch(regex, c) {\n    return regex.test(c);\n  }\n  function notMatch(regex, c) {\n    return !isMatch(regex, c);\n  }\n  var S = 0;\n  sax.STATE = {\n    BEGIN: S++,\n    // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++,\n    // leading whitespace\n    TEXT: S++,\n    // general stuff\n    TEXT_ENTITY: S++,\n    // &amp and such.\n    OPEN_WAKA: S++,\n    // <\n    SGML_DECL: S++,\n    // <!BLARG\n    SGML_DECL_QUOTED: S++,\n    // <!BLARG foo \"bar\n    DOCTYPE: S++,\n    // <!DOCTYPE\n    DOCTYPE_QUOTED: S++,\n    // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++,\n    // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++,\n    // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++,\n    // <!-\n    COMMENT: S++,\n    // <!--\n    COMMENT_ENDING: S++,\n    // <!-- blah -\n    COMMENT_ENDED: S++,\n    // <!-- blah --\n    CDATA: S++,\n    // <![CDATA[ something\n    CDATA_ENDING: S++,\n    // ]\n    CDATA_ENDING_2: S++,\n    // ]]\n    PROC_INST: S++,\n    // <?hi\n    PROC_INST_BODY: S++,\n    // <?hi there\n    PROC_INST_ENDING: S++,\n    // <?hi \"there\" ?\n    OPEN_TAG: S++,\n    // <strong\n    OPEN_TAG_SLASH: S++,\n    // <strong /\n    ATTRIB: S++,\n    // <a\n    ATTRIB_NAME: S++,\n    // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++,\n    // <a foo _\n    ATTRIB_VALUE: S++,\n    // <a foo=\n    ATTRIB_VALUE_QUOTED: S++,\n    // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++,\n    // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++,\n    // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++,\n    // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++,\n    // <foo bar=&quot\n    CLOSE_TAG: S++,\n    // </a\n    CLOSE_TAG_SAW_WHITE: S++,\n    // </a   >\n    SCRIPT: S++,\n    // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  };\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  };\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  };\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key];\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e;\n    sax.ENTITIES[key] = s;\n  });\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s;\n  }\n\n  // shorthand\n  S = sax.STATE;\n  function emit(parser, event, data) {\n    parser[event] && parser[event](data);\n  }\n  function emitNode(parser, nodeType, data) {\n    if (parser.textNode) closeText(parser);\n    emit(parser, nodeType, data);\n  }\n  function closeText(parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode);\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode);\n    parser.textNode = '';\n  }\n  function textopts(opt, text) {\n    if (opt.trim) text = text.trim();\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ');\n    return text;\n  }\n  function error(parser, er) {\n    closeText(parser);\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line + '\\nColumn: ' + parser.column + '\\nChar: ' + parser.c;\n    }\n    er = new Error(er);\n    parser.error = er;\n    emit(parser, 'onerror', er);\n    return parser;\n  }\n  function end(parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag');\n    if (parser.state !== S.BEGIN && parser.state !== S.BEGIN_WHITESPACE && parser.state !== S.TEXT) {\n      error(parser, 'Unexpected end');\n    }\n    closeText(parser);\n    parser.c = '';\n    parser.closed = true;\n    emit(parser, 'onend');\n    SAXParser.call(parser, parser.strict, parser.opt);\n    return parser;\n  }\n  function strictFail(parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail');\n    }\n    if (parser.strict) {\n      error(parser, message);\n    }\n  }\n  function newTag(parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]();\n    var parent = parser.tags[parser.tags.length - 1] || parser;\n    var tag = parser.tag = {\n      name: parser.tagName,\n      attributes: {}\n    };\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns;\n    }\n    parser.attribList.length = 0;\n    emitNode(parser, 'onopentagstart', tag);\n  }\n  function qname(name, attribute) {\n    var i = name.indexOf(':');\n    var qualName = i < 0 ? ['', name] : name.split(':');\n    var prefix = qualName[0];\n    var local = qualName[1];\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns';\n      local = '';\n    }\n    return {\n      prefix: prefix,\n      local: local\n    };\n  }\n  function attrib(parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]();\n    }\n    if (parser.attribList.indexOf(parser.attribName) !== -1 || parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = '';\n      return;\n    }\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true);\n      var prefix = qn.prefix;\n      var local = qn.local;\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser, 'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' + 'Actual: ' + parser.attribValue);\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser, 'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' + 'Actual: ' + parser.attribValue);\n        } else {\n          var tag = parser.tag;\n          var parent = parser.tags[parser.tags.length - 1] || parser;\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns);\n          }\n          tag.ns[local] = parser.attribValue;\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue]);\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue;\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      });\n    }\n    parser.attribName = parser.attribValue = '';\n  }\n  function openTag(parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag;\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName);\n      tag.prefix = qn.prefix;\n      tag.local = qn.local;\n      tag.uri = tag.ns[qn.prefix] || '';\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' + JSON.stringify(parser.tagName));\n        tag.uri = qn.prefix;\n      }\n      var parent = parser.tags[parser.tags.length - 1] || parser;\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          });\n        });\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i];\n        var name = nv[0];\n        var value = nv[1];\n        var qualName = qname(name, true);\n        var prefix = qualName.prefix;\n        var local = qualName.local;\n        var uri = prefix === '' ? '' : tag.ns[prefix] || '';\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        };\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' + JSON.stringify(prefix));\n          a.uri = prefix;\n        }\n        parser.tag.attributes[name] = a;\n        emitNode(parser, 'onattribute', a);\n      }\n      parser.attribList.length = 0;\n    }\n    parser.tag.isSelfClosing = !!selfClosing;\n\n    // process the tag\n    parser.sawRoot = true;\n    parser.tags.push(parser.tag);\n    emitNode(parser, 'onopentag', parser.tag);\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT;\n      } else {\n        parser.state = S.TEXT;\n      }\n      parser.tag = null;\n      parser.tagName = '';\n    }\n    parser.attribName = parser.attribValue = '';\n    parser.attribList.length = 0;\n  }\n  function closeTag(parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.');\n      parser.textNode += '</>';\n      parser.state = S.TEXT;\n      return;\n    }\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>';\n        parser.tagName = '';\n        parser.state = S.SCRIPT;\n        return;\n      }\n      emitNode(parser, 'onscript', parser.script);\n      parser.script = '';\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length;\n    var tagName = parser.tagName;\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]();\n    }\n    var closeTo = tagName;\n    while (t--) {\n      var close = parser.tags[t];\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag');\n      } else {\n        break;\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName);\n      parser.textNode += '</' + parser.tagName + '>';\n      parser.state = S.TEXT;\n      return;\n    }\n    parser.tagName = tagName;\n    var s = parser.tags.length;\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop();\n      parser.tagName = parser.tag.name;\n      emitNode(parser, 'onclosetag', parser.tagName);\n      var x = {};\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i];\n      }\n      var parent = parser.tags[parser.tags.length - 1] || parser;\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p];\n          emitNode(parser, 'onclosenamespace', {\n            prefix: p,\n            uri: n\n          });\n        });\n      }\n    }\n    if (t === 0) parser.closedRoot = true;\n    parser.tagName = parser.attribValue = parser.attribName = '';\n    parser.attribList.length = 0;\n    parser.state = S.TEXT;\n  }\n  function parseEntity(parser) {\n    var entity = parser.entity;\n    var entityLC = entity.toLowerCase();\n    var num;\n    var numStr = '';\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity];\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC];\n    }\n    entity = entityLC;\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2);\n        num = parseInt(entity, 16);\n        numStr = num.toString(16);\n      } else {\n        entity = entity.slice(1);\n        num = parseInt(entity, 10);\n        numStr = num.toString(10);\n      }\n    }\n    entity = entity.replace(/^0+/, '');\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity');\n      return '&' + parser.entity + ';';\n    }\n    return String.fromCodePoint(num);\n  }\n  function beginWhiteSpace(parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA;\n      parser.startTagPosition = parser.position;\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.');\n      parser.textNode = c;\n      parser.state = S.TEXT;\n    }\n  }\n  function charAt(chunk, i) {\n    var result = '';\n    if (i < chunk.length) {\n      result = chunk.charAt(i);\n    }\n    return result;\n  }\n  function write(chunk) {\n    var parser = this;\n    if (this.error) {\n      throw this.error;\n    }\n    if (parser.closed) {\n      return error(parser, 'Cannot write after close. Assign an onready handler.');\n    }\n    if (chunk === null) {\n      return end(parser);\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString();\n    }\n    var i = 0;\n    var c = '';\n    while (true) {\n      c = charAt(chunk, i++);\n      parser.c = c;\n      if (!c) {\n        break;\n      }\n      if (parser.trackPosition) {\n        parser.position++;\n        if (c === '\\n') {\n          parser.line++;\n          parser.column = 0;\n        } else {\n          parser.column++;\n        }\n      }\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE;\n          if (c === '\\uFEFF') {\n            continue;\n          }\n          beginWhiteSpace(parser, c);\n          continue;\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c);\n          continue;\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1;\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++);\n              if (c && parser.trackPosition) {\n                parser.position++;\n                if (c === '\\n') {\n                  parser.line++;\n                  parser.column = 0;\n                } else {\n                  parser.column++;\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1);\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA;\n            parser.startTagPosition = parser.position;\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.');\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY;\n            } else {\n              parser.textNode += c;\n            }\n          }\n          continue;\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING;\n          } else {\n            parser.script += c;\n          }\n          continue;\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG;\n          } else {\n            parser.script += '<' + c;\n            parser.state = S.SCRIPT;\n          }\n          continue;\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL;\n            parser.sgmlDecl = '';\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG;\n            parser.tagName = c;\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG;\n            parser.tagName = '';\n          } else if (c === '?') {\n            parser.state = S.PROC_INST;\n            parser.procInstName = parser.procInstBody = '';\n          } else {\n            strictFail(parser, 'Unencoded <');\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition;\n              c = new Array(pad).join(' ') + c;\n            }\n            parser.textNode += '<' + c;\n            parser.state = S.TEXT;\n          }\n          continue;\n        case S.SGML_DECL:\n          if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT;\n            parser.comment = '';\n            parser.sgmlDecl = '';\n            continue;\n          }\n          if (parser.doctype && parser.doctype !== true && parser.sgmlDecl) {\n            parser.state = S.DOCTYPE_DTD;\n            parser.doctype += '<!' + parser.sgmlDecl + c;\n            parser.sgmlDecl = '';\n          } else if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata');\n            parser.state = S.CDATA;\n            parser.sgmlDecl = '';\n            parser.cdata = '';\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE;\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser, 'Inappropriately located doctype declaration');\n            }\n            parser.doctype = '';\n            parser.sgmlDecl = '';\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl);\n            parser.sgmlDecl = '';\n            parser.state = S.TEXT;\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED;\n            parser.sgmlDecl += c;\n          } else {\n            parser.sgmlDecl += c;\n          }\n          continue;\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL;\n            parser.q = '';\n          }\n          parser.sgmlDecl += c;\n          continue;\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT;\n            emitNode(parser, 'ondoctype', parser.doctype);\n            parser.doctype = true; // just remember that we saw it.\n          } else {\n            parser.doctype += c;\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD;\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED;\n              parser.q = c;\n            }\n          }\n          continue;\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c;\n          if (c === parser.q) {\n            parser.q = '';\n            parser.state = S.DOCTYPE;\n          }\n          continue;\n        case S.DOCTYPE_DTD:\n          if (c === ']') {\n            parser.doctype += c;\n            parser.state = S.DOCTYPE;\n          } else if (c === '<') {\n            parser.state = S.OPEN_WAKA;\n            parser.startTagPosition = parser.position;\n          } else if (isQuote(c)) {\n            parser.doctype += c;\n            parser.state = S.DOCTYPE_DTD_QUOTED;\n            parser.q = c;\n          } else {\n            parser.doctype += c;\n          }\n          continue;\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c;\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD;\n            parser.q = '';\n          }\n          continue;\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING;\n          } else {\n            parser.comment += c;\n          }\n          continue;\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED;\n            parser.comment = textopts(parser.opt, parser.comment);\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment);\n            }\n            parser.comment = '';\n          } else {\n            parser.comment += '-' + c;\n            parser.state = S.COMMENT;\n          }\n          continue;\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment');\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c;\n            parser.state = S.COMMENT;\n          } else if (parser.doctype && parser.doctype !== true) {\n            parser.state = S.DOCTYPE_DTD;\n          } else {\n            parser.state = S.TEXT;\n          }\n          continue;\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING;\n          } else {\n            parser.cdata += c;\n          }\n          continue;\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2;\n          } else {\n            parser.cdata += ']' + c;\n            parser.state = S.CDATA;\n          }\n          continue;\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata);\n            }\n            emitNode(parser, 'onclosecdata');\n            parser.cdata = '';\n            parser.state = S.TEXT;\n          } else if (c === ']') {\n            parser.cdata += ']';\n          } else {\n            parser.cdata += ']]' + c;\n            parser.state = S.CDATA;\n          }\n          continue;\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING;\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY;\n          } else {\n            parser.procInstName += c;\n          }\n          continue;\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue;\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING;\n          } else {\n            parser.procInstBody += c;\n          }\n          continue;\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            });\n            parser.procInstName = parser.procInstBody = '';\n            parser.state = S.TEXT;\n          } else {\n            parser.procInstBody += '?' + c;\n            parser.state = S.PROC_INST_BODY;\n          }\n          continue;\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c;\n          } else {\n            newTag(parser);\n            if (c === '>') {\n              openTag(parser);\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH;\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name');\n              }\n              parser.state = S.ATTRIB;\n            }\n          }\n          continue;\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true);\n            closeTag(parser);\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >');\n            parser.state = S.ATTRIB;\n          }\n          continue;\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue;\n          } else if (c === '>') {\n            openTag(parser);\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH;\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c;\n            parser.attribValue = '';\n            parser.state = S.ATTRIB_NAME;\n          } else {\n            strictFail(parser, 'Invalid attribute name');\n          }\n          continue;\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE;\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value');\n            parser.attribValue = parser.attribName;\n            attrib(parser);\n            openTag(parser);\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE;\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c;\n          } else {\n            strictFail(parser, 'Invalid attribute name');\n          }\n          continue;\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE;\n          } else if (isWhitespace(c)) {\n            continue;\n          } else {\n            strictFail(parser, 'Attribute without value');\n            parser.tag.attributes[parser.attribName] = '';\n            parser.attribValue = '';\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            });\n            parser.attribName = '';\n            if (c === '>') {\n              openTag(parser);\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c;\n              parser.state = S.ATTRIB_NAME;\n            } else {\n              strictFail(parser, 'Invalid attribute name');\n              parser.state = S.ATTRIB;\n            }\n          }\n          continue;\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue;\n          } else if (isQuote(c)) {\n            parser.q = c;\n            parser.state = S.ATTRIB_VALUE_QUOTED;\n          } else {\n            if (!parser.opt.unquotedAttributeValues) {\n              error(parser, 'Unquoted attribute value');\n            }\n            parser.state = S.ATTRIB_VALUE_UNQUOTED;\n            parser.attribValue = c;\n          }\n          continue;\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q;\n            } else {\n              parser.attribValue += c;\n            }\n            continue;\n          }\n          attrib(parser);\n          parser.q = '';\n          parser.state = S.ATTRIB_VALUE_CLOSED;\n          continue;\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB;\n          } else if (c === '>') {\n            openTag(parser);\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH;\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes');\n            parser.attribName = c;\n            parser.attribValue = '';\n            parser.state = S.ATTRIB_NAME;\n          } else {\n            strictFail(parser, 'Invalid attribute name');\n          }\n          continue;\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U;\n            } else {\n              parser.attribValue += c;\n            }\n            continue;\n          }\n          attrib(parser);\n          if (c === '>') {\n            openTag(parser);\n          } else {\n            parser.state = S.ATTRIB;\n          }\n          continue;\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue;\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c;\n                parser.state = S.SCRIPT;\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.');\n              }\n            } else {\n              parser.tagName = c;\n            }\n          } else if (c === '>') {\n            closeTag(parser);\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c;\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName;\n            parser.tagName = '';\n            parser.state = S.SCRIPT;\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag');\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE;\n          }\n          continue;\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue;\n          }\n          if (c === '>') {\n            closeTag(parser);\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag');\n          }\n          continue;\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState;\n          var buffer;\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT;\n              buffer = 'textNode';\n              break;\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED;\n              buffer = 'attribValue';\n              break;\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED;\n              buffer = 'attribValue';\n              break;\n          }\n          if (c === ';') {\n            var parsedEntity = parseEntity(parser);\n            if (parser.opt.unparsedEntities && !Object.values(sax.XML_ENTITIES).includes(parsedEntity)) {\n              parser.entity = '';\n              parser.state = returnState;\n              parser.write(parsedEntity);\n            } else {\n              parser[buffer] += parsedEntity;\n              parser.entity = '';\n              parser.state = returnState;\n            }\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c;\n          } else {\n            strictFail(parser, 'Invalid character in entity name');\n            parser[buffer] += '&' + parser.entity + c;\n            parser.entity = '';\n            parser.state = returnState;\n          }\n          continue;\n        default:\n          /* istanbul ignore next */{\n            throw new Error(parser, 'Unknown state: ' + parser.state);\n          }\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser);\n    }\n    return parser;\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode;\n      var floor = Math.floor;\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000;\n        var codeUnits = [];\n        var highSurrogate;\n        var lowSurrogate;\n        var index = -1;\n        var length = arguments.length;\n        if (!length) {\n          return '';\n        }\n        var result = '';\n        while (++index < length) {\n          var codePoint = Number(arguments[index]);\n          if (!isFinite(codePoint) ||\n          // `NaN`, `+Infinity`, or `-Infinity`\n          codePoint < 0 ||\n          // not a valid Unicode code point\n          codePoint > 0x10FFFF ||\n          // not a valid Unicode code point\n          floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint);\n          }\n          if (codePoint <= 0xFFFF) {\n            // BMP code point\n            codeUnits.push(codePoint);\n          } else {\n            // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000;\n            highSurrogate = (codePoint >> 10) + 0xD800;\n            lowSurrogate = codePoint % 0x400 + 0xDC00;\n            codeUnits.push(highSurrogate, lowSurrogate);\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits);\n            codeUnits.length = 0;\n          }\n        }\n        return result;\n      };\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        });\n      } else {\n        String.fromCodePoint = fromCodePoint;\n      }\n    })();\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  \"use strict\";\n\n  exports.stripBOM = function (str) {\n    if (str[0] === '\\uFEFF') {\n      return str.substring(1);\n    } else {\n      return str;\n    }\n  };\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  \"use strict\";\n\n  var prefixMatch;\n  prefixMatch = new RegExp(/(?!xmlns)^.*:/);\n  exports.normalize = function (str) {\n    return str.toLowerCase();\n  };\n  exports.firstCharLowerCase = function (str) {\n    return str.charAt(0).toLowerCase() + str.slice(1);\n  };\n  exports.stripPrefix = function (str) {\n    return str.replace(prefixMatch, '');\n  };\n  exports.parseNumbers = function (str) {\n    if (!isNaN(str)) {\n      str = str % 1 === 0 ? parseInt(str, 10) : parseFloat(str);\n    }\n    return str;\n  };\n  exports.parseBooleans = function (str) {\n    if (/^(?:true|false)$/i.test(str)) {\n      str = str.toLowerCase() === 'true';\n    }\n    return str;\n  };\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  \"use strict\";\n\n  var bom,\n    defaults,\n    events,\n    isEmpty,\n    processItem,\n    processors,\n    sax,\n    setImmediate,\n    bind = function (fn, me) {\n      return function () {\n        return fn.apply(me, arguments);\n      };\n    },\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  sax = require('sax');\n  events = require('events');\n  bom = require('./bom');\n  processors = require('./processors');\n  setImmediate = require('timers').setImmediate;\n  defaults = require('./defaults').defaults;\n  isEmpty = function (thing) {\n    return typeof thing === \"object\" && thing != null && Object.keys(thing).length === 0;\n  };\n  processItem = function (processors, item, key) {\n    var i, len, process;\n    for (i = 0, len = processors.length; i < len; i++) {\n      process = processors[i];\n      item = process(item, key);\n    }\n    return item;\n  };\n  exports.Parser = function (superClass) {\n    extend(Parser, superClass);\n    function Parser(opts) {\n      this.parseStringPromise = bind(this.parseStringPromise, this);\n      this.parseString = bind(this.parseString, this);\n      this.reset = bind(this.reset, this);\n      this.assignOrPush = bind(this.assignOrPush, this);\n      this.processAsync = bind(this.processAsync, this);\n      var key, ref, value;\n      if (!(this instanceof exports.Parser)) {\n        return new exports.Parser(opts);\n      }\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n      if (this.options.xmlns) {\n        this.options.xmlnskey = this.options.attrkey + \"ns\";\n      }\n      if (this.options.normalizeTags) {\n        if (!this.options.tagNameProcessors) {\n          this.options.tagNameProcessors = [];\n        }\n        this.options.tagNameProcessors.unshift(processors.normalize);\n      }\n      this.reset();\n    }\n    Parser.prototype.processAsync = function () {\n      var chunk, err;\n      try {\n        if (this.remaining.length <= this.options.chunkSize) {\n          chunk = this.remaining;\n          this.remaining = '';\n          this.saxParser = this.saxParser.write(chunk);\n          return this.saxParser.close();\n        } else {\n          chunk = this.remaining.substr(0, this.options.chunkSize);\n          this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length);\n          this.saxParser = this.saxParser.write(chunk);\n          return setImmediate(this.processAsync);\n        }\n      } catch (error1) {\n        err = error1;\n        if (!this.saxParser.errThrown) {\n          this.saxParser.errThrown = true;\n          return this.emit(err);\n        }\n      }\n    };\n    Parser.prototype.assignOrPush = function (obj, key, newValue) {\n      if (!(key in obj)) {\n        if (!this.options.explicitArray) {\n          return obj[key] = newValue;\n        } else {\n          return obj[key] = [newValue];\n        }\n      } else {\n        if (!(obj[key] instanceof Array)) {\n          obj[key] = [obj[key]];\n        }\n        return obj[key].push(newValue);\n      }\n    };\n    Parser.prototype.reset = function () {\n      var attrkey, charkey, ontext, stack;\n      this.removeAllListeners();\n      this.saxParser = sax.parser(this.options.strict, {\n        trim: false,\n        normalize: false,\n        xmlns: this.options.xmlns\n      });\n      this.saxParser.errThrown = false;\n      this.saxParser.onerror = function (_this) {\n        return function (error) {\n          _this.saxParser.resume();\n          if (!_this.saxParser.errThrown) {\n            _this.saxParser.errThrown = true;\n            return _this.emit(\"error\", error);\n          }\n        };\n      }(this);\n      this.saxParser.onend = function (_this) {\n        return function () {\n          if (!_this.saxParser.ended) {\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      }(this);\n      this.saxParser.ended = false;\n      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\n      this.resultObject = null;\n      stack = [];\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      this.saxParser.onopentag = function (_this) {\n        return function (node) {\n          var key, newValue, obj, processedKey, ref;\n          obj = Object.create(null);\n          obj[charkey] = \"\";\n          if (!_this.options.ignoreAttrs) {\n            ref = node.attributes;\n            for (key in ref) {\n              if (!hasProp.call(ref, key)) continue;\n              if (!(attrkey in obj) && !_this.options.mergeAttrs) {\n                obj[attrkey] = Object.create(null);\n              }\n              newValue = _this.options.attrValueProcessors ? processItem(_this.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key];\n              processedKey = _this.options.attrNameProcessors ? processItem(_this.options.attrNameProcessors, key) : key;\n              if (_this.options.mergeAttrs) {\n                _this.assignOrPush(obj, processedKey, newValue);\n              } else {\n                obj[attrkey][processedKey] = newValue;\n              }\n            }\n          }\n          obj[\"#name\"] = _this.options.tagNameProcessors ? processItem(_this.options.tagNameProcessors, node.name) : node.name;\n          if (_this.options.xmlns) {\n            obj[_this.options.xmlnskey] = {\n              uri: node.uri,\n              local: node.local\n            };\n          }\n          return stack.push(obj);\n        };\n      }(this);\n      this.saxParser.onclosetag = function (_this) {\n        return function () {\n          var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath;\n          obj = stack.pop();\n          nodeName = obj[\"#name\"];\n          if (!_this.options.explicitChildren || !_this.options.preserveChildrenOrder) {\n            delete obj[\"#name\"];\n          }\n          if (obj.cdata === true) {\n            cdata = obj.cdata;\n            delete obj.cdata;\n          }\n          s = stack[stack.length - 1];\n          if (obj[charkey].match(/^\\s*$/) && !cdata) {\n            emptyStr = obj[charkey];\n            delete obj[charkey];\n          } else {\n            if (_this.options.trim) {\n              obj[charkey] = obj[charkey].trim();\n            }\n            if (_this.options.normalize) {\n              obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\n            }\n            obj[charkey] = _this.options.valueProcessors ? processItem(_this.options.valueProcessors, obj[charkey], nodeName) : obj[charkey];\n            if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n              obj = obj[charkey];\n            }\n          }\n          if (isEmpty(obj)) {\n            if (typeof _this.options.emptyTag === 'function') {\n              obj = _this.options.emptyTag();\n            } else {\n              obj = _this.options.emptyTag !== '' ? _this.options.emptyTag : emptyStr;\n            }\n          }\n          if (_this.options.validator != null) {\n            xpath = \"/\" + function () {\n              var i, len, results;\n              results = [];\n              for (i = 0, len = stack.length; i < len; i++) {\n                node = stack[i];\n                results.push(node[\"#name\"]);\n              }\n              return results;\n            }().concat(nodeName).join(\"/\");\n            (function () {\n              var err;\n              try {\n                return obj = _this.options.validator(xpath, s && s[nodeName], obj);\n              } catch (error1) {\n                err = error1;\n                return _this.emit(\"error\", err);\n              }\n            })();\n          }\n          if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === 'object') {\n            if (!_this.options.preserveChildrenOrder) {\n              node = Object.create(null);\n              if (_this.options.attrkey in obj) {\n                node[_this.options.attrkey] = obj[_this.options.attrkey];\n                delete obj[_this.options.attrkey];\n              }\n              if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\n                node[_this.options.charkey] = obj[_this.options.charkey];\n                delete obj[_this.options.charkey];\n              }\n              if (Object.getOwnPropertyNames(obj).length > 0) {\n                node[_this.options.childkey] = obj;\n              }\n              obj = node;\n            } else if (s) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              objClone = Object.create(null);\n              for (key in obj) {\n                if (!hasProp.call(obj, key)) continue;\n                objClone[key] = obj[key];\n              }\n              s[_this.options.childkey].push(objClone);\n              delete obj[\"#name\"];\n              if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n                obj = obj[charkey];\n              }\n            }\n          }\n          if (stack.length > 0) {\n            return _this.assignOrPush(s, nodeName, obj);\n          } else {\n            if (_this.options.explicitRoot) {\n              old = obj;\n              obj = Object.create(null);\n              obj[nodeName] = old;\n            }\n            _this.resultObject = obj;\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      }(this);\n      ontext = function (_this) {\n        return function (text) {\n          var charChild, s;\n          s = stack[stack.length - 1];\n          if (s) {\n            s[charkey] += text;\n            if (_this.options.explicitChildren && _this.options.preserveChildrenOrder && _this.options.charsAsChildren && (_this.options.includeWhiteChars || text.replace(/\\\\n/g, '').trim() !== '')) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              charChild = {\n                '#name': '__text__'\n              };\n              charChild[charkey] = text;\n              if (_this.options.normalize) {\n                charChild[charkey] = charChild[charkey].replace(/\\s{2,}/g, \" \").trim();\n              }\n              s[_this.options.childkey].push(charChild);\n            }\n            return s;\n          }\n        };\n      }(this);\n      this.saxParser.ontext = ontext;\n      return this.saxParser.oncdata = function (_this) {\n        return function (text) {\n          var s;\n          s = ontext(text);\n          if (s) {\n            return s.cdata = true;\n          }\n        };\n      }(this);\n    };\n    Parser.prototype.parseString = function (str, cb) {\n      var err;\n      if (cb != null && typeof cb === \"function\") {\n        this.on(\"end\", function (result) {\n          this.reset();\n          return cb(null, result);\n        });\n        this.on(\"error\", function (err) {\n          this.reset();\n          return cb(err);\n        });\n      }\n      try {\n        str = str.toString();\n        if (str.trim() === '') {\n          this.emit(\"end\", null);\n          return true;\n        }\n        str = bom.stripBOM(str);\n        if (this.options.async) {\n          this.remaining = str;\n          setImmediate(this.processAsync);\n          return this.saxParser;\n        }\n        return this.saxParser.write(str).close();\n      } catch (error1) {\n        err = error1;\n        if (!(this.saxParser.errThrown || this.saxParser.ended)) {\n          this.emit('error', err);\n          return this.saxParser.errThrown = true;\n        } else if (this.saxParser.ended) {\n          throw err;\n        }\n      }\n    };\n    Parser.prototype.parseStringPromise = function (str) {\n      return new Promise(function (_this) {\n        return function (resolve, reject) {\n          return _this.parseString(str, function (err, value) {\n            if (err) {\n              return reject(err);\n            } else {\n              return resolve(value);\n            }\n          });\n        };\n      }(this));\n    };\n    return Parser;\n  }(events);\n  exports.parseString = function (str, a, b) {\n    var cb, options, parser;\n    if (b != null) {\n      if (typeof b === 'function') {\n        cb = b;\n      }\n      if (typeof a === 'object') {\n        options = a;\n      }\n    } else {\n      if (typeof a === 'function') {\n        cb = a;\n      }\n      options = {};\n    }\n    parser = new exports.Parser(options);\n    return parser.parseString(str, cb);\n  };\n  exports.parseStringPromise = function (str, a) {\n    var options, parser;\n    if (typeof a === 'object') {\n      options = a;\n    }\n    parser = new exports.Parser(options);\n    return parser.parseStringPromise(str);\n  };\n}).call(this);", "// Generated by CoffeeScript 1.12.7\n(function () {\n  \"use strict\";\n\n  var builder,\n    defaults,\n    parser,\n    processors,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  defaults = require('./defaults');\n  builder = require('./builder');\n  parser = require('./parser');\n  processors = require('./processors');\n  exports.defaults = defaults.defaults;\n  exports.processors = processors;\n  exports.ValidationError = function (superClass) {\n    extend(ValidationError, superClass);\n    function ValidationError(message) {\n      this.message = message;\n    }\n    return ValidationError;\n  }(Error);\n  exports.Builder = builder.Builder;\n  exports.Parser = parser.Parser;\n  exports.parseString = parser.parseString;\n  exports.parseStringPromise = parser.parseStringPromise;\n}).call(this);", "//Some versions of GlyphDesigner have a typo\n//that causes some bugs with parsing. \n//Need to confirm with recent version of the software\n//to see whether this is still an issue or not.\nvar GLYPH_DESIGNER_ERROR = 'chasrset';\nmodule.exports = function parseAttributes(obj) {\n  obj = Object.assign({}, obj);\n  if (GLYPH_DESIGNER_ERROR in obj) {\n    obj['charset'] = obj[GLYPH_DESIGNER_ERROR];\n    delete obj[GLYPH_DESIGNER_ERROR];\n  }\n  for (var k in obj) {\n    if (k === 'face' || k === 'charset') continue;else if (k === 'padding' || k === 'spacing') obj[k] = parseIntList(obj[k]);else obj[k] = parseInt(obj[k], 10);\n  }\n  return obj;\n};\nfunction parseIntList(data) {\n  return data.split(',').map(function (val) {\n    return parseInt(val, 10);\n  });\n}", "var xml2js = require('xml2js');\nvar parseAttributes = require('./parse-attribs');\nmodule.exports = function parseBMFontXML(data) {\n  data = data.toString().trim();\n  var output = {\n    pages: [],\n    chars: [],\n    kernings: []\n  };\n  xml2js.parseString(data, function (err, result) {\n    if (err) throw err;\n    if (!result.font) throw \"XML bitmap font doesn't have <font> root\";\n    result = result.font;\n    output.common = parseAttributes(result.common[0].$);\n    output.info = parseAttributes(result.info[0].$);\n    for (var i = 0; i < result.pages.length; i++) {\n      var p = result.pages[i].page[0].$;\n      if (typeof p.id === \"undefined\") throw new Error(\"malformed file -- needs page id=N\");\n      if (typeof p.file !== \"string\") throw new Error(\"malformed file -- needs page file=\\\"path\\\"\");\n      output.pages[parseInt(p.id, 10)] = p.file;\n    }\n    if (result.chars) {\n      var chrArray = result.chars[0]['char'] || [];\n      for (var i = 0; i < chrArray.length; i++) {\n        output.chars.push(parseAttributes(chrArray[i].$));\n      }\n    }\n    if (result.kernings) {\n      var kernArray = result.kernings[0]['kerning'] || [];\n      for (var i = 0; i < kernArray.length; i++) {\n        output.kernings.push(parseAttributes(kernArray[i].$));\n      }\n    }\n  });\n  return output;\n};", "var HEADER = [66, 77, 70];\nmodule.exports = function readBMFontBinary(buf) {\n  if (buf.length < 6) throw new Error('invalid buffer length for BMFont');\n  var header = HEADER.every(function (byte, i) {\n    return buf.readUInt8(i) === byte;\n  });\n  if (!header) throw new Error('BMFont missing BMF byte header');\n  var i = 3;\n  var vers = buf.readUInt8(i++);\n  if (vers > 3) throw new Error('Only supports BMFont Binary v3 (BMFont App v1.10)');\n  var target = {\n    kernings: [],\n    chars: []\n  };\n  for (var b = 0; b < 5; b++) i += readBlock(target, buf, i);\n  return target;\n};\nfunction readBlock(target, buf, i) {\n  if (i > buf.length - 1) return 0;\n  var blockID = buf.readUInt8(i++);\n  var blockSize = buf.readInt32LE(i);\n  i += 4;\n  switch (blockID) {\n    case 1:\n      target.info = readInfo(buf, i);\n      break;\n    case 2:\n      target.common = readCommon(buf, i);\n      break;\n    case 3:\n      target.pages = readPages(buf, i, blockSize);\n      break;\n    case 4:\n      target.chars = readChars(buf, i, blockSize);\n      break;\n    case 5:\n      target.kernings = readKernings(buf, i, blockSize);\n      break;\n  }\n  return 5 + blockSize;\n}\nfunction readInfo(buf, i) {\n  var info = {};\n  info.size = buf.readInt16LE(i);\n  var bitField = buf.readUInt8(i + 2);\n  info.smooth = bitField >> 7 & 1;\n  info.unicode = bitField >> 6 & 1;\n  info.italic = bitField >> 5 & 1;\n  info.bold = bitField >> 4 & 1;\n\n  //fixedHeight is only mentioned in binary spec \n  if (bitField >> 3 & 1) info.fixedHeight = 1;\n  info.charset = buf.readUInt8(i + 3) || '';\n  info.stretchH = buf.readUInt16LE(i + 4);\n  info.aa = buf.readUInt8(i + 6);\n  info.padding = [buf.readInt8(i + 7), buf.readInt8(i + 8), buf.readInt8(i + 9), buf.readInt8(i + 10)];\n  info.spacing = [buf.readInt8(i + 11), buf.readInt8(i + 12)];\n  info.outline = buf.readUInt8(i + 13);\n  info.face = readStringNT(buf, i + 14);\n  return info;\n}\nfunction readCommon(buf, i) {\n  var common = {};\n  common.lineHeight = buf.readUInt16LE(i);\n  common.base = buf.readUInt16LE(i + 2);\n  common.scaleW = buf.readUInt16LE(i + 4);\n  common.scaleH = buf.readUInt16LE(i + 6);\n  common.pages = buf.readUInt16LE(i + 8);\n  var bitField = buf.readUInt8(i + 10);\n  common.packed = 0;\n  common.alphaChnl = buf.readUInt8(i + 11);\n  common.redChnl = buf.readUInt8(i + 12);\n  common.greenChnl = buf.readUInt8(i + 13);\n  common.blueChnl = buf.readUInt8(i + 14);\n  return common;\n}\nfunction readPages(buf, i, size) {\n  var pages = [];\n  var text = readNameNT(buf, i);\n  var len = text.length + 1;\n  var count = size / len;\n  for (var c = 0; c < count; c++) {\n    pages[c] = buf.slice(i, i + text.length).toString('utf8');\n    i += len;\n  }\n  return pages;\n}\nfunction readChars(buf, i, blockSize) {\n  var chars = [];\n  var count = blockSize / 20;\n  for (var c = 0; c < count; c++) {\n    var char = {};\n    var off = c * 20;\n    char.id = buf.readUInt32LE(i + 0 + off);\n    char.x = buf.readUInt16LE(i + 4 + off);\n    char.y = buf.readUInt16LE(i + 6 + off);\n    char.width = buf.readUInt16LE(i + 8 + off);\n    char.height = buf.readUInt16LE(i + 10 + off);\n    char.xoffset = buf.readInt16LE(i + 12 + off);\n    char.yoffset = buf.readInt16LE(i + 14 + off);\n    char.xadvance = buf.readInt16LE(i + 16 + off);\n    char.page = buf.readUInt8(i + 18 + off);\n    char.chnl = buf.readUInt8(i + 19 + off);\n    chars[c] = char;\n  }\n  return chars;\n}\nfunction readKernings(buf, i, blockSize) {\n  var kernings = [];\n  var count = blockSize / 10;\n  for (var c = 0; c < count; c++) {\n    var kern = {};\n    var off = c * 10;\n    kern.first = buf.readUInt32LE(i + 0 + off);\n    kern.second = buf.readUInt32LE(i + 4 + off);\n    kern.amount = buf.readInt16LE(i + 8 + off);\n    kernings[c] = kern;\n  }\n  return kernings;\n}\nfunction readNameNT(buf, offset) {\n  var pos = offset;\n  for (; pos < buf.length; pos++) {\n    if (buf[pos] === 0x00) break;\n  }\n  return buf.slice(offset, pos);\n}\nfunction readStringNT(buf, offset) {\n  return readNameNT(buf, offset).toString('utf8');\n}", "\"use strict\";\n\nfunction e(e) {\n  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, \"default\") ? e.default : e;\n}\nconst t = e => {\n    if (!e) return null;\n    const n = {};\n    switch (e.type) {\n      case \"ELEMENT\":\n        {\n          let a = {};\n          const u = s(e.value.attributes),\n            c = t(e.value.children);\n          if (u && (a = Object.assign(a, u)), c) {\n            const t = r(e.value.children);\n            a = Object.assign(a, t);\n          }\n          n[e.value.type] = a;\n          break;\n        }\n      case \"ATTRIBUTE\":\n        {\n          const t = e.value;\n          n[t.name] = t.value;\n          break;\n        }\n      case \"CONTENT\":\n        return {\n          content: e.value\n        };\n    }\n    return n;\n  },\n  r = e => e && Array.isArray(e) && 0 !== e.length ? n(e) ? {\n    content: e[0].value\n  } : {\n    children: e.map(t)\n  } : null,\n  n = e => e && Array.isArray(e) && 1 === e.length && \"CONTENT\" === e[0].type,\n  s = e => {\n    if (e && Array.isArray(e)) {\n      return e.map(t).reduce((e, t) => Object.assign(e, t), {});\n    }\n    return null;\n  };\nvar a = {\n  convert: e => t(e.value.children[0])\n};\nvar u = {\n  Token: (e, t) => ({\n    type: e,\n    value: t\n  })\n};\nconst {\n    Token: c\n  } = u,\n  l = c(\"EOF\"),\n  E = e => \" \" === e || \"\\n\" === e || \"\\r\" === e || \"\\t\" === e,\n  o = e => e.replace(/'/g, \"'\");\nvar T = {\n  createLexer: function (e) {\n    let t = null,\n      r = (e => {\n        let t = 0;\n        for (; t < e.length && E(e[t]);) t++;\n        return ((e, t) => {\n          if (e.startsWith(\"<?xml\", t)) {\n            const r = e.length;\n            for (; t < r;) if (\"?\" !== e[t]) t++;else {\n              if (\">\" === e[t + 1]) return t + 2;\n              t++;\n            }\n          }\n          return t;\n        })(e, t);\n      })(e),\n      n = [];\n    const s = () => e[r],\n      a = () => t !== l && r < e.length,\n      u = e => '\"' === e || \"'\" === e,\n      T = () => {\n        for (; a() && E(e[r]);) r++;\n      },\n      i = t => {\n        if (a()) {\n          if (\"<\" === e[r]) {\n            let t = \"<\";\n            return r++, a() && \"/\" === e[r] ? (r++, t = \"</\") : a() && \"!\" === e[r] && \"-\" === e[r + 1] && \"-\" === e[r + 2] && (r++, r++, r++, t = \"\\x3c!--\"), t;\n          }\n          if (\"/\" === s()) {\n            let e = \"/\";\n            return r++, a() && \">\" === s() && (r++, e = \"/>\"), e;\n          }\n          if (\"=\" === e[r] || \">\" === e[r]) {\n            const t = e[r];\n            return r++, t;\n          }\n        }\n        return p(!!t);\n      },\n      p = t => {\n        const n = t ? /[^>=<]/u : /[a-zA-Z0-9_:-]/;\n        let s = r;\n        for (; a() && e[r].match(n);) r++;\n        return o(e.substring(s, r));\n      },\n      N = () => {\n        const E = r;\n        T();\n        const f = r - E;\n        if (a()) {\n          if (t && \"OPEN_BRACKET\" === t.type) {\n            T();\n            const e = i(!1);\n            t = c(\"ELEMENT_TYPE\", e), n.push(e);\n          } else if (t && \"ASSIGN\" === t.type) {\n            a() && u(s()) && r++;\n            const n = e[r - 1];\n            let l = r;\n            for (; a() && s() !== n;) r++;\n            const E = o(e.substring(l, r));\n            r++, t = c(\"ATTRIB_VALUE\", E);\n          } else {\n            T();\n            let u = i(!0);\n            switch (u) {\n              case \"=\":\n                t = \"ATTRIB_NAME\" === t.type ? c(\"ASSIGN\") : c(\"CONTENT\", u);\n                break;\n              case \"</\":\n                {\n                  const s = r;\n                  for (; \">\" !== e[r];) r++;\n                  t = c(\"CLOSE_ELEMENT\", e.substring(s, r)), r++, n.pop();\n                  break;\n                }\n              case \"/>\":\n                {\n                  const e = n.pop();\n                  t = c(\"CLOSE_ELEMENT\", e);\n                  break;\n                }\n              case \"\\x3c!--\":\n                {\n                  const t = [\"!\", \"-\", \"-\"];\n                  for (; a() && (\">\" !== t[2] || \"-\" !== t[1] || \"-\" !== t[0]);) t.shift(), t.push(e[r]), r++;\n                  return N();\n                }\n              case \">\":\n                t = c(\"CLOSE_BRACKET\");\n                break;\n              case \"<\":\n                t = c(\"OPEN_BRACKET\");\n                break;\n              default:\n                if (u && u.length > 0) {\n                  if (\"CLOSE_BRACKET\" === t.type) {\n                    let e = \"\";\n                    \"<\" !== s() && (e = p(!0)), t = c(\"CONTENT\", u + e);\n                  } else if (\"ATTRIB_NAME\" !== t.type && \"CONTENT\" !== t.type) \"CLOSE_ELEMENT\" === t.type ? (u = \" \".repeat(f) + u, t = c(\"CONTENT\", u)) : t = c(\"ATTRIB_NAME\", u);else {\n                    const e = \" \".repeat(f) + u;\n                    t = c(\"CONTENT\", e);\n                  }\n                  break;\n                }\n                {\n                  const t = 'Unknown Syntax : \"' + e[r] + '\"';\n                  throw new Error(t);\n                }\n            }\n          }\n        } else t = l;\n        return t;\n      };\n    return {\n      peek: s,\n      next: N,\n      hasNext: a\n    };\n  }\n};\nconst {\n    createLexer: i\n  } = T,\n  {\n    Token: p\n  } = u,\n  [N, f, h, O] = [\"ROOT\", \"ELEMENT\", \"ATTRIBUTE\", \"CONTENT\"],\n  y = (e, t) => ({\n    type: e,\n    value: t\n  }),\n  C = e => y(O, e),\n  v = (e, t, r) => y(f, {\n    type: e,\n    attributes: t,\n    children: r\n  }),\n  A = (e, t) => y(h, {\n    name: e,\n    value: t\n  }),\n  L = (e, t) => {\n    const r = [];\n    for (; e.hasNext();) {\n      const n = e.next();\n      switch (n.type) {\n        case \"OPEN_BRACKET\":\n          {\n            const t = e.next(),\n              [n, s] = _(e);\n            let a = [];\n            \"CLOSE_ELEMENT\" !== s.type && (a = L(e, t)), a && a.length > 0 && \"CONTENT\" === a[0].type && (a = b(a)), r.push(v(t.value, n, a));\n            break;\n          }\n        case \"CLOSE_ELEMENT\":\n          if (n.value === t.value) return r;\n          break;\n        case \"CONTENT\":\n          r.push(C(n.value));\n          break;\n        case \"EOF\":\n          return r;\n        default:\n          throw new Error(`Unknown Lexem type: ${n.type} \"${n.value}, scoping element: ${t.value}\"`);\n      }\n    }\n    return r;\n  },\n  _ = e => {\n    const t = [];\n    let r = e.peek();\n    if (!e.hasNext() || r && \"CLOSE_BRACKET\" === r.type || r && \"CLOSE_ELEMENT\" === r.type) return [t, r];\n    for (r = e.next(); e.hasNext() && r && \"CLOSE_BRACKET\" !== r.type && \"CLOSE_ELEMENT\" !== r.type;) {\n      const n = r;\n      e.next();\n      const s = e.next(),\n        a = A(n.value, s.value);\n      t.push(a), r = e.next();\n    }\n    return [t, r];\n  };\nfunction b(e) {\n  let t = [],\n    r = \"\";\n  return e.forEach(e => {\n    \"CONTENT\" === e.type ? r += e.value : (r.length && (t.push(C(r)), r = \"\"), t.push(e));\n  }), r.length && t.push(C(r)), t;\n}\nvar x = {\n  AttribNode: A,\n  ContentNode: C,\n  ElementNode: v,\n  Node: y,\n  transpile: function (e, t) {\n    const r = (e => y(N, {\n      children: L(e, p(N, \"ROOT\"))\n    }))(i(e));\n    return t ? t.convert(r) : r;\n  }\n};\nconst k = a,\n  {\n    transpile: d\n  } = x;\nvar g = e({\n  convertXML: function (e, t) {\n    return d(e, t || k);\n  },\n  createAST: function (e) {\n    return d(e);\n  }\n});\nmodule.exports = g;", "'use strict';\n\nmodule.exports = pixelmatch;\nconst defaultOptions = {\n  threshold: 0.1,\n  // matching threshold (0 to 1); smaller is more sensitive\n  includeAA: false,\n  // whether to skip anti-aliasing detection\n  alpha: 0.1,\n  // opacity of original image in diff output\n  aaColor: [255, 255, 0],\n  // color of anti-aliased pixels in diff output\n  diffColor: [255, 0, 0],\n  // color of different pixels in diff output\n  diffColorAlt: null,\n  // whether to detect dark on light differences between img1 and img2 and set an alternative color to differentiate between the two\n  diffMask: false // draw the diff over a transparent background (a mask)\n};\nfunction pixelmatch(img1, img2, output, width, height, options) {\n  if (!isPixelData(img1) || !isPixelData(img2) || output && !isPixelData(output)) throw new Error('Image data: Uint8Array, Uint8ClampedArray or Buffer expected.');\n  if (img1.length !== img2.length || output && output.length !== img1.length) throw new Error('Image sizes do not match.');\n  if (img1.length !== width * height * 4) throw new Error('Image data size does not match width/height.');\n  options = Object.assign({}, defaultOptions, options);\n\n  // check if images are identical\n  const len = width * height;\n  const a32 = new Uint32Array(img1.buffer, img1.byteOffset, len);\n  const b32 = new Uint32Array(img2.buffer, img2.byteOffset, len);\n  let identical = true;\n  for (let i = 0; i < len; i++) {\n    if (a32[i] !== b32[i]) {\n      identical = false;\n      break;\n    }\n  }\n  if (identical) {\n    // fast path if identical\n    if (output && !options.diffMask) {\n      for (let i = 0; i < len; i++) drawGrayPixel(img1, 4 * i, options.alpha, output);\n    }\n    return 0;\n  }\n\n  // maximum acceptable square distance between two colors;\n  // 35215 is the maximum possible value for the YIQ difference metric\n  const maxDelta = 35215 * options.threshold * options.threshold;\n  let diff = 0;\n\n  // compare each pixel of one image against the other one\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const pos = (y * width + x) * 4;\n\n      // squared YUV distance between colors at this pixel position, negative if the img2 pixel is darker\n      const delta = colorDelta(img1, img2, pos, pos);\n\n      // the color difference is above the threshold\n      if (Math.abs(delta) > maxDelta) {\n        // check it's a real rendering difference or just anti-aliasing\n        if (!options.includeAA && (antialiased(img1, x, y, width, height, img2) || antialiased(img2, x, y, width, height, img1))) {\n          // one of the pixels is anti-aliasing; draw as yellow and do not count as difference\n          // note that we do not include such pixels in a mask\n          if (output && !options.diffMask) drawPixel(output, pos, ...options.aaColor);\n        } else {\n          // found substantial difference not caused by anti-aliasing; draw it as such\n          if (output) {\n            drawPixel(output, pos, ...(delta < 0 && options.diffColorAlt || options.diffColor));\n          }\n          diff++;\n        }\n      } else if (output) {\n        // pixels are similar; draw background as grayscale image blended with white\n        if (!options.diffMask) drawGrayPixel(img1, pos, options.alpha, output);\n      }\n    }\n  }\n\n  // return the number of different pixels\n  return diff;\n}\nfunction isPixelData(arr) {\n  // work around instanceof Uint8Array not working properly in some Jest environments\n  return ArrayBuffer.isView(arr) && arr.constructor.BYTES_PER_ELEMENT === 1;\n}\n\n// check if a pixel is likely a part of anti-aliasing;\n// based on \"Anti-aliased Pixel and Intensity Slope Detector\" paper by V. Vysniauskas, 2009\n\nfunction antialiased(img, x1, y1, width, height, img2) {\n  const x0 = Math.max(x1 - 1, 0);\n  const y0 = Math.max(y1 - 1, 0);\n  const x2 = Math.min(x1 + 1, width - 1);\n  const y2 = Math.min(y1 + 1, height - 1);\n  const pos = (y1 * width + x1) * 4;\n  let zeroes = x1 === x0 || x1 === x2 || y1 === y0 || y1 === y2 ? 1 : 0;\n  let min = 0;\n  let max = 0;\n  let minX, minY, maxX, maxY;\n\n  // go through 8 adjacent pixels\n  for (let x = x0; x <= x2; x++) {\n    for (let y = y0; y <= y2; y++) {\n      if (x === x1 && y === y1) continue;\n\n      // brightness delta between the center pixel and adjacent one\n      const delta = colorDelta(img, img, pos, (y * width + x) * 4, true);\n\n      // count the number of equal, darker and brighter adjacent pixels\n      if (delta === 0) {\n        zeroes++;\n        // if found more than 2 equal siblings, it's definitely not anti-aliasing\n        if (zeroes > 2) return false;\n\n        // remember the darkest pixel\n      } else if (delta < min) {\n        min = delta;\n        minX = x;\n        minY = y;\n\n        // remember the brightest pixel\n      } else if (delta > max) {\n        max = delta;\n        maxX = x;\n        maxY = y;\n      }\n    }\n  }\n\n  // if there are no both darker and brighter pixels among siblings, it's not anti-aliasing\n  if (min === 0 || max === 0) return false;\n\n  // if either the darkest or the brightest pixel has 3+ equal siblings in both images\n  // (definitely not anti-aliased), this pixel is anti-aliased\n  return hasManySiblings(img, minX, minY, width, height) && hasManySiblings(img2, minX, minY, width, height) || hasManySiblings(img, maxX, maxY, width, height) && hasManySiblings(img2, maxX, maxY, width, height);\n}\n\n// check if a pixel has 3+ adjacent pixels of the same color.\nfunction hasManySiblings(img, x1, y1, width, height) {\n  const x0 = Math.max(x1 - 1, 0);\n  const y0 = Math.max(y1 - 1, 0);\n  const x2 = Math.min(x1 + 1, width - 1);\n  const y2 = Math.min(y1 + 1, height - 1);\n  const pos = (y1 * width + x1) * 4;\n  let zeroes = x1 === x0 || x1 === x2 || y1 === y0 || y1 === y2 ? 1 : 0;\n\n  // go through 8 adjacent pixels\n  for (let x = x0; x <= x2; x++) {\n    for (let y = y0; y <= y2; y++) {\n      if (x === x1 && y === y1) continue;\n      const pos2 = (y * width + x) * 4;\n      if (img[pos] === img[pos2] && img[pos + 1] === img[pos2 + 1] && img[pos + 2] === img[pos2 + 2] && img[pos + 3] === img[pos2 + 3]) zeroes++;\n      if (zeroes > 2) return true;\n    }\n  }\n  return false;\n}\n\n// calculate color difference according to the paper \"Measuring perceived color difference\n// using YIQ NTSC transmission color space in mobile applications\" by Y. Kotsarenko and F. Ramos\n\nfunction colorDelta(img1, img2, k, m, yOnly) {\n  let r1 = img1[k + 0];\n  let g1 = img1[k + 1];\n  let b1 = img1[k + 2];\n  let a1 = img1[k + 3];\n  let r2 = img2[m + 0];\n  let g2 = img2[m + 1];\n  let b2 = img2[m + 2];\n  let a2 = img2[m + 3];\n  if (a1 === a2 && r1 === r2 && g1 === g2 && b1 === b2) return 0;\n  if (a1 < 255) {\n    a1 /= 255;\n    r1 = blend(r1, a1);\n    g1 = blend(g1, a1);\n    b1 = blend(b1, a1);\n  }\n  if (a2 < 255) {\n    a2 /= 255;\n    r2 = blend(r2, a2);\n    g2 = blend(g2, a2);\n    b2 = blend(b2, a2);\n  }\n  const y1 = rgb2y(r1, g1, b1);\n  const y2 = rgb2y(r2, g2, b2);\n  const y = y1 - y2;\n  if (yOnly) return y; // brightness difference only\n\n  const i = rgb2i(r1, g1, b1) - rgb2i(r2, g2, b2);\n  const q = rgb2q(r1, g1, b1) - rgb2q(r2, g2, b2);\n  const delta = 0.5053 * y * y + 0.299 * i * i + 0.1957 * q * q;\n\n  // encode whether the pixel lightens or darkens in the sign\n  return y1 > y2 ? -delta : delta;\n}\nfunction rgb2y(r, g, b) {\n  return r * 0.29889531 + g * 0.58662247 + b * 0.11448223;\n}\nfunction rgb2i(r, g, b) {\n  return r * 0.59597799 - g * 0.27417610 - b * 0.32180189;\n}\nfunction rgb2q(r, g, b) {\n  return r * 0.21147017 - g * 0.52261711 + b * 0.31114694;\n}\n\n// blend semi-transparent color with white\nfunction blend(c, a) {\n  return 255 + (c - 255) * a;\n}\nfunction drawPixel(output, pos, r, g, b) {\n  output[pos + 0] = r;\n  output[pos + 1] = g;\n  output[pos + 2] = b;\n  output[pos + 3] = 255;\n}\nfunction drawGrayPixel(img, i, alpha, output) {\n  const r = img[i + 0];\n  const g = img[i + 1];\n  const b = img[i + 2];\n  const val = blend(rgb2y(r, g, b), alpha * img[i + 3] / 255);\n  drawPixel(output, i, val, val, val);\n}", "var HeaderTypes;\n(function (HeaderTypes) {\n  HeaderTypes[HeaderTypes[\"BITMAP_INFO_HEADER\"] = 40] = \"BITMAP_INFO_HEADER\";\n  HeaderTypes[HeaderTypes[\"BITMAP_V2_INFO_HEADER\"] = 52] = \"BITMAP_V2_INFO_HEADER\";\n  HeaderTypes[HeaderTypes[\"BITMAP_V3_INFO_HEADER\"] = 56] = \"BITMAP_V3_INFO_HEADER\";\n  HeaderTypes[HeaderTypes[\"BITMAP_V4_HEADER\"] = 108] = \"BITMAP_V4_HEADER\";\n  HeaderTypes[HeaderTypes[\"BITMAP_V5_HEADER\"] = 124] = \"BITMAP_V5_HEADER\";\n})(HeaderTypes || (HeaderTypes = {}));\nexport default HeaderTypes;\n", "// We have these:\n//\n// const sample = 0101 0101 0101 0101\n// const mask   = 0111 1100 0000 0000\n// 256        === 0000 0001 0000 0000\n//\n// We want to take the sample and turn it into an 8-bit value.\n//\n// 1. We extract the last bit of the mask:\n//\n// 0000 0100 0000 0000\n//       ^\n//\n// Like so:\n//\n// const a = ~mask =    1000 0011 1111 1111\n// const b = a + 1 =    1000 0100 0000 0000\n// const c = b & mask = 0000 0100 0000 0000\n//\n// 2. We shift it to the right and extract the bit before the first:\n//\n// 0000 0000 0010 0000\n//             ^\n//\n// Like so:\n//\n// const d = mask / c = 0000 0000 0001 1111\n// const e = mask + 1 = 0000 0000 0010 0000\n//\n// 3. We apply the mask and the two values above to a sample:\n//\n// const f = sample & mask = 0101 0100 0000 0000\n// const g = f / c =         0000 0000 0001 0101\n// const h = 256 / e =       0000 0000 0000 0100\n// const i = g * h =         0000 0000 1010 1000\n//                                     ^^^^ ^\n//\n// Voila, we have extracted a sample and \"stretched\" it to 8 bits. For samples\n// which are already 8-bit, h === 1 and g === i.\nexport default function maskColor(maskRed, maskGreen, maskBlue, maskAlpha) {\n  const maskRedR = ~maskRed + 1 & maskRed;\n  const maskGreenR = ~maskGreen + 1 & maskGreen;\n  const maskBlueR = ~maskBlue + 1 & maskBlue;\n  const maskAlphaR = ~maskAlpha + 1 & maskAlpha;\n  const shiftedMaskRedL = maskRed / maskRedR + 1;\n  const shiftedMaskGreenL = maskGreen / maskGreenR + 1;\n  const shiftedMaskBlueL = maskBlue / maskBlueR + 1;\n  const shiftedMaskAlphaL = maskAlpha / maskAlphaR + 1;\n  return {\n    shiftRed: x => (x & maskRed) / maskRedR * 0x100 / shiftedMaskRedL,\n    shiftGreen: x => (x & maskGreen) / maskGreenR * 0x100 / shiftedMaskGreenL,\n    shiftBlue: x => (x & maskBlue) / maskBlueR * 0x100 / shiftedMaskBlueL,\n    shiftAlpha: maskAlpha !== 0 ? x => (x & maskAlpha) / maskAlphaR * 0x100 / shiftedMaskAlphaL : () => 255\n  };\n}\n", "export var BmpCompression;\n(function (BmpCompression) {\n  BmpCompression[BmpCompression[\"NONE\"] = 0] = \"NONE\";\n  BmpCompression[BmpCompression[\"BI_RLE8\"] = 1] = \"BI_RLE8\";\n  BmpCompression[BmpCompression[\"BI_RLE4\"] = 2] = \"BI_RLE4\";\n  BmpCompression[BmpCompression[\"BI_BIT_FIELDS\"] = 3] = \"BI_BIT_FIELDS\";\n  BmpCompression[BmpCompression[\"BI_ALPHA_BIT_FIELDS\"] = 6] = \"BI_ALPHA_BIT_FIELDS\";\n})(BmpCompression || (BmpCompression = {}));\n", "import HeaderTypes from './header-types.js';\nimport maskColor from './mask-color.js';\nimport { BmpCompression } from './types.js';\nexport default class BmpDecoder {\n  // Header\n  flag;\n  fileSize;\n  reserved1;\n  reserved2;\n  offset;\n  headerSize;\n  width;\n  height;\n  planes;\n  bitPP;\n  compression;\n  rawSize;\n  hr;\n  vr;\n  colors;\n  importantColors;\n  palette;\n  data;\n  maskRed;\n  maskGreen;\n  maskBlue;\n  maskAlpha;\n  toRGBA;\n  pos;\n  bottomUp;\n  buffer;\n  locRed;\n  locGreen;\n  locBlue;\n  locAlpha;\n  shiftRed;\n  shiftGreen;\n  shiftBlue;\n  shiftAlpha;\n  constructor(buffer, {\n    toRGBA\n  } = {\n    toRGBA: false\n  }) {\n    this.buffer = buffer;\n    this.toRGBA = !!toRGBA;\n    this.pos = 0;\n    this.bottomUp = true;\n    this.flag = this.buffer.toString('utf-8', 0, this.pos += 2);\n    if (this.flag !== 'BM') {\n      throw new Error('Invalid BMP File');\n    }\n    this.locRed = this.toRGBA ? 0 : 3;\n    this.locGreen = this.toRGBA ? 1 : 2;\n    this.locBlue = this.toRGBA ? 2 : 1;\n    this.locAlpha = this.toRGBA ? 3 : 0;\n    this.parseHeader();\n    this.parseRGBA();\n  }\n  parseHeader() {\n    this.fileSize = this.readUInt32LE();\n    this.reserved1 = this.buffer.readUInt16LE(this.pos);\n    this.pos += 2;\n    this.reserved2 = this.buffer.readUInt16LE(this.pos);\n    this.pos += 2;\n    this.offset = this.readUInt32LE();\n    // End of BITMAP_FILE_HEADER\n    this.headerSize = this.readUInt32LE();\n    if (!(this.headerSize in HeaderTypes)) {\n      throw new Error(`Unsupported BMP header size ${this.headerSize}`);\n    }\n    this.width = this.readUInt32LE();\n    this.height = this.readUInt32LE();\n    // negative value are possible here => implies bottom down\n    this.height = this.height > 0x7fffffff ? this.height - 0x100000000 : this.height;\n    this.planes = this.buffer.readUInt16LE(this.pos);\n    this.pos += 2;\n    this.bitPP = this.buffer.readUInt16LE(this.pos);\n    this.pos += 2;\n    this.compression = this.readUInt32LE();\n    this.rawSize = this.readUInt32LE();\n    this.hr = this.readUInt32LE();\n    this.vr = this.readUInt32LE();\n    this.colors = this.readUInt32LE();\n    this.importantColors = this.readUInt32LE();\n    // De facto defaults\n    if (this.bitPP === 32) {\n      this.maskAlpha = 0;\n      this.maskRed = 0x00ff0000;\n      this.maskGreen = 0x0000ff00;\n      this.maskBlue = 0x000000ff;\n    } else if (this.bitPP === 16) {\n      this.maskAlpha = 0;\n      this.maskRed = 0x7c00;\n      this.maskGreen = 0x03e0;\n      this.maskBlue = 0x001f;\n    }\n    // End of BITMAP_INFO_HEADER\n    if (this.headerSize > HeaderTypes.BITMAP_INFO_HEADER || this.compression === BmpCompression.BI_BIT_FIELDS || this.compression === BmpCompression.BI_ALPHA_BIT_FIELDS) {\n      this.maskRed = this.readUInt32LE();\n      this.maskGreen = this.readUInt32LE();\n      this.maskBlue = this.readUInt32LE();\n    }\n    // End of BITMAP_V2_INFO_HEADER\n    if (this.headerSize > HeaderTypes.BITMAP_V2_INFO_HEADER || this.compression === BmpCompression.BI_ALPHA_BIT_FIELDS) {\n      this.maskAlpha = this.readUInt32LE();\n    }\n    // End of BITMAP_V3_INFO_HEADER\n    if (this.headerSize > HeaderTypes.BITMAP_V3_INFO_HEADER) {\n      this.pos += HeaderTypes.BITMAP_V4_HEADER - HeaderTypes.BITMAP_V3_INFO_HEADER;\n    }\n    // End of BITMAP_V4_HEADER\n    if (this.headerSize > HeaderTypes.BITMAP_V4_HEADER) {\n      this.pos += HeaderTypes.BITMAP_V5_HEADER - HeaderTypes.BITMAP_V4_HEADER;\n    }\n    // End of BITMAP_V5_HEADER\n    if (this.bitPP <= 8 || this.colors > 0) {\n      const len = this.colors === 0 ? 1 << this.bitPP : this.colors;\n      this.palette = new Array(len);\n      for (let i = 0; i < len; i++) {\n        const blue = this.buffer.readUInt8(this.pos++);\n        const green = this.buffer.readUInt8(this.pos++);\n        const red = this.buffer.readUInt8(this.pos++);\n        const quad = this.buffer.readUInt8(this.pos++);\n        this.palette[i] = {\n          red,\n          green,\n          blue,\n          quad\n        };\n      }\n    }\n    // End of color table\n    // Can the height ever be negative?\n    if (this.height < 0) {\n      this.height *= -1;\n      this.bottomUp = false;\n    }\n    const coloShift = maskColor(this.maskRed, this.maskGreen, this.maskBlue, this.maskAlpha);\n    this.shiftRed = coloShift.shiftRed;\n    this.shiftGreen = coloShift.shiftGreen;\n    this.shiftBlue = coloShift.shiftBlue;\n    this.shiftAlpha = coloShift.shiftAlpha;\n  }\n  parseRGBA() {\n    this.data = Buffer.alloc(this.width * this.height * 4);\n    switch (this.bitPP) {\n      case 1:\n        this.bit1();\n        break;\n      case 4:\n        this.bit4();\n        break;\n      case 8:\n        this.bit8();\n        break;\n      case 16:\n        this.bit16();\n        break;\n      case 24:\n        this.bit24();\n        break;\n      default:\n        this.bit32();\n    }\n  }\n  bit1() {\n    const xLen = Math.ceil(this.width / 8);\n    const mode = xLen % 4;\n    const padding = mode !== 0 ? 4 - mode : 0;\n    let lastLine;\n    this.scanImage(padding, xLen, (x, line) => {\n      if (line !== lastLine) {\n        lastLine = line;\n      }\n      const b = this.buffer.readUInt8(this.pos++);\n      const location = line * this.width * 4 + x * 8 * 4;\n      for (let i = 0; i < 8; i++) {\n        if (x * 8 + i < this.width) {\n          const rgb = this.palette[b >> 7 - i & 0x1];\n          this.data[location + i * this.locAlpha] = 0;\n          this.data[location + i * 4 + this.locBlue] = rgb.blue;\n          this.data[location + i * 4 + this.locGreen] = rgb.green;\n          this.data[location + i * 4 + this.locRed] = rgb.red;\n        } else {\n          break;\n        }\n      }\n    });\n  }\n  bit4() {\n    if (this.compression === BmpCompression.BI_RLE4) {\n      this.data.fill(0);\n      let lowNibble = false; //for all count of pixel\n      let lines = this.bottomUp ? this.height - 1 : 0;\n      let location = 0;\n      while (location < this.data.length) {\n        const a = this.buffer.readUInt8(this.pos++);\n        const b = this.buffer.readUInt8(this.pos++);\n        //absolute mode\n        if (a === 0) {\n          if (b === 0) {\n            //line end\n            lines += this.bottomUp ? -1 : 1;\n            location = lines * this.width * 4;\n            lowNibble = false;\n            continue;\n          }\n          if (b === 1) {\n            // image end\n            break;\n          }\n          if (b === 2) {\n            // offset x, y\n            const x = this.buffer.readUInt8(this.pos++);\n            const y = this.buffer.readUInt8(this.pos++);\n            lines += this.bottomUp ? -y : y;\n            location += y * this.width * 4 + x * 4;\n          } else {\n            let c = this.buffer.readUInt8(this.pos++);\n            for (let i = 0; i < b; i++) {\n              location = this.setPixelData(location, lowNibble ? c & 0x0f : (c & 0xf0) >> 4);\n              if (i & 1 && i + 1 < b) {\n                c = this.buffer.readUInt8(this.pos++);\n              }\n              lowNibble = !lowNibble;\n            }\n            if ((b + 1 >> 1 & 1) === 1) {\n              this.pos++;\n            }\n          }\n        } else {\n          //encoded mode\n          for (let i = 0; i < a; i++) {\n            location = this.setPixelData(location, lowNibble ? b & 0x0f : (b & 0xf0) >> 4);\n            lowNibble = !lowNibble;\n          }\n        }\n      }\n    } else {\n      const xLen = Math.ceil(this.width / 2);\n      const mode = xLen % 4;\n      const padding = mode !== 0 ? 4 - mode : 0;\n      this.scanImage(padding, xLen, (x, line) => {\n        const b = this.buffer.readUInt8(this.pos++);\n        const location = line * this.width * 4 + x * 2 * 4;\n        const first4 = b >> 4;\n        let rgb = this.palette[first4];\n        this.data[location] = 0;\n        this.data[location + 1] = rgb.blue;\n        this.data[location + 2] = rgb.green;\n        this.data[location + 3] = rgb.red;\n        if (x * 2 + 1 >= this.width) {\n          // throw new Error('Something');\n          return false;\n        }\n        const last4 = b & 0x0f;\n        rgb = this.palette[last4];\n        this.data[location + 4] = 0;\n        this.data[location + 4 + 1] = rgb.blue;\n        this.data[location + 4 + 2] = rgb.green;\n        this.data[location + 4 + 3] = rgb.red;\n      });\n    }\n  }\n  bit8() {\n    if (this.compression === BmpCompression.BI_RLE8) {\n      this.data.fill(0);\n      let lines = this.bottomUp ? this.height - 1 : 0;\n      let location = 0;\n      while (location < this.data.length) {\n        const a = this.buffer.readUInt8(this.pos++);\n        const b = this.buffer.readUInt8(this.pos++);\n        //absolute mode\n        if (a === 0) {\n          if (b === 0) {\n            //line end\n            lines += this.bottomUp ? -1 : 1;\n            location = lines * this.width * 4;\n            continue;\n          }\n          if (b === 1) {\n            //image end\n            break;\n          }\n          if (b === 2) {\n            //offset x,y\n            const x = this.buffer.readUInt8(this.pos++);\n            const y = this.buffer.readUInt8(this.pos++);\n            lines += this.bottomUp ? -y : y;\n            location += y * this.width * 4 + x * 4;\n          } else {\n            for (let i = 0; i < b; i++) {\n              const c = this.buffer.readUInt8(this.pos++);\n              location = this.setPixelData(location, c);\n            }\n            // @ts-ignore\n            const shouldIncrement = b & 1 === 1;\n            if (shouldIncrement) {\n              this.pos++;\n            }\n          }\n        } else {\n          //encoded mode\n          for (let i = 0; i < a; i++) {\n            location = this.setPixelData(location, b);\n          }\n        }\n      }\n    } else {\n      const mode = this.width % 4;\n      const padding = mode !== 0 ? 4 - mode : 0;\n      this.scanImage(padding, this.width, (x, line) => {\n        const b = this.buffer.readUInt8(this.pos++);\n        const location = line * this.width * 4 + x * 4;\n        if (b < this.palette.length) {\n          const rgb = this.palette[b];\n          this.data[location] = 0;\n          this.data[location + 1] = rgb.blue;\n          this.data[location + 2] = rgb.green;\n          this.data[location + 3] = rgb.red;\n        } else {\n          this.data[location] = 0;\n          this.data[location + 1] = 0xff;\n          this.data[location + 2] = 0xff;\n          this.data[location + 3] = 0xff;\n        }\n      });\n    }\n  }\n  bit16() {\n    const padding = this.width % 2 * 2;\n    this.scanImage(padding, this.width, (x, line) => {\n      const loc = line * this.width * 4 + x * 4;\n      const px = this.buffer.readUInt16LE(this.pos);\n      this.pos += 2;\n      this.data[loc + this.locRed] = this.shiftRed(px);\n      this.data[loc + this.locGreen] = this.shiftGreen(px);\n      this.data[loc + this.locBlue] = this.shiftBlue(px);\n      this.data[loc + this.locAlpha] = this.shiftAlpha(px);\n    });\n  }\n  bit24() {\n    const padding = this.width % 4;\n    this.scanImage(padding, this.width, (x, line) => {\n      const loc = line * this.width * 4 + x * 4;\n      const blue = this.buffer.readUInt8(this.pos++);\n      const green = this.buffer.readUInt8(this.pos++);\n      const red = this.buffer.readUInt8(this.pos++);\n      this.data[loc + this.locRed] = red;\n      this.data[loc + this.locGreen] = green;\n      this.data[loc + this.locBlue] = blue;\n      this.data[loc + this.locAlpha] = 0;\n    });\n  }\n  bit32() {\n    this.scanImage(0, this.width, (x, line) => {\n      const loc = line * this.width * 4 + x * 4;\n      const px = this.readUInt32LE();\n      this.data[loc + this.locRed] = this.shiftRed(px);\n      this.data[loc + this.locGreen] = this.shiftGreen(px);\n      this.data[loc + this.locBlue] = this.shiftBlue(px);\n      this.data[loc + this.locAlpha] = this.shiftAlpha(px);\n    });\n  }\n  scanImage(padding = 0, width = this.width, processPixel) {\n    for (let y = this.height - 1; y >= 0; y--) {\n      const line = this.bottomUp ? y : this.height - 1 - y;\n      for (let x = 0; x < width; x++) {\n        const result = processPixel.call(this, x, line);\n        if (result === false) {\n          return;\n        }\n      }\n      this.pos += padding;\n    }\n  }\n  readUInt32LE() {\n    const value = this.buffer.readUInt32LE(this.pos);\n    this.pos += 4;\n    return value;\n  }\n  setPixelData(location, rgbIndex) {\n    const {\n      blue,\n      green,\n      red\n    } = this.palette[rgbIndex];\n    this.data[location + this.locAlpha] = 0;\n    this.data[location + 1 + this.locBlue] = blue;\n    this.data[location + 2 + this.locGreen] = green;\n    this.data[location + 3 + this.locRed] = red;\n    return location + 4;\n  }\n}\n", "import HeaderTypes from './header-types.js';\nfunction createInteger(numbers) {\n  return numbers.reduce((final, n) => final << 1 | n, 0);\n}\nfunction createColor(color) {\n  return color.quad << 24 | color.red << 16 | color.green << 8 | color.blue;\n}\nexport default class BmpEncoder {\n  fileSize;\n  reserved1;\n  reserved2;\n  offset;\n  width;\n  flag;\n  height;\n  planes;\n  bitPP;\n  compress;\n  hr;\n  vr;\n  colors;\n  importantColors;\n  rawSize;\n  headerSize;\n  data;\n  palette;\n  extraBytes;\n  buffer;\n  bytesInColor;\n  pos;\n  constructor(imgData) {\n    this.buffer = imgData.data;\n    this.width = imgData.width;\n    this.height = imgData.height;\n    this.headerSize = HeaderTypes.BITMAP_INFO_HEADER;\n    // Header\n    this.flag = 'BM';\n    this.bitPP = imgData.bitPP || 24;\n    this.offset = 54;\n    this.reserved1 = imgData.reserved1 || 0;\n    this.reserved2 = imgData.reserved2 || 0;\n    this.planes = 1;\n    this.compress = 0;\n    this.hr = imgData.hr || 0;\n    this.vr = imgData.vr || 0;\n    this.importantColors = imgData.importantColors || 0;\n    this.colors = Math.min(2 ** (this.bitPP - 1 || 1), imgData.colors || Infinity);\n    this.palette = imgData.palette || [];\n    if (this.colors && this.bitPP < 16) {\n      this.offset += this.colors * 4;\n    } else {\n      this.colors = 0;\n    }\n    switch (this.bitPP) {\n      case 32:\n        this.bytesInColor = 4;\n        break;\n      case 16:\n        this.bytesInColor = 2;\n        break;\n      case 8:\n        this.bytesInColor = 1;\n        break;\n      case 4:\n        this.bytesInColor = 1 / 2;\n        break;\n      case 1:\n        this.bytesInColor = 1 / 8;\n        break;\n      default:\n        this.bytesInColor = 3;\n        this.bitPP = 24;\n    }\n    const rowWidth = this.width * this.bitPP / 32;\n    const rowBytes = Math.ceil(rowWidth);\n    this.extraBytes = (rowBytes - rowWidth) * 4;\n    // Why 2?\n    this.rawSize = this.height * rowBytes * 4 + 2;\n    this.fileSize = this.rawSize + this.offset;\n    this.data = Buffer.alloc(this.fileSize, 0x1);\n    this.pos = 0;\n    this.encode();\n  }\n  encode() {\n    this.pos = 0;\n    this.writeHeader();\n    switch (this.bitPP) {\n      case 32:\n        this.bit32();\n        break;\n      case 16:\n        this.bit16();\n        break;\n      case 8:\n        this.bit8();\n        break;\n      case 4:\n        this.bit4();\n        break;\n      case 1:\n        this.bit1();\n        break;\n      default:\n        this.bit24();\n    }\n  }\n  writeHeader() {\n    this.data.write(this.flag, this.pos, 2);\n    this.pos += 2;\n    this.writeUInt32LE(this.fileSize);\n    // Writing 2 UInt16LE resulted in a weird bug\n    this.writeUInt32LE(this.reserved1 << 16 | this.reserved2);\n    this.writeUInt32LE(this.offset);\n    this.writeUInt32LE(this.headerSize);\n    this.writeUInt32LE(this.width);\n    this.writeUInt32LE(this.height);\n    this.data.writeUInt16LE(this.planes, this.pos);\n    this.pos += 2;\n    this.data.writeUInt16LE(this.bitPP, this.pos);\n    this.pos += 2;\n    this.writeUInt32LE(this.compress);\n    this.writeUInt32LE(this.rawSize);\n    this.writeUInt32LE(this.hr);\n    this.writeUInt32LE(this.vr);\n    this.writeUInt32LE(this.colors);\n    this.writeUInt32LE(this.importantColors);\n  }\n  bit1() {\n    if (this.palette.length && this.colors === 2) {\n      this.initColors(1);\n    } else {\n      this.writeUInt32LE(0x00ffffff); // Black\n      this.writeUInt32LE(0x00000000); // White\n    }\n    this.pos += 1; // ?\n    let lineArr = [];\n    this.writeImage((p, index, x) => {\n      let i = index;\n      i++;\n      const b = this.buffer[i++];\n      const g = this.buffer[i++];\n      const r = this.buffer[i++];\n      const brightness = r * 0.2126 + g * 0.7152 + b * 0.0722;\n      lineArr.push(brightness > 127 ? 0 : 1);\n      if ((x + 1) % 8 === 0) {\n        this.data[p - 1] = createInteger(lineArr);\n        lineArr = [];\n      } else if (x === this.width - 1 && lineArr.length > 0) {\n        this.data[p - 1] = createInteger(lineArr) << 4;\n        lineArr = [];\n      }\n      return i;\n    });\n  }\n  bit4() {\n    const colors = this.initColors(4);\n    let integerPair = [];\n    this.writeImage((p, index, x) => {\n      let i = index;\n      const colorInt = createColor({\n        quad: this.buffer[i++],\n        blue: this.buffer[i++],\n        green: this.buffer[i++],\n        red: this.buffer[i++]\n      });\n      const colorExists = colors.findIndex(c => c === colorInt);\n      if (colorExists !== -1) {\n        integerPair.push(colorExists);\n      } else {\n        integerPair.push(0);\n      }\n      if ((x + 1) % 2 === 0) {\n        this.data[p] = integerPair[0] << 4 | integerPair[1];\n        integerPair = [];\n      }\n      return i;\n    });\n  }\n  bit8() {\n    const colors = this.initColors(8);\n    this.writeImage((p, index) => {\n      let i = index;\n      const colorInt = createColor({\n        quad: this.buffer[i++],\n        blue: this.buffer[i++],\n        green: this.buffer[i++],\n        red: this.buffer[i++]\n      });\n      const colorExists = colors.findIndex(c => c === colorInt);\n      if (colorExists !== -1) {\n        this.data[p] = colorExists;\n      } else {\n        this.data[p] = 0;\n      }\n      return i;\n    });\n  }\n  bit16() {\n    this.writeImage((p, index) => {\n      let i = index + 1;\n      const b = this.buffer[i++] / 8; // b\n      const g = this.buffer[i++] / 8; // g\n      const r = this.buffer[i++] / 8; // r\n      const color = r << 10 | g << 5 | b;\n      this.data[p] = color & 0x00ff;\n      this.data[p + 1] = (color & 0xff00) >> 8;\n      return i;\n    });\n  }\n  bit24() {\n    this.writeImage((p, index) => {\n      let i = index + 1;\n      this.data[p] = this.buffer[i++]; //b\n      this.data[p + 1] = this.buffer[i++]; //g\n      this.data[p + 2] = this.buffer[i++]; //r\n      return i;\n    });\n  }\n  bit32() {\n    this.writeImage((p, index) => {\n      let i = index;\n      this.data[p + 3] = this.buffer[i++]; // a\n      this.data[p] = this.buffer[i++]; // b\n      this.data[p + 1] = this.buffer[i++]; // g\n      this.data[p + 2] = this.buffer[i++]; // r\n      return i;\n    });\n  }\n  writeImage(writePixel) {\n    const rowBytes = this.extraBytes + this.width * this.bytesInColor;\n    let i = 0;\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        const p = Math.floor(this.pos + (this.height - 1 - y) * rowBytes + x * this.bytesInColor);\n        i = writePixel.call(this, p, i, x, y);\n      }\n    }\n  }\n  initColors(bit) {\n    const colors = [];\n    if (this.palette.length) {\n      for (let i = 0; i < this.colors; i++) {\n        const rootColor = createColor(this.palette[i]);\n        this.writeUInt32LE(rootColor);\n        colors.push(rootColor);\n      }\n    } else {\n      throw new Error(`To encode ${bit}-bit BMPs a pallette is needed. Please choose up to ${this.colors} colors. Colors must be 32-bit integers.`);\n    }\n    return colors;\n  }\n  writeUInt32LE(value) {\n    this.data.writeUInt32LE(value, this.pos);\n    this.pos += 4;\n  }\n}\n", "import BmpDecoder from './decoder.js';\nimport BmpEncoder from './encoder.js';\nexport function decode(bmpData, options) {\n  return new BmpDecoder(bmpData, options);\n}\nexport function encode(imgData) {\n  return new BmpEncoder(imgData);\n}\nexport * from './types.js';\n", "// This file is autogenerated. It's used to publish ESM to npm.\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\nvar trimLeft = /^\\s+/;\nvar trimRight = /\\s+$/;\nfunction tinycolor(color, opts) {\n  color = color ? color : \"\";\n  opts = opts || {};\n\n  // If input is already a tinycolor, return itself\n  if (color instanceof tinycolor) {\n    return color;\n  }\n  // If we are called as a function, call using new instead\n  if (!(this instanceof tinycolor)) {\n    return new tinycolor(color, opts);\n  }\n  var rgb = inputToRGB(color);\n  this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = Math.round(100 * this._a) / 100, this._format = opts.format || rgb.format;\n  this._gradientType = opts.gradientType;\n\n  // Don't let the range of [0,255] come back in [0,1].\n  // Potentially lose a little bit of precision here, but will fix issues where\n  // .5 gets interpreted as half of the total, instead of half of 1\n  // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n  if (this._r < 1) this._r = Math.round(this._r);\n  if (this._g < 1) this._g = Math.round(this._g);\n  if (this._b < 1) this._b = Math.round(this._b);\n  this._ok = rgb.ok;\n}\ntinycolor.prototype = {\n  isDark: function isDark() {\n    return this.getBrightness() < 128;\n  },\n  isLight: function isLight() {\n    return !this.isDark();\n  },\n  isValid: function isValid() {\n    return this._ok;\n  },\n  getOriginalInput: function getOriginalInput() {\n    return this._originalInput;\n  },\n  getFormat: function getFormat() {\n    return this._format;\n  },\n  getAlpha: function getAlpha() {\n    return this._a;\n  },\n  getBrightness: function getBrightness() {\n    //http://www.w3.org/TR/AERT#color-contrast\n    var rgb = this.toRgb();\n    return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n  },\n  getLuminance: function getLuminance() {\n    //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n    var rgb = this.toRgb();\n    var RsRGB, GsRGB, BsRGB, R, G, B;\n    RsRGB = rgb.r / 255;\n    GsRGB = rgb.g / 255;\n    BsRGB = rgb.b / 255;\n    if (RsRGB <= 0.03928) R = RsRGB / 12.92;else R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n    if (GsRGB <= 0.03928) G = GsRGB / 12.92;else G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n    if (BsRGB <= 0.03928) B = BsRGB / 12.92;else B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n    return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n  },\n  setAlpha: function setAlpha(value) {\n    this._a = boundAlpha(value);\n    this._roundA = Math.round(100 * this._a) / 100;\n    return this;\n  },\n  toHsv: function toHsv() {\n    var hsv = rgbToHsv(this._r, this._g, this._b);\n    return {\n      h: hsv.h * 360,\n      s: hsv.s,\n      v: hsv.v,\n      a: this._a\n    };\n  },\n  toHsvString: function toHsvString() {\n    var hsv = rgbToHsv(this._r, this._g, this._b);\n    var h = Math.round(hsv.h * 360),\n      s = Math.round(hsv.s * 100),\n      v = Math.round(hsv.v * 100);\n    return this._a == 1 ? \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%)\" : \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + this._roundA + \")\";\n  },\n  toHsl: function toHsl() {\n    var hsl = rgbToHsl(this._r, this._g, this._b);\n    return {\n      h: hsl.h * 360,\n      s: hsl.s,\n      l: hsl.l,\n      a: this._a\n    };\n  },\n  toHslString: function toHslString() {\n    var hsl = rgbToHsl(this._r, this._g, this._b);\n    var h = Math.round(hsl.h * 360),\n      s = Math.round(hsl.s * 100),\n      l = Math.round(hsl.l * 100);\n    return this._a == 1 ? \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\" : \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + this._roundA + \")\";\n  },\n  toHex: function toHex(allow3Char) {\n    return rgbToHex(this._r, this._g, this._b, allow3Char);\n  },\n  toHexString: function toHexString(allow3Char) {\n    return \"#\" + this.toHex(allow3Char);\n  },\n  toHex8: function toHex8(allow4Char) {\n    return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n  },\n  toHex8String: function toHex8String(allow4Char) {\n    return \"#\" + this.toHex8(allow4Char);\n  },\n  toRgb: function toRgb() {\n    return {\n      r: Math.round(this._r),\n      g: Math.round(this._g),\n      b: Math.round(this._b),\n      a: this._a\n    };\n  },\n  toRgbString: function toRgbString() {\n    return this._a == 1 ? \"rgb(\" + Math.round(this._r) + \", \" + Math.round(this._g) + \", \" + Math.round(this._b) + \")\" : \"rgba(\" + Math.round(this._r) + \", \" + Math.round(this._g) + \", \" + Math.round(this._b) + \", \" + this._roundA + \")\";\n  },\n  toPercentageRgb: function toPercentageRgb() {\n    return {\n      r: Math.round(bound01(this._r, 255) * 100) + \"%\",\n      g: Math.round(bound01(this._g, 255) * 100) + \"%\",\n      b: Math.round(bound01(this._b, 255) * 100) + \"%\",\n      a: this._a\n    };\n  },\n  toPercentageRgbString: function toPercentageRgbString() {\n    return this._a == 1 ? \"rgb(\" + Math.round(bound01(this._r, 255) * 100) + \"%, \" + Math.round(bound01(this._g, 255) * 100) + \"%, \" + Math.round(bound01(this._b, 255) * 100) + \"%)\" : \"rgba(\" + Math.round(bound01(this._r, 255) * 100) + \"%, \" + Math.round(bound01(this._g, 255) * 100) + \"%, \" + Math.round(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n  },\n  toName: function toName() {\n    if (this._a === 0) {\n      return \"transparent\";\n    }\n    if (this._a < 1) {\n      return false;\n    }\n    return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n  },\n  toFilter: function toFilter(secondColor) {\n    var hex8String = \"#\" + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n    var secondHex8String = hex8String;\n    var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n    if (secondColor) {\n      var s = tinycolor(secondColor);\n      secondHex8String = \"#\" + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n    }\n    return \"progid:DXImageTransform.Microsoft.gradient(\" + gradientType + \"startColorstr=\" + hex8String + \",endColorstr=\" + secondHex8String + \")\";\n  },\n  toString: function toString(format) {\n    var formatSet = !!format;\n    format = format || this._format;\n    var formattedString = false;\n    var hasAlpha = this._a < 1 && this._a >= 0;\n    var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n    if (needsAlphaFormat) {\n      // Special case for \"transparent\", all other non-alpha formats\n      // will return rgba when there is transparency.\n      if (format === \"name\" && this._a === 0) {\n        return this.toName();\n      }\n      return this.toRgbString();\n    }\n    if (format === \"rgb\") {\n      formattedString = this.toRgbString();\n    }\n    if (format === \"prgb\") {\n      formattedString = this.toPercentageRgbString();\n    }\n    if (format === \"hex\" || format === \"hex6\") {\n      formattedString = this.toHexString();\n    }\n    if (format === \"hex3\") {\n      formattedString = this.toHexString(true);\n    }\n    if (format === \"hex4\") {\n      formattedString = this.toHex8String(true);\n    }\n    if (format === \"hex8\") {\n      formattedString = this.toHex8String();\n    }\n    if (format === \"name\") {\n      formattedString = this.toName();\n    }\n    if (format === \"hsl\") {\n      formattedString = this.toHslString();\n    }\n    if (format === \"hsv\") {\n      formattedString = this.toHsvString();\n    }\n    return formattedString || this.toHexString();\n  },\n  clone: function clone() {\n    return tinycolor(this.toString());\n  },\n  _applyModification: function _applyModification(fn, args) {\n    var color = fn.apply(null, [this].concat([].slice.call(args)));\n    this._r = color._r;\n    this._g = color._g;\n    this._b = color._b;\n    this.setAlpha(color._a);\n    return this;\n  },\n  lighten: function lighten() {\n    return this._applyModification(_lighten, arguments);\n  },\n  brighten: function brighten() {\n    return this._applyModification(_brighten, arguments);\n  },\n  darken: function darken() {\n    return this._applyModification(_darken, arguments);\n  },\n  desaturate: function desaturate() {\n    return this._applyModification(_desaturate, arguments);\n  },\n  saturate: function saturate() {\n    return this._applyModification(_saturate, arguments);\n  },\n  greyscale: function greyscale() {\n    return this._applyModification(_greyscale, arguments);\n  },\n  spin: function spin() {\n    return this._applyModification(_spin, arguments);\n  },\n  _applyCombination: function _applyCombination(fn, args) {\n    return fn.apply(null, [this].concat([].slice.call(args)));\n  },\n  analogous: function analogous() {\n    return this._applyCombination(_analogous, arguments);\n  },\n  complement: function complement() {\n    return this._applyCombination(_complement, arguments);\n  },\n  monochromatic: function monochromatic() {\n    return this._applyCombination(_monochromatic, arguments);\n  },\n  splitcomplement: function splitcomplement() {\n    return this._applyCombination(_splitcomplement, arguments);\n  },\n  // Disabled until https://github.com/bgrins/TinyColor/issues/254\n  // polyad: function (number) {\n  //   return this._applyCombination(polyad, [number]);\n  // },\n  triad: function triad() {\n    return this._applyCombination(polyad, [3]);\n  },\n  tetrad: function tetrad() {\n    return this._applyCombination(polyad, [4]);\n  }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function (color, opts) {\n  if (_typeof(color) == \"object\") {\n    var newColor = {};\n    for (var i in color) {\n      if (color.hasOwnProperty(i)) {\n        if (i === \"a\") {\n          newColor[i] = color[i];\n        } else {\n          newColor[i] = convertToPercentage(color[i]);\n        }\n      }\n    }\n    color = newColor;\n  }\n  return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n  var rgb = {\n    r: 0,\n    g: 0,\n    b: 0\n  };\n  var a = 1;\n  var s = null;\n  var v = null;\n  var l = null;\n  var ok = false;\n  var format = false;\n  if (typeof color == \"string\") {\n    color = stringInputToObject(color);\n  }\n  if (_typeof(color) == \"object\") {\n    if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n      rgb = rgbToRgb(color.r, color.g, color.b);\n      ok = true;\n      format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n      s = convertToPercentage(color.s);\n      v = convertToPercentage(color.v);\n      rgb = hsvToRgb(color.h, s, v);\n      ok = true;\n      format = \"hsv\";\n    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n      s = convertToPercentage(color.s);\n      l = convertToPercentage(color.l);\n      rgb = hslToRgb(color.h, s, l);\n      ok = true;\n      format = \"hsl\";\n    }\n    if (color.hasOwnProperty(\"a\")) {\n      a = color.a;\n    }\n  }\n  a = boundAlpha(a);\n  return {\n    ok: ok,\n    format: color.format || format,\n    r: Math.min(255, Math.max(rgb.r, 0)),\n    g: Math.min(255, Math.max(rgb.g, 0)),\n    b: Math.min(255, Math.max(rgb.b, 0)),\n    a: a\n  };\n}\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b) {\n  return {\n    r: bound01(r, 255) * 255,\n    g: bound01(g, 255) * 255,\n    b: bound01(b, 255) * 255\n  };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n  r = bound01(r, 255);\n  g = bound01(g, 255);\n  b = bound01(b, 255);\n  var max = Math.max(r, g, b),\n    min = Math.min(r, g, b);\n  var h,\n    s,\n    l = (max + min) / 2;\n  if (max == min) {\n    h = s = 0; // achromatic\n  } else {\n    var d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n  return {\n    h: h,\n    s: s,\n    l: l\n  };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n  var r, g, b;\n  h = bound01(h, 360);\n  s = bound01(s, 100);\n  l = bound01(l, 100);\n  function hue2rgb(p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n  }\n  if (s === 0) {\n    r = g = b = l; // achromatic\n  } else {\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n  return {\n    r: r * 255,\n    g: g * 255,\n    b: b * 255\n  };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n  r = bound01(r, 255);\n  g = bound01(g, 255);\n  b = bound01(b, 255);\n  var max = Math.max(r, g, b),\n    min = Math.min(r, g, b);\n  var h,\n    s,\n    v = max;\n  var d = max - min;\n  s = max === 0 ? 0 : d / max;\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n  return {\n    h: h,\n    s: s,\n    v: v\n  };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hsvToRgb(h, s, v) {\n  h = bound01(h, 360) * 6;\n  s = bound01(s, 100);\n  v = bound01(v, 100);\n  var i = Math.floor(h),\n    f = h - i,\n    p = v * (1 - s),\n    q = v * (1 - f * s),\n    t = v * (1 - (1 - f) * s),\n    mod = i % 6,\n    r = [v, q, p, p, t, v][mod],\n    g = [t, v, v, q, p, p][mod],\n    b = [p, p, t, v, v, q][mod];\n  return {\n    r: r * 255,\n    g: g * 255,\n    b: b * 255\n  };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n  var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];\n\n  // Return a 3 character hex if possible\n  if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n  }\n  return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n  var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16)), pad2(convertDecimalToHex(a))];\n\n  // Return a 4 character hex if possible\n  if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n  }\n  return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n  var hex = [pad2(convertDecimalToHex(a)), pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];\n  return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n  if (!color1 || !color2) return false;\n  return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\ntinycolor.random = function () {\n  return tinycolor.fromRatio({\n    r: Math.random(),\n    g: Math.random(),\n    b: Math.random()\n  });\n};\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction _desaturate(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.s -= amount / 100;\n  hsl.s = clamp01(hsl.s);\n  return tinycolor(hsl);\n}\nfunction _saturate(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.s += amount / 100;\n  hsl.s = clamp01(hsl.s);\n  return tinycolor(hsl);\n}\nfunction _greyscale(color) {\n  return tinycolor(color).desaturate(100);\n}\nfunction _lighten(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.l += amount / 100;\n  hsl.l = clamp01(hsl.l);\n  return tinycolor(hsl);\n}\nfunction _brighten(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var rgb = tinycolor(color).toRgb();\n  rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n  rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n  rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n  return tinycolor(rgb);\n}\nfunction _darken(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.l -= amount / 100;\n  hsl.l = clamp01(hsl.l);\n  return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction _spin(color, amount) {\n  var hsl = tinycolor(color).toHsl();\n  var hue = (hsl.h + amount) % 360;\n  hsl.h = hue < 0 ? 360 + hue : hue;\n  return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction _complement(color) {\n  var hsl = tinycolor(color).toHsl();\n  hsl.h = (hsl.h + 180) % 360;\n  return tinycolor(hsl);\n}\nfunction polyad(color, number) {\n  if (isNaN(number) || number <= 0) {\n    throw new Error(\"Argument to polyad must be a positive number\");\n  }\n  var hsl = tinycolor(color).toHsl();\n  var result = [tinycolor(color)];\n  var step = 360 / number;\n  for (var i = 1; i < number; i++) {\n    result.push(tinycolor({\n      h: (hsl.h + i * step) % 360,\n      s: hsl.s,\n      l: hsl.l\n    }));\n  }\n  return result;\n}\nfunction _splitcomplement(color) {\n  var hsl = tinycolor(color).toHsl();\n  var h = hsl.h;\n  return [tinycolor(color), tinycolor({\n    h: (h + 72) % 360,\n    s: hsl.s,\n    l: hsl.l\n  }), tinycolor({\n    h: (h + 216) % 360,\n    s: hsl.s,\n    l: hsl.l\n  })];\n}\nfunction _analogous(color, results, slices) {\n  results = results || 6;\n  slices = slices || 30;\n  var hsl = tinycolor(color).toHsl();\n  var part = 360 / slices;\n  var ret = [tinycolor(color)];\n  for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results;) {\n    hsl.h = (hsl.h + part) % 360;\n    ret.push(tinycolor(hsl));\n  }\n  return ret;\n}\nfunction _monochromatic(color, results) {\n  results = results || 6;\n  var hsv = tinycolor(color).toHsv();\n  var h = hsv.h,\n    s = hsv.s,\n    v = hsv.v;\n  var ret = [];\n  var modification = 1 / results;\n  while (results--) {\n    ret.push(tinycolor({\n      h: h,\n      s: s,\n      v: v\n    }));\n    v = (v + modification) % 1;\n  }\n  return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function (color1, color2, amount) {\n  amount = amount === 0 ? 0 : amount || 50;\n  var rgb1 = tinycolor(color1).toRgb();\n  var rgb2 = tinycolor(color2).toRgb();\n  var p = amount / 100;\n  var rgba = {\n    r: (rgb2.r - rgb1.r) * p + rgb1.r,\n    g: (rgb2.g - rgb1.g) * p + rgb1.g,\n    b: (rgb2.b - rgb1.b) * p + rgb1.b,\n    a: (rgb2.a - rgb1.a) * p + rgb1.a\n  };\n  return tinycolor(rgba);\n};\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function (color1, color2) {\n  var c1 = tinycolor(color1);\n  var c2 = tinycolor(color2);\n  return (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function (color1, color2, wcag2) {\n  var readability = tinycolor.readability(color1, color2);\n  var wcag2Parms, out;\n  out = false;\n  wcag2Parms = validateWCAG2Parms(wcag2);\n  switch (wcag2Parms.level + wcag2Parms.size) {\n    case \"AAsmall\":\n    case \"AAAlarge\":\n      out = readability >= 4.5;\n      break;\n    case \"AAlarge\":\n      out = readability >= 3;\n      break;\n    case \"AAAsmall\":\n      out = readability >= 7;\n      break;\n  }\n  return out;\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function (baseColor, colorList, args) {\n  var bestColor = null;\n  var bestScore = 0;\n  var readability;\n  var includeFallbackColors, level, size;\n  args = args || {};\n  includeFallbackColors = args.includeFallbackColors;\n  level = args.level;\n  size = args.size;\n  for (var i = 0; i < colorList.length; i++) {\n    readability = tinycolor.readability(baseColor, colorList[i]);\n    if (readability > bestScore) {\n      bestScore = readability;\n      bestColor = tinycolor(colorList[i]);\n    }\n  }\n  if (tinycolor.isReadable(baseColor, bestColor, {\n    level: level,\n    size: size\n  }) || !includeFallbackColors) {\n    return bestColor;\n  } else {\n    args.includeFallbackColors = false;\n    return tinycolor.mostReadable(baseColor, [\"#fff\", \"#000\"], args);\n  }\n};\n\n// Big List of Colors\n// ------------------\n// <https://www.w3.org/TR/css-color-4/#named-colors>\nvar names = tinycolor.names = {\n  aliceblue: \"f0f8ff\",\n  antiquewhite: \"faebd7\",\n  aqua: \"0ff\",\n  aquamarine: \"7fffd4\",\n  azure: \"f0ffff\",\n  beige: \"f5f5dc\",\n  bisque: \"ffe4c4\",\n  black: \"000\",\n  blanchedalmond: \"ffebcd\",\n  blue: \"00f\",\n  blueviolet: \"8a2be2\",\n  brown: \"a52a2a\",\n  burlywood: \"deb887\",\n  burntsienna: \"ea7e5d\",\n  cadetblue: \"5f9ea0\",\n  chartreuse: \"7fff00\",\n  chocolate: \"d2691e\",\n  coral: \"ff7f50\",\n  cornflowerblue: \"6495ed\",\n  cornsilk: \"fff8dc\",\n  crimson: \"dc143c\",\n  cyan: \"0ff\",\n  darkblue: \"00008b\",\n  darkcyan: \"008b8b\",\n  darkgoldenrod: \"b8860b\",\n  darkgray: \"a9a9a9\",\n  darkgreen: \"006400\",\n  darkgrey: \"a9a9a9\",\n  darkkhaki: \"bdb76b\",\n  darkmagenta: \"8b008b\",\n  darkolivegreen: \"556b2f\",\n  darkorange: \"ff8c00\",\n  darkorchid: \"9932cc\",\n  darkred: \"8b0000\",\n  darksalmon: \"e9967a\",\n  darkseagreen: \"8fbc8f\",\n  darkslateblue: \"483d8b\",\n  darkslategray: \"2f4f4f\",\n  darkslategrey: \"2f4f4f\",\n  darkturquoise: \"00ced1\",\n  darkviolet: \"9400d3\",\n  deeppink: \"ff1493\",\n  deepskyblue: \"00bfff\",\n  dimgray: \"696969\",\n  dimgrey: \"696969\",\n  dodgerblue: \"1e90ff\",\n  firebrick: \"b22222\",\n  floralwhite: \"fffaf0\",\n  forestgreen: \"228b22\",\n  fuchsia: \"f0f\",\n  gainsboro: \"dcdcdc\",\n  ghostwhite: \"f8f8ff\",\n  gold: \"ffd700\",\n  goldenrod: \"daa520\",\n  gray: \"808080\",\n  green: \"008000\",\n  greenyellow: \"adff2f\",\n  grey: \"808080\",\n  honeydew: \"f0fff0\",\n  hotpink: \"ff69b4\",\n  indianred: \"cd5c5c\",\n  indigo: \"4b0082\",\n  ivory: \"fffff0\",\n  khaki: \"f0e68c\",\n  lavender: \"e6e6fa\",\n  lavenderblush: \"fff0f5\",\n  lawngreen: \"7cfc00\",\n  lemonchiffon: \"fffacd\",\n  lightblue: \"add8e6\",\n  lightcoral: \"f08080\",\n  lightcyan: \"e0ffff\",\n  lightgoldenrodyellow: \"fafad2\",\n  lightgray: \"d3d3d3\",\n  lightgreen: \"90ee90\",\n  lightgrey: \"d3d3d3\",\n  lightpink: \"ffb6c1\",\n  lightsalmon: \"ffa07a\",\n  lightseagreen: \"20b2aa\",\n  lightskyblue: \"87cefa\",\n  lightslategray: \"789\",\n  lightslategrey: \"789\",\n  lightsteelblue: \"b0c4de\",\n  lightyellow: \"ffffe0\",\n  lime: \"0f0\",\n  limegreen: \"32cd32\",\n  linen: \"faf0e6\",\n  magenta: \"f0f\",\n  maroon: \"800000\",\n  mediumaquamarine: \"66cdaa\",\n  mediumblue: \"0000cd\",\n  mediumorchid: \"ba55d3\",\n  mediumpurple: \"9370db\",\n  mediumseagreen: \"3cb371\",\n  mediumslateblue: \"7b68ee\",\n  mediumspringgreen: \"00fa9a\",\n  mediumturquoise: \"48d1cc\",\n  mediumvioletred: \"c71585\",\n  midnightblue: \"191970\",\n  mintcream: \"f5fffa\",\n  mistyrose: \"ffe4e1\",\n  moccasin: \"ffe4b5\",\n  navajowhite: \"ffdead\",\n  navy: \"000080\",\n  oldlace: \"fdf5e6\",\n  olive: \"808000\",\n  olivedrab: \"6b8e23\",\n  orange: \"ffa500\",\n  orangered: \"ff4500\",\n  orchid: \"da70d6\",\n  palegoldenrod: \"eee8aa\",\n  palegreen: \"98fb98\",\n  paleturquoise: \"afeeee\",\n  palevioletred: \"db7093\",\n  papayawhip: \"ffefd5\",\n  peachpuff: \"ffdab9\",\n  peru: \"cd853f\",\n  pink: \"ffc0cb\",\n  plum: \"dda0dd\",\n  powderblue: \"b0e0e6\",\n  purple: \"800080\",\n  rebeccapurple: \"663399\",\n  red: \"f00\",\n  rosybrown: \"bc8f8f\",\n  royalblue: \"4169e1\",\n  saddlebrown: \"8b4513\",\n  salmon: \"fa8072\",\n  sandybrown: \"f4a460\",\n  seagreen: \"2e8b57\",\n  seashell: \"fff5ee\",\n  sienna: \"a0522d\",\n  silver: \"c0c0c0\",\n  skyblue: \"87ceeb\",\n  slateblue: \"6a5acd\",\n  slategray: \"708090\",\n  slategrey: \"708090\",\n  snow: \"fffafa\",\n  springgreen: \"00ff7f\",\n  steelblue: \"4682b4\",\n  tan: \"d2b48c\",\n  teal: \"008080\",\n  thistle: \"d8bfd8\",\n  tomato: \"ff6347\",\n  turquoise: \"40e0d0\",\n  violet: \"ee82ee\",\n  wheat: \"f5deb3\",\n  white: \"fff\",\n  whitesmoke: \"f5f5f5\",\n  yellow: \"ff0\",\n  yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n  var flipped = {};\n  for (var i in o) {\n    if (o.hasOwnProperty(i)) {\n      flipped[o[i]] = i;\n    }\n  }\n  return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n  a = parseFloat(a);\n  if (isNaN(a) || a < 0 || a > 1) {\n    a = 1;\n  }\n  return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n  if (isOnePointZero(n)) n = \"100%\";\n  var processPercent = isPercentage(n);\n  n = Math.min(max, Math.max(0, parseFloat(n)));\n\n  // Automatically convert percentage into number\n  if (processPercent) {\n    n = parseInt(n * max, 10) / 100;\n  }\n\n  // Handle floating point rounding errors\n  if (Math.abs(n - max) < 0.000001) {\n    return 1;\n  }\n\n  // Convert into [0, 1] range if it isn't already\n  return n % max / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n  return Math.min(1, Math.max(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n  return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n  return typeof n == \"string\" && n.indexOf(\".\") != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n  return typeof n === \"string\" && n.indexOf(\"%\") != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n  return c.length == 1 ? \"0\" + c : \"\" + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n  if (n <= 1) {\n    n = n * 100 + \"%\";\n  }\n  return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n  return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n  return parseIntFromHex(h) / 255;\n}\nvar matchers = function () {\n  // <http://www.w3.org/TR/css3-values/#integers>\n  var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n  // <http://www.w3.org/TR/css3-values/#number-value>\n  var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n  // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n  var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n  // Actual matching.\n  // Parentheses and commas are optional, but not required.\n  // Whitespace can take the place of commas or opening paren\n  var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n  var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n  return {\n    CSS_UNIT: new RegExp(CSS_UNIT),\n    rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n    rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n    hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n    hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n    hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n    hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n  };\n}();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n  return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n  color = color.replace(trimLeft, \"\").replace(trimRight, \"\").toLowerCase();\n  var named = false;\n  if (names[color]) {\n    color = names[color];\n    named = true;\n  } else if (color == \"transparent\") {\n    return {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 0,\n      format: \"name\"\n    };\n  }\n\n  // Try to match string input using regular expressions.\n  // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n  // Just return an object and let the conversion functions handle that.\n  // This way the result will be the same whether the tinycolor is initialized with string or object.\n  var match;\n  if (match = matchers.rgb.exec(color)) {\n    return {\n      r: match[1],\n      g: match[2],\n      b: match[3]\n    };\n  }\n  if (match = matchers.rgba.exec(color)) {\n    return {\n      r: match[1],\n      g: match[2],\n      b: match[3],\n      a: match[4]\n    };\n  }\n  if (match = matchers.hsl.exec(color)) {\n    return {\n      h: match[1],\n      s: match[2],\n      l: match[3]\n    };\n  }\n  if (match = matchers.hsla.exec(color)) {\n    return {\n      h: match[1],\n      s: match[2],\n      l: match[3],\n      a: match[4]\n    };\n  }\n  if (match = matchers.hsv.exec(color)) {\n    return {\n      h: match[1],\n      s: match[2],\n      v: match[3]\n    };\n  }\n  if (match = matchers.hsva.exec(color)) {\n    return {\n      h: match[1],\n      s: match[2],\n      v: match[3],\n      a: match[4]\n    };\n  }\n  if (match = matchers.hex8.exec(color)) {\n    return {\n      r: parseIntFromHex(match[1]),\n      g: parseIntFromHex(match[2]),\n      b: parseIntFromHex(match[3]),\n      a: convertHexToDecimal(match[4]),\n      format: named ? \"name\" : \"hex8\"\n    };\n  }\n  if (match = matchers.hex6.exec(color)) {\n    return {\n      r: parseIntFromHex(match[1]),\n      g: parseIntFromHex(match[2]),\n      b: parseIntFromHex(match[3]),\n      format: named ? \"name\" : \"hex\"\n    };\n  }\n  if (match = matchers.hex4.exec(color)) {\n    return {\n      r: parseIntFromHex(match[1] + \"\" + match[1]),\n      g: parseIntFromHex(match[2] + \"\" + match[2]),\n      b: parseIntFromHex(match[3] + \"\" + match[3]),\n      a: convertHexToDecimal(match[4] + \"\" + match[4]),\n      format: named ? \"name\" : \"hex8\"\n    };\n  }\n  if (match = matchers.hex3.exec(color)) {\n    return {\n      r: parseIntFromHex(match[1] + \"\" + match[1]),\n      g: parseIntFromHex(match[2] + \"\" + match[2]),\n      b: parseIntFromHex(match[3] + \"\" + match[3]),\n      format: named ? \"name\" : \"hex\"\n    };\n  }\n  return false;\n}\nfunction validateWCAG2Parms(parms) {\n  // return valid WCAG2 parms for isReadable.\n  // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n  var level, size;\n  parms = parms || {\n    level: \"AA\",\n    size: \"small\"\n  };\n  level = (parms.level || \"AA\").toUpperCase();\n  size = (parms.size || \"small\").toLowerCase();\n  if (level !== \"AA\" && level !== \"AAA\") {\n    level = \"AA\";\n  }\n  if (size !== \"small\" && size !== \"large\") {\n    size = \"small\";\n  }\n  return {\n    level: level,\n    size: size\n  };\n}\nexport { tinycolor as default };", "import tinyColor from \"tinycolor2\";\nexport function clone(image) {\n  const newBitmap = {\n    width: image.bitmap.width,\n    height: image.bitmap.height,\n    data: Buffer.from(image.bitmap.data)\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new image.constructor(newBitmap);\n}\nexport function scan(image,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nxArg, yArg, wArg, hArg,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ncbArg) {\n  let x;\n  let y;\n  let w;\n  let h;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let cb;\n  if (typeof xArg === \"function\") {\n    cb = xArg;\n    x = 0;\n    y = 0;\n    w = image.bitmap.width;\n    h = image.bitmap.height;\n  } else {\n    x = xArg;\n    if (typeof yArg !== \"number\") throw new Error(\"y must be a number\");\n    y = yArg;\n    if (typeof wArg !== \"number\") throw new Error(\"w must be a number\");\n    w = wArg;\n    if (typeof hArg !== \"number\") throw new Error(\"h must be a number\");\n    h = hArg;\n    if (typeof cbArg !== \"function\") throw new Error(\"cb must be a function\");\n    cb = cbArg;\n  }\n  // round input\n  x = Math.round(x);\n  y = Math.round(y);\n  w = Math.round(w);\n  h = Math.round(h);\n  const bound = cb.bind(image);\n  for (let _y = y; _y < y + h; _y++) {\n    for (let _x = x; _x < x + w; _x++) {\n      const idx = image.bitmap.width * _y + _x << 2;\n      // Bind the images so this.bitmap works\n      bound(_x, _y, idx);\n    }\n  }\n  return image;\n}\nexport function* scanIterator(image, x, y, w, h) {\n  // round input\n  x = Math.round(x);\n  y = Math.round(y);\n  w = Math.round(w);\n  h = Math.round(h);\n  for (let _y = y; _y < y + h; _y++) {\n    for (let _x = x; _x < x + w; _x++) {\n      const idx = image.bitmap.width * _y + _x << 2;\n      yield {\n        x: _x,\n        y: _y,\n        idx,\n        image\n      };\n    }\n  }\n}\n/**\n * A helper method that converts RGBA values to a single integer value\n * @param i A single integer value representing an RGBA colour (e.g. 0xFF0000FF for red)\n * @returns An object with the properties r, g, b and a representing RGBA values\n * @example\n * ```ts\n * import { intToRGBA } from \"@jimp/utils\";\n *\n * intToRGBA(0xFF0000FF); // { r: 255, g: 0, b: 0, a:255 }\n * ```\n */\nexport function intToRGBA(i) {\n  if (typeof i !== \"number\") {\n    throw new Error(\"i must be a number\");\n  }\n  const rgba = {\n    r: 0,\n    g: 0,\n    b: 0,\n    a: 0\n  };\n  rgba.r = Math.floor(i / Math.pow(256, 3));\n  rgba.g = Math.floor((i - rgba.r * Math.pow(256, 3)) / Math.pow(256, 2));\n  rgba.b = Math.floor((i - rgba.r * Math.pow(256, 3) - rgba.g * Math.pow(256, 2)) / Math.pow(256, 1));\n  rgba.a = Math.floor((i - rgba.r * Math.pow(256, 3) - rgba.g * Math.pow(256, 2) - rgba.b * Math.pow(256, 1)) / Math.pow(256, 0));\n  return rgba;\n}\n/**\n * A static helper method that converts RGBA values to a single integer value\n * @param r the red value (0-255)\n * @param g the green value (0-255)\n * @param b the blue value (0-255)\n * @param a the alpha value (0-255)\n * @example\n * ```ts\n * import { rgbaToInt } from \"@jimp/utils\";\n *\n * rgbaToInt(255, 0, 0, 255); // 0xFF0000FF\n * ```\n */\nexport function rgbaToInt(r, g, b, a) {\n  if (typeof r !== \"number\" || typeof g !== \"number\" || typeof b !== \"number\" || typeof a !== \"number\") {\n    throw new Error(\"r, g, b and a must be numbers\");\n  }\n  if (r < 0 || r > 255) {\n    throw new Error(\"r must be between 0 and 255\");\n  }\n  if (g < 0 || g > 255) {\n    throw new Error(\"g must be between 0 and 255\");\n  }\n  if (b < 0 || b > 255) {\n    throw new Error(\"b must be between 0 and 255\");\n  }\n  if (a < 0 || a > 255) {\n    throw new Error(\"a must be between 0 and 255\");\n  }\n  let i = r & 0xff;\n  i <<= 8;\n  i |= g & 0xff;\n  i <<= 8;\n  i |= b & 0xff;\n  i <<= 8;\n  i |= a & 0xff;\n  // Ensure sign is correct\n  i >>>= 0;\n  return i;\n}\n/**\n * Compute color difference\n * 0 means no difference, 1 means maximum difference.\n * Both parameters must be an color object `{ r:val, g:val, b:val, a:val }`\n * Where `a` is optional and `val` is an integer between 0 and 255.\n * @param rgba1 first color to compare.\n * @param rgba2 second color to compare.\n * @returns float between 0 and 1.\n * @example\n * ```ts\n * import { colorDiff } from \"@jimp/utils\";\n *\n * colorDiff(\n *  { r: 255, g: 0, b: 0, a: 0 },\n *  { r: 0, g: 255, b: 0, a: 0 },\n * ); // 0.5\n *\n * colorDiff(\n *  { r: 0, g: 0, b: 0, },\n *  { r: 255, g: 255, b: 255, }\n * ); // 0.7\n * ```\n */\nexport function colorDiff(rgba1, rgba2) {\n  const sq = n => Math.pow(n, 2);\n  const {\n    max\n  } = Math;\n  const maxVal = 255 * 255 * 3;\n  const rgba1A = \"a\" in rgba1 ? rgba1.a : 255;\n  const rgba2A = \"a\" in rgba2 ? rgba2.a : 255;\n  return (max(sq(rgba1.r - rgba2.r), sq(rgba1.r - rgba2.r - rgba1A + rgba2A)) + max(sq(rgba1.g - rgba2.g), sq(rgba1.g - rgba2.g - rgba1A + rgba2A)) + max(sq(rgba1.b - rgba2.b), sq(rgba1.b - rgba2.b - rgba1A + rgba2A))) / maxVal;\n}\n/**\n * Limits a number to between 0 or 255\n * @example\n * ```ts\n * import { limit255 } from \"@jimp/utils\";\n *\n * limit255(256); // 255\n * limit255(-1); // 0\n * ```\n */\nexport function limit255(n) {\n  n = Math.max(n, 0);\n  n = Math.min(n, 255);\n  return n;\n}\n/**\n * Converts a css color (Hex, 8-digit (RGBA) Hex, RGB, RGBA, HSL, HSLA, HSV, HSVA, Named) to a hex number\n * @returns A hex number representing a color\n * @example\n * ```ts\n * import { cssColorToHex } from \"@jimp/utils\";\n *\n * cssColorToHex(\"rgba(255, 0, 0, 0.5)\"); // \"ff000080\"\n * ```\n */\nexport function cssColorToHex(cssColor) {\n  if (typeof cssColor === \"number\") {\n    return cssColor;\n  }\n  return parseInt(tinyColor(cssColor).toHex8(), 16);\n}\n", "import * as BMP from \"bmp-ts\";\nimport { scan } from \"@jimp/utils\";\nexport { BmpCompression } from \"bmp-ts\";\nfunction encode(image, options = {}) {\n  scan({\n    bitmap: image\n  }, 0, 0, image.width, image.height, function (_, __, index) {\n    const red = image.data[index + 0];\n    const green = image.data[index + 1];\n    const blue = image.data[index + 2];\n    const alpha = image.data[index + 3];\n    image.data[index + 0] = alpha;\n    image.data[index + 1] = blue;\n    image.data[index + 2] = green;\n    image.data[index + 3] = red;\n  });\n  return BMP.encode({\n    ...image,\n    ...options\n  }).data;\n}\nfunction decode(data, options) {\n  const result = BMP.decode(data, options);\n  scan({\n    bitmap: result\n  }, 0, 0, result.width, result.height, function (_, __, index) {\n    // const alpha = result.data[index + 0]!;\n    const blue = result.data[index + 1];\n    const green = result.data[index + 2];\n    const red = result.data[index + 3];\n    result.data[index + 0] = red;\n    result.data[index + 1] = green;\n    result.data[index + 2] = blue;\n    result.data[index + 3] = 0xff;\n  });\n  return result;\n}\nexport function msBmp() {\n  return {\n    mime: \"image/x-ms-bmp\",\n    encode,\n    decode\n  };\n}\nexport default function bmp() {\n  return {\n    mime: \"image/bmp\",\n    encode,\n    decode\n  };\n}\n", "import GIF from \"omggif\";\nimport { GifUtil, GifFrame, BitmapImage, GifCodec } from \"gifwrap\";\nexport default function gif() {\n  return {\n    mime: \"image/gif\",\n    encode: async bitmap => {\n      const gif = new BitmapImage(bitmap);\n      GifUtil.quantizeDekker(gif, 256);\n      const newFrame = new GifFrame(bitmap);\n      const gifCodec = new GifCodec();\n      const newGif = await gifCodec.encodeGif([newFrame], {});\n      return newGif.buffer;\n    },\n    decode: data => {\n      const gifObj = new GIF.GifReader(data);\n      const gifData = Buffer.alloc(gifObj.width * gifObj.height * 4);\n      gifObj.decodeAndBlitFrameRGBA(0, gifData);\n      return {\n        data: gifData,\n        width: gifObj.width,\n        height: gifObj.height\n      };\n    }\n  };\n}\n", "import JPEG from \"jpeg-js\";\nexport default function jpeg() {\n  return {\n    mime: \"image/jpeg\",\n    encode: (bitmap, {\n      quality = 100\n    } = {}) => JPEG.encode(bitmap, quality).data,\n    decode: (data, options) => JPEG.decode(data, options)\n  };\n}\n", "import { PNG } from \"pngjs\";\nimport { PNGFilterType, PNGColorType } from \"./constants.js\";\nexport * from \"./constants.js\";\nexport default function png() {\n  return {\n    mime: \"image/png\",\n    hasAlpha: true,\n    encode: (bitmap, {\n      deflateLevel = 9,\n      deflateStrategy = 3,\n      filterType = PNGFilterType.AUTO,\n      colorType,\n      inputHasAlpha = true,\n      ...options\n    } = {}) => {\n      const png = new PNG({\n        width: bitmap.width,\n        height: bitmap.height\n      });\n      png.data = bitmap.data;\n      return PNG.sync.write(png, {\n        ...options,\n        deflateLevel,\n        deflateStrategy,\n        filterType,\n        colorType: typeof colorType !== \"undefined\" ? colorType : inputHasAlpha ? PNGColorType.COLOR_ALPHA : PNGColorType.COLOR,\n        inputHasAlpha\n      });\n    },\n    decode: (data, options) => {\n      const result = PNG.sync.read(data, options);\n      return {\n        data: result.data,\n        width: result.width,\n        height: result.height\n      };\n    }\n  };\n}\n", "/**\n * Filter method is a single-byte integer that indicates the preprocessing method applied to the image data before compression.\n */\nexport var PNGFilterType;\n(function (PNGFilterType) {\n  PNGFilterType[PNGFilterType[\"AUTO\"] = -1] = \"AUTO\";\n  /** scanline is transmitted unmodified */\n  PNGFilterType[PNGFilterType[\"NONE\"] = 0] = \"NONE\";\n  /** filter transmits the difference between each byte and the value of the corresponding byte of the prior pixel */\n  PNGFilterType[PNGFilterType[\"SUB\"] = 1] = \"SUB\";\n  /** The Up() filter is just like the Sub() filter except that the pixel immediately above the current pixel, rather than just to its left, is used as the predictor. */\n  PNGFilterType[PNGFilterType[\"UP\"] = 2] = \"UP\";\n  /** uses the average of the two neighboring pixels (left and above) to predict the value of a pixel */\n  PNGFilterType[PNGFilterType[\"AVERAGE\"] = 3] = \"AVERAGE\";\n  /** computes a simple linear function of the three neighboring pixels (left, above, upper left), then chooses as predictor the neighboring pixel closest to the computed value. */\n  PNGFilterType[PNGFilterType[\"PATH\"] = 4] = \"PATH\";\n})(PNGFilterType || (PNGFilterType = {}));\n/**\n * Color type is a single-byte integer that describes the interpretation of the image data.\n * Color type codes represent sums of the following values:\n *\n * 1 (palette used), 2 (color used), and 4 (alpha channel used).\n */\nexport var PNGColorType;\n(function (PNGColorType) {\n  PNGColorType[PNGColorType[\"GRAYSCALE\"] = 0] = \"GRAYSCALE\";\n  PNGColorType[PNGColorType[\"COLOR\"] = 2] = \"COLOR\";\n  PNGColorType[PNGColorType[\"GRAYSCALE_ALPHA\"] = 4] = \"GRAYSCALE_ALPHA\";\n  PNGColorType[PNGColorType[\"COLOR_ALPHA\"] = 6] = \"COLOR_ALPHA\";\n})(PNGColorType || (PNGColorType = {}));\n", "import utif from \"utif2\";\nfunction getDimensionValue(dimension) {\n  if (typeof dimension === \"number\") {\n    return dimension;\n  }\n  if (dimension instanceof Uint8Array) {\n    return dimension[0];\n  }\n  if (typeof dimension[0] === \"string\") {\n    return parseInt(dimension[0]);\n  }\n  return dimension[0];\n}\nexport default function tiff() {\n  return {\n    mime: \"image/tiff\",\n    encode: bitmap => {\n      const tiff = utif.encodeImage(bitmap.data, bitmap.width, bitmap.height);\n      return Buffer.from(tiff);\n    },\n    decode: data => {\n      const ifds = utif.decode(data);\n      const page = ifds[0];\n      if (!page) {\n        throw new Error(\"No page found in TIFF\");\n      }\n      if (!page.t256) {\n        throw new Error(\"No image width found in TIFF\");\n      }\n      if (!page.t257) {\n        throw new Error(\"No image height found in TIFF\");\n      }\n      ifds.forEach(ifd => {\n        utif.decodeImage(data, ifd);\n      });\n      const rgba = utif.toRGBA8(page);\n      return {\n        data: Buffer.from(rgba),\n        width: getDimensionValue(page.t256),\n        height: getDimensionValue(page.t257)\n      };\n    }\n  };\n}\n", "var util;\n(function (util) {\n  util.assertEqual = val => val;\n  function assertIs(_arg) {}\n  util.assertIs = assertIs;\n  function assertNever(_x) {\n    throw new Error();\n  }\n  util.assertNever = assertNever;\n  util.arrayToEnum = items => {\n    const obj = {};\n    for (const item of items) {\n      obj[item] = item;\n    }\n    return obj;\n  };\n  util.getValidEnumValues = obj => {\n    const validKeys = util.objectKeys(obj).filter(k => typeof obj[obj[k]] !== \"number\");\n    const filtered = {};\n    for (const k of validKeys) {\n      filtered[k] = obj[k];\n    }\n    return util.objectValues(filtered);\n  };\n  util.objectValues = obj => {\n    return util.objectKeys(obj).map(function (e) {\n      return obj[e];\n    });\n  };\n  util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n  ? obj => Object.keys(obj) // eslint-disable-line ban/ban\n  : object => {\n    const keys = [];\n    for (const key in object) {\n      if (Object.prototype.hasOwnProperty.call(object, key)) {\n        keys.push(key);\n      }\n    }\n    return keys;\n  };\n  util.find = (arr, checker) => {\n    for (const item of arr) {\n      if (checker(item)) return item;\n    }\n    return undefined;\n  };\n  util.isInteger = typeof Number.isInteger === \"function\" ? val => Number.isInteger(val) // eslint-disable-line ban/ban\n  : val => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n  function joinValues(array, separator = \" | \") {\n    return array.map(val => typeof val === \"string\" ? `'${val}'` : val).join(separator);\n  }\n  util.joinValues = joinValues;\n  util.jsonStringifyReplacer = (_, value) => {\n    if (typeof value === \"bigint\") {\n      return value.toString();\n    }\n    return value;\n  };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n  objectUtil.mergeShapes = (first, second) => {\n    return {\n      ...first,\n      ...second // second overwrites first\n    };\n  };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\"string\", \"nan\", \"number\", \"integer\", \"float\", \"boolean\", \"date\", \"bigint\", \"symbol\", \"function\", \"undefined\", \"null\", \"array\", \"object\", \"unknown\", \"promise\", \"void\", \"never\", \"map\", \"set\"]);\nconst getParsedType = data => {\n  const t = typeof data;\n  switch (t) {\n    case \"undefined\":\n      return ZodParsedType.undefined;\n    case \"string\":\n      return ZodParsedType.string;\n    case \"number\":\n      return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n    case \"boolean\":\n      return ZodParsedType.boolean;\n    case \"function\":\n      return ZodParsedType.function;\n    case \"bigint\":\n      return ZodParsedType.bigint;\n    case \"symbol\":\n      return ZodParsedType.symbol;\n    case \"object\":\n      if (Array.isArray(data)) {\n        return ZodParsedType.array;\n      }\n      if (data === null) {\n        return ZodParsedType.null;\n      }\n      if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n        return ZodParsedType.promise;\n      }\n      if (typeof Map !== \"undefined\" && data instanceof Map) {\n        return ZodParsedType.map;\n      }\n      if (typeof Set !== \"undefined\" && data instanceof Set) {\n        return ZodParsedType.set;\n      }\n      if (typeof Date !== \"undefined\" && data instanceof Date) {\n        return ZodParsedType.date;\n      }\n      return ZodParsedType.object;\n    default:\n      return ZodParsedType.unknown;\n  }\n};\nconst ZodIssueCode = util.arrayToEnum([\"invalid_type\", \"invalid_literal\", \"custom\", \"invalid_union\", \"invalid_union_discriminator\", \"invalid_enum_value\", \"unrecognized_keys\", \"invalid_arguments\", \"invalid_return_type\", \"invalid_date\", \"invalid_string\", \"too_small\", \"too_big\", \"invalid_intersection_types\", \"not_multiple_of\", \"not_finite\"]);\nconst quotelessJson = obj => {\n  const json = JSON.stringify(obj, null, 2);\n  return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n  constructor(issues) {\n    super();\n    this.issues = [];\n    this.addIssue = sub => {\n      this.issues = [...this.issues, sub];\n    };\n    this.addIssues = (subs = []) => {\n      this.issues = [...this.issues, ...subs];\n    };\n    const actualProto = new.target.prototype;\n    if (Object.setPrototypeOf) {\n      // eslint-disable-next-line ban/ban\n      Object.setPrototypeOf(this, actualProto);\n    } else {\n      this.__proto__ = actualProto;\n    }\n    this.name = \"ZodError\";\n    this.issues = issues;\n  }\n  get errors() {\n    return this.issues;\n  }\n  format(_mapper) {\n    const mapper = _mapper || function (issue) {\n      return issue.message;\n    };\n    const fieldErrors = {\n      _errors: []\n    };\n    const processError = error => {\n      for (const issue of error.issues) {\n        if (issue.code === \"invalid_union\") {\n          issue.unionErrors.map(processError);\n        } else if (issue.code === \"invalid_return_type\") {\n          processError(issue.returnTypeError);\n        } else if (issue.code === \"invalid_arguments\") {\n          processError(issue.argumentsError);\n        } else if (issue.path.length === 0) {\n          fieldErrors._errors.push(mapper(issue));\n        } else {\n          let curr = fieldErrors;\n          let i = 0;\n          while (i < issue.path.length) {\n            const el = issue.path[i];\n            const terminal = i === issue.path.length - 1;\n            if (!terminal) {\n              curr[el] = curr[el] || {\n                _errors: []\n              };\n              // if (typeof el === \"string\") {\n              //   curr[el] = curr[el] || { _errors: [] };\n              // } else if (typeof el === \"number\") {\n              //   const errorArray: any = [];\n              //   errorArray._errors = [];\n              //   curr[el] = curr[el] || errorArray;\n              // }\n            } else {\n              curr[el] = curr[el] || {\n                _errors: []\n              };\n              curr[el]._errors.push(mapper(issue));\n            }\n            curr = curr[el];\n            i++;\n          }\n        }\n      }\n    };\n    processError(this);\n    return fieldErrors;\n  }\n  static assert(value) {\n    if (!(value instanceof ZodError)) {\n      throw new Error(`Not a ZodError: ${value}`);\n    }\n  }\n  toString() {\n    return this.message;\n  }\n  get message() {\n    return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n  }\n  get isEmpty() {\n    return this.issues.length === 0;\n  }\n  flatten(mapper = issue => issue.message) {\n    const fieldErrors = {};\n    const formErrors = [];\n    for (const sub of this.issues) {\n      if (sub.path.length > 0) {\n        fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n        fieldErrors[sub.path[0]].push(mapper(sub));\n      } else {\n        formErrors.push(mapper(sub));\n      }\n    }\n    return {\n      formErrors,\n      fieldErrors\n    };\n  }\n  get formErrors() {\n    return this.flatten();\n  }\n}\nZodError.create = issues => {\n  const error = new ZodError(issues);\n  return error;\n};\nconst errorMap = (issue, _ctx) => {\n  let message;\n  switch (issue.code) {\n    case ZodIssueCode.invalid_type:\n      if (issue.received === ZodParsedType.undefined) {\n        message = \"Required\";\n      } else {\n        message = `Expected ${issue.expected}, received ${issue.received}`;\n      }\n      break;\n    case ZodIssueCode.invalid_literal:\n      message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n      break;\n    case ZodIssueCode.unrecognized_keys:\n      message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n      break;\n    case ZodIssueCode.invalid_union:\n      message = `Invalid input`;\n      break;\n    case ZodIssueCode.invalid_union_discriminator:\n      message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n      break;\n    case ZodIssueCode.invalid_enum_value:\n      message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n      break;\n    case ZodIssueCode.invalid_arguments:\n      message = `Invalid function arguments`;\n      break;\n    case ZodIssueCode.invalid_return_type:\n      message = `Invalid function return type`;\n      break;\n    case ZodIssueCode.invalid_date:\n      message = `Invalid date`;\n      break;\n    case ZodIssueCode.invalid_string:\n      if (typeof issue.validation === \"object\") {\n        if (\"includes\" in issue.validation) {\n          message = `Invalid input: must include \"${issue.validation.includes}\"`;\n          if (typeof issue.validation.position === \"number\") {\n            message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n          }\n        } else if (\"startsWith\" in issue.validation) {\n          message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n        } else if (\"endsWith\" in issue.validation) {\n          message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n        } else {\n          util.assertNever(issue.validation);\n        }\n      } else if (issue.validation !== \"regex\") {\n        message = `Invalid ${issue.validation}`;\n      } else {\n        message = \"Invalid\";\n      }\n      break;\n    case ZodIssueCode.too_small:\n      if (issue.type === \"array\") message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;else if (issue.type === \"string\") message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;else if (issue.type === \"number\") message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;else if (issue.type === \"date\") message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;else message = \"Invalid input\";\n      break;\n    case ZodIssueCode.too_big:\n      if (issue.type === \"array\") message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;else if (issue.type === \"string\") message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;else if (issue.type === \"number\") message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;else if (issue.type === \"bigint\") message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;else if (issue.type === \"date\") message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;else message = \"Invalid input\";\n      break;\n    case ZodIssueCode.custom:\n      message = `Invalid input`;\n      break;\n    case ZodIssueCode.invalid_intersection_types:\n      message = `Intersection results could not be merged`;\n      break;\n    case ZodIssueCode.not_multiple_of:\n      message = `Number must be a multiple of ${issue.multipleOf}`;\n      break;\n    case ZodIssueCode.not_finite:\n      message = \"Number must be finite\";\n      break;\n    default:\n      message = _ctx.defaultError;\n      util.assertNever(issue);\n  }\n  return {\n    message\n  };\n};\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n  overrideErrorMap = map;\n}\nfunction getErrorMap() {\n  return overrideErrorMap;\n}\nconst makeIssue = params => {\n  const {\n    data,\n    path,\n    errorMaps,\n    issueData\n  } = params;\n  const fullPath = [...path, ...(issueData.path || [])];\n  const fullIssue = {\n    ...issueData,\n    path: fullPath\n  };\n  if (issueData.message !== undefined) {\n    return {\n      ...issueData,\n      path: fullPath,\n      message: issueData.message\n    };\n  }\n  let errorMessage = \"\";\n  const maps = errorMaps.filter(m => !!m).slice().reverse();\n  for (const map of maps) {\n    errorMessage = map(fullIssue, {\n      data,\n      defaultError: errorMessage\n    }).message;\n  }\n  return {\n    ...issueData,\n    path: fullPath,\n    message: errorMessage\n  };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n  const overrideMap = getErrorMap();\n  const issue = makeIssue({\n    issueData: issueData,\n    data: ctx.data,\n    path: ctx.path,\n    errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, overrideMap, overrideMap === errorMap ? undefined : errorMap // then global default map\n    ].filter(x => !!x)\n  });\n  ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n  constructor() {\n    this.value = \"valid\";\n  }\n  dirty() {\n    if (this.value === \"valid\") this.value = \"dirty\";\n  }\n  abort() {\n    if (this.value !== \"aborted\") this.value = \"aborted\";\n  }\n  static mergeArray(status, results) {\n    const arrayValue = [];\n    for (const s of results) {\n      if (s.status === \"aborted\") return INVALID;\n      if (s.status === \"dirty\") status.dirty();\n      arrayValue.push(s.value);\n    }\n    return {\n      status: status.value,\n      value: arrayValue\n    };\n  }\n  static async mergeObjectAsync(status, pairs) {\n    const syncPairs = [];\n    for (const pair of pairs) {\n      const key = await pair.key;\n      const value = await pair.value;\n      syncPairs.push({\n        key,\n        value\n      });\n    }\n    return ParseStatus.mergeObjectSync(status, syncPairs);\n  }\n  static mergeObjectSync(status, pairs) {\n    const finalObject = {};\n    for (const pair of pairs) {\n      const {\n        key,\n        value\n      } = pair;\n      if (key.status === \"aborted\") return INVALID;\n      if (value.status === \"aborted\") return INVALID;\n      if (key.status === \"dirty\") status.dirty();\n      if (value.status === \"dirty\") status.dirty();\n      if (key.value !== \"__proto__\" && (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n        finalObject[key.value] = value.value;\n      }\n    }\n    return {\n      status: status.value,\n      value: finalObject\n    };\n  }\n}\nconst INVALID = Object.freeze({\n  status: \"aborted\"\n});\nconst DIRTY = value => ({\n  status: \"dirty\",\n  value\n});\nconst OK = value => ({\n  status: \"valid\",\n  value\n});\nconst isAborted = x => x.status === \"aborted\";\nconst isDirty = x => x.status === \"dirty\";\nconst isValid = x => x.status === \"valid\";\nconst isAsync = x => typeof Promise !== \"undefined\" && x instanceof Promise;\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n}\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\nvar errorUtil;\n(function (errorUtil) {\n  errorUtil.errToObj = message => typeof message === \"string\" ? {\n    message\n  } : message || {};\n  errorUtil.toString = message => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\nvar _ZodEnum_cache, _ZodNativeEnum_cache;\nclass ParseInputLazyPath {\n  constructor(parent, value, path, key) {\n    this._cachedPath = [];\n    this.parent = parent;\n    this.data = value;\n    this._path = path;\n    this._key = key;\n  }\n  get path() {\n    if (!this._cachedPath.length) {\n      if (this._key instanceof Array) {\n        this._cachedPath.push(...this._path, ...this._key);\n      } else {\n        this._cachedPath.push(...this._path, this._key);\n      }\n    }\n    return this._cachedPath;\n  }\n}\nconst handleResult = (ctx, result) => {\n  if (isValid(result)) {\n    return {\n      success: true,\n      data: result.value\n    };\n  } else {\n    if (!ctx.common.issues.length) {\n      throw new Error(\"Validation failed but no issues detected.\");\n    }\n    return {\n      success: false,\n      get error() {\n        if (this._error) return this._error;\n        const error = new ZodError(ctx.common.issues);\n        this._error = error;\n        return this._error;\n      }\n    };\n  }\n};\nfunction processCreateParams(params) {\n  if (!params) return {};\n  const {\n    errorMap,\n    invalid_type_error,\n    required_error,\n    description\n  } = params;\n  if (errorMap && (invalid_type_error || required_error)) {\n    throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n  }\n  if (errorMap) return {\n    errorMap: errorMap,\n    description\n  };\n  const customMap = (iss, ctx) => {\n    var _a, _b;\n    const {\n      message\n    } = params;\n    if (iss.code === \"invalid_enum_value\") {\n      return {\n        message: message !== null && message !== void 0 ? message : ctx.defaultError\n      };\n    }\n    if (typeof ctx.data === \"undefined\") {\n      return {\n        message: (_a = message !== null && message !== void 0 ? message : required_error) !== null && _a !== void 0 ? _a : ctx.defaultError\n      };\n    }\n    if (iss.code !== \"invalid_type\") return {\n      message: ctx.defaultError\n    };\n    return {\n      message: (_b = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b !== void 0 ? _b : ctx.defaultError\n    };\n  };\n  return {\n    errorMap: customMap,\n    description\n  };\n}\nclass ZodType {\n  constructor(def) {\n    /** Alias of safeParseAsync */\n    this.spa = this.safeParseAsync;\n    this._def = def;\n    this.parse = this.parse.bind(this);\n    this.safeParse = this.safeParse.bind(this);\n    this.parseAsync = this.parseAsync.bind(this);\n    this.safeParseAsync = this.safeParseAsync.bind(this);\n    this.spa = this.spa.bind(this);\n    this.refine = this.refine.bind(this);\n    this.refinement = this.refinement.bind(this);\n    this.superRefine = this.superRefine.bind(this);\n    this.optional = this.optional.bind(this);\n    this.nullable = this.nullable.bind(this);\n    this.nullish = this.nullish.bind(this);\n    this.array = this.array.bind(this);\n    this.promise = this.promise.bind(this);\n    this.or = this.or.bind(this);\n    this.and = this.and.bind(this);\n    this.transform = this.transform.bind(this);\n    this.brand = this.brand.bind(this);\n    this.default = this.default.bind(this);\n    this.catch = this.catch.bind(this);\n    this.describe = this.describe.bind(this);\n    this.pipe = this.pipe.bind(this);\n    this.readonly = this.readonly.bind(this);\n    this.isNullable = this.isNullable.bind(this);\n    this.isOptional = this.isOptional.bind(this);\n  }\n  get description() {\n    return this._def.description;\n  }\n  _getType(input) {\n    return getParsedType(input.data);\n  }\n  _getOrReturnCtx(input, ctx) {\n    return ctx || {\n      common: input.parent.common,\n      data: input.data,\n      parsedType: getParsedType(input.data),\n      schemaErrorMap: this._def.errorMap,\n      path: input.path,\n      parent: input.parent\n    };\n  }\n  _processInputParams(input) {\n    return {\n      status: new ParseStatus(),\n      ctx: {\n        common: input.parent.common,\n        data: input.data,\n        parsedType: getParsedType(input.data),\n        schemaErrorMap: this._def.errorMap,\n        path: input.path,\n        parent: input.parent\n      }\n    };\n  }\n  _parseSync(input) {\n    const result = this._parse(input);\n    if (isAsync(result)) {\n      throw new Error(\"Synchronous parse encountered promise.\");\n    }\n    return result;\n  }\n  _parseAsync(input) {\n    const result = this._parse(input);\n    return Promise.resolve(result);\n  }\n  parse(data, params) {\n    const result = this.safeParse(data, params);\n    if (result.success) return result.data;\n    throw result.error;\n  }\n  safeParse(data, params) {\n    var _a;\n    const ctx = {\n      common: {\n        issues: [],\n        async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n        contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap\n      },\n      path: (params === null || params === void 0 ? void 0 : params.path) || [],\n      schemaErrorMap: this._def.errorMap,\n      parent: null,\n      data,\n      parsedType: getParsedType(data)\n    };\n    const result = this._parseSync({\n      data,\n      path: ctx.path,\n      parent: ctx\n    });\n    return handleResult(ctx, result);\n  }\n  async parseAsync(data, params) {\n    const result = await this.safeParseAsync(data, params);\n    if (result.success) return result.data;\n    throw result.error;\n  }\n  async safeParseAsync(data, params) {\n    const ctx = {\n      common: {\n        issues: [],\n        contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n        async: true\n      },\n      path: (params === null || params === void 0 ? void 0 : params.path) || [],\n      schemaErrorMap: this._def.errorMap,\n      parent: null,\n      data,\n      parsedType: getParsedType(data)\n    };\n    const maybeAsyncResult = this._parse({\n      data,\n      path: ctx.path,\n      parent: ctx\n    });\n    const result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));\n    return handleResult(ctx, result);\n  }\n  refine(check, message) {\n    const getIssueProperties = val => {\n      if (typeof message === \"string\" || typeof message === \"undefined\") {\n        return {\n          message\n        };\n      } else if (typeof message === \"function\") {\n        return message(val);\n      } else {\n        return message;\n      }\n    };\n    return this._refinement((val, ctx) => {\n      const result = check(val);\n      const setError = () => ctx.addIssue({\n        code: ZodIssueCode.custom,\n        ...getIssueProperties(val)\n      });\n      if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n        return result.then(data => {\n          if (!data) {\n            setError();\n            return false;\n          } else {\n            return true;\n          }\n        });\n      }\n      if (!result) {\n        setError();\n        return false;\n      } else {\n        return true;\n      }\n    });\n  }\n  refinement(check, refinementData) {\n    return this._refinement((val, ctx) => {\n      if (!check(val)) {\n        ctx.addIssue(typeof refinementData === \"function\" ? refinementData(val, ctx) : refinementData);\n        return false;\n      } else {\n        return true;\n      }\n    });\n  }\n  _refinement(refinement) {\n    return new ZodEffects({\n      schema: this,\n      typeName: ZodFirstPartyTypeKind.ZodEffects,\n      effect: {\n        type: \"refinement\",\n        refinement\n      }\n    });\n  }\n  superRefine(refinement) {\n    return this._refinement(refinement);\n  }\n  optional() {\n    return ZodOptional.create(this, this._def);\n  }\n  nullable() {\n    return ZodNullable.create(this, this._def);\n  }\n  nullish() {\n    return this.nullable().optional();\n  }\n  array() {\n    return ZodArray.create(this, this._def);\n  }\n  promise() {\n    return ZodPromise.create(this, this._def);\n  }\n  or(option) {\n    return ZodUnion.create([this, option], this._def);\n  }\n  and(incoming) {\n    return ZodIntersection.create(this, incoming, this._def);\n  }\n  transform(transform) {\n    return new ZodEffects({\n      ...processCreateParams(this._def),\n      schema: this,\n      typeName: ZodFirstPartyTypeKind.ZodEffects,\n      effect: {\n        type: \"transform\",\n        transform\n      }\n    });\n  }\n  default(def) {\n    const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n    return new ZodDefault({\n      ...processCreateParams(this._def),\n      innerType: this,\n      defaultValue: defaultValueFunc,\n      typeName: ZodFirstPartyTypeKind.ZodDefault\n    });\n  }\n  brand() {\n    return new ZodBranded({\n      typeName: ZodFirstPartyTypeKind.ZodBranded,\n      type: this,\n      ...processCreateParams(this._def)\n    });\n  }\n  catch(def) {\n    const catchValueFunc = typeof def === \"function\" ? def : () => def;\n    return new ZodCatch({\n      ...processCreateParams(this._def),\n      innerType: this,\n      catchValue: catchValueFunc,\n      typeName: ZodFirstPartyTypeKind.ZodCatch\n    });\n  }\n  describe(description) {\n    const This = this.constructor;\n    return new This({\n      ...this._def,\n      description\n    });\n  }\n  pipe(target) {\n    return ZodPipeline.create(this, target);\n  }\n  readonly() {\n    return ZodReadonly.create(this);\n  }\n  isOptional() {\n    return this.safeParse(undefined).success;\n  }\n  isNullable() {\n    return this.safeParse(null).success;\n  }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n  // let regex = `\\\\d{2}:\\\\d{2}:\\\\d{2}`;\n  let regex = `([01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d`;\n  if (args.precision) {\n    regex = `${regex}\\\\.\\\\d{${args.precision}}`;\n  } else if (args.precision == null) {\n    regex = `${regex}(\\\\.\\\\d+)?`;\n  }\n  return regex;\n}\nfunction timeRegex(args) {\n  return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nfunction datetimeRegex(args) {\n  let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n  const opts = [];\n  opts.push(args.local ? `Z?` : `Z`);\n  if (args.offset) opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n  regex = `${regex}(${opts.join(\"|\")})`;\n  return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n  if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n    return true;\n  }\n  if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n    return true;\n  }\n  return false;\n}\nclass ZodString extends ZodType {\n  _parse(input) {\n    if (this._def.coerce) {\n      input.data = String(input.data);\n    }\n    const parsedType = this._getType(input);\n    if (parsedType !== ZodParsedType.string) {\n      const ctx = this._getOrReturnCtx(input);\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.string,\n        received: ctx.parsedType\n      });\n      return INVALID;\n    }\n    const status = new ParseStatus();\n    let ctx = undefined;\n    for (const check of this._def.checks) {\n      if (check.kind === \"min\") {\n        if (input.data.length < check.value) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            code: ZodIssueCode.too_small,\n            minimum: check.value,\n            type: \"string\",\n            inclusive: true,\n            exact: false,\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"max\") {\n        if (input.data.length > check.value) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            code: ZodIssueCode.too_big,\n            maximum: check.value,\n            type: \"string\",\n            inclusive: true,\n            exact: false,\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"length\") {\n        const tooBig = input.data.length > check.value;\n        const tooSmall = input.data.length < check.value;\n        if (tooBig || tooSmall) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          if (tooBig) {\n            addIssueToContext(ctx, {\n              code: ZodIssueCode.too_big,\n              maximum: check.value,\n              type: \"string\",\n              inclusive: true,\n              exact: true,\n              message: check.message\n            });\n          } else if (tooSmall) {\n            addIssueToContext(ctx, {\n              code: ZodIssueCode.too_small,\n              minimum: check.value,\n              type: \"string\",\n              inclusive: true,\n              exact: true,\n              message: check.message\n            });\n          }\n          status.dirty();\n        }\n      } else if (check.kind === \"email\") {\n        if (!emailRegex.test(input.data)) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            validation: \"email\",\n            code: ZodIssueCode.invalid_string,\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"emoji\") {\n        if (!emojiRegex) {\n          emojiRegex = new RegExp(_emojiRegex, \"u\");\n        }\n        if (!emojiRegex.test(input.data)) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            validation: \"emoji\",\n            code: ZodIssueCode.invalid_string,\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"uuid\") {\n        if (!uuidRegex.test(input.data)) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            validation: \"uuid\",\n            code: ZodIssueCode.invalid_string,\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"nanoid\") {\n        if (!nanoidRegex.test(input.data)) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            validation: \"nanoid\",\n            code: ZodIssueCode.invalid_string,\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"cuid\") {\n        if (!cuidRegex.test(input.data)) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            validation: \"cuid\",\n            code: ZodIssueCode.invalid_string,\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"cuid2\") {\n        if (!cuid2Regex.test(input.data)) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            validation: \"cuid2\",\n            code: ZodIssueCode.invalid_string,\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"ulid\") {\n        if (!ulidRegex.test(input.data)) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            validation: \"ulid\",\n            code: ZodIssueCode.invalid_string,\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"url\") {\n        try {\n          new URL(input.data);\n        } catch (_a) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            validation: \"url\",\n            code: ZodIssueCode.invalid_string,\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"regex\") {\n        check.regex.lastIndex = 0;\n        const testResult = check.regex.test(input.data);\n        if (!testResult) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            validation: \"regex\",\n            code: ZodIssueCode.invalid_string,\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"trim\") {\n        input.data = input.data.trim();\n      } else if (check.kind === \"includes\") {\n        if (!input.data.includes(check.value, check.position)) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_string,\n            validation: {\n              includes: check.value,\n              position: check.position\n            },\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"toLowerCase\") {\n        input.data = input.data.toLowerCase();\n      } else if (check.kind === \"toUpperCase\") {\n        input.data = input.data.toUpperCase();\n      } else if (check.kind === \"startsWith\") {\n        if (!input.data.startsWith(check.value)) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_string,\n            validation: {\n              startsWith: check.value\n            },\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"endsWith\") {\n        if (!input.data.endsWith(check.value)) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_string,\n            validation: {\n              endsWith: check.value\n            },\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"datetime\") {\n        const regex = datetimeRegex(check);\n        if (!regex.test(input.data)) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_string,\n            validation: \"datetime\",\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"date\") {\n        const regex = dateRegex;\n        if (!regex.test(input.data)) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_string,\n            validation: \"date\",\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"time\") {\n        const regex = timeRegex(check);\n        if (!regex.test(input.data)) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_string,\n            validation: \"time\",\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"duration\") {\n        if (!durationRegex.test(input.data)) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            validation: \"duration\",\n            code: ZodIssueCode.invalid_string,\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"ip\") {\n        if (!isValidIP(input.data, check.version)) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            validation: \"ip\",\n            code: ZodIssueCode.invalid_string,\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"base64\") {\n        if (!base64Regex.test(input.data)) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            validation: \"base64\",\n            code: ZodIssueCode.invalid_string,\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else {\n        util.assertNever(check);\n      }\n    }\n    return {\n      status: status.value,\n      value: input.data\n    };\n  }\n  _regex(regex, validation, message) {\n    return this.refinement(data => regex.test(data), {\n      validation,\n      code: ZodIssueCode.invalid_string,\n      ...errorUtil.errToObj(message)\n    });\n  }\n  _addCheck(check) {\n    return new ZodString({\n      ...this._def,\n      checks: [...this._def.checks, check]\n    });\n  }\n  email(message) {\n    return this._addCheck({\n      kind: \"email\",\n      ...errorUtil.errToObj(message)\n    });\n  }\n  url(message) {\n    return this._addCheck({\n      kind: \"url\",\n      ...errorUtil.errToObj(message)\n    });\n  }\n  emoji(message) {\n    return this._addCheck({\n      kind: \"emoji\",\n      ...errorUtil.errToObj(message)\n    });\n  }\n  uuid(message) {\n    return this._addCheck({\n      kind: \"uuid\",\n      ...errorUtil.errToObj(message)\n    });\n  }\n  nanoid(message) {\n    return this._addCheck({\n      kind: \"nanoid\",\n      ...errorUtil.errToObj(message)\n    });\n  }\n  cuid(message) {\n    return this._addCheck({\n      kind: \"cuid\",\n      ...errorUtil.errToObj(message)\n    });\n  }\n  cuid2(message) {\n    return this._addCheck({\n      kind: \"cuid2\",\n      ...errorUtil.errToObj(message)\n    });\n  }\n  ulid(message) {\n    return this._addCheck({\n      kind: \"ulid\",\n      ...errorUtil.errToObj(message)\n    });\n  }\n  base64(message) {\n    return this._addCheck({\n      kind: \"base64\",\n      ...errorUtil.errToObj(message)\n    });\n  }\n  ip(options) {\n    return this._addCheck({\n      kind: \"ip\",\n      ...errorUtil.errToObj(options)\n    });\n  }\n  datetime(options) {\n    var _a, _b;\n    if (typeof options === \"string\") {\n      return this._addCheck({\n        kind: \"datetime\",\n        precision: null,\n        offset: false,\n        local: false,\n        message: options\n      });\n    }\n    return this._addCheck({\n      kind: \"datetime\",\n      precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n      offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n      local: (_b = options === null || options === void 0 ? void 0 : options.local) !== null && _b !== void 0 ? _b : false,\n      ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message)\n    });\n  }\n  date(message) {\n    return this._addCheck({\n      kind: \"date\",\n      message\n    });\n  }\n  time(options) {\n    if (typeof options === \"string\") {\n      return this._addCheck({\n        kind: \"time\",\n        precision: null,\n        message: options\n      });\n    }\n    return this._addCheck({\n      kind: \"time\",\n      precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n      ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message)\n    });\n  }\n  duration(message) {\n    return this._addCheck({\n      kind: \"duration\",\n      ...errorUtil.errToObj(message)\n    });\n  }\n  regex(regex, message) {\n    return this._addCheck({\n      kind: \"regex\",\n      regex: regex,\n      ...errorUtil.errToObj(message)\n    });\n  }\n  includes(value, options) {\n    return this._addCheck({\n      kind: \"includes\",\n      value: value,\n      position: options === null || options === void 0 ? void 0 : options.position,\n      ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message)\n    });\n  }\n  startsWith(value, message) {\n    return this._addCheck({\n      kind: \"startsWith\",\n      value: value,\n      ...errorUtil.errToObj(message)\n    });\n  }\n  endsWith(value, message) {\n    return this._addCheck({\n      kind: \"endsWith\",\n      value: value,\n      ...errorUtil.errToObj(message)\n    });\n  }\n  min(minLength, message) {\n    return this._addCheck({\n      kind: \"min\",\n      value: minLength,\n      ...errorUtil.errToObj(message)\n    });\n  }\n  max(maxLength, message) {\n    return this._addCheck({\n      kind: \"max\",\n      value: maxLength,\n      ...errorUtil.errToObj(message)\n    });\n  }\n  length(len, message) {\n    return this._addCheck({\n      kind: \"length\",\n      value: len,\n      ...errorUtil.errToObj(message)\n    });\n  }\n  /**\n   * @deprecated Use z.string().min(1) instead.\n   * @see {@link ZodString.min}\n   */\n  nonempty(message) {\n    return this.min(1, errorUtil.errToObj(message));\n  }\n  trim() {\n    return new ZodString({\n      ...this._def,\n      checks: [...this._def.checks, {\n        kind: \"trim\"\n      }]\n    });\n  }\n  toLowerCase() {\n    return new ZodString({\n      ...this._def,\n      checks: [...this._def.checks, {\n        kind: \"toLowerCase\"\n      }]\n    });\n  }\n  toUpperCase() {\n    return new ZodString({\n      ...this._def,\n      checks: [...this._def.checks, {\n        kind: \"toUpperCase\"\n      }]\n    });\n  }\n  get isDatetime() {\n    return !!this._def.checks.find(ch => ch.kind === \"datetime\");\n  }\n  get isDate() {\n    return !!this._def.checks.find(ch => ch.kind === \"date\");\n  }\n  get isTime() {\n    return !!this._def.checks.find(ch => ch.kind === \"time\");\n  }\n  get isDuration() {\n    return !!this._def.checks.find(ch => ch.kind === \"duration\");\n  }\n  get isEmail() {\n    return !!this._def.checks.find(ch => ch.kind === \"email\");\n  }\n  get isURL() {\n    return !!this._def.checks.find(ch => ch.kind === \"url\");\n  }\n  get isEmoji() {\n    return !!this._def.checks.find(ch => ch.kind === \"emoji\");\n  }\n  get isUUID() {\n    return !!this._def.checks.find(ch => ch.kind === \"uuid\");\n  }\n  get isNANOID() {\n    return !!this._def.checks.find(ch => ch.kind === \"nanoid\");\n  }\n  get isCUID() {\n    return !!this._def.checks.find(ch => ch.kind === \"cuid\");\n  }\n  get isCUID2() {\n    return !!this._def.checks.find(ch => ch.kind === \"cuid2\");\n  }\n  get isULID() {\n    return !!this._def.checks.find(ch => ch.kind === \"ulid\");\n  }\n  get isIP() {\n    return !!this._def.checks.find(ch => ch.kind === \"ip\");\n  }\n  get isBase64() {\n    return !!this._def.checks.find(ch => ch.kind === \"base64\");\n  }\n  get minLength() {\n    let min = null;\n    for (const ch of this._def.checks) {\n      if (ch.kind === \"min\") {\n        if (min === null || ch.value > min) min = ch.value;\n      }\n    }\n    return min;\n  }\n  get maxLength() {\n    let max = null;\n    for (const ch of this._def.checks) {\n      if (ch.kind === \"max\") {\n        if (max === null || ch.value < max) max = ch.value;\n      }\n    }\n    return max;\n  }\n}\nZodString.create = params => {\n  var _a;\n  return new ZodString({\n    checks: [],\n    typeName: ZodFirstPartyTypeKind.ZodString,\n    coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n    ...processCreateParams(params)\n  });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n  const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n  const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n  const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n  const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n  const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n  return valInt % stepInt / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n  constructor() {\n    super(...arguments);\n    this.min = this.gte;\n    this.max = this.lte;\n    this.step = this.multipleOf;\n  }\n  _parse(input) {\n    if (this._def.coerce) {\n      input.data = Number(input.data);\n    }\n    const parsedType = this._getType(input);\n    if (parsedType !== ZodParsedType.number) {\n      const ctx = this._getOrReturnCtx(input);\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.number,\n        received: ctx.parsedType\n      });\n      return INVALID;\n    }\n    let ctx = undefined;\n    const status = new ParseStatus();\n    for (const check of this._def.checks) {\n      if (check.kind === \"int\") {\n        if (!util.isInteger(input.data)) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: \"integer\",\n            received: \"float\",\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"min\") {\n        const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n        if (tooSmall) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            code: ZodIssueCode.too_small,\n            minimum: check.value,\n            type: \"number\",\n            inclusive: check.inclusive,\n            exact: false,\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"max\") {\n        const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n        if (tooBig) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            code: ZodIssueCode.too_big,\n            maximum: check.value,\n            type: \"number\",\n            inclusive: check.inclusive,\n            exact: false,\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"multipleOf\") {\n        if (floatSafeRemainder(input.data, check.value) !== 0) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            code: ZodIssueCode.not_multiple_of,\n            multipleOf: check.value,\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"finite\") {\n        if (!Number.isFinite(input.data)) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            code: ZodIssueCode.not_finite,\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else {\n        util.assertNever(check);\n      }\n    }\n    return {\n      status: status.value,\n      value: input.data\n    };\n  }\n  gte(value, message) {\n    return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n  }\n  gt(value, message) {\n    return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n  }\n  lte(value, message) {\n    return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n  }\n  lt(value, message) {\n    return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n  }\n  setLimit(kind, value, inclusive, message) {\n    return new ZodNumber({\n      ...this._def,\n      checks: [...this._def.checks, {\n        kind,\n        value,\n        inclusive,\n        message: errorUtil.toString(message)\n      }]\n    });\n  }\n  _addCheck(check) {\n    return new ZodNumber({\n      ...this._def,\n      checks: [...this._def.checks, check]\n    });\n  }\n  int(message) {\n    return this._addCheck({\n      kind: \"int\",\n      message: errorUtil.toString(message)\n    });\n  }\n  positive(message) {\n    return this._addCheck({\n      kind: \"min\",\n      value: 0,\n      inclusive: false,\n      message: errorUtil.toString(message)\n    });\n  }\n  negative(message) {\n    return this._addCheck({\n      kind: \"max\",\n      value: 0,\n      inclusive: false,\n      message: errorUtil.toString(message)\n    });\n  }\n  nonpositive(message) {\n    return this._addCheck({\n      kind: \"max\",\n      value: 0,\n      inclusive: true,\n      message: errorUtil.toString(message)\n    });\n  }\n  nonnegative(message) {\n    return this._addCheck({\n      kind: \"min\",\n      value: 0,\n      inclusive: true,\n      message: errorUtil.toString(message)\n    });\n  }\n  multipleOf(value, message) {\n    return this._addCheck({\n      kind: \"multipleOf\",\n      value: value,\n      message: errorUtil.toString(message)\n    });\n  }\n  finite(message) {\n    return this._addCheck({\n      kind: \"finite\",\n      message: errorUtil.toString(message)\n    });\n  }\n  safe(message) {\n    return this._addCheck({\n      kind: \"min\",\n      inclusive: true,\n      value: Number.MIN_SAFE_INTEGER,\n      message: errorUtil.toString(message)\n    })._addCheck({\n      kind: \"max\",\n      inclusive: true,\n      value: Number.MAX_SAFE_INTEGER,\n      message: errorUtil.toString(message)\n    });\n  }\n  get minValue() {\n    let min = null;\n    for (const ch of this._def.checks) {\n      if (ch.kind === \"min\") {\n        if (min === null || ch.value > min) min = ch.value;\n      }\n    }\n    return min;\n  }\n  get maxValue() {\n    let max = null;\n    for (const ch of this._def.checks) {\n      if (ch.kind === \"max\") {\n        if (max === null || ch.value < max) max = ch.value;\n      }\n    }\n    return max;\n  }\n  get isInt() {\n    return !!this._def.checks.find(ch => ch.kind === \"int\" || ch.kind === \"multipleOf\" && util.isInteger(ch.value));\n  }\n  get isFinite() {\n    let max = null,\n      min = null;\n    for (const ch of this._def.checks) {\n      if (ch.kind === \"finite\" || ch.kind === \"int\" || ch.kind === \"multipleOf\") {\n        return true;\n      } else if (ch.kind === \"min\") {\n        if (min === null || ch.value > min) min = ch.value;\n      } else if (ch.kind === \"max\") {\n        if (max === null || ch.value < max) max = ch.value;\n      }\n    }\n    return Number.isFinite(min) && Number.isFinite(max);\n  }\n}\nZodNumber.create = params => {\n  return new ZodNumber({\n    checks: [],\n    typeName: ZodFirstPartyTypeKind.ZodNumber,\n    coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n    ...processCreateParams(params)\n  });\n};\nclass ZodBigInt extends ZodType {\n  constructor() {\n    super(...arguments);\n    this.min = this.gte;\n    this.max = this.lte;\n  }\n  _parse(input) {\n    if (this._def.coerce) {\n      input.data = BigInt(input.data);\n    }\n    const parsedType = this._getType(input);\n    if (parsedType !== ZodParsedType.bigint) {\n      const ctx = this._getOrReturnCtx(input);\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.bigint,\n        received: ctx.parsedType\n      });\n      return INVALID;\n    }\n    let ctx = undefined;\n    const status = new ParseStatus();\n    for (const check of this._def.checks) {\n      if (check.kind === \"min\") {\n        const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n        if (tooSmall) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            code: ZodIssueCode.too_small,\n            type: \"bigint\",\n            minimum: check.value,\n            inclusive: check.inclusive,\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"max\") {\n        const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n        if (tooBig) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            code: ZodIssueCode.too_big,\n            type: \"bigint\",\n            maximum: check.value,\n            inclusive: check.inclusive,\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"multipleOf\") {\n        if (input.data % check.value !== BigInt(0)) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            code: ZodIssueCode.not_multiple_of,\n            multipleOf: check.value,\n            message: check.message\n          });\n          status.dirty();\n        }\n      } else {\n        util.assertNever(check);\n      }\n    }\n    return {\n      status: status.value,\n      value: input.data\n    };\n  }\n  gte(value, message) {\n    return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n  }\n  gt(value, message) {\n    return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n  }\n  lte(value, message) {\n    return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n  }\n  lt(value, message) {\n    return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n  }\n  setLimit(kind, value, inclusive, message) {\n    return new ZodBigInt({\n      ...this._def,\n      checks: [...this._def.checks, {\n        kind,\n        value,\n        inclusive,\n        message: errorUtil.toString(message)\n      }]\n    });\n  }\n  _addCheck(check) {\n    return new ZodBigInt({\n      ...this._def,\n      checks: [...this._def.checks, check]\n    });\n  }\n  positive(message) {\n    return this._addCheck({\n      kind: \"min\",\n      value: BigInt(0),\n      inclusive: false,\n      message: errorUtil.toString(message)\n    });\n  }\n  negative(message) {\n    return this._addCheck({\n      kind: \"max\",\n      value: BigInt(0),\n      inclusive: false,\n      message: errorUtil.toString(message)\n    });\n  }\n  nonpositive(message) {\n    return this._addCheck({\n      kind: \"max\",\n      value: BigInt(0),\n      inclusive: true,\n      message: errorUtil.toString(message)\n    });\n  }\n  nonnegative(message) {\n    return this._addCheck({\n      kind: \"min\",\n      value: BigInt(0),\n      inclusive: true,\n      message: errorUtil.toString(message)\n    });\n  }\n  multipleOf(value, message) {\n    return this._addCheck({\n      kind: \"multipleOf\",\n      value,\n      message: errorUtil.toString(message)\n    });\n  }\n  get minValue() {\n    let min = null;\n    for (const ch of this._def.checks) {\n      if (ch.kind === \"min\") {\n        if (min === null || ch.value > min) min = ch.value;\n      }\n    }\n    return min;\n  }\n  get maxValue() {\n    let max = null;\n    for (const ch of this._def.checks) {\n      if (ch.kind === \"max\") {\n        if (max === null || ch.value < max) max = ch.value;\n      }\n    }\n    return max;\n  }\n}\nZodBigInt.create = params => {\n  var _a;\n  return new ZodBigInt({\n    checks: [],\n    typeName: ZodFirstPartyTypeKind.ZodBigInt,\n    coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n    ...processCreateParams(params)\n  });\n};\nclass ZodBoolean extends ZodType {\n  _parse(input) {\n    if (this._def.coerce) {\n      input.data = Boolean(input.data);\n    }\n    const parsedType = this._getType(input);\n    if (parsedType !== ZodParsedType.boolean) {\n      const ctx = this._getOrReturnCtx(input);\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.boolean,\n        received: ctx.parsedType\n      });\n      return INVALID;\n    }\n    return OK(input.data);\n  }\n}\nZodBoolean.create = params => {\n  return new ZodBoolean({\n    typeName: ZodFirstPartyTypeKind.ZodBoolean,\n    coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n    ...processCreateParams(params)\n  });\n};\nclass ZodDate extends ZodType {\n  _parse(input) {\n    if (this._def.coerce) {\n      input.data = new Date(input.data);\n    }\n    const parsedType = this._getType(input);\n    if (parsedType !== ZodParsedType.date) {\n      const ctx = this._getOrReturnCtx(input);\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.date,\n        received: ctx.parsedType\n      });\n      return INVALID;\n    }\n    if (isNaN(input.data.getTime())) {\n      const ctx = this._getOrReturnCtx(input);\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_date\n      });\n      return INVALID;\n    }\n    const status = new ParseStatus();\n    let ctx = undefined;\n    for (const check of this._def.checks) {\n      if (check.kind === \"min\") {\n        if (input.data.getTime() < check.value) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            code: ZodIssueCode.too_small,\n            message: check.message,\n            inclusive: true,\n            exact: false,\n            minimum: check.value,\n            type: \"date\"\n          });\n          status.dirty();\n        }\n      } else if (check.kind === \"max\") {\n        if (input.data.getTime() > check.value) {\n          ctx = this._getOrReturnCtx(input, ctx);\n          addIssueToContext(ctx, {\n            code: ZodIssueCode.too_big,\n            message: check.message,\n            inclusive: true,\n            exact: false,\n            maximum: check.value,\n            type: \"date\"\n          });\n          status.dirty();\n        }\n      } else {\n        util.assertNever(check);\n      }\n    }\n    return {\n      status: status.value,\n      value: new Date(input.data.getTime())\n    };\n  }\n  _addCheck(check) {\n    return new ZodDate({\n      ...this._def,\n      checks: [...this._def.checks, check]\n    });\n  }\n  min(minDate, message) {\n    return this._addCheck({\n      kind: \"min\",\n      value: minDate.getTime(),\n      message: errorUtil.toString(message)\n    });\n  }\n  max(maxDate, message) {\n    return this._addCheck({\n      kind: \"max\",\n      value: maxDate.getTime(),\n      message: errorUtil.toString(message)\n    });\n  }\n  get minDate() {\n    let min = null;\n    for (const ch of this._def.checks) {\n      if (ch.kind === \"min\") {\n        if (min === null || ch.value > min) min = ch.value;\n      }\n    }\n    return min != null ? new Date(min) : null;\n  }\n  get maxDate() {\n    let max = null;\n    for (const ch of this._def.checks) {\n      if (ch.kind === \"max\") {\n        if (max === null || ch.value < max) max = ch.value;\n      }\n    }\n    return max != null ? new Date(max) : null;\n  }\n}\nZodDate.create = params => {\n  return new ZodDate({\n    checks: [],\n    coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n    typeName: ZodFirstPartyTypeKind.ZodDate,\n    ...processCreateParams(params)\n  });\n};\nclass ZodSymbol extends ZodType {\n  _parse(input) {\n    const parsedType = this._getType(input);\n    if (parsedType !== ZodParsedType.symbol) {\n      const ctx = this._getOrReturnCtx(input);\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.symbol,\n        received: ctx.parsedType\n      });\n      return INVALID;\n    }\n    return OK(input.data);\n  }\n}\nZodSymbol.create = params => {\n  return new ZodSymbol({\n    typeName: ZodFirstPartyTypeKind.ZodSymbol,\n    ...processCreateParams(params)\n  });\n};\nclass ZodUndefined extends ZodType {\n  _parse(input) {\n    const parsedType = this._getType(input);\n    if (parsedType !== ZodParsedType.undefined) {\n      const ctx = this._getOrReturnCtx(input);\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.undefined,\n        received: ctx.parsedType\n      });\n      return INVALID;\n    }\n    return OK(input.data);\n  }\n}\nZodUndefined.create = params => {\n  return new ZodUndefined({\n    typeName: ZodFirstPartyTypeKind.ZodUndefined,\n    ...processCreateParams(params)\n  });\n};\nclass ZodNull extends ZodType {\n  _parse(input) {\n    const parsedType = this._getType(input);\n    if (parsedType !== ZodParsedType.null) {\n      const ctx = this._getOrReturnCtx(input);\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.null,\n        received: ctx.parsedType\n      });\n      return INVALID;\n    }\n    return OK(input.data);\n  }\n}\nZodNull.create = params => {\n  return new ZodNull({\n    typeName: ZodFirstPartyTypeKind.ZodNull,\n    ...processCreateParams(params)\n  });\n};\nclass ZodAny extends ZodType {\n  constructor() {\n    super(...arguments);\n    // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n    this._any = true;\n  }\n  _parse(input) {\n    return OK(input.data);\n  }\n}\nZodAny.create = params => {\n  return new ZodAny({\n    typeName: ZodFirstPartyTypeKind.ZodAny,\n    ...processCreateParams(params)\n  });\n};\nclass ZodUnknown extends ZodType {\n  constructor() {\n    super(...arguments);\n    // required\n    this._unknown = true;\n  }\n  _parse(input) {\n    return OK(input.data);\n  }\n}\nZodUnknown.create = params => {\n  return new ZodUnknown({\n    typeName: ZodFirstPartyTypeKind.ZodUnknown,\n    ...processCreateParams(params)\n  });\n};\nclass ZodNever extends ZodType {\n  _parse(input) {\n    const ctx = this._getOrReturnCtx(input);\n    addIssueToContext(ctx, {\n      code: ZodIssueCode.invalid_type,\n      expected: ZodParsedType.never,\n      received: ctx.parsedType\n    });\n    return INVALID;\n  }\n}\nZodNever.create = params => {\n  return new ZodNever({\n    typeName: ZodFirstPartyTypeKind.ZodNever,\n    ...processCreateParams(params)\n  });\n};\nclass ZodVoid extends ZodType {\n  _parse(input) {\n    const parsedType = this._getType(input);\n    if (parsedType !== ZodParsedType.undefined) {\n      const ctx = this._getOrReturnCtx(input);\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.void,\n        received: ctx.parsedType\n      });\n      return INVALID;\n    }\n    return OK(input.data);\n  }\n}\nZodVoid.create = params => {\n  return new ZodVoid({\n    typeName: ZodFirstPartyTypeKind.ZodVoid,\n    ...processCreateParams(params)\n  });\n};\nclass ZodArray extends ZodType {\n  _parse(input) {\n    const {\n      ctx,\n      status\n    } = this._processInputParams(input);\n    const def = this._def;\n    if (ctx.parsedType !== ZodParsedType.array) {\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.array,\n        received: ctx.parsedType\n      });\n      return INVALID;\n    }\n    if (def.exactLength !== null) {\n      const tooBig = ctx.data.length > def.exactLength.value;\n      const tooSmall = ctx.data.length < def.exactLength.value;\n      if (tooBig || tooSmall) {\n        addIssueToContext(ctx, {\n          code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n          minimum: tooSmall ? def.exactLength.value : undefined,\n          maximum: tooBig ? def.exactLength.value : undefined,\n          type: \"array\",\n          inclusive: true,\n          exact: true,\n          message: def.exactLength.message\n        });\n        status.dirty();\n      }\n    }\n    if (def.minLength !== null) {\n      if (ctx.data.length < def.minLength.value) {\n        addIssueToContext(ctx, {\n          code: ZodIssueCode.too_small,\n          minimum: def.minLength.value,\n          type: \"array\",\n          inclusive: true,\n          exact: false,\n          message: def.minLength.message\n        });\n        status.dirty();\n      }\n    }\n    if (def.maxLength !== null) {\n      if (ctx.data.length > def.maxLength.value) {\n        addIssueToContext(ctx, {\n          code: ZodIssueCode.too_big,\n          maximum: def.maxLength.value,\n          type: \"array\",\n          inclusive: true,\n          exact: false,\n          message: def.maxLength.message\n        });\n        status.dirty();\n      }\n    }\n    if (ctx.common.async) {\n      return Promise.all([...ctx.data].map((item, i) => {\n        return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n      })).then(result => {\n        return ParseStatus.mergeArray(status, result);\n      });\n    }\n    const result = [...ctx.data].map((item, i) => {\n      return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n    });\n    return ParseStatus.mergeArray(status, result);\n  }\n  get element() {\n    return this._def.type;\n  }\n  min(minLength, message) {\n    return new ZodArray({\n      ...this._def,\n      minLength: {\n        value: minLength,\n        message: errorUtil.toString(message)\n      }\n    });\n  }\n  max(maxLength, message) {\n    return new ZodArray({\n      ...this._def,\n      maxLength: {\n        value: maxLength,\n        message: errorUtil.toString(message)\n      }\n    });\n  }\n  length(len, message) {\n    return new ZodArray({\n      ...this._def,\n      exactLength: {\n        value: len,\n        message: errorUtil.toString(message)\n      }\n    });\n  }\n  nonempty(message) {\n    return this.min(1, message);\n  }\n}\nZodArray.create = (schema, params) => {\n  return new ZodArray({\n    type: schema,\n    minLength: null,\n    maxLength: null,\n    exactLength: null,\n    typeName: ZodFirstPartyTypeKind.ZodArray,\n    ...processCreateParams(params)\n  });\n};\nfunction deepPartialify(schema) {\n  if (schema instanceof ZodObject) {\n    const newShape = {};\n    for (const key in schema.shape) {\n      const fieldSchema = schema.shape[key];\n      newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n    }\n    return new ZodObject({\n      ...schema._def,\n      shape: () => newShape\n    });\n  } else if (schema instanceof ZodArray) {\n    return new ZodArray({\n      ...schema._def,\n      type: deepPartialify(schema.element)\n    });\n  } else if (schema instanceof ZodOptional) {\n    return ZodOptional.create(deepPartialify(schema.unwrap()));\n  } else if (schema instanceof ZodNullable) {\n    return ZodNullable.create(deepPartialify(schema.unwrap()));\n  } else if (schema instanceof ZodTuple) {\n    return ZodTuple.create(schema.items.map(item => deepPartialify(item)));\n  } else {\n    return schema;\n  }\n}\nclass ZodObject extends ZodType {\n  constructor() {\n    super(...arguments);\n    this._cached = null;\n    /**\n     * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n     * If you want to pass through unknown properties, use `.passthrough()` instead.\n     */\n    this.nonstrict = this.passthrough;\n    // extend<\n    //   Augmentation extends ZodRawShape,\n    //   NewOutput extends util.flatten<{\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   }>,\n    //   NewInput extends util.flatten<{\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }>\n    // >(\n    //   augmentation: Augmentation\n    // ): ZodObject<\n    //   extendShape<T, Augmentation>,\n    //   UnknownKeys,\n    //   Catchall,\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   return new ZodObject({\n    //     ...this._def,\n    //     shape: () => ({\n    //       ...this._def.shape(),\n    //       ...augmentation,\n    //     }),\n    //   }) as any;\n    // }\n    /**\n     * @deprecated Use `.extend` instead\n     *  */\n    this.augment = this.extend;\n  }\n  _getCached() {\n    if (this._cached !== null) return this._cached;\n    const shape = this._def.shape();\n    const keys = util.objectKeys(shape);\n    return this._cached = {\n      shape,\n      keys\n    };\n  }\n  _parse(input) {\n    const parsedType = this._getType(input);\n    if (parsedType !== ZodParsedType.object) {\n      const ctx = this._getOrReturnCtx(input);\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.object,\n        received: ctx.parsedType\n      });\n      return INVALID;\n    }\n    const {\n      status,\n      ctx\n    } = this._processInputParams(input);\n    const {\n      shape,\n      keys: shapeKeys\n    } = this._getCached();\n    const extraKeys = [];\n    if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === \"strip\")) {\n      for (const key in ctx.data) {\n        if (!shapeKeys.includes(key)) {\n          extraKeys.push(key);\n        }\n      }\n    }\n    const pairs = [];\n    for (const key of shapeKeys) {\n      const keyValidator = shape[key];\n      const value = ctx.data[key];\n      pairs.push({\n        key: {\n          status: \"valid\",\n          value: key\n        },\n        value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n        alwaysSet: key in ctx.data\n      });\n    }\n    if (this._def.catchall instanceof ZodNever) {\n      const unknownKeys = this._def.unknownKeys;\n      if (unknownKeys === \"passthrough\") {\n        for (const key of extraKeys) {\n          pairs.push({\n            key: {\n              status: \"valid\",\n              value: key\n            },\n            value: {\n              status: \"valid\",\n              value: ctx.data[key]\n            }\n          });\n        }\n      } else if (unknownKeys === \"strict\") {\n        if (extraKeys.length > 0) {\n          addIssueToContext(ctx, {\n            code: ZodIssueCode.unrecognized_keys,\n            keys: extraKeys\n          });\n          status.dirty();\n        }\n      } else if (unknownKeys === \"strip\") ;else {\n        throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n      }\n    } else {\n      // run catchall validation\n      const catchall = this._def.catchall;\n      for (const key of extraKeys) {\n        const value = ctx.data[key];\n        pairs.push({\n          key: {\n            status: \"valid\",\n            value: key\n          },\n          value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n          ),\n          alwaysSet: key in ctx.data\n        });\n      }\n    }\n    if (ctx.common.async) {\n      return Promise.resolve().then(async () => {\n        const syncPairs = [];\n        for (const pair of pairs) {\n          const key = await pair.key;\n          const value = await pair.value;\n          syncPairs.push({\n            key,\n            value,\n            alwaysSet: pair.alwaysSet\n          });\n        }\n        return syncPairs;\n      }).then(syncPairs => {\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n      });\n    } else {\n      return ParseStatus.mergeObjectSync(status, pairs);\n    }\n  }\n  get shape() {\n    return this._def.shape();\n  }\n  strict(message) {\n    errorUtil.errToObj;\n    return new ZodObject({\n      ...this._def,\n      unknownKeys: \"strict\",\n      ...(message !== undefined ? {\n        errorMap: (issue, ctx) => {\n          var _a, _b, _c, _d;\n          const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n          if (issue.code === \"unrecognized_keys\") return {\n            message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError\n          };\n          return {\n            message: defaultError\n          };\n        }\n      } : {})\n    });\n  }\n  strip() {\n    return new ZodObject({\n      ...this._def,\n      unknownKeys: \"strip\"\n    });\n  }\n  passthrough() {\n    return new ZodObject({\n      ...this._def,\n      unknownKeys: \"passthrough\"\n    });\n  }\n  // const AugmentFactory =\n  //   <Def extends ZodObjectDef>(def: Def) =>\n  //   <Augmentation extends ZodRawShape>(\n  //     augmentation: Augmentation\n  //   ): ZodObject<\n  //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n  //     Def[\"unknownKeys\"],\n  //     Def[\"catchall\"]\n  //   > => {\n  //     return new ZodObject({\n  //       ...def,\n  //       shape: () => ({\n  //         ...def.shape(),\n  //         ...augmentation,\n  //       }),\n  //     }) as any;\n  //   };\n  extend(augmentation) {\n    return new ZodObject({\n      ...this._def,\n      shape: () => ({\n        ...this._def.shape(),\n        ...augmentation\n      })\n    });\n  }\n  /**\n   * Prior to zod@1.0.12 there was a bug in the\n   * inferred type of merged objects. Please\n   * upgrade if you are experiencing issues.\n   */\n  merge(merging) {\n    const merged = new ZodObject({\n      unknownKeys: merging._def.unknownKeys,\n      catchall: merging._def.catchall,\n      shape: () => ({\n        ...this._def.shape(),\n        ...merging._def.shape()\n      }),\n      typeName: ZodFirstPartyTypeKind.ZodObject\n    });\n    return merged;\n  }\n  // merge<\n  //   Incoming extends AnyZodObject,\n  //   Augmentation extends Incoming[\"shape\"],\n  //   NewOutput extends {\n  //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n  //       ? Augmentation[k][\"_output\"]\n  //       : k extends keyof Output\n  //       ? Output[k]\n  //       : never;\n  //   },\n  //   NewInput extends {\n  //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n  //       ? Augmentation[k][\"_input\"]\n  //       : k extends keyof Input\n  //       ? Input[k]\n  //       : never;\n  //   }\n  // >(\n  //   merging: Incoming\n  // ): ZodObject<\n  //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n  //   Incoming[\"_def\"][\"unknownKeys\"],\n  //   Incoming[\"_def\"][\"catchall\"],\n  //   NewOutput,\n  //   NewInput\n  // > {\n  //   const merged: any = new ZodObject({\n  //     unknownKeys: merging._def.unknownKeys,\n  //     catchall: merging._def.catchall,\n  //     shape: () =>\n  //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n  //     typeName: ZodFirstPartyTypeKind.ZodObject,\n  //   }) as any;\n  //   return merged;\n  // }\n  setKey(key, schema) {\n    return this.augment({\n      [key]: schema\n    });\n  }\n  // merge<Incoming extends AnyZodObject>(\n  //   merging: Incoming\n  // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n  // ZodObject<\n  //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n  //   Incoming[\"_def\"][\"unknownKeys\"],\n  //   Incoming[\"_def\"][\"catchall\"]\n  // > {\n  //   // const mergedShape = objectUtil.mergeShapes(\n  //   //   this._def.shape(),\n  //   //   merging._def.shape()\n  //   // );\n  //   const merged: any = new ZodObject({\n  //     unknownKeys: merging._def.unknownKeys,\n  //     catchall: merging._def.catchall,\n  //     shape: () =>\n  //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n  //     typeName: ZodFirstPartyTypeKind.ZodObject,\n  //   }) as any;\n  //   return merged;\n  // }\n  catchall(index) {\n    return new ZodObject({\n      ...this._def,\n      catchall: index\n    });\n  }\n  pick(mask) {\n    const shape = {};\n    util.objectKeys(mask).forEach(key => {\n      if (mask[key] && this.shape[key]) {\n        shape[key] = this.shape[key];\n      }\n    });\n    return new ZodObject({\n      ...this._def,\n      shape: () => shape\n    });\n  }\n  omit(mask) {\n    const shape = {};\n    util.objectKeys(this.shape).forEach(key => {\n      if (!mask[key]) {\n        shape[key] = this.shape[key];\n      }\n    });\n    return new ZodObject({\n      ...this._def,\n      shape: () => shape\n    });\n  }\n  /**\n   * @deprecated\n   */\n  deepPartial() {\n    return deepPartialify(this);\n  }\n  partial(mask) {\n    const newShape = {};\n    util.objectKeys(this.shape).forEach(key => {\n      const fieldSchema = this.shape[key];\n      if (mask && !mask[key]) {\n        newShape[key] = fieldSchema;\n      } else {\n        newShape[key] = fieldSchema.optional();\n      }\n    });\n    return new ZodObject({\n      ...this._def,\n      shape: () => newShape\n    });\n  }\n  required(mask) {\n    const newShape = {};\n    util.objectKeys(this.shape).forEach(key => {\n      if (mask && !mask[key]) {\n        newShape[key] = this.shape[key];\n      } else {\n        const fieldSchema = this.shape[key];\n        let newField = fieldSchema;\n        while (newField instanceof ZodOptional) {\n          newField = newField._def.innerType;\n        }\n        newShape[key] = newField;\n      }\n    });\n    return new ZodObject({\n      ...this._def,\n      shape: () => newShape\n    });\n  }\n  keyof() {\n    return createZodEnum(util.objectKeys(this.shape));\n  }\n}\nZodObject.create = (shape, params) => {\n  return new ZodObject({\n    shape: () => shape,\n    unknownKeys: \"strip\",\n    catchall: ZodNever.create(),\n    typeName: ZodFirstPartyTypeKind.ZodObject,\n    ...processCreateParams(params)\n  });\n};\nZodObject.strictCreate = (shape, params) => {\n  return new ZodObject({\n    shape: () => shape,\n    unknownKeys: \"strict\",\n    catchall: ZodNever.create(),\n    typeName: ZodFirstPartyTypeKind.ZodObject,\n    ...processCreateParams(params)\n  });\n};\nZodObject.lazycreate = (shape, params) => {\n  return new ZodObject({\n    shape,\n    unknownKeys: \"strip\",\n    catchall: ZodNever.create(),\n    typeName: ZodFirstPartyTypeKind.ZodObject,\n    ...processCreateParams(params)\n  });\n};\nclass ZodUnion extends ZodType {\n  _parse(input) {\n    const {\n      ctx\n    } = this._processInputParams(input);\n    const options = this._def.options;\n    function handleResults(results) {\n      // return first issue-free validation if it exists\n      for (const result of results) {\n        if (result.result.status === \"valid\") {\n          return result.result;\n        }\n      }\n      for (const result of results) {\n        if (result.result.status === \"dirty\") {\n          // add issues from dirty option\n          ctx.common.issues.push(...result.ctx.common.issues);\n          return result.result;\n        }\n      }\n      // return invalid\n      const unionErrors = results.map(result => new ZodError(result.ctx.common.issues));\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_union,\n        unionErrors\n      });\n      return INVALID;\n    }\n    if (ctx.common.async) {\n      return Promise.all(options.map(async option => {\n        const childCtx = {\n          ...ctx,\n          common: {\n            ...ctx.common,\n            issues: []\n          },\n          parent: null\n        };\n        return {\n          result: await option._parseAsync({\n            data: ctx.data,\n            path: ctx.path,\n            parent: childCtx\n          }),\n          ctx: childCtx\n        };\n      })).then(handleResults);\n    } else {\n      let dirty = undefined;\n      const issues = [];\n      for (const option of options) {\n        const childCtx = {\n          ...ctx,\n          common: {\n            ...ctx.common,\n            issues: []\n          },\n          parent: null\n        };\n        const result = option._parseSync({\n          data: ctx.data,\n          path: ctx.path,\n          parent: childCtx\n        });\n        if (result.status === \"valid\") {\n          return result;\n        } else if (result.status === \"dirty\" && !dirty) {\n          dirty = {\n            result,\n            ctx: childCtx\n          };\n        }\n        if (childCtx.common.issues.length) {\n          issues.push(childCtx.common.issues);\n        }\n      }\n      if (dirty) {\n        ctx.common.issues.push(...dirty.ctx.common.issues);\n        return dirty.result;\n      }\n      const unionErrors = issues.map(issues => new ZodError(issues));\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_union,\n        unionErrors\n      });\n      return INVALID;\n    }\n  }\n  get options() {\n    return this._def.options;\n  }\n}\nZodUnion.create = (types, params) => {\n  return new ZodUnion({\n    options: types,\n    typeName: ZodFirstPartyTypeKind.ZodUnion,\n    ...processCreateParams(params)\n  });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = type => {\n  if (type instanceof ZodLazy) {\n    return getDiscriminator(type.schema);\n  } else if (type instanceof ZodEffects) {\n    return getDiscriminator(type.innerType());\n  } else if (type instanceof ZodLiteral) {\n    return [type.value];\n  } else if (type instanceof ZodEnum) {\n    return type.options;\n  } else if (type instanceof ZodNativeEnum) {\n    // eslint-disable-next-line ban/ban\n    return util.objectValues(type.enum);\n  } else if (type instanceof ZodDefault) {\n    return getDiscriminator(type._def.innerType);\n  } else if (type instanceof ZodUndefined) {\n    return [undefined];\n  } else if (type instanceof ZodNull) {\n    return [null];\n  } else if (type instanceof ZodOptional) {\n    return [undefined, ...getDiscriminator(type.unwrap())];\n  } else if (type instanceof ZodNullable) {\n    return [null, ...getDiscriminator(type.unwrap())];\n  } else if (type instanceof ZodBranded) {\n    return getDiscriminator(type.unwrap());\n  } else if (type instanceof ZodReadonly) {\n    return getDiscriminator(type.unwrap());\n  } else if (type instanceof ZodCatch) {\n    return getDiscriminator(type._def.innerType);\n  } else {\n    return [];\n  }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n  _parse(input) {\n    const {\n      ctx\n    } = this._processInputParams(input);\n    if (ctx.parsedType !== ZodParsedType.object) {\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.object,\n        received: ctx.parsedType\n      });\n      return INVALID;\n    }\n    const discriminator = this.discriminator;\n    const discriminatorValue = ctx.data[discriminator];\n    const option = this.optionsMap.get(discriminatorValue);\n    if (!option) {\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_union_discriminator,\n        options: Array.from(this.optionsMap.keys()),\n        path: [discriminator]\n      });\n      return INVALID;\n    }\n    if (ctx.common.async) {\n      return option._parseAsync({\n        data: ctx.data,\n        path: ctx.path,\n        parent: ctx\n      });\n    } else {\n      return option._parseSync({\n        data: ctx.data,\n        path: ctx.path,\n        parent: ctx\n      });\n    }\n  }\n  get discriminator() {\n    return this._def.discriminator;\n  }\n  get options() {\n    return this._def.options;\n  }\n  get optionsMap() {\n    return this._def.optionsMap;\n  }\n  /**\n   * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n   * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n   * have a different value for each object in the union.\n   * @param discriminator the name of the discriminator property\n   * @param types an array of object schemas\n   * @param params\n   */\n  static create(discriminator, options, params) {\n    // Get all the valid discriminator values\n    const optionsMap = new Map();\n    // try {\n    for (const type of options) {\n      const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n      if (!discriminatorValues.length) {\n        throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n      }\n      for (const value of discriminatorValues) {\n        if (optionsMap.has(value)) {\n          throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n        }\n        optionsMap.set(value, type);\n      }\n    }\n    return new ZodDiscriminatedUnion({\n      typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n      discriminator,\n      options,\n      optionsMap,\n      ...processCreateParams(params)\n    });\n  }\n}\nfunction mergeValues(a, b) {\n  const aType = getParsedType(a);\n  const bType = getParsedType(b);\n  if (a === b) {\n    return {\n      valid: true,\n      data: a\n    };\n  } else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n    const bKeys = util.objectKeys(b);\n    const sharedKeys = util.objectKeys(a).filter(key => bKeys.indexOf(key) !== -1);\n    const newObj = {\n      ...a,\n      ...b\n    };\n    for (const key of sharedKeys) {\n      const sharedValue = mergeValues(a[key], b[key]);\n      if (!sharedValue.valid) {\n        return {\n          valid: false\n        };\n      }\n      newObj[key] = sharedValue.data;\n    }\n    return {\n      valid: true,\n      data: newObj\n    };\n  } else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n    if (a.length !== b.length) {\n      return {\n        valid: false\n      };\n    }\n    const newArray = [];\n    for (let index = 0; index < a.length; index++) {\n      const itemA = a[index];\n      const itemB = b[index];\n      const sharedValue = mergeValues(itemA, itemB);\n      if (!sharedValue.valid) {\n        return {\n          valid: false\n        };\n      }\n      newArray.push(sharedValue.data);\n    }\n    return {\n      valid: true,\n      data: newArray\n    };\n  } else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a === +b) {\n    return {\n      valid: true,\n      data: a\n    };\n  } else {\n    return {\n      valid: false\n    };\n  }\n}\nclass ZodIntersection extends ZodType {\n  _parse(input) {\n    const {\n      status,\n      ctx\n    } = this._processInputParams(input);\n    const handleParsed = (parsedLeft, parsedRight) => {\n      if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n        return INVALID;\n      }\n      const merged = mergeValues(parsedLeft.value, parsedRight.value);\n      if (!merged.valid) {\n        addIssueToContext(ctx, {\n          code: ZodIssueCode.invalid_intersection_types\n        });\n        return INVALID;\n      }\n      if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n        status.dirty();\n      }\n      return {\n        status: status.value,\n        value: merged.data\n      };\n    };\n    if (ctx.common.async) {\n      return Promise.all([this._def.left._parseAsync({\n        data: ctx.data,\n        path: ctx.path,\n        parent: ctx\n      }), this._def.right._parseAsync({\n        data: ctx.data,\n        path: ctx.path,\n        parent: ctx\n      })]).then(([left, right]) => handleParsed(left, right));\n    } else {\n      return handleParsed(this._def.left._parseSync({\n        data: ctx.data,\n        path: ctx.path,\n        parent: ctx\n      }), this._def.right._parseSync({\n        data: ctx.data,\n        path: ctx.path,\n        parent: ctx\n      }));\n    }\n  }\n}\nZodIntersection.create = (left, right, params) => {\n  return new ZodIntersection({\n    left: left,\n    right: right,\n    typeName: ZodFirstPartyTypeKind.ZodIntersection,\n    ...processCreateParams(params)\n  });\n};\nclass ZodTuple extends ZodType {\n  _parse(input) {\n    const {\n      status,\n      ctx\n    } = this._processInputParams(input);\n    if (ctx.parsedType !== ZodParsedType.array) {\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.array,\n        received: ctx.parsedType\n      });\n      return INVALID;\n    }\n    if (ctx.data.length < this._def.items.length) {\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.too_small,\n        minimum: this._def.items.length,\n        inclusive: true,\n        exact: false,\n        type: \"array\"\n      });\n      return INVALID;\n    }\n    const rest = this._def.rest;\n    if (!rest && ctx.data.length > this._def.items.length) {\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.too_big,\n        maximum: this._def.items.length,\n        inclusive: true,\n        exact: false,\n        type: \"array\"\n      });\n      status.dirty();\n    }\n    const items = [...ctx.data].map((item, itemIndex) => {\n      const schema = this._def.items[itemIndex] || this._def.rest;\n      if (!schema) return null;\n      return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n    }).filter(x => !!x); // filter nulls\n    if (ctx.common.async) {\n      return Promise.all(items).then(results => {\n        return ParseStatus.mergeArray(status, results);\n      });\n    } else {\n      return ParseStatus.mergeArray(status, items);\n    }\n  }\n  get items() {\n    return this._def.items;\n  }\n  rest(rest) {\n    return new ZodTuple({\n      ...this._def,\n      rest\n    });\n  }\n}\nZodTuple.create = (schemas, params) => {\n  if (!Array.isArray(schemas)) {\n    throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n  }\n  return new ZodTuple({\n    items: schemas,\n    typeName: ZodFirstPartyTypeKind.ZodTuple,\n    rest: null,\n    ...processCreateParams(params)\n  });\n};\nclass ZodRecord extends ZodType {\n  get keySchema() {\n    return this._def.keyType;\n  }\n  get valueSchema() {\n    return this._def.valueType;\n  }\n  _parse(input) {\n    const {\n      status,\n      ctx\n    } = this._processInputParams(input);\n    if (ctx.parsedType !== ZodParsedType.object) {\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.object,\n        received: ctx.parsedType\n      });\n      return INVALID;\n    }\n    const pairs = [];\n    const keyType = this._def.keyType;\n    const valueType = this._def.valueType;\n    for (const key in ctx.data) {\n      pairs.push({\n        key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n        value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n        alwaysSet: key in ctx.data\n      });\n    }\n    if (ctx.common.async) {\n      return ParseStatus.mergeObjectAsync(status, pairs);\n    } else {\n      return ParseStatus.mergeObjectSync(status, pairs);\n    }\n  }\n  get element() {\n    return this._def.valueType;\n  }\n  static create(first, second, third) {\n    if (second instanceof ZodType) {\n      return new ZodRecord({\n        keyType: first,\n        valueType: second,\n        typeName: ZodFirstPartyTypeKind.ZodRecord,\n        ...processCreateParams(third)\n      });\n    }\n    return new ZodRecord({\n      keyType: ZodString.create(),\n      valueType: first,\n      typeName: ZodFirstPartyTypeKind.ZodRecord,\n      ...processCreateParams(second)\n    });\n  }\n}\nclass ZodMap extends ZodType {\n  get keySchema() {\n    return this._def.keyType;\n  }\n  get valueSchema() {\n    return this._def.valueType;\n  }\n  _parse(input) {\n    const {\n      status,\n      ctx\n    } = this._processInputParams(input);\n    if (ctx.parsedType !== ZodParsedType.map) {\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.map,\n        received: ctx.parsedType\n      });\n      return INVALID;\n    }\n    const keyType = this._def.keyType;\n    const valueType = this._def.valueType;\n    const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n      return {\n        key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n        value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"]))\n      };\n    });\n    if (ctx.common.async) {\n      const finalMap = new Map();\n      return Promise.resolve().then(async () => {\n        for (const pair of pairs) {\n          const key = await pair.key;\n          const value = await pair.value;\n          if (key.status === \"aborted\" || value.status === \"aborted\") {\n            return INVALID;\n          }\n          if (key.status === \"dirty\" || value.status === \"dirty\") {\n            status.dirty();\n          }\n          finalMap.set(key.value, value.value);\n        }\n        return {\n          status: status.value,\n          value: finalMap\n        };\n      });\n    } else {\n      const finalMap = new Map();\n      for (const pair of pairs) {\n        const key = pair.key;\n        const value = pair.value;\n        if (key.status === \"aborted\" || value.status === \"aborted\") {\n          return INVALID;\n        }\n        if (key.status === \"dirty\" || value.status === \"dirty\") {\n          status.dirty();\n        }\n        finalMap.set(key.value, value.value);\n      }\n      return {\n        status: status.value,\n        value: finalMap\n      };\n    }\n  }\n}\nZodMap.create = (keyType, valueType, params) => {\n  return new ZodMap({\n    valueType,\n    keyType,\n    typeName: ZodFirstPartyTypeKind.ZodMap,\n    ...processCreateParams(params)\n  });\n};\nclass ZodSet extends ZodType {\n  _parse(input) {\n    const {\n      status,\n      ctx\n    } = this._processInputParams(input);\n    if (ctx.parsedType !== ZodParsedType.set) {\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.set,\n        received: ctx.parsedType\n      });\n      return INVALID;\n    }\n    const def = this._def;\n    if (def.minSize !== null) {\n      if (ctx.data.size < def.minSize.value) {\n        addIssueToContext(ctx, {\n          code: ZodIssueCode.too_small,\n          minimum: def.minSize.value,\n          type: \"set\",\n          inclusive: true,\n          exact: false,\n          message: def.minSize.message\n        });\n        status.dirty();\n      }\n    }\n    if (def.maxSize !== null) {\n      if (ctx.data.size > def.maxSize.value) {\n        addIssueToContext(ctx, {\n          code: ZodIssueCode.too_big,\n          maximum: def.maxSize.value,\n          type: \"set\",\n          inclusive: true,\n          exact: false,\n          message: def.maxSize.message\n        });\n        status.dirty();\n      }\n    }\n    const valueType = this._def.valueType;\n    function finalizeSet(elements) {\n      const parsedSet = new Set();\n      for (const element of elements) {\n        if (element.status === \"aborted\") return INVALID;\n        if (element.status === \"dirty\") status.dirty();\n        parsedSet.add(element.value);\n      }\n      return {\n        status: status.value,\n        value: parsedSet\n      };\n    }\n    const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n    if (ctx.common.async) {\n      return Promise.all(elements).then(elements => finalizeSet(elements));\n    } else {\n      return finalizeSet(elements);\n    }\n  }\n  min(minSize, message) {\n    return new ZodSet({\n      ...this._def,\n      minSize: {\n        value: minSize,\n        message: errorUtil.toString(message)\n      }\n    });\n  }\n  max(maxSize, message) {\n    return new ZodSet({\n      ...this._def,\n      maxSize: {\n        value: maxSize,\n        message: errorUtil.toString(message)\n      }\n    });\n  }\n  size(size, message) {\n    return this.min(size, message).max(size, message);\n  }\n  nonempty(message) {\n    return this.min(1, message);\n  }\n}\nZodSet.create = (valueType, params) => {\n  return new ZodSet({\n    valueType,\n    minSize: null,\n    maxSize: null,\n    typeName: ZodFirstPartyTypeKind.ZodSet,\n    ...processCreateParams(params)\n  });\n};\nclass ZodFunction extends ZodType {\n  constructor() {\n    super(...arguments);\n    this.validate = this.implement;\n  }\n  _parse(input) {\n    const {\n      ctx\n    } = this._processInputParams(input);\n    if (ctx.parsedType !== ZodParsedType.function) {\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.function,\n        received: ctx.parsedType\n      });\n      return INVALID;\n    }\n    function makeArgsIssue(args, error) {\n      return makeIssue({\n        data: args,\n        path: ctx.path,\n        errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), errorMap].filter(x => !!x),\n        issueData: {\n          code: ZodIssueCode.invalid_arguments,\n          argumentsError: error\n        }\n      });\n    }\n    function makeReturnsIssue(returns, error) {\n      return makeIssue({\n        data: returns,\n        path: ctx.path,\n        errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), errorMap].filter(x => !!x),\n        issueData: {\n          code: ZodIssueCode.invalid_return_type,\n          returnTypeError: error\n        }\n      });\n    }\n    const params = {\n      errorMap: ctx.common.contextualErrorMap\n    };\n    const fn = ctx.data;\n    if (this._def.returns instanceof ZodPromise) {\n      // Would love a way to avoid disabling this rule, but we need\n      // an alias (using an arrow function was what caused 2651).\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const me = this;\n      return OK(async function (...args) {\n        const error = new ZodError([]);\n        const parsedArgs = await me._def.args.parseAsync(args, params).catch(e => {\n          error.addIssue(makeArgsIssue(args, e));\n          throw error;\n        });\n        const result = await Reflect.apply(fn, this, parsedArgs);\n        const parsedReturns = await me._def.returns._def.type.parseAsync(result, params).catch(e => {\n          error.addIssue(makeReturnsIssue(result, e));\n          throw error;\n        });\n        return parsedReturns;\n      });\n    } else {\n      // Would love a way to avoid disabling this rule, but we need\n      // an alias (using an arrow function was what caused 2651).\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const me = this;\n      return OK(function (...args) {\n        const parsedArgs = me._def.args.safeParse(args, params);\n        if (!parsedArgs.success) {\n          throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n        }\n        const result = Reflect.apply(fn, this, parsedArgs.data);\n        const parsedReturns = me._def.returns.safeParse(result, params);\n        if (!parsedReturns.success) {\n          throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n        }\n        return parsedReturns.data;\n      });\n    }\n  }\n  parameters() {\n    return this._def.args;\n  }\n  returnType() {\n    return this._def.returns;\n  }\n  args(...items) {\n    return new ZodFunction({\n      ...this._def,\n      args: ZodTuple.create(items).rest(ZodUnknown.create())\n    });\n  }\n  returns(returnType) {\n    return new ZodFunction({\n      ...this._def,\n      returns: returnType\n    });\n  }\n  implement(func) {\n    const validatedFunc = this.parse(func);\n    return validatedFunc;\n  }\n  strictImplement(func) {\n    const validatedFunc = this.parse(func);\n    return validatedFunc;\n  }\n  static create(args, returns, params) {\n    return new ZodFunction({\n      args: args ? args : ZodTuple.create([]).rest(ZodUnknown.create()),\n      returns: returns || ZodUnknown.create(),\n      typeName: ZodFirstPartyTypeKind.ZodFunction,\n      ...processCreateParams(params)\n    });\n  }\n}\nclass ZodLazy extends ZodType {\n  get schema() {\n    return this._def.getter();\n  }\n  _parse(input) {\n    const {\n      ctx\n    } = this._processInputParams(input);\n    const lazySchema = this._def.getter();\n    return lazySchema._parse({\n      data: ctx.data,\n      path: ctx.path,\n      parent: ctx\n    });\n  }\n}\nZodLazy.create = (getter, params) => {\n  return new ZodLazy({\n    getter: getter,\n    typeName: ZodFirstPartyTypeKind.ZodLazy,\n    ...processCreateParams(params)\n  });\n};\nclass ZodLiteral extends ZodType {\n  _parse(input) {\n    if (input.data !== this._def.value) {\n      const ctx = this._getOrReturnCtx(input);\n      addIssueToContext(ctx, {\n        received: ctx.data,\n        code: ZodIssueCode.invalid_literal,\n        expected: this._def.value\n      });\n      return INVALID;\n    }\n    return {\n      status: \"valid\",\n      value: input.data\n    };\n  }\n  get value() {\n    return this._def.value;\n  }\n}\nZodLiteral.create = (value, params) => {\n  return new ZodLiteral({\n    value: value,\n    typeName: ZodFirstPartyTypeKind.ZodLiteral,\n    ...processCreateParams(params)\n  });\n};\nfunction createZodEnum(values, params) {\n  return new ZodEnum({\n    values,\n    typeName: ZodFirstPartyTypeKind.ZodEnum,\n    ...processCreateParams(params)\n  });\n}\nclass ZodEnum extends ZodType {\n  constructor() {\n    super(...arguments);\n    _ZodEnum_cache.set(this, void 0);\n  }\n  _parse(input) {\n    if (typeof input.data !== \"string\") {\n      const ctx = this._getOrReturnCtx(input);\n      const expectedValues = this._def.values;\n      addIssueToContext(ctx, {\n        expected: util.joinValues(expectedValues),\n        received: ctx.parsedType,\n        code: ZodIssueCode.invalid_type\n      });\n      return INVALID;\n    }\n    if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\")) {\n      __classPrivateFieldSet(this, _ZodEnum_cache, new Set(this._def.values), \"f\");\n    }\n    if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\").has(input.data)) {\n      const ctx = this._getOrReturnCtx(input);\n      const expectedValues = this._def.values;\n      addIssueToContext(ctx, {\n        received: ctx.data,\n        code: ZodIssueCode.invalid_enum_value,\n        options: expectedValues\n      });\n      return INVALID;\n    }\n    return OK(input.data);\n  }\n  get options() {\n    return this._def.values;\n  }\n  get enum() {\n    const enumValues = {};\n    for (const val of this._def.values) {\n      enumValues[val] = val;\n    }\n    return enumValues;\n  }\n  get Values() {\n    const enumValues = {};\n    for (const val of this._def.values) {\n      enumValues[val] = val;\n    }\n    return enumValues;\n  }\n  get Enum() {\n    const enumValues = {};\n    for (const val of this._def.values) {\n      enumValues[val] = val;\n    }\n    return enumValues;\n  }\n  extract(values, newDef = this._def) {\n    return ZodEnum.create(values, {\n      ...this._def,\n      ...newDef\n    });\n  }\n  exclude(values, newDef = this._def) {\n    return ZodEnum.create(this.options.filter(opt => !values.includes(opt)), {\n      ...this._def,\n      ...newDef\n    });\n  }\n}\n_ZodEnum_cache = new WeakMap();\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n  constructor() {\n    super(...arguments);\n    _ZodNativeEnum_cache.set(this, void 0);\n  }\n  _parse(input) {\n    const nativeEnumValues = util.getValidEnumValues(this._def.values);\n    const ctx = this._getOrReturnCtx(input);\n    if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {\n      const expectedValues = util.objectValues(nativeEnumValues);\n      addIssueToContext(ctx, {\n        expected: util.joinValues(expectedValues),\n        received: ctx.parsedType,\n        code: ZodIssueCode.invalid_type\n      });\n      return INVALID;\n    }\n    if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\")) {\n      __classPrivateFieldSet(this, _ZodNativeEnum_cache, new Set(util.getValidEnumValues(this._def.values)), \"f\");\n    }\n    if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\").has(input.data)) {\n      const expectedValues = util.objectValues(nativeEnumValues);\n      addIssueToContext(ctx, {\n        received: ctx.data,\n        code: ZodIssueCode.invalid_enum_value,\n        options: expectedValues\n      });\n      return INVALID;\n    }\n    return OK(input.data);\n  }\n  get enum() {\n    return this._def.values;\n  }\n}\n_ZodNativeEnum_cache = new WeakMap();\nZodNativeEnum.create = (values, params) => {\n  return new ZodNativeEnum({\n    values: values,\n    typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n    ...processCreateParams(params)\n  });\n};\nclass ZodPromise extends ZodType {\n  unwrap() {\n    return this._def.type;\n  }\n  _parse(input) {\n    const {\n      ctx\n    } = this._processInputParams(input);\n    if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.promise,\n        received: ctx.parsedType\n      });\n      return INVALID;\n    }\n    const promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);\n    return OK(promisified.then(data => {\n      return this._def.type.parseAsync(data, {\n        path: ctx.path,\n        errorMap: ctx.common.contextualErrorMap\n      });\n    }));\n  }\n}\nZodPromise.create = (schema, params) => {\n  return new ZodPromise({\n    type: schema,\n    typeName: ZodFirstPartyTypeKind.ZodPromise,\n    ...processCreateParams(params)\n  });\n};\nclass ZodEffects extends ZodType {\n  innerType() {\n    return this._def.schema;\n  }\n  sourceType() {\n    return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects ? this._def.schema.sourceType() : this._def.schema;\n  }\n  _parse(input) {\n    const {\n      status,\n      ctx\n    } = this._processInputParams(input);\n    const effect = this._def.effect || null;\n    const checkCtx = {\n      addIssue: arg => {\n        addIssueToContext(ctx, arg);\n        if (arg.fatal) {\n          status.abort();\n        } else {\n          status.dirty();\n        }\n      },\n      get path() {\n        return ctx.path;\n      }\n    };\n    checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n    if (effect.type === \"preprocess\") {\n      const processed = effect.transform(ctx.data, checkCtx);\n      if (ctx.common.async) {\n        return Promise.resolve(processed).then(async processed => {\n          if (status.value === \"aborted\") return INVALID;\n          const result = await this._def.schema._parseAsync({\n            data: processed,\n            path: ctx.path,\n            parent: ctx\n          });\n          if (result.status === \"aborted\") return INVALID;\n          if (result.status === \"dirty\") return DIRTY(result.value);\n          if (status.value === \"dirty\") return DIRTY(result.value);\n          return result;\n        });\n      } else {\n        if (status.value === \"aborted\") return INVALID;\n        const result = this._def.schema._parseSync({\n          data: processed,\n          path: ctx.path,\n          parent: ctx\n        });\n        if (result.status === \"aborted\") return INVALID;\n        if (result.status === \"dirty\") return DIRTY(result.value);\n        if (status.value === \"dirty\") return DIRTY(result.value);\n        return result;\n      }\n    }\n    if (effect.type === \"refinement\") {\n      const executeRefinement = acc => {\n        const result = effect.refinement(acc, checkCtx);\n        if (ctx.common.async) {\n          return Promise.resolve(result);\n        }\n        if (result instanceof Promise) {\n          throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n        }\n        return acc;\n      };\n      if (ctx.common.async === false) {\n        const inner = this._def.schema._parseSync({\n          data: ctx.data,\n          path: ctx.path,\n          parent: ctx\n        });\n        if (inner.status === \"aborted\") return INVALID;\n        if (inner.status === \"dirty\") status.dirty();\n        // return value is ignored\n        executeRefinement(inner.value);\n        return {\n          status: status.value,\n          value: inner.value\n        };\n      } else {\n        return this._def.schema._parseAsync({\n          data: ctx.data,\n          path: ctx.path,\n          parent: ctx\n        }).then(inner => {\n          if (inner.status === \"aborted\") return INVALID;\n          if (inner.status === \"dirty\") status.dirty();\n          return executeRefinement(inner.value).then(() => {\n            return {\n              status: status.value,\n              value: inner.value\n            };\n          });\n        });\n      }\n    }\n    if (effect.type === \"transform\") {\n      if (ctx.common.async === false) {\n        const base = this._def.schema._parseSync({\n          data: ctx.data,\n          path: ctx.path,\n          parent: ctx\n        });\n        if (!isValid(base)) return base;\n        const result = effect.transform(base.value, checkCtx);\n        if (result instanceof Promise) {\n          throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n        }\n        return {\n          status: status.value,\n          value: result\n        };\n      } else {\n        return this._def.schema._parseAsync({\n          data: ctx.data,\n          path: ctx.path,\n          parent: ctx\n        }).then(base => {\n          if (!isValid(base)) return base;\n          return Promise.resolve(effect.transform(base.value, checkCtx)).then(result => ({\n            status: status.value,\n            value: result\n          }));\n        });\n      }\n    }\n    util.assertNever(effect);\n  }\n}\nZodEffects.create = (schema, effect, params) => {\n  return new ZodEffects({\n    schema,\n    typeName: ZodFirstPartyTypeKind.ZodEffects,\n    effect,\n    ...processCreateParams(params)\n  });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n  return new ZodEffects({\n    schema,\n    effect: {\n      type: \"preprocess\",\n      transform: preprocess\n    },\n    typeName: ZodFirstPartyTypeKind.ZodEffects,\n    ...processCreateParams(params)\n  });\n};\nclass ZodOptional extends ZodType {\n  _parse(input) {\n    const parsedType = this._getType(input);\n    if (parsedType === ZodParsedType.undefined) {\n      return OK(undefined);\n    }\n    return this._def.innerType._parse(input);\n  }\n  unwrap() {\n    return this._def.innerType;\n  }\n}\nZodOptional.create = (type, params) => {\n  return new ZodOptional({\n    innerType: type,\n    typeName: ZodFirstPartyTypeKind.ZodOptional,\n    ...processCreateParams(params)\n  });\n};\nclass ZodNullable extends ZodType {\n  _parse(input) {\n    const parsedType = this._getType(input);\n    if (parsedType === ZodParsedType.null) {\n      return OK(null);\n    }\n    return this._def.innerType._parse(input);\n  }\n  unwrap() {\n    return this._def.innerType;\n  }\n}\nZodNullable.create = (type, params) => {\n  return new ZodNullable({\n    innerType: type,\n    typeName: ZodFirstPartyTypeKind.ZodNullable,\n    ...processCreateParams(params)\n  });\n};\nclass ZodDefault extends ZodType {\n  _parse(input) {\n    const {\n      ctx\n    } = this._processInputParams(input);\n    let data = ctx.data;\n    if (ctx.parsedType === ZodParsedType.undefined) {\n      data = this._def.defaultValue();\n    }\n    return this._def.innerType._parse({\n      data,\n      path: ctx.path,\n      parent: ctx\n    });\n  }\n  removeDefault() {\n    return this._def.innerType;\n  }\n}\nZodDefault.create = (type, params) => {\n  return new ZodDefault({\n    innerType: type,\n    typeName: ZodFirstPartyTypeKind.ZodDefault,\n    defaultValue: typeof params.default === \"function\" ? params.default : () => params.default,\n    ...processCreateParams(params)\n  });\n};\nclass ZodCatch extends ZodType {\n  _parse(input) {\n    const {\n      ctx\n    } = this._processInputParams(input);\n    // newCtx is used to not collect issues from inner types in ctx\n    const newCtx = {\n      ...ctx,\n      common: {\n        ...ctx.common,\n        issues: []\n      }\n    };\n    const result = this._def.innerType._parse({\n      data: newCtx.data,\n      path: newCtx.path,\n      parent: {\n        ...newCtx\n      }\n    });\n    if (isAsync(result)) {\n      return result.then(result => {\n        return {\n          status: \"valid\",\n          value: result.status === \"valid\" ? result.value : this._def.catchValue({\n            get error() {\n              return new ZodError(newCtx.common.issues);\n            },\n            input: newCtx.data\n          })\n        };\n      });\n    } else {\n      return {\n        status: \"valid\",\n        value: result.status === \"valid\" ? result.value : this._def.catchValue({\n          get error() {\n            return new ZodError(newCtx.common.issues);\n          },\n          input: newCtx.data\n        })\n      };\n    }\n  }\n  removeCatch() {\n    return this._def.innerType;\n  }\n}\nZodCatch.create = (type, params) => {\n  return new ZodCatch({\n    innerType: type,\n    typeName: ZodFirstPartyTypeKind.ZodCatch,\n    catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n    ...processCreateParams(params)\n  });\n};\nclass ZodNaN extends ZodType {\n  _parse(input) {\n    const parsedType = this._getType(input);\n    if (parsedType !== ZodParsedType.nan) {\n      const ctx = this._getOrReturnCtx(input);\n      addIssueToContext(ctx, {\n        code: ZodIssueCode.invalid_type,\n        expected: ZodParsedType.nan,\n        received: ctx.parsedType\n      });\n      return INVALID;\n    }\n    return {\n      status: \"valid\",\n      value: input.data\n    };\n  }\n}\nZodNaN.create = params => {\n  return new ZodNaN({\n    typeName: ZodFirstPartyTypeKind.ZodNaN,\n    ...processCreateParams(params)\n  });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n  _parse(input) {\n    const {\n      ctx\n    } = this._processInputParams(input);\n    const data = ctx.data;\n    return this._def.type._parse({\n      data,\n      path: ctx.path,\n      parent: ctx\n    });\n  }\n  unwrap() {\n    return this._def.type;\n  }\n}\nclass ZodPipeline extends ZodType {\n  _parse(input) {\n    const {\n      status,\n      ctx\n    } = this._processInputParams(input);\n    if (ctx.common.async) {\n      const handleAsync = async () => {\n        const inResult = await this._def.in._parseAsync({\n          data: ctx.data,\n          path: ctx.path,\n          parent: ctx\n        });\n        if (inResult.status === \"aborted\") return INVALID;\n        if (inResult.status === \"dirty\") {\n          status.dirty();\n          return DIRTY(inResult.value);\n        } else {\n          return this._def.out._parseAsync({\n            data: inResult.value,\n            path: ctx.path,\n            parent: ctx\n          });\n        }\n      };\n      return handleAsync();\n    } else {\n      const inResult = this._def.in._parseSync({\n        data: ctx.data,\n        path: ctx.path,\n        parent: ctx\n      });\n      if (inResult.status === \"aborted\") return INVALID;\n      if (inResult.status === \"dirty\") {\n        status.dirty();\n        return {\n          status: \"dirty\",\n          value: inResult.value\n        };\n      } else {\n        return this._def.out._parseSync({\n          data: inResult.value,\n          path: ctx.path,\n          parent: ctx\n        });\n      }\n    }\n  }\n  static create(a, b) {\n    return new ZodPipeline({\n      in: a,\n      out: b,\n      typeName: ZodFirstPartyTypeKind.ZodPipeline\n    });\n  }\n}\nclass ZodReadonly extends ZodType {\n  _parse(input) {\n    const result = this._def.innerType._parse(input);\n    const freeze = data => {\n      if (isValid(data)) {\n        data.value = Object.freeze(data.value);\n      }\n      return data;\n    };\n    return isAsync(result) ? result.then(data => freeze(data)) : freeze(result);\n  }\n  unwrap() {\n    return this._def.innerType;\n  }\n}\nZodReadonly.create = (type, params) => {\n  return new ZodReadonly({\n    innerType: type,\n    typeName: ZodFirstPartyTypeKind.ZodReadonly,\n    ...processCreateParams(params)\n  });\n};\nfunction custom(check, params = {},\n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n  if (check) return ZodAny.create().superRefine((data, ctx) => {\n    var _a, _b;\n    if (!check(data)) {\n      const p = typeof params === \"function\" ? params(data) : typeof params === \"string\" ? {\n        message: params\n      } : params;\n      const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n      const p2 = typeof p === \"string\" ? {\n        message: p\n      } : p;\n      ctx.addIssue({\n        code: \"custom\",\n        ...p2,\n        fatal: _fatal\n      });\n    }\n  });\n  return ZodAny.create();\n}\nconst late = {\n  object: ZodObject.lazycreate\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n  ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n  ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n  ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n  ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n  ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n  ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n  ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n  ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n  ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n  ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n  ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n  ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n  ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n  ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n  ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n  ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n  ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n  ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n  ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n  ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n  ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n  ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n  ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n  ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n  ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n  ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n  ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n  ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n  ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n  ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n  ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n  ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n  ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n  ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n  ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n  ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n  message: `Input not instance of ${cls.name}`\n}) => custom(data => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n  string: arg => ZodString.create({\n    ...arg,\n    coerce: true\n  }),\n  number: arg => ZodNumber.create({\n    ...arg,\n    coerce: true\n  }),\n  boolean: arg => ZodBoolean.create({\n    ...arg,\n    coerce: true\n  }),\n  bigint: arg => ZodBigInt.create({\n    ...arg,\n    coerce: true\n  }),\n  date: arg => ZodDate.create({\n    ...arg,\n    coerce: true\n  })\n};\nconst NEVER = INVALID;\nvar z = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  defaultErrorMap: errorMap,\n  setErrorMap: setErrorMap,\n  getErrorMap: getErrorMap,\n  makeIssue: makeIssue,\n  EMPTY_PATH: EMPTY_PATH,\n  addIssueToContext: addIssueToContext,\n  ParseStatus: ParseStatus,\n  INVALID: INVALID,\n  DIRTY: DIRTY,\n  OK: OK,\n  isAborted: isAborted,\n  isDirty: isDirty,\n  isValid: isValid,\n  isAsync: isAsync,\n  get util() {\n    return util;\n  },\n  get objectUtil() {\n    return objectUtil;\n  },\n  ZodParsedType: ZodParsedType,\n  getParsedType: getParsedType,\n  ZodType: ZodType,\n  datetimeRegex: datetimeRegex,\n  ZodString: ZodString,\n  ZodNumber: ZodNumber,\n  ZodBigInt: ZodBigInt,\n  ZodBoolean: ZodBoolean,\n  ZodDate: ZodDate,\n  ZodSymbol: ZodSymbol,\n  ZodUndefined: ZodUndefined,\n  ZodNull: ZodNull,\n  ZodAny: ZodAny,\n  ZodUnknown: ZodUnknown,\n  ZodNever: ZodNever,\n  ZodVoid: ZodVoid,\n  ZodArray: ZodArray,\n  ZodObject: ZodObject,\n  ZodUnion: ZodUnion,\n  ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n  ZodIntersection: ZodIntersection,\n  ZodTuple: ZodTuple,\n  ZodRecord: ZodRecord,\n  ZodMap: ZodMap,\n  ZodSet: ZodSet,\n  ZodFunction: ZodFunction,\n  ZodLazy: ZodLazy,\n  ZodLiteral: ZodLiteral,\n  ZodEnum: ZodEnum,\n  ZodNativeEnum: ZodNativeEnum,\n  ZodPromise: ZodPromise,\n  ZodEffects: ZodEffects,\n  ZodTransformer: ZodEffects,\n  ZodOptional: ZodOptional,\n  ZodNullable: ZodNullable,\n  ZodDefault: ZodDefault,\n  ZodCatch: ZodCatch,\n  ZodNaN: ZodNaN,\n  BRAND: BRAND,\n  ZodBranded: ZodBranded,\n  ZodPipeline: ZodPipeline,\n  ZodReadonly: ZodReadonly,\n  custom: custom,\n  Schema: ZodType,\n  ZodSchema: ZodType,\n  late: late,\n  get ZodFirstPartyTypeKind() {\n    return ZodFirstPartyTypeKind;\n  },\n  coerce: coerce,\n  any: anyType,\n  array: arrayType,\n  bigint: bigIntType,\n  boolean: booleanType,\n  date: dateType,\n  discriminatedUnion: discriminatedUnionType,\n  effect: effectsType,\n  'enum': enumType,\n  'function': functionType,\n  'instanceof': instanceOfType,\n  intersection: intersectionType,\n  lazy: lazyType,\n  literal: literalType,\n  map: mapType,\n  nan: nanType,\n  nativeEnum: nativeEnumType,\n  never: neverType,\n  'null': nullType,\n  nullable: nullableType,\n  number: numberType,\n  object: objectType,\n  oboolean: oboolean,\n  onumber: onumber,\n  optional: optionalType,\n  ostring: ostring,\n  pipeline: pipelineType,\n  preprocess: preprocessType,\n  promise: promiseType,\n  record: recordType,\n  set: setType,\n  strictObject: strictObjectType,\n  string: stringType,\n  symbol: symbolType,\n  transformer: effectsType,\n  tuple: tupleType,\n  'undefined': undefinedType,\n  union: unionType,\n  unknown: unknownType,\n  'void': voidType,\n  NEVER: NEVER,\n  ZodIssueCode: ZodIssueCode,\n  quotelessJson: quotelessJson,\n  ZodError: ZodError\n});\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodReadonly, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, datetimeRegex, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };", "import { z } from \"zod\";\nexport var Edge;\n(function (Edge) {\n  Edge[Edge[\"EXTEND\"] = 1] = \"EXTEND\";\n  Edge[Edge[\"WRAP\"] = 2] = \"WRAP\";\n  Edge[Edge[\"CROP\"] = 3] = \"CROP\";\n})(Edge || (Edge = {}));\nexport const JimpClassSchema = z.object({\n  bitmap: z.object({\n    data: z.union([z.instanceof(Buffer), z.instanceof(Uint8Array)]),\n    width: z.number(),\n    height: z.number()\n  })\n});\n", "import { JimpClassSchema } from \"@jimp/types\";\nimport { limit255, scan } from \"@jimp/utils\";\nimport { z } from \"zod\";\nconst BlitOptionsSchemaComplex = z.object({\n  src: JimpClassSchema,\n  /** the x position to blit the image */\n  x: z.number().optional(),\n  /** the y position to blit the image */\n  y: z.number().optional(),\n  /** the x position from which to crop the source image */\n  srcX: z.number().optional(),\n  /** the y position from which to crop the source image */\n  srcY: z.number().optional(),\n  /** the width to which to crop the source image */\n  srcW: z.number().optional(),\n  /** the height to which to crop the source image */\n  srcH: z.number().optional()\n});\nconst BlitOptionsSchema = z.union([JimpClassSchema, BlitOptionsSchemaComplex]);\nexport const methods = {\n  /**\n   * Short for \"bit-block transfer\".\n   * It involves the transfer of a block of pixel data from one area of a computer's memory to another area, typically for the purpose of rendering images on the screen or manipulating them in various ways.\n   * It's a fundamental operation in computer graphics utilized in various applications, from operating systems to video games.\n   *\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   * const parrot = await Jimp.read(\"test/party-parrot.png\");\n   *\n   * image.blit({ src: parrot, x: 10, y: 10 });\n   * ```\n   */\n  blit(image, options) {\n    const parsed = BlitOptionsSchema.parse(options);\n    let {\n      // eslint-disable-next-line prefer-const\n      src,\n      x = 0,\n      y = 0,\n      srcX = 0,\n      srcY = 0,\n      srcW = src.bitmap.width,\n      srcH = src.bitmap.height\n    } = \"bitmap\" in parsed ? {\n      src: parsed\n    } : parsed;\n    if (!(\"bitmap\" in src)) {\n      throw new Error(\"The source must be a Jimp image\");\n    }\n    if (typeof x !== \"number\" || typeof y !== \"number\") {\n      throw new Error(\"x and y must be numbers\");\n    }\n    // round input\n    x = Math.round(x);\n    y = Math.round(y);\n    // round input\n    srcX = Math.round(srcX);\n    srcY = Math.round(srcY);\n    srcW = Math.round(srcW);\n    srcH = Math.round(srcH);\n    const maxWidth = image.bitmap.width;\n    const maxHeight = image.bitmap.height;\n    scan(src, srcX, srcY, srcW, srcH, function (sx, sy, idx) {\n      const xOffset = x + sx - srcX;\n      const yOffset = y + sy - srcY;\n      if (xOffset >= 0 && yOffset >= 0 && maxWidth - xOffset > 0 && maxHeight - yOffset > 0) {\n        const dstIdx = image.getPixelIndex(xOffset, yOffset);\n        const srcColor = {\n          r: src.bitmap.data[idx] || 0,\n          g: src.bitmap.data[idx + 1] || 0,\n          b: src.bitmap.data[idx + 2] || 0,\n          a: src.bitmap.data[idx + 3] || 0\n        };\n        const dst = {\n          r: image.bitmap.data[dstIdx] || 0,\n          g: image.bitmap.data[dstIdx + 1] || 0,\n          b: image.bitmap.data[dstIdx + 2] || 0,\n          a: image.bitmap.data[dstIdx + 3] || 0\n        };\n        image.bitmap.data[dstIdx] = (srcColor.a * (srcColor.r - dst.r) - dst.r + 255 >> 8) + dst.r;\n        image.bitmap.data[dstIdx + 1] = (srcColor.a * (srcColor.g - dst.g) - dst.g + 255 >> 8) + dst.g;\n        image.bitmap.data[dstIdx + 2] = (srcColor.a * (srcColor.b - dst.b) - dst.b + 255 >> 8) + dst.b;\n        image.bitmap.data[dstIdx + 3] = limit255(dst.a + srcColor.a);\n      }\n    });\n    return image;\n  }\n};\n", "export const mulTable = [1, 57, 41, 21, 203, 34, 97, 73, 227, 91, 149, 62, 105, 45, 39, 137, 241, 107, 3, 173, 39, 71, 65, 238, 219, 101, 187, 87, 81, 151, 141, 133, 249, 117, 221, 209, 197, 187, 177, 169, 5, 153, 73, 139, 133, 127, 243, 233, 223, 107, 103, 99, 191, 23, 177, 171, 165, 159, 77, 149, 9, 139, 135, 131, 253, 245, 119, 231, 224, 109, 211, 103, 25, 195, 189, 23, 45, 175, 171, 83, 81, 79, 155, 151, 147, 9, 141, 137, 67, 131, 129, 251, 123, 30, 235, 115, 113, 221, 217, 53, 13, 51, 50, 49, 193, 189, 185, 91, 179, 175, 43, 169, 83, 163, 5, 79, 155, 19, 75, 147, 145, 143, 35, 69, 17, 67, 33, 65, 255, 251, 247, 243, 239, 59, 29, 229, 113, 111, 219, 27, 213, 105, 207, 51, 201, 199, 49, 193, 191, 47, 93, 183, 181, 179, 11, 87, 43, 85, 167, 165, 163, 161, 159, 157, 155, 77, 19, 75, 37, 73, 145, 143, 141, 35, 138, 137, 135, 67, 33, 131, 129, 255, 63, 250, 247, 61, 121, 239, 237, 117, 29, 229, 227, 225, 111, 55, 109, 216, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 48, 190, 47, 93, 185, 183, 181, 179, 178, 176, 175, 173, 171, 85, 21, 167, 165, 41, 163, 161, 5, 79, 157, 78, 154, 153, 19, 75, 149, 74, 147, 73, 144, 143, 71, 141, 140, 139, 137, 17, 135, 134, 133, 66, 131, 65, 129, 1];\nexport const shgTable = [0, 9, 10, 10, 14, 12, 14, 14, 16, 15, 16, 15, 16, 15, 15, 17, 18, 17, 12, 18, 16, 17, 17, 19, 19, 18, 19, 18, 18, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20, 20, 15, 20, 19, 20, 20, 20, 21, 21, 21, 20, 20, 20, 21, 18, 21, 21, 21, 21, 20, 21, 17, 21, 21, 21, 22, 22, 21, 22, 22, 21, 22, 21, 19, 22, 22, 19, 20, 22, 22, 21, 21, 21, 22, 22, 22, 18, 22, 22, 21, 22, 22, 23, 22, 20, 23, 22, 22, 23, 23, 21, 19, 21, 21, 21, 23, 23, 23, 22, 23, 23, 21, 23, 22, 23, 18, 22, 23, 20, 22, 23, 23, 23, 21, 22, 20, 22, 21, 22, 24, 24, 24, 24, 24, 22, 21, 24, 23, 23, 24, 21, 24, 23, 24, 22, 24, 24, 22, 24, 24, 22, 23, 24, 24, 24, 20, 23, 22, 23, 24, 24, 24, 24, 24, 24, 24, 23, 21, 23, 22, 23, 24, 24, 24, 22, 24, 24, 24, 23, 22, 24, 24, 25, 23, 25, 25, 23, 24, 25, 25, 24, 22, 25, 25, 25, 24, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 23, 25, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 24, 22, 25, 25, 23, 25, 25, 20, 24, 25, 24, 25, 25, 22, 24, 25, 24, 25, 24, 25, 25, 24, 25, 25, 25, 25, 22, 25, 25, 25, 24, 25, 24, 25, 18];\n", "import { mulTable, shgTable } from \"./blur-tables.js\";\nimport { limit255 } from \"@jimp/utils\";\n/*\n    Superfast Blur (0.5)\n    http://www.quasimondo.com/BoxBlurForCanvas/FastBlur.js\n\n    Copyright (c) 2011 Mario Klingemann\n\n    Permission is hereby granted, free of charge, to any person\n    obtaining a copy of this software and associated documentation\n    files (the \"Software\"), to deal in the Software without\n    restriction, including without limitation the rights to use,\n    copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the\n    Software is furnished to do so, subject to the following\n    conditions:\n\n    The above copyright notice and this permission notice shall be\n    included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n    OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n    OTHER DEALINGS IN THE SOFTWARE.\n*/\nexport const methods = {\n  /**\n   * A fast blur algorithm that produces similar effect to a Gaussian blur - but MUCH quicker\n   * @param r the pixel radius of the blur\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.blur(5);\n   * ```\n   */\n  blur(image, r) {\n    if (typeof r !== \"number\") {\n      throw new Error(\"r must be a number\");\n    }\n    if (r < 1) {\n      throw new Error(\"r must be greater than 0\");\n    }\n    let rsum;\n    let gsum;\n    let bsum;\n    let asum;\n    let x;\n    let y;\n    let i;\n    let p;\n    let p1;\n    let p2;\n    let yp;\n    let yi;\n    let yw;\n    const wm = image.bitmap.width - 1;\n    const hm = image.bitmap.height - 1;\n    // const wh = image.bitmap.width * image.bitmap.height;\n    const rad1 = r + 1;\n    const mulSum = mulTable[r];\n    const shgSum = shgTable[r];\n    const red = [];\n    const green = [];\n    const blue = [];\n    const alpha = [];\n    const vmin = [];\n    const vmax = [];\n    let iterations = 2;\n    while (iterations-- > 0) {\n      yi = 0;\n      yw = 0;\n      for (y = 0; y < image.bitmap.height; y++) {\n        rsum = image.bitmap.data[yw] * rad1;\n        gsum = image.bitmap.data[yw + 1] * rad1;\n        bsum = image.bitmap.data[yw + 2] * rad1;\n        asum = image.bitmap.data[yw + 3] * rad1;\n        for (i = 1; i <= r; i++) {\n          p = yw + ((i > wm ? wm : i) << 2);\n          rsum += image.bitmap.data[p++];\n          gsum += image.bitmap.data[p++];\n          bsum += image.bitmap.data[p++];\n          asum += image.bitmap.data[p];\n        }\n        for (x = 0; x < image.bitmap.width; x++) {\n          red[yi] = rsum;\n          green[yi] = gsum;\n          blue[yi] = bsum;\n          alpha[yi] = asum;\n          if (y === 0) {\n            vmin[x] = ((p = x + rad1) < wm ? p : wm) << 2;\n            vmax[x] = (p = x - r) > 0 ? p << 2 : 0;\n          }\n          p1 = yw + vmin[x];\n          p2 = yw + vmax[x];\n          rsum += image.bitmap.data[p1++] - image.bitmap.data[p2++];\n          gsum += image.bitmap.data[p1++] - image.bitmap.data[p2++];\n          bsum += image.bitmap.data[p1++] - image.bitmap.data[p2++];\n          asum += image.bitmap.data[p1] - image.bitmap.data[p2++];\n          yi++;\n        }\n        yw += image.bitmap.width << 2;\n      }\n      for (x = 0; x < image.bitmap.width; x++) {\n        yp = x;\n        rsum = red[yp] * rad1;\n        gsum = green[yp] * rad1;\n        bsum = blue[yp] * rad1;\n        asum = alpha[yp] * rad1;\n        for (i = 1; i <= r; i++) {\n          yp += i > hm ? 0 : image.bitmap.width;\n          rsum += red[yp];\n          gsum += green[yp];\n          bsum += blue[yp];\n          asum += alpha[yp];\n        }\n        yi = x << 2;\n        for (y = 0; y < image.bitmap.height; y++) {\n          image.bitmap.data[yi] = limit255(rsum * mulSum >>> shgSum);\n          image.bitmap.data[yi + 1] = limit255(gsum * mulSum >>> shgSum);\n          image.bitmap.data[yi + 2] = limit255(bsum * mulSum >>> shgSum);\n          image.bitmap.data[yi + 3] = limit255(asum * mulSum >>> shgSum);\n          if (x === 0) {\n            vmin[y] = ((p = y + rad1) < hm ? p : hm) * image.bitmap.width;\n            vmax[y] = (p = y - r) > 0 ? p * image.bitmap.width : 0;\n          }\n          p1 = x + vmin[y];\n          p2 = x + vmax[y];\n          rsum += red[p1] - red[p2];\n          gsum += green[p1] - green[p2];\n          bsum += blue[p1] - blue[p2];\n          asum += alpha[p1] - alpha[p2];\n          yi += image.bitmap.width << 2;\n        }\n      }\n    }\n    return image;\n  },\n  // http://blog.ivank.net/fastest-gaussian-blur.html\n  /**\n   * Applies a true Gaussian blur to the image (warning: this is VERY slow)\n   * @param r the pixel radius of the blur\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.gaussian(15);\n   * ```\n   */\n  gaussian(image, r) {\n    if (typeof r !== \"number\") {\n      throw new Error(\"r must be a number\");\n    }\n    if (r < 1) {\n      throw new Error(\"r must be greater than 0\");\n    }\n    const rs = Math.ceil(r * 2.57); // significant radius\n    const range = rs * 2 + 1;\n    const rr2 = r * r * 2;\n    const rr2pi = rr2 * Math.PI;\n    const weights = [];\n    for (let y = 0; y < range; y++) {\n      const weightsRow = [];\n      for (let x = 0; x < range; x++) {\n        const dsq = (x - rs) ** 2 + (y - rs) ** 2;\n        weightsRow[x] = Math.exp(-dsq / rr2) / rr2pi;\n      }\n      weights.push(weightsRow);\n    }\n    for (let y = 0; y < image.bitmap.height; y++) {\n      for (let x = 0; x < image.bitmap.width; x++) {\n        let red = 0;\n        let green = 0;\n        let blue = 0;\n        let alpha = 0;\n        let wsum = 0;\n        for (let iy = 0; iy < range; iy++) {\n          for (let ix = 0; ix < range; ix++) {\n            const x1 = Math.min(image.bitmap.width - 1, Math.max(0, ix + x - rs));\n            const y1 = Math.min(image.bitmap.height - 1, Math.max(0, iy + y - rs));\n            const weight = weights[iy][ix];\n            const idx = y1 * image.bitmap.width + x1 << 2;\n            red += image.bitmap.data[idx] * weight;\n            green += image.bitmap.data[idx + 1] * weight;\n            blue += image.bitmap.data[idx + 2] * weight;\n            alpha += image.bitmap.data[idx + 3] * weight;\n            wsum += weight;\n          }\n          const idx = y * image.bitmap.width + x << 2;\n          image.bitmap.data[idx] = Math.round(red / wsum);\n          image.bitmap.data[idx + 1] = Math.round(green / wsum);\n          image.bitmap.data[idx + 2] = Math.round(blue / wsum);\n          image.bitmap.data[idx + 3] = Math.round(alpha / wsum);\n        }\n      }\n    }\n    return image;\n  }\n};\n", "import { z } from \"zod\";\nconst CircleOptionsSchema = z.object({\n  /** the x position to draw the circle */\n  x: z.number().optional(),\n  /** the y position to draw the circle */\n  y: z.number().optional(),\n  /** the radius of the circle */\n  radius: z.number().min(0).optional()\n});\nexport const methods = {\n  /**\n   * Creates a circle out of an image.\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.circle();\n   * // or\n   * image.circle({ radius: 50, x: 25, y: 25 });\n   * ```\n   */\n  circle(image, options = {}) {\n    const parsed = CircleOptionsSchema.parse(options);\n    const radius = parsed.radius || (image.bitmap.width > image.bitmap.height ? image.bitmap.height : image.bitmap.width) / 2;\n    const center = {\n      x: typeof parsed.x === \"number\" ? parsed.x : image.bitmap.width / 2,\n      y: typeof parsed.y === \"number\" ? parsed.y : image.bitmap.height / 2\n    };\n    image.scan((x, y, idx) => {\n      const curR = Math.sqrt(Math.pow(x - center.x, 2) + Math.pow(y - center.y, 2));\n      if (radius - curR <= 0.0) {\n        image.bitmap.data[idx + 3] = 0;\n      } else if (radius - curR < 1.0) {\n        image.bitmap.data[idx + 3] = 255 * (radius - curR);\n      }\n    });\n    return image;\n  }\n};\n", "import tinyColor from \"tinycolor2\";\nimport { clone, limit255, scan } from \"@jimp/utils\";\nimport { Edge } from \"@jimp/types\";\nimport { z } from \"zod\";\nconst ConvolutionMatrixSchema = z.array(z.number()).min(1).array();\nconst ConvolutionComplexOptionsSchema = z.object({\n  /** a matrix to weight the neighbors sum */\n  kernel: ConvolutionMatrixSchema,\n  /**define how to sum pixels from outside the border */\n  edgeHandling: z.nativeEnum(Edge).optional()\n});\nconst ConvolutionOptionsSchema = z.union([ConvolutionMatrixSchema, ConvolutionComplexOptionsSchema]);\nconst ConvoluteComplexOptionsSchema = z.object({\n  /** the convolution kernel */\n  kernel: ConvolutionMatrixSchema,\n  /** the x position of the region to apply convolution to */\n  x: z.number().optional(),\n  /** the y position of the region to apply convolution to */\n  y: z.number().optional(),\n  /** the width of the region to apply convolution to */\n  w: z.number().optional(),\n  /** the height of the region to apply convolution to */\n  h: z.number().optional()\n});\nconst ConvoluteOptionsSchema = z.union([ConvolutionMatrixSchema, ConvoluteComplexOptionsSchema]);\nconst PixelateSize = z.number().min(1).max(Infinity);\nconst PixelateComplexOptionsSchema = z.object({\n  /** the size of the pixels */\n  size: PixelateSize,\n  /** the x position of the region to pixelate */\n  x: z.number().optional(),\n  /** the y position of the region to pixelate */\n  y: z.number().optional(),\n  /** the width of the region to pixelate */\n  w: z.number().optional(),\n  /** the height of the region to pixelate */\n  h: z.number().optional()\n});\nconst PixelateOptionsSchema = z.union([PixelateSize, PixelateComplexOptionsSchema]);\nfunction applyKernel(image, kernel, x, y) {\n  const value = [0, 0, 0, 0];\n  const size = (kernel.length - 1) / 2;\n  for (let kx = 0; kx < kernel.length; kx += 1) {\n    for (let ky = 0; ky < kernel[kx].length; ky += 1) {\n      const idx = image.getPixelIndex(x + kx - size, y + ky - size);\n      value[0] += image.bitmap.data[idx] * kernel[kx][ky];\n      value[1] += image.bitmap.data[idx + 1] * kernel[kx][ky];\n      value[2] += image.bitmap.data[idx + 2] * kernel[kx][ky];\n      value[3] += image.bitmap.data[idx + 3] * kernel[kx][ky];\n    }\n  }\n  return value;\n}\nfunction mix(clr, clr2, p = 50) {\n  return {\n    r: (clr2.r - clr.r) * (p / 100) + clr.r,\n    g: (clr2.g - clr.g) * (p / 100) + clr.g,\n    b: (clr2.b - clr.b) * (p / 100) + clr.b\n  };\n}\nconst HueActionSchema = z.object({\n  apply: z.literal(\"hue\"),\n  params: z.tuple([z.number().min(-360).max(360)])\n});\nconst SpinActionSchema = z.object({\n  apply: z.literal(\"spin\"),\n  params: z.tuple([z.number().min(-360).max(360)])\n});\nconst LightenActionSchema = z.object({\n  apply: z.literal(\"lighten\"),\n  params: z.tuple([z.number().min(0).max(100)]).optional()\n});\nconst RGBColorSchema = z.object({\n  r: z.number().min(0).max(255),\n  g: z.number().min(0).max(255),\n  b: z.number().min(0).max(255)\n});\nconst MixActionSchema = z.object({\n  apply: z.literal(\"mix\"),\n  params: z.union([z.tuple([RGBColorSchema]), z.tuple([RGBColorSchema, z.number().min(0).max(100)])])\n});\nconst TintActionSchema = z.object({\n  apply: z.literal(\"tint\"),\n  params: z.tuple([z.number().min(0).max(100)]).optional()\n});\nconst ShadeActionSchema = z.object({\n  apply: z.literal(\"shade\"),\n  params: z.tuple([z.number().min(0).max(100)]).optional()\n});\nconst XorActionSchema = z.object({\n  apply: z.literal(\"xor\"),\n  params: z.tuple([RGBColorSchema])\n});\nconst RedActionSchema = z.object({\n  apply: z.literal(\"red\"),\n  params: z.tuple([z.number().min(-255).max(255)])\n});\nconst GreenActionSchema = z.object({\n  apply: z.literal(\"green\"),\n  params: z.tuple([z.number().min(-255).max(255)])\n});\nconst BlueActionSchema = z.object({\n  apply: z.literal(\"blue\"),\n  params: z.tuple([z.number().min(-255).max(255)])\n});\nconst BrightenActionSchema = z.object({\n  apply: z.literal(\"brighten\"),\n  params: z.tuple([z.number().min(0).max(100)]).optional()\n});\nconst DarkenActionSchema = z.object({\n  apply: z.literal(\"darken\"),\n  params: z.tuple([z.number().min(0).max(100)]).optional()\n});\nconst DesaturateActionSchema = z.object({\n  apply: z.literal(\"desaturate\"),\n  params: z.tuple([z.number().min(0).max(100)]).optional()\n});\nconst SaturateActionSchema = z.object({\n  apply: z.literal(\"saturate\"),\n  params: z.tuple([z.number().min(0).max(100)]).optional()\n});\nconst GrayscaleActionSchema = z.object({\n  apply: z.literal(\"greyscale\"),\n  params: z.tuple([]).optional()\n});\nconst ColorActionNameSchema = z.union([HueActionSchema, SpinActionSchema, LightenActionSchema, MixActionSchema, TintActionSchema, ShadeActionSchema, XorActionSchema, RedActionSchema, GreenActionSchema, BlueActionSchema, BrightenActionSchema, DarkenActionSchema, DesaturateActionSchema, SaturateActionSchema, GrayscaleActionSchema]);\nexport const ColorActionName = Object.freeze({\n  LIGHTEN: \"lighten\",\n  BRIGHTEN: \"brighten\",\n  DARKEN: \"darken\",\n  DESATURATE: \"desaturate\",\n  SATURATE: \"saturate\",\n  GREYSCALE: \"greyscale\",\n  SPIN: \"spin\",\n  HUE: \"hue\",\n  MIX: \"mix\",\n  TINT: \"tint\",\n  SHADE: \"shade\",\n  XOR: \"xor\",\n  RED: \"red\",\n  GREEN: \"green\",\n  BLUE: \"blue\"\n});\n/**\n * Get an image's histogram\n * @return An object with an array of color occurrence counts for each channel (r,g,b)\n */\nfunction histogram(image) {\n  const histogram = {\n    r: new Array(256).fill(0),\n    g: new Array(256).fill(0),\n    b: new Array(256).fill(0)\n  };\n  image.scan((_, __, index) => {\n    histogram.r[image.bitmap.data[index + 0]]++;\n    histogram.g[image.bitmap.data[index + 1]]++;\n    histogram.b[image.bitmap.data[index + 2]]++;\n  });\n  return histogram;\n}\n/**\n * Normalize values\n * @param  value Pixel channel value.\n * @param  min   Minimum value for channel\n * @param  max   Maximum value for channel\n */\nconst normalizeValue = function (value, min, max) {\n  return (value - min) * 255 / (max - min);\n};\nconst getBounds = function (histogramChannel) {\n  return [histogramChannel.findIndex(value => value > 0), 255 - histogramChannel.slice().reverse().findIndex(value => value > 0)];\n};\nexport const methods = {\n  /**\n   * Normalizes the image.\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.normalize();\n   * ```\n   */\n  normalize(image) {\n    const h = histogram(image);\n    // store bounds (minimum and maximum values)\n    const bounds = {\n      r: getBounds(h.r),\n      g: getBounds(h.g),\n      b: getBounds(h.b)\n    };\n    // apply value transformations\n    image.scan((_, __, idx) => {\n      const r = image.bitmap.data[idx + 0];\n      const g = image.bitmap.data[idx + 1];\n      const b = image.bitmap.data[idx + 2];\n      image.bitmap.data[idx + 0] = normalizeValue(r, bounds.r[0], bounds.r[1]);\n      image.bitmap.data[idx + 1] = normalizeValue(g, bounds.g[0], bounds.g[1]);\n      image.bitmap.data[idx + 2] = normalizeValue(b, bounds.b[0], bounds.b[1]);\n    });\n    return image;\n  },\n  /**\n   * Inverts the colors in the image.\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.invert();\n   * ```\n   */\n  invert(image) {\n    image.scan((_, __, idx) => {\n      image.bitmap.data[idx] = 255 - image.bitmap.data[idx];\n      image.bitmap.data[idx + 1] = 255 - image.bitmap.data[idx + 1];\n      image.bitmap.data[idx + 2] = 255 - image.bitmap.data[idx + 2];\n    });\n    return image;\n  },\n  /**\n   * Adjusts the brightness of the image\n   * @param val the amount to adjust the brightness.\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.brightness(0.5);\n   * ```\n   */\n  brightness(image, val) {\n    if (typeof val !== \"number\") {\n      throw new Error(\"val must be numbers\");\n    }\n    image.scan((_, __, idx) => {\n      image.bitmap.data[idx] = limit255(image.bitmap.data[idx] * val);\n      image.bitmap.data[idx + 1] = limit255(image.bitmap.data[idx + 1] * val);\n      image.bitmap.data[idx + 2] = limit255(image.bitmap.data[idx + 2] * val);\n    });\n    return image;\n  },\n  /**\n   * Adjusts the contrast of the image\n   * @param val the amount to adjust the contrast, a number between -1 and +1\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.contrast(0.75);\n   * ```\n   */\n  contrast(image, val) {\n    if (typeof val !== \"number\") {\n      throw new Error(\"val must be numbers\");\n    }\n    if (val < -1 || val > +1) {\n      throw new Error(\"val must be a number between -1 and +1\");\n    }\n    const factor = (val + 1) / (1 - val);\n    function adjust(value) {\n      value = Math.floor(factor * (value - 127) + 127);\n      return value < 0 ? 0 : value > 255 ? 255 : value;\n    }\n    image.scan((_, __, idx) => {\n      image.bitmap.data[idx] = adjust(image.bitmap.data[idx]);\n      image.bitmap.data[idx + 1] = adjust(image.bitmap.data[idx + 1]);\n      image.bitmap.data[idx + 2] = adjust(image.bitmap.data[idx + 2]);\n    });\n    return image;\n  },\n  /**\n   * Apply a posterize effect\n   * @param  n the amount to adjust the contrast, minimum threshold is two\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.posterize(5);\n   * ```\n   */\n  posterize(image, n) {\n    if (typeof n !== \"number\") {\n      throw new Error(\"n must be numbers\");\n    }\n    // minimum of 2 levels\n    if (n < 2) {\n      n = 2;\n    }\n    image.scan((_, __, idx) => {\n      const r = image.bitmap.data[idx];\n      const g = image.bitmap.data[idx + 1];\n      const b = image.bitmap.data[idx + 2];\n      image.bitmap.data[idx] = Math.floor(r / 255 * (n - 1)) / (n - 1) * 255;\n      image.bitmap.data[idx + 1] = Math.floor(g / 255 * (n - 1)) / (n - 1) * 255;\n      image.bitmap.data[idx + 2] = Math.floor(b / 255 * (n - 1)) / (n - 1) * 255;\n    });\n    return image;\n  },\n  /**\n   * Removes colour from the image using ITU Rec 709 luminance values\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.greyscale();\n   * ```\n   */\n  greyscale(image) {\n    image.scan((_, __, idx) => {\n      // const grey = parseInt(\n      //   0.2126 * image.bitmap.data[idx]! +\n      //     0.7152 * image.bitmap.data[idx + 1]! +\n      //     0.0722 * image.bitmap.data[idx + 2]!,\n      //   10\n      // );\n      const grey = 0.2126 * image.bitmap.data[idx] + 0.7152 * image.bitmap.data[idx + 1] + 0.0722 * image.bitmap.data[idx + 2];\n      image.bitmap.data[idx] = grey;\n      image.bitmap.data[idx + 1] = grey;\n      image.bitmap.data[idx + 2] = grey;\n    });\n    return image;\n  },\n  /**\n   * Multiplies the opacity of each pixel by a factor between 0 and 1\n   * @param f A number, the factor by which to multiply the opacity of each pixel\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.opacity(0.5);\n   * ```\n   */\n  opacity(image, f) {\n    if (typeof f !== \"number\") {\n      throw new Error(\"f must be a number\");\n    }\n    if (f < 0 || f > 1) {\n      throw new Error(\"f must be a number from 0 to 1\");\n    }\n    image.scan((_, __, idx) => {\n      const v = image.bitmap.data[idx + 3] * f;\n      image.bitmap.data[idx + 3] = v;\n    });\n    return image;\n  },\n  /**\n   * Applies a sepia tone to the image.\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.sepia();\n   * ```\n   */\n  sepia(image) {\n    image.scan((_, __, idx) => {\n      let red = image.bitmap.data[idx];\n      let green = image.bitmap.data[idx + 1];\n      let blue = image.bitmap.data[idx + 2];\n      red = red * 0.393 + green * 0.769 + blue * 0.189;\n      green = red * 0.349 + green * 0.686 + blue * 0.168;\n      blue = red * 0.272 + green * 0.534 + blue * 0.131;\n      image.bitmap.data[idx] = red < 255 ? red : 255;\n      image.bitmap.data[idx + 1] = green < 255 ? green : 255;\n      image.bitmap.data[idx + 2] = blue < 255 ? blue : 255;\n    });\n    return image;\n  },\n  /**\n   * Fades each pixel by a factor between 0 and 1\n   * @param f A number from 0 to 1. 0 will haven no effect. 1 will turn the image completely transparent.\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.fade(0.7);\n   * ```\n   */\n  fade(image, f) {\n    if (typeof f !== \"number\") {\n      throw new Error(\"f must be a number\");\n    }\n    if (f < 0 || f > 1) {\n      throw new Error(\"f must be a number from 0 to 1\");\n    }\n    // this method is an alternative to opacity (which may be deprecated)\n    return this.opacity(image, 1 - f);\n  },\n  /**\n   * Adds each element of the image to its local neighbors, weighted by the kernel\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.convolute([\n   *   [-1, -1, 0],\n   *   [-1, 1, 1],\n   *   [0, 1, 1],\n   * ]);\n   * ```\n   */\n  convolution(image, options) {\n    const parsed = ConvolutionOptionsSchema.parse(options);\n    const {\n      kernel,\n      edgeHandling = Edge.EXTEND\n    } = \"kernel\" in parsed ? parsed : {\n      kernel: parsed,\n      edgeHandling: undefined\n    };\n    if (!kernel[0]) {\n      throw new Error(\"kernel must be a matrix\");\n    }\n    const newData = Buffer.from(image.bitmap.data);\n    const kRows = kernel.length;\n    const kCols = kernel[0].length;\n    const rowEnd = Math.floor(kRows / 2);\n    const colEnd = Math.floor(kCols / 2);\n    const rowIni = -rowEnd;\n    const colIni = -colEnd;\n    let weight;\n    let rSum;\n    let gSum;\n    let bSum;\n    let ri;\n    let gi;\n    let bi;\n    let xi;\n    let yi;\n    let idxi;\n    image.scan((x, y, idx) => {\n      bSum = 0;\n      gSum = 0;\n      rSum = 0;\n      for (let row = rowIni; row <= rowEnd; row++) {\n        for (let col = colIni; col <= colEnd; col++) {\n          xi = x + col;\n          yi = y + row;\n          weight = kernel[row + rowEnd][col + colEnd];\n          idxi = image.getPixelIndex(xi, yi, edgeHandling);\n          if (idxi === -1) {\n            bi = 0;\n            gi = 0;\n            ri = 0;\n          } else {\n            ri = image.bitmap.data[idxi + 0];\n            gi = image.bitmap.data[idxi + 1];\n            bi = image.bitmap.data[idxi + 2];\n          }\n          rSum += weight * ri;\n          gSum += weight * gi;\n          bSum += weight * bi;\n        }\n      }\n      if (rSum < 0) {\n        rSum = 0;\n      }\n      if (gSum < 0) {\n        gSum = 0;\n      }\n      if (bSum < 0) {\n        bSum = 0;\n      }\n      if (rSum > 255) {\n        rSum = 255;\n      }\n      if (gSum > 255) {\n        gSum = 255;\n      }\n      if (bSum > 255) {\n        bSum = 255;\n      }\n      newData[idx + 0] = rSum;\n      newData[idx + 1] = gSum;\n      newData[idx + 2] = bSum;\n    });\n    image.bitmap.data = newData;\n    return image;\n  },\n  /**\n   * Set the alpha channel on every pixel to fully opaque.\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.opaque();\n   * ```\n   */\n  opaque(image) {\n    image.scan((_, __, idx) => {\n      image.bitmap.data[idx + 3] = 255;\n    });\n    return image;\n  },\n  /**\n   * Pixelates the image or a region\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * // pixelate the whole image\n   * image.pixelate(10);\n   *\n   * // pixelate a region\n   * image.pixelate(10, 10, 10, 20, 20);\n   * ```\n   */\n  pixelate(image, options) {\n    const parsed = PixelateOptionsSchema.parse(options);\n    const {\n      size,\n      x = 0,\n      y = 0,\n      w = image.bitmap.width - x,\n      h = image.bitmap.height - y\n    } = typeof parsed === \"number\" ? {\n      size: parsed\n    } : parsed;\n    const kernel = [[1 / 16, 2 / 16, 1 / 16], [2 / 16, 4 / 16, 2 / 16], [1 / 16, 2 / 16, 1 / 16]];\n    const source = clone(image);\n    scan(source, x, y, w, h, (xx, yx, idx) => {\n      xx = size * Math.floor(xx / size);\n      yx = size * Math.floor(yx / size);\n      const value = applyKernel(source, kernel, xx, yx);\n      image.bitmap.data[idx] = value[0];\n      image.bitmap.data[idx + 1] = value[1];\n      image.bitmap.data[idx + 2] = value[2];\n      image.bitmap.data[idx + 3] = value[3];\n    });\n    return image;\n  },\n  /**\n   * Applies a convolution kernel to the image or a region\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * // apply a convolution kernel to the whole image\n   * image.convolution([\n   *   [-1, -1, 0],\n   *   [-1, 1, 1],\n   *   [0, 1, 1],\n   * ]);\n   *\n   * // apply a convolution kernel to a region\n   * image.convolution([\n   *   [-1, -1, 0],\n   *   [-1, 1, 1],\n   *   [0, 1, 1],\n   * ], 10, 10, 10, 20);\n   * ```\n   */\n  convolute(image, options) {\n    const parsed = ConvoluteOptionsSchema.parse(options);\n    const {\n      kernel,\n      x = 0,\n      y = 0,\n      w = image.bitmap.width - x,\n      h = image.bitmap.height - y\n    } = \"kernel\" in parsed ? parsed : {\n      kernel: parsed\n    };\n    const source = clone(image);\n    scan(source, x, y, w, h, (xx, yx, idx) => {\n      const value = applyKernel(source, kernel, xx, yx);\n      image.bitmap.data[idx] = limit255(value[0]);\n      image.bitmap.data[idx + 1] = limit255(value[1]);\n      image.bitmap.data[idx + 2] = limit255(value[2]);\n      image.bitmap.data[idx + 3] = limit255(value[3]);\n    });\n    return image;\n  },\n  /**\n   * Apply multiple color modification rules\n   * @param  actions list of color modification rules, in following format: { apply: '<rule-name>', params: [ <rule-parameters> ]  }\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.color([\n   *   { apply: \"hue\", params: [-90] },\n   *   { apply: \"lighten\", params: [50] },\n   *   { apply: \"xor\", params: [\"#06D\"] },\n   * ]);\n   * ```\n   */\n  color(image, actions) {\n    if (!actions || !Array.isArray(actions)) {\n      throw new Error(\"actions must be an array\");\n    }\n    actions.forEach(action => ColorActionNameSchema.parse(action));\n    actions = actions.map(action => {\n      if (action.apply === \"xor\" || action.apply === \"mix\") {\n        action.params[0] = tinyColor(action.params[0]).toRgb();\n      }\n      return action;\n    });\n    image.scan((_, __, idx) => {\n      let clr = {\n        r: image.bitmap.data[idx],\n        g: image.bitmap.data[idx + 1],\n        b: image.bitmap.data[idx + 2]\n      };\n      const colorModifier = (i, amount) => limit255(clr[i] + amount);\n      actions.forEach(action => {\n        if (action.apply === \"mix\") {\n          clr = mix(clr, action.params[0], action.params[1]);\n        } else if (action.apply === \"tint\") {\n          clr = mix(clr, {\n            r: 255,\n            g: 255,\n            b: 255\n          }, action.params?.[0]);\n        } else if (action.apply === \"shade\") {\n          clr = mix(clr, {\n            r: 0,\n            g: 0,\n            b: 0\n          }, action.params?.[0]);\n        } else if (action.apply === \"xor\") {\n          clr = {\n            r: clr.r ^ action.params[0].r,\n            g: clr.g ^ action.params[0].g,\n            b: clr.b ^ action.params[0].b\n          };\n        } else if (action.apply === \"red\") {\n          clr.r = colorModifier(\"r\", action.params[0]);\n        } else if (action.apply === \"green\") {\n          clr.g = colorModifier(\"g\", action.params[0]);\n        } else if (action.apply === \"blue\") {\n          clr.b = colorModifier(\"b\", action.params[0]);\n        } else {\n          if (action.apply === \"hue\") {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            action.apply = \"spin\";\n          }\n          const tnyClr = tinyColor(clr);\n          const fn = tnyClr[action.apply].bind(tnyClr);\n          if (!fn) {\n            throw new Error(\"action \" + action.apply + \" not supported\");\n          }\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          clr = fn(...(action.params || [])).toRgb();\n        }\n      });\n      image.bitmap.data[idx] = clr.r;\n      image.bitmap.data[idx + 1] = clr.g;\n      image.bitmap.data[idx + 2] = clr.b;\n    });\n    return image;\n  }\n};\n", "import { Edge } from \"@jimp/types\";\nimport { cssColorToHex, scan, scanIterator } from \"@jimp/utils\";\nimport fileType from \"file-type/core.js\";\nimport { to } from \"await-to-js\";\nimport { existsSync, readFile, writeFile } from \"@jimp/file-ops\";\nimport mime from \"mime/lite.js\";\nimport { composite } from \"./utils/composite.js\";\nimport { attemptExifRotate } from \"./utils/image-bitmap.js\";\nconst emptyBitmap = {\n  data: Buffer.alloc(0),\n  width: 0,\n  height: 0\n};\n/**\n * Prepare a Buffer object from the arrayBuffer.\n */\nfunction bufferFromArrayBuffer(arrayBuffer) {\n  const buffer = Buffer.alloc(arrayBuffer.byteLength);\n  const view = new Uint8Array(arrayBuffer);\n  for (let i = 0; i < buffer.length; ++i) {\n    buffer[i] = view[i];\n  }\n  return buffer;\n}\nexport { getExifOrientation } from \"./utils/image-bitmap.js\";\nexport { composite } from \"./utils/composite.js\";\nexport * from \"./utils/constants.js\";\n/**\n * Create a Jimp class that support the given image formats and methods\n */\nexport function createJimp({\n  plugins: pluginsArg,\n  formats: formatsArg\n} = {}) {\n  const plugins = pluginsArg || [];\n  const formats = (formatsArg || []).map(format => format());\n  const CustomJimp = class Jimp {\n    /**\n     * The bitmap data of the image\n     */\n    bitmap = emptyBitmap;\n    /**  Default color to use for new pixels */\n    background = 0x00000000;\n    /** Formats that can be used with Jimp */\n    formats = [];\n    /** The original MIME type of the image */\n    mime;\n    constructor(options = emptyBitmap) {\n      // Add the formats\n      this.formats = formats;\n      if (\"data\" in options) {\n        this.bitmap = options;\n      } else {\n        this.bitmap = {\n          data: Buffer.alloc(options.width * options.height * 4),\n          width: options.width,\n          height: options.height\n        };\n        if (options.color) {\n          this.background = typeof options.color === \"string\" ? cssColorToHex(options.color) : options.color;\n          for (let i = 0; i < this.bitmap.data.length; i += 4) {\n            this.bitmap.data.writeUInt32BE(this.background, i);\n          }\n        }\n      }\n      // Add the plugins\n      for (const methods of plugins) {\n        for (const key in methods) {\n          this[key] = (...args) => {\n            const result = methods[key]?.(this, ...args);\n            if (typeof result === \"object\" && \"bitmap\" in result) {\n              this.bitmap = result.bitmap;\n              return this;\n            }\n            return result;\n          };\n        }\n      }\n    }\n    /**\n     * Create a Jimp instance from a URL, a file path, or a Buffer\n     * @example\n     * ```ts\n     * import { Jimp } from \"jimp\";\n     *\n     * // Read from a file path\n     * const image = await Jimp.read(\"test/image.png\");\n     *\n     * // Read from a URL\n     * const image = await Jimp.read(\"https://upload.wikimedia.org/wikipedia/commons/0/01/Bot-Test.jpg\");\n     * ```\n     */\n    static async read(url, options) {\n      if (Buffer.isBuffer(url) || url instanceof ArrayBuffer) {\n        return this.fromBuffer(url);\n      }\n      if (existsSync(url)) {\n        return this.fromBuffer(await readFile(url));\n      }\n      const [fetchErr, response] = await to(fetch(url));\n      if (fetchErr) {\n        throw new Error(`Could not load Buffer from URL: ${url}`);\n      }\n      if (!response.ok) {\n        throw new Error(`HTTP Status ${response.status} for url ${url}`);\n      }\n      const [arrayBufferErr, data] = await to(response.arrayBuffer());\n      if (arrayBufferErr) {\n        throw new Error(`Could not load Buffer from ${url}`);\n      }\n      const buffer = bufferFromArrayBuffer(data);\n      return this.fromBuffer(buffer, options);\n    }\n    /**\n     * Create a Jimp instance from a bitmap.\n     * The difference between this and just using the constructor is that this will\n     * convert raw image data into the bitmap format that Jimp uses.\n     *\n     * @example\n     * ```ts\n     * import { Jimp } from \"jimp\";\n     *\n     * const image = Jimp.fromBitmap({\n     *   data: Buffer.from([\n     *     0xffffffff, 0xffffffff, 0xffffffff,\n     *     0xffffffff, 0xffffffff, 0xffffffff,\n     *     0xffffffff, 0xffffffff, 0xffffffff,\n     *   ]),\n     *   width: 3,\n     *   height: 3,\n     * });\n     * ```\n     */\n    static fromBitmap(bitmap) {\n      let data;\n      if (bitmap.data instanceof Buffer) {\n        data = Buffer.from(bitmap.data);\n      }\n      if (bitmap.data instanceof Uint8Array || bitmap.data instanceof Uint8ClampedArray) {\n        data = Buffer.from(bitmap.data.buffer);\n      }\n      if (Array.isArray(bitmap.data)) {\n        data = Buffer.concat(bitmap.data.map(hex => Buffer.from(hex.toString(16).padStart(8, \"0\"), \"hex\")));\n      }\n      if (!data) {\n        throw new Error(\"data must be a Buffer\");\n      }\n      if (typeof bitmap.height !== \"number\" || typeof bitmap.width !== \"number\") {\n        throw new Error(\"bitmap must have width and height\");\n      }\n      return new CustomJimp({\n        height: bitmap.height,\n        width: bitmap.width,\n        data\n      });\n    }\n    /**\n     * Parse a bitmap with the loaded image types.\n     *\n     * @param buffer Raw image data\n     * @example\n     * ```ts\n     * import { Jimp } from \"jimp\";\n     *\n     * const buffer = await fs.readFile(\"test/image.png\");\n     * const image = await Jimp.fromBuffer(buffer);\n     * ```\n     */\n    static async fromBuffer(buffer, options) {\n      const actualBuffer = buffer instanceof ArrayBuffer ? bufferFromArrayBuffer(buffer) : buffer;\n      const mime = await fileType.fromBuffer(actualBuffer);\n      if (!mime || !mime.mime) {\n        throw new Error(\"Could not find MIME for Buffer\");\n      }\n      const format = formats.find(format => format.mime === mime.mime);\n      if (!format || !format.decode) {\n        throw new Error(`Mime type ${mime.mime} does not support decoding`);\n      }\n      const image = new CustomJimp(await format.decode(actualBuffer, options?.[format.mime]));\n      image.mime = mime.mime;\n      attemptExifRotate(image, actualBuffer);\n      return image;\n    }\n    /**\n     * Nicely format Jimp object when sent to the console e.g. console.log(image)\n     * @returns Pretty printed jimp object\n     * @example\n     * ```ts\n     * import { Jimp } from \"jimp\";\n     *\n     * const image = await Jimp.read(\"test/image.png\");\n     *\n     * console.log(image);\n     * ```\n     */\n    inspect() {\n      return \"<Jimp \" + (this.bitmap === emptyBitmap ? \"pending...\" : this.bitmap.width + \"x\" + this.bitmap.height) + \">\";\n    }\n    /**\n     * Nicely format Jimp object when converted to a string\n     * @returns pretty printed\n     */\n    toString() {\n      return \"[object Jimp]\";\n    }\n    /** Get the width of the image */\n    get width() {\n      return this.bitmap.width;\n    }\n    /** Get the height of the image */\n    get height() {\n      return this.bitmap.height;\n    }\n    /**\n     * Converts the Jimp instance to an image buffer\n     * @param mime The mime type to export to\n     * @param options The options to use when exporting\n     * @example\n     * ```ts\n     * import { Jimp } from \"jimp\";\n     * import { promises as fs } from \"fs\";\n     *\n     * const image = new Jimp({ width: 3, height: 3, color: 0xffffffff });\n     *\n     * await image.write(\"test/output.jpeg\", {\n     *   quality: 50,\n     * });\n     * ```\n     */\n    async getBuffer(mime, options) {\n      const format = this.formats.find(format => format.mime === mime);\n      if (!format || !format.encode) {\n        throw new Error(`Unsupported MIME type: ${mime}`);\n      }\n      let outputImage;\n      if (format.hasAlpha) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        outputImage = this;\n      } else {\n        outputImage = new CustomJimp({\n          width: this.bitmap.width,\n          height: this.bitmap.height,\n          color: this.background\n        });\n        composite(outputImage, this);\n      }\n      return format.encode(outputImage.bitmap, options);\n    }\n    /**\n     * Converts the image to a base 64 string\n     *\n     * @param mime The mime type to export to\n     * @param options The options to use when exporting\n     * @example\n     * ```ts\n     * import { Jimp } from \"jimp\";\n     *\n     * const image = Jimp.fromBuffer(Buffer.from([\n     *   0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,\n     *   0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,\n     *   0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,\n     * ]));\n     *\n     * const base64 = image.getBase64(\"image/jpeg\", {\n     *   quality: 50,\n     * });\n     * ```\n     */\n    async getBase64(mime, options) {\n      const data = await this.getBuffer(mime, options);\n      return \"data:\" + mime + \";base64,\" + data.toString(\"base64\");\n    }\n    /**\n     * Write the image to a file\n     * @param path the path to write the image to\n     * @param options the options to use when writing the image\n     * @example\n     * ```ts\n     * import { Jimp } from \"jimp\";\n     *\n     * const image = Jimp.fromBuffer(Buffer.from([\n     *   0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,\n     *   0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,\n     *   0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,\n     * ]));\n     *\n     * await image.write(\"test/output.png\");\n     * ```\n     */\n    async write(path, options) {\n      const mimeType = mime.getType(path);\n      await writeFile(path, await this.getBuffer(mimeType, options));\n    }\n    /**\n     * Clone the image into a new Jimp instance.\n     * @param this\n     * @returns A new Jimp instance\n     * @example\n     * ```ts\n     * import { Jimp } from \"jimp\";\n     *\n     * const image = new Jimp({ width: 3, height: 3, color: 0xffffffff });\n     *\n     * const clone = image.clone();\n     * ```\n     */\n    clone() {\n      return new CustomJimp({\n        ...this.bitmap,\n        data: Buffer.from(this.bitmap.data)\n      });\n    }\n    /**\n     * Returns the offset of a pixel in the bitmap buffer\n     * @param x the x coordinate\n     * @param y the y coordinate\n     * @param edgeHandling (optional) define how to sum pixels from outside the border\n     * @returns the index of the pixel or -1 if not found\n     * @example\n     * ```ts\n     * import { Jimp } from \"jimp\";\n     *\n     * const image = new Jimp({ width: 3, height: 3, color: 0xffffffff });\n     *\n     * image.getPixelIndex(1, 1); // 2\n     * ```\n     */\n    getPixelIndex(x, y, edgeHandling) {\n      let xi;\n      let yi;\n      if (!edgeHandling) {\n        edgeHandling = Edge.EXTEND;\n      }\n      if (typeof x !== \"number\" || typeof y !== \"number\") {\n        throw new Error(\"x and y must be numbers\");\n      }\n      // round input\n      x = Math.round(x);\n      y = Math.round(y);\n      xi = x;\n      yi = y;\n      if (edgeHandling === Edge.EXTEND) {\n        if (x < 0) xi = 0;\n        if (x >= this.bitmap.width) xi = this.bitmap.width - 1;\n        if (y < 0) yi = 0;\n        if (y >= this.bitmap.height) yi = this.bitmap.height - 1;\n      }\n      if (edgeHandling === Edge.WRAP) {\n        if (x < 0) {\n          xi = this.bitmap.width + x;\n        }\n        if (x >= this.bitmap.width) {\n          xi = x % this.bitmap.width;\n        }\n        if (y < 0) {\n          yi = this.bitmap.height + y;\n        }\n        if (y >= this.bitmap.height) {\n          yi = y % this.bitmap.height;\n        }\n      }\n      let i = this.bitmap.width * yi + xi << 2;\n      // if out of bounds index is -1\n      if (xi < 0 || xi >= this.bitmap.width) {\n        i = -1;\n      }\n      if (yi < 0 || yi >= this.bitmap.height) {\n        i = -1;\n      }\n      return i;\n    }\n    /**\n     * Returns the hex color value of a pixel\n     * @param x the x coordinate\n     * @param y the y coordinate\n     * @returns the color of the pixel\n     * @example\n     * ```ts\n     * import { Jimp } from \"jimp\";\n     *\n     * const image = new Jimp({ width: 3, height: 3, color: 0xffffffff });\n     *\n     * image.getPixelColor(1, 1); // 0xffffffff\n     * ```\n     */\n    getPixelColor(x, y) {\n      if (typeof x !== \"number\" || typeof y !== \"number\") {\n        throw new Error(\"x and y must be numbers\");\n      }\n      const idx = this.getPixelIndex(x, y);\n      return this.bitmap.data.readUInt32BE(idx);\n    }\n    /**\n     * Sets the hex colour value of a pixel\n     *\n     * @param hex color to set\n     * @param x the x coordinate\n     * @param y the y coordinate\n     *\n     * @example\n     * ```ts\n     * import { Jimp } from \"jimp\";\n     *\n     * const image = new Jimp({ width: 3, height: 3, color: 0xffffffff });\n     *\n     * image.setPixelColor(0xff0000ff, 0, 0);\n     * ```\n     */\n    setPixelColor(hex, x, y) {\n      if (typeof hex !== \"number\" || typeof x !== \"number\" || typeof y !== \"number\") {\n        throw new Error(\"hex, x and y must be numbers\");\n      }\n      const idx = this.getPixelIndex(x, y);\n      this.bitmap.data.writeUInt32BE(hex, idx);\n      return this;\n    }\n    /**\n     * Determine if the image contains opaque pixels.\n     *\n     * @example\n     * ```ts\n     * import { Jimp } from \"jimp\";\n     *\n     * const image = new Jimp({ width: 3, height: 3, color: 0xffffffaa });\n     * const image2 = new Jimp({ width: 3, height: 3, color: 0xff0000ff });\n     *\n     * image.hasAlpha(); // false\n     * image2.hasAlpha(); // true\n     * ```\n     */\n    hasAlpha() {\n      const {\n        width,\n        height,\n        data\n      } = this.bitmap;\n      const byteLen = width * height << 2;\n      for (let idx = 3; idx < byteLen; idx += 4) {\n        if (data[idx] !== 0xff) {\n          return true;\n        }\n      }\n      return false;\n    }\n    /**\n     * Composites a source image over to this image respecting alpha channels\n     * @param src the source Jimp instance\n     * @param x the x position to blit the image\n     * @param y the y position to blit the image\n     * @param options determine what mode to use\n     * @example\n     * ```ts\n     * import { Jimp } from \"jimp\";\n     *\n     * const image = new Jimp({ width: 10, height: 10, color: 0xffffffff });\n     * const image2 = new Jimp({ width: 3, height: 3, color: 0xff0000ff });\n     *\n     * image.composite(image2, 3, 3);\n     * ```\n     */\n    composite(src, x = 0, y = 0, options = {}) {\n      return composite(this, src, x, y, options);\n    }\n    scan(x, y, w, h, f) {\n      return scan(this, x, y, w, h, f);\n    }\n    /**\n     * Iterate scan through a region of the bitmap\n     * @param x the x coordinate to begin the scan at\n     * @param y the y coordinate to begin the scan at\n     * @param w the width of the scan region\n     * @param h the height of the scan region\n     * @example\n     * ```ts\n     * import { Jimp } from \"jimp\";\n     *\n     * const image = new Jimp({ width: 3, height: 3, color: 0xffffffff });\n     *\n     * for (const { x, y, idx, image } of j.scanIterator()) {\n     *   // do something with the pixel\n     * }\n     * ```\n     */\n    scanIterator(x = 0, y = 0, w = this.bitmap.width, h = this.bitmap.height) {\n      if (typeof x !== \"number\" || typeof y !== \"number\") {\n        throw new Error(\"x and y must be numbers\");\n      }\n      if (typeof w !== \"number\" || typeof h !== \"number\") {\n        throw new Error(\"w and h must be numbers\");\n      }\n      return scanIterator(this, x, y, w, h);\n    }\n  };\n  return CustomJimp;\n}\n", "/**\n * @param { Promise } promise\n * @param { Object= } errorExt - Additional Information you can pass to the err object\n * @return { Promise }\n */\nfunction to(promise, errorExt) {\n  return promise.then(function (data) {\n    return [null, data];\n  }).catch(function (err) {\n    if (errorExt) {\n      Object.assign(err, errorExt);\n    }\n    return [err, undefined];\n  });\n}\nexport { to };\nexport default to;\n", "import { promises as fs } from \"fs\";\nexport { existsSync } from \"fs\";\nexport const readFile = fs.readFile;\nexport const writeFile = fs.writeFile;\n", "/* Horizontal align modes for cover, contain, bit masks */\nexport var HorizontalAlign;\n(function (HorizontalAlign) {\n  HorizontalAlign[HorizontalAlign[\"LEFT\"] = 1] = \"LEFT\";\n  HorizontalAlign[HorizontalAlign[\"CENTER\"] = 2] = \"CENTER\";\n  HorizontalAlign[HorizontalAlign[\"RIGHT\"] = 4] = \"RIGHT\";\n})(HorizontalAlign || (HorizontalAlign = {}));\n/* Vertical align modes for cover, contain, bit masks */\nexport var VerticalAlign;\n(function (VerticalAlign) {\n  VerticalAlign[VerticalAlign[\"TOP\"] = 8] = \"TOP\";\n  VerticalAlign[VerticalAlign[\"MIDDLE\"] = 16] = \"MIDDLE\";\n  VerticalAlign[VerticalAlign[\"BOTTOM\"] = 32] = \"BOTTOM\";\n})(VerticalAlign || (VerticalAlign = {}));\n/**\n * How to blend two images together\n */\nexport var BlendMode;\n(function (BlendMode) {\n  /**\n   * Composite the source image over the destination image.\n   * This is the default value. It represents the most intuitive case, where shapes are painted on top of what is below, with transparent areas showing the destination layer.\n   */\n  BlendMode[\"SRC_OVER\"] = \"srcOver\";\n  /** Composite the source image under the destination image. */\n  BlendMode[\"DST_OVER\"] = \"dstOver\";\n  /**\n   * Multiply the color components of the source and destination images.\n   * This can only result in the same or darker colors (multiplying by white, 1.0, results in no change; multiplying by black, 0.0, results in black).\n   * When compositing two opaque images, this has similar effect to overlapping two transparencies on a projector.\n   *\n   * This mode is useful for coloring shadows.\n   */\n  BlendMode[\"MULTIPLY\"] = \"multiply\";\n  /**\n   * The Add mode adds the color information of the base layers and the blending layer.\n   * In digital terms, adding color increases the brightness.\n   */\n  BlendMode[\"ADD\"] = \"add\";\n  /**\n   * Multiply the inverse of the components of the source and destination images, and inverse the result.\n   * Inverting the components means that a fully saturated channel (opaque white) is treated as the value 0.0, and values normally treated as 0.0 (black, transparent) are treated as 1.0.\n   * This is essentially the same as modulate blend mode, but with the values of the colors inverted before the multiplication and the result being inverted back before rendering.\n   * This can only result in the same or lighter colors (multiplying by black, 1.0, results in no change; multiplying by white, 0.0, results in white). Similarly, in the alpha channel, it can only result in more opaque colors.\n   * This has similar effect to two projectors displaying their images on the same screen simultaneously.\n   */\n  BlendMode[\"SCREEN\"] = \"screen\";\n  /**\n   * Multiply the components of the source and destination images after adjusting them to favor the destination.\n   * Specifically, if the destination value is smaller, this multiplies it with the source value, whereas is the source value is smaller, it multiplies the inverse of the source value with the inverse of the destination value, then inverts the result.\n   * Inverting the components means that a fully saturated channel (opaque white) is treated as the value 0.0, and values normally treated as 0.0 (black, transparent) are treated as 1.0.\n   *\n   * The Overlay mode behaves like Screen mode in bright areas, and like Multiply mode in darker areas.\n   * With this mode, the bright areas will look brighter and the dark areas will look darker.\n   */\n  BlendMode[\"OVERLAY\"] = \"overlay\";\n  /**\n   * Composite the source and destination image by choosing the lowest value from each color channel.\n   * The opacity of the output image is computed in the same way as for srcOver.\n   */\n  BlendMode[\"DARKEN\"] = \"darken\";\n  /**\n   * Composite the source and destination image by choosing the highest value from each color channel.\n   * The opacity of the output image is computed in the same way as for srcOver.\n   */\n  BlendMode[\"LIGHTEN\"] = \"lighten\";\n  /**\n   * Multiply the components of the source and destination images after adjusting them to favor the source.\n   * Specifically, if the source value is smaller, this multiplies it with the destination value, whereas is the destination value is smaller, it multiplies the inverse of the destination value with the inverse of the source value, then inverts the result.\n   * Inverting the components means that a fully saturated channel (opaque white) is treated as the value 0.0, and values normally treated as 0.0 (black, transparent) are treated as 1.0.\n   *\n   * The effect of the Hard light mode depends on the density of the superimposed color. Using bright colors on the blending layer will create a brighter effect like the Screen modes, while dark colors will create darker colors like the Multiply mode.\n   */\n  BlendMode[\"HARD_LIGHT\"] = \"hardLight\";\n  /**\n   * Subtract the smaller value from the bigger value for each channel.\n   * Compositing black has no effect; compositing white inverts the colors of the other image.\n   * The opacity of the output image is computed in the same way as for srcOver.\n   * The effect is similar to exclusion but harsher.\n   */\n  BlendMode[\"DIFFERENCE\"] = \"difference\";\n  /**\n   * Subtract double the product of the two images from the sum of the two images.\n   * Compositing black has no effect; compositing white inverts the colors of the other image.\n   * The opacity of the output image is computed in the same way as for srcOver.\n   * The effect is similar to difference but softer.\n   */\n  BlendMode[\"EXCLUSION\"] = \"exclusion\";\n})(BlendMode || (BlendMode = {}));\n", "export function srcOver(src, dst, ops = 1) {\n  src.a *= ops;\n  const a = dst.a + src.a - dst.a * src.a;\n  const r = (src.r * src.a + dst.r * dst.a * (1 - src.a)) / a;\n  const g = (src.g * src.a + dst.g * dst.a * (1 - src.a)) / a;\n  const b = (src.b * src.a + dst.b * dst.a * (1 - src.a)) / a;\n  return {\n    r,\n    g,\n    b,\n    a\n  };\n}\nexport function dstOver(src, dst, ops = 1) {\n  src.a *= ops;\n  const a = dst.a + src.a - dst.a * src.a;\n  const r = (dst.r * dst.a + src.r * src.a * (1 - dst.a)) / a;\n  const g = (dst.g * dst.a + src.g * src.a * (1 - dst.a)) / a;\n  const b = (dst.b * dst.a + src.b * src.a * (1 - dst.a)) / a;\n  return {\n    r,\n    g,\n    b,\n    a\n  };\n}\nexport function multiply(src, dst, ops = 1) {\n  src.a *= ops;\n  const a = dst.a + src.a - dst.a * src.a;\n  const sra = src.r * src.a;\n  const sga = src.g * src.a;\n  const sba = src.b * src.a;\n  const dra = dst.r * dst.a;\n  const dga = dst.g * dst.a;\n  const dba = dst.b * dst.a;\n  const r = (sra * dra + sra * (1 - dst.a) + dra * (1 - src.a)) / a;\n  const g = (sga * dga + sga * (1 - dst.a) + dga * (1 - src.a)) / a;\n  const b = (sba * dba + sba * (1 - dst.a) + dba * (1 - src.a)) / a;\n  return {\n    r,\n    g,\n    b,\n    a\n  };\n}\nexport function add(src, dst, ops = 1) {\n  src.a *= ops;\n  const a = dst.a + src.a - dst.a * src.a;\n  const sra = src.r * src.a;\n  const sga = src.g * src.a;\n  const sba = src.b * src.a;\n  const dra = dst.r * dst.a;\n  const dga = dst.g * dst.a;\n  const dba = dst.b * dst.a;\n  const r = (sra + dra) / a;\n  const g = (sga + dga) / a;\n  const b = (sba + dba) / a;\n  return {\n    r,\n    g,\n    b,\n    a\n  };\n}\nexport function screen(src, dst, ops = 1) {\n  src.a *= ops;\n  const a = dst.a + src.a - dst.a * src.a;\n  const sra = src.r * src.a;\n  const sga = src.g * src.a;\n  const sba = src.b * src.a;\n  const dra = dst.r * dst.a;\n  const dga = dst.g * dst.a;\n  const dba = dst.b * dst.a;\n  const r = (sra * dst.a + dra * src.a - sra * dra + sra * (1 - dst.a) + dra * (1 - src.a)) / a;\n  const g = (sga * dst.a + dga * src.a - sga * dga + sga * (1 - dst.a) + dga * (1 - src.a)) / a;\n  const b = (sba * dst.a + dba * src.a - sba * dba + sba * (1 - dst.a) + dba * (1 - src.a)) / a;\n  return {\n    r,\n    g,\n    b,\n    a\n  };\n}\nexport function overlay(src, dst, ops = 1) {\n  src.a *= ops;\n  const a = dst.a + src.a - dst.a * src.a;\n  const sra = src.r * src.a;\n  const sga = src.g * src.a;\n  const sba = src.b * src.a;\n  const dra = dst.r * dst.a;\n  const dga = dst.g * dst.a;\n  const dba = dst.b * dst.a;\n  const r = (2 * dra <= dst.a ? 2 * sra * dra + sra * (1 - dst.a) + dra * (1 - src.a) : sra * (1 + dst.a) + dra * (1 + src.a) - 2 * dra * sra - dst.a * src.a) / a;\n  const g = (2 * dga <= dst.a ? 2 * sga * dga + sga * (1 - dst.a) + dga * (1 - src.a) : sga * (1 + dst.a) + dga * (1 + src.a) - 2 * dga * sga - dst.a * src.a) / a;\n  const b = (2 * dba <= dst.a ? 2 * sba * dba + sba * (1 - dst.a) + dba * (1 - src.a) : sba * (1 + dst.a) + dba * (1 + src.a) - 2 * dba * sba - dst.a * src.a) / a;\n  return {\n    r,\n    g,\n    b,\n    a\n  };\n}\nexport function darken(src, dst, ops = 1) {\n  src.a *= ops;\n  const a = dst.a + src.a - dst.a * src.a;\n  const sra = src.r * src.a;\n  const sga = src.g * src.a;\n  const sba = src.b * src.a;\n  const dra = dst.r * dst.a;\n  const dga = dst.g * dst.a;\n  const dba = dst.b * dst.a;\n  const r = (Math.min(sra * dst.a, dra * src.a) + sra * (1 - dst.a) + dra * (1 - src.a)) / a;\n  const g = (Math.min(sga * dst.a, dga * src.a) + sga * (1 - dst.a) + dga * (1 - src.a)) / a;\n  const b = (Math.min(sba * dst.a, dba * src.a) + sba * (1 - dst.a) + dba * (1 - src.a)) / a;\n  return {\n    r,\n    g,\n    b,\n    a\n  };\n}\nexport function lighten(src, dst, ops = 1) {\n  src.a *= ops;\n  const a = dst.a + src.a - dst.a * src.a;\n  const sra = src.r * src.a;\n  const sga = src.g * src.a;\n  const sba = src.b * src.a;\n  const dra = dst.r * dst.a;\n  const dga = dst.g * dst.a;\n  const dba = dst.b * dst.a;\n  const r = (Math.max(sra * dst.a, dra * src.a) + sra * (1 - dst.a) + dra * (1 - src.a)) / a;\n  const g = (Math.max(sga * dst.a, dga * src.a) + sga * (1 - dst.a) + dga * (1 - src.a)) / a;\n  const b = (Math.max(sba * dst.a, dba * src.a) + sba * (1 - dst.a) + dba * (1 - src.a)) / a;\n  return {\n    r,\n    g,\n    b,\n    a\n  };\n}\nexport function hardLight(src, dst, ops = 1) {\n  src.a *= ops;\n  const a = dst.a + src.a - dst.a * src.a;\n  const sra = src.r * src.a;\n  const sga = src.g * src.a;\n  const sba = src.b * src.a;\n  const dra = dst.r * dst.a;\n  const dga = dst.g * dst.a;\n  const dba = dst.b * dst.a;\n  const r = (2 * sra <= src.a ? 2 * sra * dra + sra * (1 - dst.a) + dra * (1 - src.a) : sra * (1 + dst.a) + dra * (1 + src.a) - 2 * dra * sra - dst.a * src.a) / a;\n  const g = (2 * sga <= src.a ? 2 * sga * dga + sga * (1 - dst.a) + dga * (1 - src.a) : sga * (1 + dst.a) + dga * (1 + src.a) - 2 * dga * sga - dst.a * src.a) / a;\n  const b = (2 * sba <= src.a ? 2 * sba * dba + sba * (1 - dst.a) + dba * (1 - src.a) : sba * (1 + dst.a) + dba * (1 + src.a) - 2 * dba * sba - dst.a * src.a) / a;\n  return {\n    r,\n    g,\n    b,\n    a\n  };\n}\nexport function difference(src, dst, ops = 1) {\n  src.a *= ops;\n  const a = dst.a + src.a - dst.a * src.a;\n  const sra = src.r * src.a;\n  const sga = src.g * src.a;\n  const sba = src.b * src.a;\n  const dra = dst.r * dst.a;\n  const dga = dst.g * dst.a;\n  const dba = dst.b * dst.a;\n  const r = (sra + dra - 2 * Math.min(sra * dst.a, dra * src.a)) / a;\n  const g = (sga + dga - 2 * Math.min(sga * dst.a, dga * src.a)) / a;\n  const b = (sba + dba - 2 * Math.min(sba * dst.a, dba * src.a)) / a;\n  return {\n    r,\n    g,\n    b,\n    a\n  };\n}\nexport function exclusion(src, dst, ops = 1) {\n  src.a *= ops;\n  const a = dst.a + src.a - dst.a * src.a;\n  const sra = src.r * src.a;\n  const sga = src.g * src.a;\n  const sba = src.b * src.a;\n  const dra = dst.r * dst.a;\n  const dga = dst.g * dst.a;\n  const dba = dst.b * dst.a;\n  const r = (sra * dst.a + dra * src.a - 2 * sra * dra + sra * (1 - dst.a) + dra * (1 - src.a)) / a;\n  const g = (sga * dst.a + dga * src.a - 2 * sga * dga + sga * (1 - dst.a) + dga * (1 - src.a)) / a;\n  const b = (sba * dst.a + dba * src.a - 2 * sba * dba + sba * (1 - dst.a) + dba * (1 - src.a)) / a;\n  return {\n    r,\n    g,\n    b,\n    a\n  };\n}\nexport const names = [srcOver, dstOver, multiply, add, screen, overlay, darken, lighten, hardLight, difference, exclusion];\n", "import { Edge } from \"@jimp/types\";\nimport { BlendMode } from \"./constants.js\";\nimport * as compositeModes from \"./composite-modes.js\";\nimport { limit255 } from \"@jimp/utils\";\nexport function composite(baseImage, src, x = 0, y = 0, options = {}) {\n  if (!(src instanceof baseImage.constructor)) {\n    throw new Error(\"The source must be a Jimp image\");\n  }\n  if (typeof x !== \"number\" || typeof y !== \"number\") {\n    throw new Error(\"x and y must be numbers\");\n  }\n  const {\n    mode = BlendMode.SRC_OVER\n  } = options;\n  let {\n    opacitySource = 1.0,\n    opacityDest = 1.0\n  } = options;\n  if (typeof opacitySource !== \"number\" || opacitySource < 0 || opacitySource > 1) {\n    opacitySource = 1.0;\n  }\n  if (typeof opacityDest !== \"number\" || opacityDest < 0 || opacityDest > 1) {\n    opacityDest = 1.0;\n  }\n  const blendmode = compositeModes[mode];\n  // round input\n  x = Math.round(x);\n  y = Math.round(y);\n  if (opacityDest !== 1.0) {\n    baseImage.scan((_, __, idx) => {\n      const v = baseImage.bitmap.data[idx + 3] * opacityDest;\n      baseImage.bitmap.data[idx + 3] = v;\n    });\n  }\n  src.scan((sx, sy, idx) => {\n    const dstIdx = baseImage.getPixelIndex(x + sx, y + sy, Edge.CROP);\n    if (dstIdx === -1) {\n      // Skip target pixels outside of dst\n      return;\n    }\n    const blended = blendmode({\n      r: src.bitmap.data[idx + 0] / 255,\n      g: src.bitmap.data[idx + 1] / 255,\n      b: src.bitmap.data[idx + 2] / 255,\n      a: src.bitmap.data[idx + 3] / 255\n    }, {\n      r: baseImage.bitmap.data[dstIdx + 0] / 255,\n      g: baseImage.bitmap.data[dstIdx + 1] / 255,\n      b: baseImage.bitmap.data[dstIdx + 2] / 255,\n      a: baseImage.bitmap.data[dstIdx + 3] / 255\n    }, opacitySource);\n    baseImage.bitmap.data[dstIdx + 0] = limit255(blended.r * 255);\n    baseImage.bitmap.data[dstIdx + 1] = limit255(blended.g * 255);\n    baseImage.bitmap.data[dstIdx + 2] = limit255(blended.b * 255);\n    baseImage.bitmap.data[dstIdx + 3] = limit255(blended.a * 255);\n  });\n  return baseImage;\n}\n", "import EXIFParser from \"exif-parser\";\n/**\n * Obtains image orientation from EXIF metadata.\n *\n * @param img a Jimp image object\n * @returns a number 1-8 representing EXIF orientation,\n *          in particular 1 if orientation tag is missing\n */\nexport function getExifOrientation(img) {\n  const _exif = img._exif;\n  return _exif && _exif.tags && _exif.tags.Orientation || 1;\n}\n/**\n * Returns a function which translates EXIF-rotated coordinates into\n * non-rotated ones.\n *\n * Transformation reference: http://sylvana.net/jpegcrop/exif_orientation.html.\n *\n * @param img a Jimp image object\n * @returns transformation function for transformBitmap().\n */\nfunction getExifOrientationTransformation(img) {\n  const w = img.bitmap.width;\n  const h = img.bitmap.height;\n  switch (getExifOrientation(img)) {\n    case 1:\n      // Horizontal (normal)\n      // does not need to be supported here\n      return null;\n    case 2:\n      // Mirror horizontal\n      return function (x, y) {\n        return [w - x - 1, y];\n      };\n    case 3:\n      // Rotate 180\n      return function (x, y) {\n        return [w - x - 1, h - y - 1];\n      };\n    case 4:\n      // Mirror vertical\n      return function (x, y) {\n        return [x, h - y - 1];\n      };\n    case 5:\n      // Mirror horizontal and rotate 270 CW\n      return function (x, y) {\n        return [y, x];\n      };\n    case 6:\n      // Rotate 90 CW\n      return function (x, y) {\n        return [y, h - x - 1];\n      };\n    case 7:\n      // Mirror horizontal and rotate 90 CW\n      return function (x, y) {\n        return [w - y - 1, h - x - 1];\n      };\n    case 8:\n      // Rotate 270 CW\n      return function (x, y) {\n        return [w - y - 1, x];\n      };\n    default:\n      return null;\n  }\n}\n/**\n * Transforms bitmap in place (moves pixels around) according to given\n * transformation function.\n *\n * @param img a Jimp image object, which bitmap is supposed to\n *        be transformed\n * @param width bitmap width after the transformation\n * @param height bitmap height after the transformation\n * @param transformation transformation function which defines pixel\n *        mapping between new and source bitmap. It takes a pair of coordinates\n *        in the target, and returns a respective pair of coordinates in\n *        the source bitmap, i.e. has following form:\n *        `function(new_x, new_y) { return [src_x, src_y] }`.\n */\nfunction transformBitmap(img, width, height, transformation) {\n  // Underscore-prefixed values are related to the source bitmap\n  // Their counterparts with no prefix are related to the target bitmap\n  const _data = img.bitmap.data;\n  const _width = img.bitmap.width;\n  const data = Buffer.alloc(_data.length);\n  for (let x = 0; x < width; x++) {\n    for (let y = 0; y < height; y++) {\n      const [_x, _y] = transformation(x, y);\n      const idx = width * y + x << 2;\n      const _idx = _width * _y + _x << 2;\n      const pixel = _data.readUInt32BE(_idx);\n      data.writeUInt32BE(pixel, idx);\n    }\n  }\n  img.bitmap.data = data;\n  img.bitmap.width = width;\n  img.bitmap.height = height;\n  // @ts-expect-error Accessing private property\n  img._exif.tags.Orientation = 1;\n}\n/**\n * Automagically rotates an image based on its EXIF data (if present).\n * @param img  a Jimp image object\n */\nfunction exifRotate(img) {\n  if (getExifOrientation(img) < 2) {\n    return;\n  }\n  const transformation = getExifOrientationTransformation(img);\n  const swapDimensions = getExifOrientation(img) > 4;\n  const newWidth = swapDimensions ? img.bitmap.height : img.bitmap.width;\n  const newHeight = swapDimensions ? img.bitmap.width : img.bitmap.height;\n  if (transformation) {\n    transformBitmap(img, newWidth, newHeight, transformation);\n  }\n}\nexport async function attemptExifRotate(image, buffer) {\n  try {\n    image._exif = EXIFParser.create(buffer).parse();\n    exifRotate(image); // EXIF data\n  } catch {\n    // do nothing\n  }\n}\n", "/**\n * What resizing algorithm to use.\n */\nexport var ResizeStrategy;\n(function (ResizeStrategy) {\n  /**\n   * Nearest Neighbor resizing is a method used in image processing that assigns the value of the nearest pixel to the output pixel when resizing an image.\n   * While fast, it can lead to lower quality outputs with noticeable pixelation, especially at larger scaling factors.\n   */\n  ResizeStrategy[\"NEAREST_NEIGHBOR\"] = \"nearestNeighbor\";\n  /**\n   * Bilinear resizing is an image scaling method that uses the weighted average of the four nearest pixel values, providing smoother gradients than nearest neighbor resizing.\n   * It's computationally more intense than nearest neighbor but results in images of higher quality and fewer artifacts.\n   */\n  ResizeStrategy[\"BILINEAR\"] = \"bilinearInterpolation\";\n  /**\n   * Bicubic resizing is an image interpolation method that uses the values of the nearest 16 pixels in the input image to calculate the output pixel value, providing even more smoothness and sharpness than bilinear resizing.\n   * Although it's computationally more expensive than bilinear and nearest neighbor, it produces higher quality images, making it ideal for photographic image scaling.\n   */\n  ResizeStrategy[\"BICUBIC\"] = \"bicubicInterpolation\";\n  /**\n   * Hermite resizing is an image resizing method that uses Hermite interpolation, a mathematical formula, to determine the values of output pixels based on a weighted average of the surrounding pixels.\n   * Although slower than some simpler techniques like bilinear or nearest neighbor, Hermite resizing can produce higher quality visuals and detailed renderings with less blurring.\n   */\n  ResizeStrategy[\"HERMITE\"] = \"hermiteInterpolation\";\n  ResizeStrategy[\"BEZIER\"] = \"bezierInterpolation\";\n})(ResizeStrategy || (ResizeStrategy = {}));\n", "// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\n// JavaScript Image Resizer (c) 2012 - Grant Galitz\n// Released to public domain 29 July 2013: https://github.com/grantgalitz/JS-Image-Resizer/issues/4\nfunction Resize(widthOriginal, heightOriginal, targetWidth, targetHeight, blendAlpha, interpolationPass, resizeCallback) {\n  this.widthOriginal = Math.abs(Math.floor(widthOriginal) || 0);\n  this.heightOriginal = Math.abs(Math.floor(heightOriginal) || 0);\n  this.targetWidth = Math.abs(Math.floor(targetWidth) || 0);\n  this.targetHeight = Math.abs(Math.floor(targetHeight) || 0);\n  this.colorChannels = blendAlpha ? 4 : 3;\n  this.interpolationPass = Boolean(interpolationPass);\n  this.resizeCallback = typeof resizeCallback === \"function\" ? resizeCallback : function () {};\n  this.targetWidthMultipliedByChannels = this.targetWidth * this.colorChannels;\n  this.originalWidthMultipliedByChannels = this.widthOriginal * this.colorChannels;\n  this.originalHeightMultipliedByChannels = this.heightOriginal * this.colorChannels;\n  this.widthPassResultSize = this.targetWidthMultipliedByChannels * this.heightOriginal;\n  this.finalResultSize = this.targetWidthMultipliedByChannels * this.targetHeight;\n  this.initialize();\n}\nResize.prototype.initialize = function () {\n  // Perform some checks:\n  if (this.widthOriginal > 0 && this.heightOriginal > 0 && this.targetWidth > 0 && this.targetHeight > 0) {\n    this.configurePasses();\n  } else {\n    console.log(this);\n    throw new Error(\"Invalid settings specified for the resizer.\");\n  }\n};\nResize.prototype.configurePasses = function () {\n  if (this.widthOriginal === this.targetWidth) {\n    // Bypass the width resizer pass:\n    this.resizeWidth = this.bypassResizer;\n  } else {\n    // Setup the width resizer pass:\n    this.ratioWeightWidthPass = this.widthOriginal / this.targetWidth;\n    if (this.ratioWeightWidthPass < 1 && this.interpolationPass) {\n      this.initializeFirstPassBuffers(true);\n      this.resizeWidth = this.colorChannels === 4 ? this.resizeWidthInterpolatedRGBA : this.resizeWidthInterpolatedRGB;\n    } else {\n      this.initializeFirstPassBuffers(false);\n      this.resizeWidth = this.colorChannels === 4 ? this.resizeWidthRGBA : this.resizeWidthRGB;\n    }\n  }\n  if (this.heightOriginal === this.targetHeight) {\n    // Bypass the height resizer pass:\n    this.resizeHeight = this.bypassResizer;\n  } else {\n    // Setup the height resizer pass:\n    this.ratioWeightHeightPass = this.heightOriginal / this.targetHeight;\n    if (this.ratioWeightHeightPass < 1 && this.interpolationPass) {\n      this.initializeSecondPassBuffers(true);\n      this.resizeHeight = this.resizeHeightInterpolated;\n    } else {\n      this.initializeSecondPassBuffers(false);\n      this.resizeHeight = this.colorChannels === 4 ? this.resizeHeightRGBA : this.resizeHeightRGB;\n    }\n  }\n};\nResize.prototype._resizeWidthInterpolatedRGBChannels = function (buffer, fourthChannel) {\n  const channelsNum = fourthChannel ? 4 : 3;\n  const ratioWeight = this.ratioWeightWidthPass;\n  const outputBuffer = this.widthBuffer;\n  let weight = 0;\n  let finalOffset = 0;\n  let pixelOffset = 0;\n  let firstWeight = 0;\n  let secondWeight = 0;\n  let targetPosition;\n  // Handle for only one interpolation input being valid for start calculation:\n  for (targetPosition = 0; weight < 1 / 3; targetPosition += channelsNum, weight += ratioWeight) {\n    for (finalOffset = targetPosition, pixelOffset = 0; finalOffset < this.widthPassResultSize; pixelOffset += this.originalWidthMultipliedByChannels, finalOffset += this.targetWidthMultipliedByChannels) {\n      outputBuffer[finalOffset] = buffer[pixelOffset];\n      outputBuffer[finalOffset + 1] = buffer[pixelOffset + 1];\n      outputBuffer[finalOffset + 2] = buffer[pixelOffset + 2];\n      if (fourthChannel) outputBuffer[finalOffset + 3] = buffer[pixelOffset + 3];\n    }\n  }\n  // Adjust for overshoot of the last pass's counter:\n  weight -= 1 / 3;\n  let interpolationWidthSourceReadStop;\n  for (interpolationWidthSourceReadStop = this.widthOriginal - 1; weight < interpolationWidthSourceReadStop; targetPosition += channelsNum, weight += ratioWeight) {\n    // Calculate weightings:\n    secondWeight = weight % 1;\n    firstWeight = 1 - secondWeight;\n    // Interpolate:\n    for (finalOffset = targetPosition, pixelOffset = Math.floor(weight) * channelsNum; finalOffset < this.widthPassResultSize; pixelOffset += this.originalWidthMultipliedByChannels, finalOffset += this.targetWidthMultipliedByChannels) {\n      outputBuffer[finalOffset + 0] = buffer[pixelOffset + 0] * firstWeight + buffer[pixelOffset + channelsNum + 0] * secondWeight;\n      outputBuffer[finalOffset + 1] = buffer[pixelOffset + 1] * firstWeight + buffer[pixelOffset + channelsNum + 1] * secondWeight;\n      outputBuffer[finalOffset + 2] = buffer[pixelOffset + 2] * firstWeight + buffer[pixelOffset + channelsNum + 2] * secondWeight;\n      if (fourthChannel) outputBuffer[finalOffset + 3] = buffer[pixelOffset + 3] * firstWeight + buffer[pixelOffset + channelsNum + 3] * secondWeight;\n    }\n  }\n  // Handle for only one interpolation input being valid for end calculation:\n  for (interpolationWidthSourceReadStop = this.originalWidthMultipliedByChannels - channelsNum; targetPosition < this.targetWidthMultipliedByChannels; targetPosition += channelsNum) {\n    for (finalOffset = targetPosition, pixelOffset = interpolationWidthSourceReadStop; finalOffset < this.widthPassResultSize; pixelOffset += this.originalWidthMultipliedByChannels, finalOffset += this.targetWidthMultipliedByChannels) {\n      outputBuffer[finalOffset] = buffer[pixelOffset];\n      outputBuffer[finalOffset + 1] = buffer[pixelOffset + 1];\n      outputBuffer[finalOffset + 2] = buffer[pixelOffset + 2];\n      if (fourthChannel) outputBuffer[finalOffset + 3] = buffer[pixelOffset + 3];\n    }\n  }\n  return outputBuffer;\n};\nResize.prototype._resizeWidthRGBChannels = function (buffer, fourthChannel) {\n  const channelsNum = fourthChannel ? 4 : 3;\n  const ratioWeight = this.ratioWeightWidthPass;\n  const ratioWeightDivisor = 1 / ratioWeight;\n  const nextLineOffsetOriginalWidth = this.originalWidthMultipliedByChannels - channelsNum + 1;\n  const nextLineOffsetTargetWidth = this.targetWidthMultipliedByChannels - channelsNum + 1;\n  const output = this.outputWidthWorkBench;\n  const outputBuffer = this.widthBuffer;\n  const trustworthyColorsCount = this.outputWidthWorkBenchOpaquePixelsCount;\n  let weight = 0;\n  let amountToNext = 0;\n  let actualPosition = 0;\n  let currentPosition = 0;\n  let line = 0;\n  let pixelOffset = 0;\n  let outputOffset = 0;\n  let multiplier = 1;\n  let r = 0;\n  let g = 0;\n  let b = 0;\n  let a = 0;\n  do {\n    for (line = 0; line < this.originalHeightMultipliedByChannels;) {\n      output[line++] = 0;\n      output[line++] = 0;\n      output[line++] = 0;\n      if (fourthChannel) {\n        output[line++] = 0;\n        trustworthyColorsCount[line / channelsNum - 1] = 0;\n      }\n    }\n    weight = ratioWeight;\n    do {\n      amountToNext = 1 + actualPosition - currentPosition;\n      multiplier = Math.min(weight, amountToNext);\n      for (line = 0, pixelOffset = actualPosition; line < this.originalHeightMultipliedByChannels; pixelOffset += nextLineOffsetOriginalWidth) {\n        r = buffer[pixelOffset];\n        g = buffer[++pixelOffset];\n        b = buffer[++pixelOffset];\n        a = fourthChannel ? buffer[++pixelOffset] : 255;\n        // Ignore RGB values if pixel is completely transparent\n        output[line++] += (a ? r : 0) * multiplier;\n        output[line++] += (a ? g : 0) * multiplier;\n        output[line++] += (a ? b : 0) * multiplier;\n        if (fourthChannel) {\n          output[line++] += a * multiplier;\n          trustworthyColorsCount[line / channelsNum - 1] += a ? multiplier : 0;\n        }\n      }\n      if (weight >= amountToNext) {\n        actualPosition += channelsNum;\n        currentPosition = actualPosition;\n        weight -= amountToNext;\n      } else {\n        currentPosition += weight;\n        break;\n      }\n    } while (weight > 0 && actualPosition < this.originalWidthMultipliedByChannels);\n    for (line = 0, pixelOffset = outputOffset; line < this.originalHeightMultipliedByChannels; pixelOffset += nextLineOffsetTargetWidth) {\n      weight = fourthChannel ? trustworthyColorsCount[line / channelsNum] : 1;\n      multiplier = fourthChannel ? weight ? 1 / weight : 0 : ratioWeightDivisor;\n      outputBuffer[pixelOffset] = output[line++] * multiplier;\n      outputBuffer[++pixelOffset] = output[line++] * multiplier;\n      outputBuffer[++pixelOffset] = output[line++] * multiplier;\n      if (fourthChannel) outputBuffer[++pixelOffset] = output[line++] * ratioWeightDivisor;\n    }\n    outputOffset += channelsNum;\n  } while (outputOffset < this.targetWidthMultipliedByChannels);\n  return outputBuffer;\n};\nResize.prototype._resizeHeightRGBChannels = function (buffer, fourthChannel) {\n  const ratioWeight = this.ratioWeightHeightPass;\n  const ratioWeightDivisor = 1 / ratioWeight;\n  const output = this.outputHeightWorkBench;\n  const outputBuffer = this.heightBuffer;\n  const trustworthyColorsCount = this.outputHeightWorkBenchOpaquePixelsCount;\n  let weight = 0;\n  let amountToNext = 0;\n  let actualPosition = 0;\n  let currentPosition = 0;\n  let pixelOffset = 0;\n  let outputOffset = 0;\n  let caret = 0;\n  let multiplier = 1;\n  let r = 0;\n  let g = 0;\n  let b = 0;\n  let a = 0;\n  do {\n    for (pixelOffset = 0; pixelOffset < this.targetWidthMultipliedByChannels;) {\n      output[pixelOffset++] = 0;\n      output[pixelOffset++] = 0;\n      output[pixelOffset++] = 0;\n      if (fourthChannel) {\n        output[pixelOffset++] = 0;\n        trustworthyColorsCount[pixelOffset / 4 - 1] = 0;\n      }\n    }\n    weight = ratioWeight;\n    do {\n      amountToNext = 1 + actualPosition - currentPosition;\n      multiplier = Math.min(weight, amountToNext);\n      caret = actualPosition;\n      for (pixelOffset = 0; pixelOffset < this.targetWidthMultipliedByChannels;) {\n        r = buffer[caret++];\n        g = buffer[caret++];\n        b = buffer[caret++];\n        a = fourthChannel ? buffer[caret++] : 255;\n        // Ignore RGB values if pixel is completely transparent\n        output[pixelOffset++] += (a ? r : 0) * multiplier;\n        output[pixelOffset++] += (a ? g : 0) * multiplier;\n        output[pixelOffset++] += (a ? b : 0) * multiplier;\n        if (fourthChannel) {\n          output[pixelOffset++] += a * multiplier;\n          trustworthyColorsCount[pixelOffset / 4 - 1] += a ? multiplier : 0;\n        }\n      }\n      if (weight >= amountToNext) {\n        actualPosition = caret;\n        currentPosition = actualPosition;\n        weight -= amountToNext;\n      } else {\n        currentPosition += weight;\n        break;\n      }\n    } while (weight > 0 && actualPosition < this.widthPassResultSize);\n    for (pixelOffset = 0; pixelOffset < this.targetWidthMultipliedByChannels;) {\n      weight = fourthChannel ? trustworthyColorsCount[pixelOffset / 4] : 1;\n      multiplier = fourthChannel ? weight ? 1 / weight : 0 : ratioWeightDivisor;\n      outputBuffer[outputOffset++] = Math.round(output[pixelOffset++] * multiplier);\n      outputBuffer[outputOffset++] = Math.round(output[pixelOffset++] * multiplier);\n      outputBuffer[outputOffset++] = Math.round(output[pixelOffset++] * multiplier);\n      if (fourthChannel) {\n        outputBuffer[outputOffset++] = Math.round(output[pixelOffset++] * ratioWeightDivisor);\n      }\n    }\n  } while (outputOffset < this.finalResultSize);\n  return outputBuffer;\n};\nResize.prototype.resizeWidthInterpolatedRGB = function (buffer) {\n  return this._resizeWidthInterpolatedRGBChannels(buffer, false);\n};\nResize.prototype.resizeWidthInterpolatedRGBA = function (buffer) {\n  return this._resizeWidthInterpolatedRGBChannels(buffer, true);\n};\nResize.prototype.resizeWidthRGB = function (buffer) {\n  return this._resizeWidthRGBChannels(buffer, false);\n};\nResize.prototype.resizeWidthRGBA = function (buffer) {\n  return this._resizeWidthRGBChannels(buffer, true);\n};\nResize.prototype.resizeHeightInterpolated = function (buffer) {\n  const ratioWeight = this.ratioWeightHeightPass;\n  const outputBuffer = this.heightBuffer;\n  let weight = 0;\n  let finalOffset = 0;\n  let pixelOffset = 0;\n  let pixelOffsetAccumulated = 0;\n  let pixelOffsetAccumulated2 = 0;\n  let firstWeight = 0;\n  let secondWeight = 0;\n  let interpolationHeightSourceReadStop;\n  // Handle for only one interpolation input being valid for start calculation:\n  for (; weight < 1 / 3; weight += ratioWeight) {\n    for (pixelOffset = 0; pixelOffset < this.targetWidthMultipliedByChannels;) {\n      outputBuffer[finalOffset++] = Math.round(buffer[pixelOffset++]);\n    }\n  }\n  // Adjust for overshoot of the last pass's counter:\n  weight -= 1 / 3;\n  for (interpolationHeightSourceReadStop = this.heightOriginal - 1; weight < interpolationHeightSourceReadStop; weight += ratioWeight) {\n    // Calculate weightings:\n    secondWeight = weight % 1;\n    firstWeight = 1 - secondWeight;\n    // Interpolate:\n    pixelOffsetAccumulated = Math.floor(weight) * this.targetWidthMultipliedByChannels;\n    pixelOffsetAccumulated2 = pixelOffsetAccumulated + this.targetWidthMultipliedByChannels;\n    for (pixelOffset = 0; pixelOffset < this.targetWidthMultipliedByChannels; ++pixelOffset) {\n      outputBuffer[finalOffset++] = Math.round(buffer[pixelOffsetAccumulated++] * firstWeight + buffer[pixelOffsetAccumulated2++] * secondWeight);\n    }\n  }\n  // Handle for only one interpolation input being valid for end calculation:\n  while (finalOffset < this.finalResultSize) {\n    for (pixelOffset = 0, pixelOffsetAccumulated = interpolationHeightSourceReadStop * this.targetWidthMultipliedByChannels; pixelOffset < this.targetWidthMultipliedByChannels; ++pixelOffset) {\n      outputBuffer[finalOffset++] = Math.round(buffer[pixelOffsetAccumulated++]);\n    }\n  }\n  return outputBuffer;\n};\nResize.prototype.resizeHeightRGB = function (buffer) {\n  return this._resizeHeightRGBChannels(buffer, false);\n};\nResize.prototype.resizeHeightRGBA = function (buffer) {\n  return this._resizeHeightRGBChannels(buffer, true);\n};\nResize.prototype.resize = function (buffer) {\n  this.resizeCallback(this.resizeHeight(this.resizeWidth(buffer)));\n};\nResize.prototype.bypassResizer = function (buffer) {\n  // Just return the buffer passed:\n  return buffer;\n};\nResize.prototype.initializeFirstPassBuffers = function (BILINEARAlgo) {\n  // Initialize the internal width pass buffers:\n  this.widthBuffer = this.generateFloatBuffer(this.widthPassResultSize);\n  if (!BILINEARAlgo) {\n    this.outputWidthWorkBench = this.generateFloatBuffer(this.originalHeightMultipliedByChannels);\n    if (this.colorChannels > 3) {\n      this.outputWidthWorkBenchOpaquePixelsCount = this.generateFloat64Buffer(this.heightOriginal);\n    }\n  }\n};\nResize.prototype.initializeSecondPassBuffers = function (BILINEARAlgo) {\n  // Initialize the internal height pass buffers:\n  this.heightBuffer = this.generateUint8Buffer(this.finalResultSize);\n  if (!BILINEARAlgo) {\n    this.outputHeightWorkBench = this.generateFloatBuffer(this.targetWidthMultipliedByChannels);\n    if (this.colorChannels > 3) {\n      this.outputHeightWorkBenchOpaquePixelsCount = this.generateFloat64Buffer(this.targetWidth);\n    }\n  }\n};\nResize.prototype.generateFloatBuffer = function (bufferLength) {\n  // Generate a float32 typed array buffer:\n  try {\n    return new Float32Array(bufferLength);\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n};\nResize.prototype.generateFloat64Buffer = function (bufferLength) {\n  // Generate a float64 typed array buffer:\n  try {\n    return new Float64Array(bufferLength);\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n};\nResize.prototype.generateUint8Buffer = function (bufferLength) {\n  // Generate a uint8 typed array buffer:\n  try {\n    return new Uint8Array(bufferLength);\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n};\nexport default Resize;\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Copyright (c) 2015 Guyon Roche\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport const operations = {\n  nearestNeighbor(src, dst) {\n    const wSrc = src.width;\n    const hSrc = src.height;\n    const wDst = dst.width;\n    const hDst = dst.height;\n    const bufSrc = src.data;\n    const bufDst = dst.data;\n    for (let i = 0; i < hDst; i++) {\n      for (let j = 0; j < wDst; j++) {\n        let posDst = (i * wDst + j) * 4;\n        const iSrc = Math.floor(i * hSrc / hDst);\n        const jSrc = Math.floor(j * wSrc / wDst);\n        let posSrc = (iSrc * wSrc + jSrc) * 4;\n        bufDst[posDst++] = bufSrc[posSrc++];\n        bufDst[posDst++] = bufSrc[posSrc++];\n        bufDst[posDst++] = bufSrc[posSrc++];\n        bufDst[posDst++] = bufSrc[posSrc++];\n      }\n    }\n  },\n  bilinearInterpolation(src, dst) {\n    const wSrc = src.width;\n    const hSrc = src.height;\n    const wDst = dst.width;\n    const hDst = dst.height;\n    const bufSrc = src.data;\n    const bufDst = dst.data;\n    const interpolate = function (k, kMin, vMin, kMax, vMax) {\n      // special case - k is integer\n      if (kMin === kMax) {\n        return vMin;\n      }\n      return Math.round((k - kMin) * vMax + (kMax - k) * vMin);\n    };\n    const assign = function (pos, offset, x, xMin, xMax, y, yMin, yMax) {\n      let posMin = (yMin * wSrc + xMin) * 4 + offset;\n      let posMax = (yMin * wSrc + xMax) * 4 + offset;\n      const vMin = interpolate(x, xMin, bufSrc[posMin], xMax, bufSrc[posMax]);\n      // special case, y is integer\n      if (yMax === yMin) {\n        bufDst[pos + offset] = vMin;\n      } else {\n        posMin = (yMax * wSrc + xMin) * 4 + offset;\n        posMax = (yMax * wSrc + xMax) * 4 + offset;\n        const vMax = interpolate(x, xMin, bufSrc[posMin], xMax, bufSrc[posMax]);\n        bufDst[pos + offset] = interpolate(y, yMin, vMin, yMax, vMax);\n      }\n    };\n    for (let i = 0; i < hDst; i++) {\n      for (let j = 0; j < wDst; j++) {\n        const posDst = (i * wDst + j) * 4;\n        // x & y in src coordinates\n        const x = j * wSrc / wDst;\n        const xMin = Math.floor(x);\n        const xMax = Math.min(Math.ceil(x), wSrc - 1);\n        const y = i * hSrc / hDst;\n        const yMin = Math.floor(y);\n        const yMax = Math.min(Math.ceil(y), hSrc - 1);\n        assign(posDst, 0, x, xMin, xMax, y, yMin, yMax);\n        assign(posDst, 1, x, xMin, xMax, y, yMin, yMax);\n        assign(posDst, 2, x, xMin, xMax, y, yMin, yMax);\n        assign(posDst, 3, x, xMin, xMax, y, yMin, yMax);\n      }\n    }\n  },\n  _interpolate2D(src, dst, options, interpolate) {\n    const bufSrc = src.data;\n    const bufDst = dst.data;\n    const wSrc = src.width;\n    const hSrc = src.height;\n    const wDst = dst.width;\n    const hDst = dst.height;\n    // when dst smaller than src/2, interpolate first to a multiple between 0.5 and 1.0 src, then sum squares\n    const wM = Math.max(1, Math.floor(wSrc / wDst));\n    const wDst2 = wDst * wM;\n    const hM = Math.max(1, Math.floor(hSrc / hDst));\n    const hDst2 = hDst * hM;\n    // ===========================================================\n    // Pass 1 - interpolate rows\n    // buf1 has width of dst2 and height of src\n    const buf1 = Buffer.alloc(wDst2 * hSrc * 4);\n    for (let i = 0; i < hSrc; i++) {\n      for (let j = 0; j < wDst2; j++) {\n        // i in src coords, j in dst coords\n        // calculate x in src coords\n        // this interpolation requires 4 sample points and the two inner ones must be real\n        // the outer points can be fudged for the edges.\n        // therefore (wSrc-1)/wDst2\n        const x = j * (wSrc - 1) / wDst2;\n        const xPos = Math.floor(x);\n        const t = x - xPos;\n        const srcPos = (i * wSrc + xPos) * 4;\n        const buf1Pos = (i * wDst2 + j) * 4;\n        for (let k = 0; k < 4; k++) {\n          const kPos = srcPos + k;\n          const x0 = xPos > 0 ? bufSrc[kPos - 4] : 2 * bufSrc[kPos] - bufSrc[kPos + 4];\n          const x1 = bufSrc[kPos];\n          const x2 = bufSrc[kPos + 4];\n          const x3 = xPos < wSrc - 2 ? bufSrc[kPos + 8] : 2 * bufSrc[kPos + 4] - bufSrc[kPos];\n          buf1[buf1Pos + k] = interpolate(x0, x1, x2, x3, t);\n        }\n      }\n    }\n    // this._writeFile(wDst2, hSrc, buf1, \"out/buf1.jpg\");\n    // ===========================================================\n    // Pass 2 - interpolate columns\n    // buf2 has width and height of dst2\n    const buf2 = Buffer.alloc(wDst2 * hDst2 * 4);\n    for (let i = 0; i < hDst2; i++) {\n      for (let j = 0; j < wDst2; j++) {\n        // i&j in dst2 coords\n        // calculate y in buf1 coords\n        // this interpolation requires 4 sample points and the two inner ones must be real\n        // the outer points can be fudged for the edges.\n        // therefore (hSrc-1)/hDst2\n        const y = i * (hSrc - 1) / hDst2;\n        const yPos = Math.floor(y);\n        const t = y - yPos;\n        const buf1Pos = (yPos * wDst2 + j) * 4;\n        const buf2Pos = (i * wDst2 + j) * 4;\n        for (let k = 0; k < 4; k++) {\n          const kPos = buf1Pos + k;\n          const y0 = yPos > 0 ? buf1[kPos - wDst2 * 4] : 2 * buf1[kPos] - buf1[kPos + wDst2 * 4];\n          const y1 = buf1[kPos];\n          const y2 = buf1[kPos + wDst2 * 4];\n          const y3 = yPos < hSrc - 2 ? buf1[kPos + wDst2 * 8] : 2 * buf1[kPos + wDst2 * 4] - buf1[kPos];\n          buf2[buf2Pos + k] = interpolate(y0, y1, y2, y3, t);\n        }\n      }\n    }\n    // this._writeFile(wDst2, hDst2, buf2, \"out/buf2.jpg\");\n    // ===========================================================\n    // Pass 3 - scale to dst\n    const m = wM * hM;\n    if (m > 1) {\n      for (let i = 0; i < hDst; i++) {\n        for (let j = 0; j < wDst; j++) {\n          // i&j in dst bounded coords\n          let r = 0;\n          let g = 0;\n          let b = 0;\n          let a = 0;\n          let realColors = 0;\n          for (let y = 0; y < hM; y++) {\n            const yPos = i * hM + y;\n            for (let x = 0; x < wM; x++) {\n              const xPos = j * wM + x;\n              const xyPos = (yPos * wDst2 + xPos) * 4;\n              const pixelAlpha = buf2[xyPos + 3];\n              if (pixelAlpha) {\n                r += buf2[xyPos];\n                g += buf2[xyPos + 1];\n                b += buf2[xyPos + 2];\n                realColors++;\n              }\n              a += pixelAlpha;\n            }\n          }\n          const pos = (i * wDst + j) * 4;\n          bufDst[pos] = realColors ? Math.round(r / realColors) : 0;\n          bufDst[pos + 1] = realColors ? Math.round(g / realColors) : 0;\n          bufDst[pos + 2] = realColors ? Math.round(b / realColors) : 0;\n          bufDst[pos + 3] = Math.round(a / m);\n        }\n      }\n    } else {\n      // replace dst buffer with buf2\n      dst.data = buf2;\n    }\n  },\n  bicubicInterpolation(src, dst, options) {\n    const interpolateCubic = function (x0, x1, x2, x3, t) {\n      const a0 = x3 - x2 - x0 + x1;\n      const a1 = x0 - x1 - a0;\n      const a2 = x2 - x0;\n      const a3 = x1;\n      return Math.max(0, Math.min(255, a0 * (t * t * t) + a1 * (t * t) + a2 * t + a3));\n    };\n    return this._interpolate2D(src, dst, options, interpolateCubic);\n  },\n  hermiteInterpolation(src, dst, options) {\n    const interpolateHermite = function (x0, x1, x2, x3, t) {\n      const c0 = x1;\n      const c1 = 0.5 * (x2 - x0);\n      const c2 = x0 - 2.5 * x1 + 2 * x2 - 0.5 * x3;\n      const c3 = 0.5 * (x3 - x0) + 1.5 * (x1 - x2);\n      return Math.max(0, Math.min(255, Math.round(((c3 * t + c2) * t + c1) * t + c0)));\n    };\n    return this._interpolate2D(src, dst, options, interpolateHermite);\n  },\n  bezierInterpolation(src, dst, options) {\n    // between 2 points y(n), y(n+1), use next points out, y(n-1), y(n+2)\n    // to predict control points (a & b) to be placed at n+0.5\n    //  ya(n) = y(n) + (y(n+1)-y(n-1))/4\n    //  yb(n) = y(n+1) - (y(n+2)-y(n))/4\n    // then use std bezier to interpolate [n,n+1)\n    //  y(n+t) = y(n)*(1-t)^3 + 3 * ya(n)*(1-t)^2*t + 3 * yb(n)*(1-t)*t^2 + y(n+1)*t^3\n    //  note the 3* factor for the two control points\n    // for edge cases, can choose:\n    //  y(-1) = y(0) - 2*(y(1)-y(0))\n    //  y(w) = y(w-1) + 2*(y(w-1)-y(w-2))\n    // but can go with y(-1) = y(0) and y(w) = y(w-1)\n    const interpolateBezier = function (x0, x1, x2, x3, t) {\n      // x1, x2 are the knots, use x0 and x3 to calculate control points\n      const cp1 = x1 + (x2 - x0) / 4;\n      const cp2 = x2 - (x3 - x1) / 4;\n      const nt = 1 - t;\n      const c0 = x1 * nt * nt * nt;\n      const c1 = 3 * cp1 * nt * nt * t;\n      const c2 = 3 * cp2 * nt * t * t;\n      const c3 = x2 * t * t * t;\n      return Math.max(0, Math.min(255, Math.round(c0 + c1 + c2 + c3)));\n    };\n    return this._interpolate2D(src, dst, options, interpolateBezier);\n  }\n};\n", "import { ResizeStrategy } from \"./constants.js\";\nimport { z } from \"zod\";\nimport Resize from \"./modules/resize.js\";\nimport { operations as Resize2 } from \"./modules/resize2.js\";\nexport * from \"./constants.js\";\nconst ResizeOptionsSchema = z.union([z.object({\n  /** the width to resize the image to */\n  w: z.number().min(0),\n  /** the height to resize the image to */\n  h: z.number().min(0).optional(),\n  /** a scaling method (e.g. ResizeStrategy.BEZIER) */\n  mode: z.nativeEnum(ResizeStrategy).optional()\n}), z.object({\n  /** the width to resize the image to */\n  w: z.number().min(0).optional(),\n  /** the height to resize the image to */\n  h: z.number().min(0),\n  /** a scaling method (e.g. ResizeStrategy.BEZIER) */\n  mode: z.nativeEnum(ResizeStrategy).optional()\n})]);\nconst ScaleToFitOptionsSchema = z.object({\n  /** the width to resize the image to */\n  w: z.number().min(0),\n  /** the height to resize the image to */\n  h: z.number().min(0),\n  /** a scaling method (e.g. Jimp.RESIZE_BEZIER) */\n  mode: z.nativeEnum(ResizeStrategy).optional()\n});\nconst ScaleComplexOptionsSchema = z.object({\n  /** the width to resize the image to */\n  f: z.number().min(0),\n  /** a scaling method (e.g. Jimp.RESIZE_BEZIER) */\n  mode: z.nativeEnum(ResizeStrategy).optional()\n});\nexport const methods = {\n  /**\n   * Resizes the image to a set width and height using a 2-pass bilinear algorithm\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.resize({ w: 150 });\n   * ```\n   */\n  resize(image, options) {\n    const {\n      mode\n    } = ResizeOptionsSchema.parse(options);\n    let w;\n    let h;\n    if (typeof options.w === \"number\") {\n      w = options.w;\n      h = options.h ?? image.bitmap.height * (w / image.bitmap.width);\n    } else if (typeof options.h === \"number\") {\n      h = options.h;\n      w = options.w ?? image.bitmap.width * (h / image.bitmap.height);\n    } else {\n      throw new Error(\"w must be a number\");\n    }\n    // round inputs\n    w = Math.round(w) || 1;\n    h = Math.round(h) || 1;\n    if (mode && typeof Resize2[mode] === \"function\") {\n      const dst = {\n        data: Buffer.alloc(w * h * 4),\n        width: w,\n        height: h\n      };\n      Resize2[mode](image.bitmap, dst);\n      image.bitmap = dst;\n    } else {\n      const resize = new Resize(image.bitmap.width, image.bitmap.height, w, h, true, true, buffer => {\n        image.bitmap.data = Buffer.from(buffer);\n        image.bitmap.width = w;\n        image.bitmap.height = h;\n      });\n      resize.resize(image.bitmap.data);\n    }\n    return image;\n  },\n  /**\n   * Uniformly scales the image by a factor.\n   * @param f the factor to scale the image by\n   * @param mode (optional) a scaling method (e.g. Jimp.RESIZE_BEZIER)\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.scale(0.5);\n   * ```\n   */\n  scale(image, options) {\n    const {\n      f,\n      mode\n    } = typeof options === \"number\" ? {\n      f: options\n    } : ScaleComplexOptionsSchema.parse(options);\n    const w = image.bitmap.width * f;\n    const h = image.bitmap.height * f;\n    return this.resize(image, {\n      w,\n      h,\n      mode: mode\n    });\n  },\n  /**\n   * Scale the image to the largest size that fits inside the rectangle that has the given width and height.\n   * @param w the width to resize the image to\n   * @param h the height to resize the image to\n   * @param mode a scaling method (e.g. ResizeStrategy.BEZIER)\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.scaleToFit(100, 100);\n   * ```\n   */\n  scaleToFit(image, options) {\n    const {\n      h,\n      w,\n      mode\n    } = ScaleToFitOptionsSchema.parse(options);\n    const f = w / h > image.bitmap.width / image.bitmap.height ? h / image.bitmap.height : w / image.bitmap.width;\n    return this.scale(image, {\n      f,\n      mode: mode\n    });\n  }\n};\n", "import { HorizontalAlign, VerticalAlign } from \"@jimp/core\";\nimport { clone } from \"@jimp/utils\";\nimport { ResizeStrategy, methods as resizeMethods } from \"@jimp/plugin-resize\";\nimport { methods as blitMethods } from \"@jimp/plugin-blit\";\nimport { z } from \"zod\";\nconst ContainOptionsSchema = z.object({\n  /** the width to resize the image to */\n  w: z.number(),\n  /** the height to resize the image to */\n  h: z.number(),\n  /** A bitmask for horizontal and vertical alignment */\n  align: z.number().optional(),\n  /** a scaling method (e.g. Jimp.RESIZE_BEZIER) */\n  mode: z.nativeEnum(ResizeStrategy).optional()\n});\nexport const methods = {\n  /**\n   * Scale the image to the given width and height keeping the aspect ratio. Some parts of the image may be letter boxed.\n   * @param w the width to resize the image to\n   * @param h the height to resize the image to\n   * @param align A bitmask for horizontal and vertical alignment\n   * @param mode a scaling method (e.g. Jimp.RESIZE_BEZIER)\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.contain({ w: 150, h: 100 });\n   * ```\n   */\n  contain(image, options) {\n    const {\n      w,\n      h,\n      align = HorizontalAlign.CENTER | VerticalAlign.MIDDLE,\n      mode\n    } = ContainOptionsSchema.parse(options);\n    const hbits = align & (1 << 3) - 1;\n    const vbits = align >> 3;\n    // check if more flags than one is in the bit sets\n    if (!(hbits !== 0 && !(hbits & hbits - 1) || vbits !== 0 && !(vbits & vbits - 1))) {\n      throw new Error(\"only use one flag per alignment direction\");\n    }\n    const alignH = hbits >> 1; // 0, 1, 2\n    const alignV = vbits >> 1; // 0, 1, 2\n    const f = w / h > image.bitmap.width / image.bitmap.height ? h / image.bitmap.height : w / image.bitmap.width;\n    const c = resizeMethods.scale(clone(image), {\n      f,\n      mode\n    });\n    image = resizeMethods.resize(image, {\n      w,\n      h,\n      mode\n    });\n    image.scan((_, __, idx) => {\n      image.bitmap.data.writeUInt32BE(image.background, idx);\n    });\n    image = blitMethods.blit(image, {\n      src: c,\n      x: (image.bitmap.width - c.bitmap.width) / 2 * alignH,\n      y: (image.bitmap.height - c.bitmap.height) / 2 * alignV\n    });\n    return image;\n  }\n};\n", "import { colorDiff, intToRGBA, scan } from \"@jimp/utils\";\nimport { z } from \"zod\";\nexport const CropOptionsSchema = z.object({\n  /** the x position to crop form */\n  x: z.number(),\n  /** the y position to crop form */\n  y: z.number(),\n  /** the width to crop form */\n  w: z.number(),\n  /** the height to crop form */\n  h: z.number()\n});\nconst AutocropComplexOptionsSchema = z.object({\n  /** percent of color difference tolerance (default value) */\n  tolerance: z.number().min(0).max(1).optional(),\n  /** flag to force cropping only if the image has a real \"frame\" i.e. all 4 sides have some border (default value) */\n  cropOnlyFrames: z.boolean().optional(),\n  /** force cropping top be symmetric */\n  cropSymmetric: z.boolean().optional(),\n  /** Amount of pixels in border to leave */\n  leaveBorder: z.number().optional(),\n  ignoreSides: z.object({\n    north: z.boolean().optional(),\n    south: z.boolean().optional(),\n    east: z.boolean().optional(),\n    west: z.boolean().optional()\n  }).optional()\n});\nexport const methods = {\n  /**\n   * Crops the image at a given point to a give size.\n   *\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   * const cropped = image.crop(150, 100);\n   * ```\n   */\n  crop(image, options) {\n    let {\n      x,\n      y,\n      w,\n      h\n    } = CropOptionsSchema.parse(options);\n    // round input\n    x = Math.round(x);\n    y = Math.round(y);\n    w = Math.round(w);\n    h = Math.round(h);\n    if (x === 0 && w === image.bitmap.width) {\n      // shortcut\n      const start = w * y + x << 2;\n      const end = start + (h * w << 2);\n      image.bitmap.data = image.bitmap.data.slice(start, end);\n    } else {\n      const bitmap = Buffer.allocUnsafe(w * h * 4);\n      let offset = 0;\n      scan(image, x, y, w, h, function (_, __, idx) {\n        const data = image.bitmap.data.readUInt32BE(idx);\n        bitmap.writeUInt32BE(data, offset);\n        offset += 4;\n      });\n      image.bitmap.data = bitmap;\n    }\n    image.bitmap.width = w;\n    image.bitmap.height = h;\n    return image;\n  },\n  /**\n   * Autocrop same color borders from this image.\n   * This function will attempt to crop out transparent pixels from the image.\n   *\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   * const cropped = image.autocrop();\n   * ```\n   */\n  autocrop(image, options = {}) {\n    const {\n      tolerance = 0.0002,\n      cropOnlyFrames = true,\n      cropSymmetric = false,\n      leaveBorder = 0,\n      ignoreSides: ignoreSidesArg\n    } = typeof options === \"number\" ? {\n      tolerance: options\n    } : AutocropComplexOptionsSchema.parse(options);\n    const w = image.bitmap.width;\n    const h = image.bitmap.height;\n    const minPixelsPerSide = 1; // to avoid cropping completely the image, resulting in an invalid 0 sized image\n    // i.e. north and south / east and west are cropped by the same value\n    const ignoreSides = {\n      north: false,\n      south: false,\n      east: false,\n      west: false,\n      ...ignoreSidesArg\n    };\n    /**\n     * All borders must be of the same color as the top left pixel, to be cropped.\n     * It should be possible to crop borders each with a different color,\n     * but since there are many ways for corners to intersect, it would\n     * introduce unnecessary complexity to the algorithm.\n     */\n    // scan each side for same color borders\n    let colorTarget = image.getPixelColor(0, 0); // top left pixel color is the target color\n    const rgba1 = intToRGBA(colorTarget);\n    // for north and east sides\n    let northPixelsToCrop = 0;\n    let eastPixelsToCrop = 0;\n    let southPixelsToCrop = 0;\n    let westPixelsToCrop = 0;\n    // north side (scan rows from north to south)\n    colorTarget = image.getPixelColor(0, 0);\n    if (!ignoreSides.north) {\n      north: for (let y = 0; y < h - minPixelsPerSide; y++) {\n        for (let x = 0; x < w; x++) {\n          const colorXY = image.getPixelColor(x, y);\n          const rgba2 = intToRGBA(colorXY);\n          if (colorDiff(rgba1, rgba2) > tolerance) {\n            // this pixel is too distant from the first one: abort this side scan\n            break north;\n          }\n        }\n        // this row contains all pixels with the same color: increment this side pixels to crop\n        northPixelsToCrop++;\n      }\n    }\n    // west side (scan columns from west to east)\n    colorTarget = image.getPixelColor(w, 0);\n    if (!ignoreSides.west) {\n      west: for (let x = 0; x < w - minPixelsPerSide; x++) {\n        for (let y = 0 + northPixelsToCrop; y < h; y++) {\n          const colorXY = image.getPixelColor(x, y);\n          const rgba2 = intToRGBA(colorXY);\n          if (colorDiff(rgba1, rgba2) > tolerance) {\n            // this pixel is too distant from the first one: abort this side scan\n            break west;\n          }\n        }\n        // this column contains all pixels with the same color: increment this side pixels to crop\n        westPixelsToCrop++;\n      }\n    }\n    // south side (scan rows from south to north)\n    colorTarget = image.getPixelColor(0, h);\n    if (!ignoreSides.south) {\n      south: for (let y = h - 1; y >= northPixelsToCrop + minPixelsPerSide; y--) {\n        for (let x = w - eastPixelsToCrop - 1; x >= 0; x--) {\n          const colorXY = image.getPixelColor(x, y);\n          const rgba2 = intToRGBA(colorXY);\n          if (colorDiff(rgba1, rgba2) > tolerance) {\n            // this pixel is too distant from the first one: abort this side scan\n            break south;\n          }\n        }\n        // this row contains all pixels with the same color: increment this side pixels to crop\n        southPixelsToCrop++;\n      }\n    }\n    // east side (scan columns from east to west)\n    colorTarget = image.getPixelColor(w, h);\n    if (!ignoreSides.east) {\n      east: for (let x = w - 1; x >= 0 + westPixelsToCrop + minPixelsPerSide; x--) {\n        for (let y = h - 1; y >= 0 + northPixelsToCrop; y--) {\n          const colorXY = image.getPixelColor(x, y);\n          const rgba2 = intToRGBA(colorXY);\n          if (colorDiff(rgba1, rgba2) > tolerance) {\n            // this pixel is too distant from the first one: abort this side scan\n            break east;\n          }\n        }\n        // this column contains all pixels with the same color: increment this side pixels to crop\n        eastPixelsToCrop++;\n      }\n    }\n    // decide if a crop is needed\n    let doCrop = false;\n    // apply leaveBorder\n    westPixelsToCrop -= leaveBorder;\n    eastPixelsToCrop -= leaveBorder;\n    northPixelsToCrop -= leaveBorder;\n    southPixelsToCrop -= leaveBorder;\n    if (cropSymmetric) {\n      const horizontal = Math.min(eastPixelsToCrop, westPixelsToCrop);\n      const vertical = Math.min(northPixelsToCrop, southPixelsToCrop);\n      westPixelsToCrop = horizontal;\n      eastPixelsToCrop = horizontal;\n      northPixelsToCrop = vertical;\n      southPixelsToCrop = vertical;\n    }\n    // make sure that crops are >= 0\n    westPixelsToCrop = westPixelsToCrop >= 0 ? westPixelsToCrop : 0;\n    eastPixelsToCrop = eastPixelsToCrop >= 0 ? eastPixelsToCrop : 0;\n    northPixelsToCrop = northPixelsToCrop >= 0 ? northPixelsToCrop : 0;\n    southPixelsToCrop = southPixelsToCrop >= 0 ? southPixelsToCrop : 0;\n    // safety checks\n    const widthOfRemainingPixels = w - (westPixelsToCrop + eastPixelsToCrop);\n    const heightOfRemainingPixels = h - (southPixelsToCrop + northPixelsToCrop);\n    if (cropOnlyFrames) {\n      // crop image if all sides should be cropped\n      doCrop = eastPixelsToCrop !== 0 && northPixelsToCrop !== 0 && westPixelsToCrop !== 0 && southPixelsToCrop !== 0;\n    } else {\n      // crop image if at least one side should be cropped\n      doCrop = eastPixelsToCrop !== 0 || northPixelsToCrop !== 0 || westPixelsToCrop !== 0 || southPixelsToCrop !== 0;\n    }\n    if (doCrop) {\n      // do the real crop\n      this.crop(image, {\n        x: westPixelsToCrop,\n        y: northPixelsToCrop,\n        w: widthOfRemainingPixels,\n        h: heightOfRemainingPixels\n      });\n    }\n    return image;\n  }\n};\n", "import { VerticalAlign, HorizontalAlign } from \"@jimp/core\";\nimport { ResizeStrategy, methods as resizeMethods } from \"@jimp/plugin-resize\";\nimport { methods as cropMethods } from \"@jimp/plugin-crop\";\nimport { z } from \"zod\";\nconst CoverOptionsSchema = z.object({\n  /** the width to resize the image to */\n  w: z.number(),\n  /** the height to resize the image to */\n  h: z.number(),\n  /** A bitmask for horizontal and vertical alignment */\n  align: z.number().optional(),\n  /** a scaling method (e.g. ResizeStrategy.BEZIER) */\n  mode: z.nativeEnum(ResizeStrategy).optional()\n});\nexport const methods = {\n  /**\n   * Scale the image so the given width and height keeping the aspect ratio. Some parts of the image may be clipped.\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.cover(150, 100);\n   * ```\n   */\n  cover(image, options) {\n    const {\n      w,\n      h,\n      align = HorizontalAlign.CENTER | VerticalAlign.MIDDLE,\n      mode\n    } = CoverOptionsSchema.parse(options);\n    const hbits = align & (1 << 3) - 1;\n    const vbits = align >> 3;\n    // check if more flags than one is in the bit sets\n    if (!(hbits !== 0 && !(hbits & hbits - 1) || vbits !== 0 && !(vbits & vbits - 1))) {\n      throw new Error(\"only use one flag per alignment direction\");\n    }\n    const alignH = hbits >> 1; // 0, 1, 2\n    const alignV = vbits >> 1; // 0, 1, 2\n    const f = w / h > image.bitmap.width / image.bitmap.height ? w / image.bitmap.width : h / image.bitmap.height;\n    image = resizeMethods.scale(image, {\n      f,\n      mode\n    });\n    image = cropMethods.crop(image, {\n      x: (image.bitmap.width - w) / 2 * alignH,\n      y: (image.bitmap.height - h) / 2 * alignV,\n      w,\n      h\n    });\n    return image;\n  }\n};\n", "import { JimpClassSchema } from \"@jimp/types\";\nimport { clone } from \"@jimp/utils\";\nimport { z } from \"zod\";\nconst DisplaceOptionsSchema = z.object({\n  /** the source Jimp instance */\n  map: JimpClassSchema,\n  /** the maximum displacement value */\n  offset: z.number()\n});\nexport const methods = {\n  /**\n   * Displaces the image based on the provided displacement map\n   * @param map the source Jimp instance\n   * @param offset\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   * const map = await Jimp.read(\"test/map.png\");\n   *\n   * image.displace(map, 10);\n   * ```\n   */\n  displace(image, options) {\n    const {\n      map,\n      offset\n    } = DisplaceOptionsSchema.parse(options);\n    const source = clone(image);\n    image.scan((x, y, idx) => {\n      let displacement = map.bitmap.data[idx] / 256 * offset;\n      displacement = Math.round(displacement);\n      const ids = image.getPixelIndex(x + displacement, y);\n      image.bitmap.data[ids] = source.bitmap.data[idx];\n      image.bitmap.data[ids + 1] = source.bitmap.data[idx + 1];\n      image.bitmap.data[ids + 2] = source.bitmap.data[idx + 2];\n    });\n    return image;\n  }\n};\n", "export const methods = {\n  /**\n   * Apply a ordered dithering effect.\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.dither();\n   * ```\n   */\n  dither(image) {\n    const rgb565Matrix = [1, 9, 3, 11, 13, 5, 15, 7, 4, 12, 2, 10, 16, 8, 14, 6];\n    image.scan((x, y, idx) => {\n      const thresholdId = ((y & 3) << 2) + x % 4;\n      const dither = rgb565Matrix[thresholdId];\n      image.bitmap.data[idx] = Math.min(image.bitmap.data[idx] + dither, 0xff);\n      image.bitmap.data[idx + 1] = Math.min(image.bitmap.data[idx + 1] + dither, 0xff);\n      image.bitmap.data[idx + 2] = Math.min(image.bitmap.data[idx + 2] + dither, 0xff);\n    });\n    return image;\n  }\n};\n", "import { clone } from \"@jimp/utils\";\nimport { z } from \"zod\";\nconst FisheyeOptionsSchema = z.object({\n  /** the radius of the circle */\n  radius: z.number().min(0).optional()\n});\nexport const methods = {\n  /**\n   * Adds a fisheye effect to the image.\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.fisheye();\n   * ```\n   */\n  fisheye(image, options = {}) {\n    const {\n      radius = 2.5\n    } = FisheyeOptionsSchema.parse(options);\n    const source = clone(image);\n    const {\n      width,\n      height\n    } = source.bitmap;\n    source.scan((x, y) => {\n      const hx = x / width;\n      const hy = y / height;\n      const rActual = Math.sqrt(Math.pow(hx - 0.5, 2) + Math.pow(hy - 0.5, 2));\n      const rn = 2 * Math.pow(rActual, radius);\n      const cosA = (hx - 0.5) / rActual;\n      const sinA = (hy - 0.5) / rActual;\n      const newX = Math.round((rn * cosA + 0.5) * width);\n      const newY = Math.round((rn * sinA + 0.5) * height);\n      const color = source.getPixelColor(newX, newY);\n      image.setPixelColor(color, x, y);\n    });\n    /* Set center pixel color, otherwise it will be transparent */\n    image.setPixelColor(source.getPixelColor(width / 2, height / 2), width / 2, height / 2);\n    return image;\n  }\n};\n", "import { z } from \"zod\";\nconst FlipOptionsSchema = z.object({\n  /** if true the image will be flipped horizontally */\n  horizontal: z.boolean().optional(),\n  /** if true the image will be flipped vertically */\n  vertical: z.boolean().optional()\n});\nexport const methods = {\n  /**\n   * Flip the image.\n   * @param horizontal a Boolean, if true the image will be flipped horizontally\n   * @param vertical a Boolean, if true the image will be flipped vertically\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.flip(true, false);\n   * ```\n   */\n  flip(image, options) {\n    const {\n      horizontal,\n      vertical\n    } = FlipOptionsSchema.parse(options);\n    const bitmap = Buffer.alloc(image.bitmap.data.length);\n    image.scan((x, y, idx) => {\n      const _x = horizontal ? image.bitmap.width - 1 - x : x;\n      const _y = vertical ? image.bitmap.height - 1 - y : y;\n      const _idx = image.bitmap.width * _y + _x << 2;\n      const data = image.bitmap.data.readUInt32BE(idx);\n      bitmap.writeUInt32BE(data, _idx);\n    });\n    image.bitmap.data = Buffer.from(bitmap);\n    return image;\n  }\n};\n", "import anyBase from \"any-base\";\nimport ImagePHash from \"./phash.js\";\n// an array storing the maximum string length of hashes at various bases\n// 0 and 1 do not exist as possible hash lengths\n// prettier-ignore\nconst alphabet = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_\";\n// an array storing the maximum string length of hashes at various bases\n// 0 and 1 do not exist as possible hash lengths\nconst maxHashLength = [NaN, NaN];\nfor (let i = 2; i < 65; i++) {\n  const maxHash = anyBase(anyBase.BIN, alphabet.slice(0, i))(new Array(64 + 1).join(\"1\"));\n  maxHashLength.push(maxHash.length);\n}\nexport const methods = {\n  /**\n   * Calculates the perceptual hash\n   * @returns the perceptual hash\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.hash();\n   * ```\n   */\n  pHash(image) {\n    const pHash = new ImagePHash();\n    return pHash.getHash(image);\n  },\n  /**\n   * Generates a perceptual hash of the image <https://en.wikipedia.org/wiki/Perceptual_hashing>. And pads the string. Can configure base.\n   * @param base A number between 2 and 64 representing the base for the hash (e.g. 2 is binary, 10 is decimal, 16 is hex, 64 is base 64). Defaults to 64.\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.hash(2); // binary\n   * image.hash(64); // base 64\n   * ```\n   */\n  hash(image, base = 64) {\n    if (base < 2 || base > 64) {\n      throw new Error(\"base must be a number between 2 and 64\");\n    }\n    const subAlphabet = alphabet.slice(0, base);\n    const pHash = this.pHash(image);\n    const maxLength = maxHashLength[base];\n    return anyBase(anyBase.BIN, subAlphabet)(pHash).padStart(maxLength, \"0\");\n  },\n  /**\n   * Calculates the hamming distance of the current image and a hash based on their perceptual hash\n   * @param compareHash hash to compare to\n   * @returns  a number ranging from 0 to 1, 0 means they are believed to be identical\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.distanceFromHash(image.pHash());\n   * ```\n   */\n  distanceFromHash(image, compareHash) {\n    const pHash = new ImagePHash();\n    const currentHash = pHash.getHash(image);\n    return pHash.distance(currentHash, compareHash);\n  }\n};\n/**\n * Calculates the hamming distance of two images based on their perceptual hash\n * @param img1 A Jimp image to compare\n * @param img2 A Jimp image to compare\n * @returns A number ranging from 0 to 1, 0 means they are believed to be identical\n * @example\n * ```ts\n * import { Jimp, distance } from \"jimp\";\n *\n * const image1 = await Jimp.read(\"test/image.png\");\n * const image2 = await Jimp.read(\"test/image.png\");\n *\n * distance(image1, image2); // 0.5\n * ```\n */\nexport function distance(img1, img2) {\n  const phash = new ImagePHash();\n  const hash1 = phash.getHash(img1);\n  const hash2 = phash.getHash(img2);\n  return phash.distance(hash1, hash2);\n}\n/**\n * Calculates the hamming distance of two images based on their perceptual hash\n * @param hash1 A pHash\n * @param hash2 A pHash\n * @returns A number ranging from 0 to 1, 0 means they are believed to be identical\n * @example\n * ```ts\n * import { Jimp, compareHashes } from \"jimp\";\n *\n * const image1 = await Jimp.read(\"test/image.png\");\n * const image2 = await Jimp.read(\"test/image.png\");\n *\n * compareHashes(image1.pHash(), image2.pHash()); // 0.5\n * ```\n */\nexport function compareHashes(hash1, hash2) {\n  const phash = new ImagePHash();\n  return phash.distance(hash1, hash2);\n}\n", "/*\nCopyright (c) 2011 Elliot Shepherd\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\nimport { methods as color } from \"@jimp/plugin-color\";\nimport { methods } from \"@jimp/plugin-resize\";\nimport { clone } from \"@jimp/utils\";\n// https://code.google.com/p/ironchef-team21/source/browse/ironchef_team21/src/ImagePHash.java\n/*\n * pHash-like image hash.\n * Author: Elliot Shepherd (elliot@jarofworms.com\n * Based On: http://www.hackerfactor.com/blog/index.php?/archives/432-Looks-Like-It.html\n */\nclass ImagePHash {\n  size;\n  smallerSize;\n  constructor(size, smallerSize) {\n    this.size = size || 32;\n    this.smallerSize = smallerSize || 8;\n    initCoefficients(this.size);\n  }\n  distance(s1, s2) {\n    let counter = 0;\n    for (let k = 0; k < s1.length; k++) {\n      if (s1[k] !== s2[k]) {\n        counter++;\n      }\n    }\n    return counter / s1.length;\n  }\n  /**\n   * Returns a 'binary string' (like. 001010111011100010) which is easy to do a hamming distance on.\n   */\n  getHash(img) {\n    /* 1. Reduce size.\n     * Like Average Hash, pHash starts with a small image.\n     * However, the image is larger than 8x8; 32x32 is a good size.\n     * This is really done to simplify the DCT computation and not\n     * because it is needed to reduce the high frequencies.\n     */\n    img = methods.resize(clone(img), {\n      w: this.size,\n      h: this.size\n    });\n    /* 2. Reduce color.\n     * The image is reduced to a grayscale just to further simplify\n     * the number of computations.\n     */\n    img = color.greyscale(img);\n    const vals = [];\n    for (let x = 0; x < img.bitmap.width; x++) {\n      const row = [];\n      for (let y = 0; y < img.bitmap.height; y++) {\n        row[y] = intToRGBA(img.getPixelColor(x, y)).b;\n      }\n      vals[x] = row;\n    }\n    /* 3. Compute the DCT.\n     * The DCT separates the image into a collection of frequencies\n     * and scalars. While JPEG uses an 8x8 DCT, this algorithm uses\n     * a 32x32 DCT.\n     */\n    const dctVals = applyDCT(vals, this.size);\n    /* 4. Reduce the DCT.\n     * This is the magic step. While the DCT is 32x32, just keep the\n     * top-left 8x8. Those represent the lowest frequencies in the\n     * picture.\n     */\n    /* 5. Compute the average value.\n     * Like the Average Hash, compute the mean DCT value (using only\n     * the 8x8 DCT low-frequency values and excluding the first term\n     * since the DC coefficient can be significantly different from\n     * the other values and will throw off the average).\n     */\n    let total = 0;\n    for (let x = 0; x < this.smallerSize; x++) {\n      for (let y = 0; y < this.smallerSize; y++) {\n        total += dctVals[x][y];\n      }\n    }\n    const avg = total / (this.smallerSize * this.smallerSize);\n    /* 6. Further reduce the DCT.\n     * This is the magic step. Set the 64 hash bits to 0 or 1\n     * depending on whether each of the 64 DCT values is above or\n     * below the average value. The result doesn't tell us the\n     * actual low frequencies; it just tells us the very-rough\n     * relative scale of the frequencies to the mean. The result\n     * will not vary as long as the overall structure of the image\n     * remains the same; this can survive gamma and color histogram\n     * adjustments without a problem.\n     */\n    let hash = \"\";\n    for (let x = 0; x < this.smallerSize; x++) {\n      for (let y = 0; y < this.smallerSize; y++) {\n        hash += dctVals[x][y] > avg ? \"1\" : \"0\";\n      }\n    }\n    return hash;\n  }\n}\n// DCT function stolen from http://stackoverflow.com/questions/4240490/problems-with-dct-and-idct-algorithm-in-java\n/**\n Convert a 32-bit integer color value to an RGBA object.\n */\nfunction intToRGBA(i) {\n  const a = i & 0xff;\n  i >>>= 8;\n  const b = i & 0xff;\n  i >>>= 8;\n  const g = i & 0xff;\n  i >>>= 8;\n  const r = i & 0xff;\n  return {\n    r,\n    g,\n    b,\n    a\n  };\n}\nconst c = [];\nfunction initCoefficients(size) {\n  for (let i = 1; i < size; i++) {\n    c[i] = 1;\n  }\n  c[0] = 1 / Math.sqrt(2.0);\n}\nfunction applyDCT(f, size) {\n  const N = size;\n  const F = [];\n  for (let u = 0; u < N; u++) {\n    const row = [];\n    for (let v = 0; v < N; v++) {\n      let sum = 0;\n      for (let i = 0; i < N; i++) {\n        for (let j = 0; j < N; j++) {\n          sum += Math.cos((2 * i + 1) / (2.0 * N) * u * Math.PI) * Math.cos((2 * j + 1) / (2.0 * N) * v * Math.PI) * f[i][j];\n        }\n      }\n      sum *= c[u] * c[v] / 4;\n      row[v] = sum;\n      F[u] = row;\n    }\n  }\n  return F;\n}\nexport default ImagePHash;\n", "import { JimpClassSchema } from \"@jimp/types\";\nimport { z } from \"zod\";\nconst MaskOptionsObjectSchema = z.object({\n  src: JimpClassSchema,\n  /** the x position to draw the image */\n  x: z.number().optional(),\n  /** the y position to draw the image */\n  y: z.number().optional()\n});\nconst MaskOptionsSchema = z.union([JimpClassSchema, MaskOptionsObjectSchema]);\nexport const methods = {\n  /**\n   * Masks a source image on to this image using average pixel colour. A completely black pixel on the mask will turn a pixel in the image completely transparent.\n   * @param src the source Jimp instance\n   * @param x the horizontal position to blit the image\n   * @param y the vertical position to blit the image\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   * const mask = await Jimp.read(\"test/mask.png\");\n   *\n   * image.mask(mask);\n   * ```\n   */\n  mask(image, options) {\n    MaskOptionsSchema.parse(options);\n    let src;\n    let x;\n    let y;\n    if (\"bitmap\" in options) {\n      src = options;\n      x = 0;\n      y = 0;\n    } else {\n      src = options.src;\n      x = options.x ?? 0;\n      y = options.y ?? 0;\n    }\n    // round input\n    x = Math.round(x);\n    y = Math.round(y);\n    const w = image.bitmap.width;\n    const h = image.bitmap.height;\n    src.scan(function (sx, sy, idx) {\n      const destX = x + sx;\n      const destY = y + sy;\n      if (destX >= 0 && destY >= 0 && destX < w && destY < h) {\n        const dstIdx = image.getPixelIndex(destX, destY);\n        const {\n          data\n        } = src.bitmap;\n        const avg = (data[idx + 0] + data[idx + 1] + data[idx + 2]) / 3;\n        image.bitmap.data[dstIdx + 3] *= avg / 255;\n      }\n    });\n    return image;\n  }\n};\n", "export function measureText(font, text) {\n  let x = 0;\n  for (let i = 0; i < text.length; i++) {\n    const char = text[i];\n    const fontChar = font.chars[char];\n    if (fontChar) {\n      const fontKerning = font.kernings[char];\n      const nextChar = text[i + 1];\n      const kerning = fontKerning && nextChar && fontKerning[nextChar] ? fontKerning[nextChar] || 0 : 0;\n      x += (fontChar.xadvance || 0) + kerning;\n    }\n  }\n  return x;\n}\nexport function splitLines(font, text, maxWidth) {\n  const words = text.replace(/[\\r\\n]+/g, \" \\n\").split(\" \");\n  const lines = [];\n  let currentLine = [];\n  let longestLine = 0;\n  words.forEach(word => {\n    const wordWidth = measureText(font, word + (words.length > 1 ? \" \" : \"\"));\n    // If a word is longer than the allowable width we need to split it across lines.\n    if (wordWidth > maxWidth) {\n      const characterIterator = word[Symbol.iterator]();\n      let current = \"\";\n      for (const char of characterIterator) {\n        const nextLine = [...currentLine, current + char].join(\" \");\n        const length = measureText(font, nextLine);\n        if (length < maxWidth) {\n          current += char;\n        } else if (length > maxWidth) {\n          lines.push([...currentLine, current]);\n          currentLine = [];\n          current = char;\n        } else {\n          lines.push([...currentLine, current + char]);\n          currentLine = [];\n          current = \"\";\n        }\n      }\n      return;\n    }\n    const line = [...currentLine, word].join(\" \");\n    const length = measureText(font, line);\n    if (length <= maxWidth && !word.includes(\"\\n\")) {\n      if (length > longestLine) {\n        longestLine = length;\n      }\n      currentLine.push(word);\n    } else {\n      lines.push(currentLine);\n      currentLine = [word.replace(\"\\n\", \"\")];\n    }\n  });\n  lines.push(currentLine);\n  return {\n    lines,\n    longestLine\n  };\n}\nexport function measureTextHeight(font, text, maxWidth) {\n  const {\n    lines\n  } = splitLines(font, text, maxWidth);\n  return lines.length * font.common.lineHeight;\n}\n", "import { HorizontalAlign, VerticalAlign } from \"@jimp/core\";\nimport { methods as blitMethods } from \"@jimp/plugin-blit\";\nimport { z } from \"zod\";\nimport { measureText, measureTextHeight, splitLines } from \"./measure-text.js\";\nexport { measureText, measureTextHeight } from \"./measure-text.js\";\nexport * from \"./types.js\";\nconst PrintOptionsSchema = z.object({\n  /** the x position to draw the image */\n  x: z.number(),\n  /** the y position to draw the image */\n  y: z.number(),\n  /** the text to print */\n  text: z.union([z.union([z.string(), z.number()]), z.object({\n    text: z.union([z.string(), z.number()]),\n    alignmentX: z.nativeEnum(HorizontalAlign).optional(),\n    alignmentY: z.nativeEnum(VerticalAlign).optional()\n  })]),\n  /** the boundary width to draw in */\n  maxWidth: z.number().optional(),\n  /** the boundary height to draw in */\n  maxHeight: z.number().optional(),\n  /** a callback for when complete that ahs the end co-ordinates of the text */\n  cb: z.function(z.tuple([z.object({\n    x: z.number(),\n    y: z.number()\n  })])).optional()\n});\nfunction xOffsetBasedOnAlignment(font, line, maxWidth, alignment) {\n  if (alignment === HorizontalAlign.LEFT) {\n    return 0;\n  }\n  if (alignment === HorizontalAlign.CENTER) {\n    return (maxWidth - measureText(font, line)) / 2;\n  }\n  return maxWidth - measureText(font, line);\n}\nfunction drawCharacter(image, font, x, y, char) {\n  if (char.width > 0 && char.height > 0) {\n    const characterPage = font.pages[char.page];\n    if (characterPage) {\n      image = blitMethods.blit(image, {\n        src: characterPage,\n        x: x + char.xoffset,\n        y: y + char.yoffset,\n        srcX: char.x,\n        srcY: char.y,\n        srcW: char.width,\n        srcH: char.height\n      });\n    }\n  }\n  return image;\n}\nfunction printText(image, font, x, y, text, defaultCharWidth) {\n  for (let i = 0; i < text.length; i++) {\n    const stringChar = text[i];\n    let char;\n    if (font.chars[stringChar]) {\n      char = stringChar;\n    } else if (/\\s/.test(stringChar)) {\n      char = \"\";\n    } else {\n      char = \"?\";\n    }\n    const fontChar = font.chars[char] || {\n      xadvance: undefined\n    };\n    const fontKerning = font.kernings[char];\n    if (fontChar) {\n      drawCharacter(image, font, x, y, fontChar);\n    }\n    const nextChar = text[i + 1];\n    const kerning = fontKerning && nextChar && fontKerning[nextChar] ? fontKerning[nextChar] || 0 : 0;\n    x += kerning + (fontChar.xadvance || defaultCharWidth);\n  }\n}\nexport const methods = {\n  /**\n   * Draws a text on a image on a given boundary\n   * @param font a bitmap font loaded from `Jimp.loadFont` command\n   * @param x the x position to start drawing the text\n   * @param y the y position to start drawing the text\n   * @param text the text to draw (string or object with `text`, `alignmentX`, and/or `alignmentY`)\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   * const font = await Jimp.loadFont(Jimp.FONT_SANS_32_BLACK);\n   *\n   * image.print({ font, x: 10, y: 10, text: \"Hello world!\" });\n   * ```\n   */\n  print(image, {\n    font,\n    ...options\n  }) {\n    let {\n      // eslint-disable-next-line prefer-const\n      x,\n      y,\n      text,\n      // eslint-disable-next-line prefer-const\n      maxWidth = Infinity,\n      // eslint-disable-next-line prefer-const\n      maxHeight = Infinity,\n      // eslint-disable-next-line prefer-const\n      cb = () => {}\n    } = PrintOptionsSchema.parse(options);\n    let alignmentX;\n    let alignmentY;\n    if (typeof text === \"object\" && text.text !== null && text.text !== undefined) {\n      alignmentX = text.alignmentX || HorizontalAlign.LEFT;\n      alignmentY = text.alignmentY || VerticalAlign.TOP;\n      ({\n        text\n      } = text);\n    } else {\n      alignmentX = HorizontalAlign.LEFT;\n      alignmentY = VerticalAlign.TOP;\n      text = text.toString();\n    }\n    if (typeof text === \"number\") {\n      text = text.toString();\n    }\n    if (maxHeight !== Infinity && alignmentY === VerticalAlign.BOTTOM) {\n      y += maxHeight - measureTextHeight(font, text, maxWidth);\n    } else if (maxHeight !== Infinity && alignmentY === VerticalAlign.MIDDLE) {\n      y += maxHeight / 2 - measureTextHeight(font, text, maxWidth) / 2;\n    }\n    const defaultCharWidth = Object.entries(font.chars).find(c => c[1].xadvance)?.[1].xadvance;\n    if (typeof defaultCharWidth !== \"number\") {\n      throw new Error(\"Could not find default character width\");\n    }\n    const {\n      lines,\n      longestLine\n    } = splitLines(font, text, maxWidth);\n    lines.forEach(line => {\n      const lineString = line.join(\" \");\n      const alignmentWidth = xOffsetBasedOnAlignment(font, lineString, maxWidth, alignmentX);\n      printText(image, font, x + alignmentWidth, y, lineString, defaultCharWidth);\n      y += font.common.lineHeight;\n    });\n    cb.bind(image)({\n      x: x + longestLine,\n      y\n    });\n    return image;\n  }\n};\n", "import { ResizeStrategy, methods as resizeMethods } from \"@jimp/plugin-resize\";\nimport { clone } from \"@jimp/utils\";\nimport { composite } from \"@jimp/core\";\nimport { methods as cropMethods } from \"@jimp/plugin-crop\";\nimport { z } from \"zod\";\nconst RotateOptionsSchema = z.union([z.number(), z.object({\n  /** the number of degrees to rotate the image by */\n  deg: z.number(),\n  /** resize mode or a boolean, if false then the width and height of the image will not be changed */\n  mode: z.union([z.boolean(), z.nativeEnum(ResizeStrategy)]).optional()\n})]);\n/** function to translate the x, y coordinate to the index of the pixel in the buffer */\nfunction createIdxTranslationFunction(w) {\n  return function (x, y) {\n    return y * w + x << 2;\n  };\n}\n/**\n * Rotates an image counter-clockwise by multiple of 90 degrees. NB: 'this' must be a Jimp object.\n *\n * This function is based on matrix rotation. Check this to get an initial idea how it works: https://stackoverflow.com/a/8664879/10561909\n *\n * @param deg the number of degrees to rotate the image by, it should be a multiple of 90\n */\nfunction matrixRotate(image, deg) {\n  if (Math.abs(deg) % 90 !== 0) {\n    throw new Error(\"Unsupported matrix rotation degree\");\n  }\n  const w = image.bitmap.width;\n  const h = image.bitmap.height;\n  // decide which rotation angle to use\n  let angle;\n  switch (deg) {\n    // 90 degree & -270 degree are same\n    case 90:\n    case -270:\n      angle = 90;\n      break;\n    case 180:\n    case -180:\n      angle = 180;\n      break;\n    case 270:\n    case -90:\n      angle = -90;\n      break;\n    default:\n      throw new Error(\"Unsupported matrix rotation degree\");\n  }\n  // After this switch block, angle will be 90, 180 or -90\n  // calculate the new width and height\n  const nW = angle === 180 ? w : h;\n  const nH = angle === 180 ? h : w;\n  const dstBuffer = Buffer.alloc(image.bitmap.data.length);\n  const srcIdxFunction = createIdxTranslationFunction(w);\n  const dstIdxFunction = createIdxTranslationFunction(nW);\n  for (let x = 0; x < w; x++) {\n    for (let y = 0; y < h; y++) {\n      const srcIdx = srcIdxFunction(x, y);\n      const pixelRGBA = image.bitmap.data.readUInt32BE(srcIdx);\n      let dstIdx;\n      switch (angle) {\n        case 90:\n          dstIdx = dstIdxFunction(y, w - x - 1);\n          break;\n        case -90:\n          dstIdx = dstIdxFunction(h - y - 1, x);\n          break;\n        case 180:\n          dstIdx = dstIdxFunction(w - x - 1, h - y - 1);\n          break;\n        default:\n          throw new Error(\"Unsupported matrix rotation angle\");\n      }\n      dstBuffer.writeUInt32BE(pixelRGBA, dstIdx);\n    }\n  }\n  image.bitmap.data = dstBuffer;\n  image.bitmap.width = nW;\n  image.bitmap.height = nH;\n}\nfunction createTranslationFunction(deltaX, deltaY) {\n  return function (x, y) {\n    return {\n      x: x + deltaX,\n      y: y + deltaY\n    };\n  };\n}\n/**\n * Rotates an image counter-clockwise by an arbitrary number of degrees. NB: 'this' must be a Jimp object.\n * @param {number} deg the number of degrees to rotate the image by\n */\nfunction advancedRotate(image, deg, mode) {\n  const rad = deg * Math.PI / 180;\n  const cosine = Math.cos(rad);\n  const sine = Math.sin(rad);\n  // the final width and height will change if resize == true\n  let w = image.bitmap.width;\n  let h = image.bitmap.height;\n  if (mode === true || typeof mode === \"string\") {\n    // resize the image to it maximum dimension and blit the existing image\n    // onto the center so that when it is rotated the image is kept in bounds\n    // http://stackoverflow.com/questions/3231176/how-to-get-size-of-a-rotated-rectangle\n    // Plus 1 border pixel to ensure to show all rotated result for some cases.\n    w = Math.ceil(Math.abs(image.bitmap.width * cosine) + Math.abs(image.bitmap.height * sine)) + 1;\n    h = Math.ceil(Math.abs(image.bitmap.width * sine) + Math.abs(image.bitmap.height * cosine)) + 1;\n    // Ensure destination to have even size to a better result.\n    if (w % 2 !== 0) {\n      w++;\n    }\n    if (h % 2 !== 0) {\n      h++;\n    }\n    const c = clone(image);\n    image.scan((_, __, idx) => {\n      image.bitmap.data.writeUInt32BE(image.background, idx);\n    });\n    const max = Math.max(w, h, image.bitmap.width, image.bitmap.height);\n    image = resizeMethods.resize(image, {\n      h: max,\n      w: max,\n      mode: mode === true ? undefined : mode\n    });\n    image = composite(image, c, image.bitmap.width / 2 - c.bitmap.width / 2, image.bitmap.height / 2 - c.bitmap.height / 2);\n  }\n  const bW = image.bitmap.width;\n  const bH = image.bitmap.height;\n  const dstBuffer = Buffer.alloc(image.bitmap.data.length);\n  const translate2Cartesian = createTranslationFunction(-(bW / 2), -(bH / 2));\n  const translate2Screen = createTranslationFunction(bW / 2 + 0.5, bH / 2 + 0.5);\n  for (let y = 1; y <= bH; y++) {\n    for (let x = 1; x <= bW; x++) {\n      const cartesian = translate2Cartesian(x, y);\n      const source = translate2Screen(cosine * cartesian.x - sine * cartesian.y, cosine * cartesian.y + sine * cartesian.x);\n      const dstIdx = bW * (y - 1) + x - 1 << 2;\n      if (source.x >= 0 && source.x < bW && source.y >= 0 && source.y < bH) {\n        const srcIdx = (bW * (source.y | 0) + source.x | 0) << 2;\n        const pixelRGBA = image.bitmap.data.readUInt32BE(srcIdx);\n        dstBuffer.writeUInt32BE(pixelRGBA, dstIdx);\n      } else {\n        // reset off-image pixels\n        dstBuffer.writeUInt32BE(image.background, dstIdx);\n      }\n    }\n  }\n  image.bitmap.data = dstBuffer;\n  if (mode === true || typeof mode === \"string\") {\n    // now crop the image to the final size\n    const x = Math.max(bW / 2 - w / 2, 0);\n    const y = Math.max(bH / 2 - h / 2, 0);\n    image = cropMethods.crop(image, {\n      x,\n      y,\n      w,\n      h\n    });\n  }\n}\nexport const methods = {\n  /**\n   * Rotates the image counter-clockwise by a number of degrees. By default the width and height of the image will be resized appropriately.\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.rotate(90);\n   * ```\n   */\n  rotate(image, options) {\n    const parsed = RotateOptionsSchema.parse(options);\n    const actualOptions = typeof parsed === \"number\" ? {\n      deg: parsed\n    } : parsed;\n    const {\n      mode = true\n    } = actualOptions;\n    let {\n      deg\n    } = actualOptions;\n    // No need to do extra rotation\n    deg %= 360;\n    // no rotation for 0, 360, -360, 720, -720, ...\n    if (deg % 360 === 0) {\n      return image;\n    }\n    // use matrixRotate if the angle is a multiple of 90 degrees (eg: 180 or -90) and resize is allowed or not needed.\n    const matrixRotateAllowed = deg % 90 === 0 && (mode || image.bitmap.width === image.bitmap.height || deg % 180 === 0);\n    if (matrixRotateAllowed) {\n      matrixRotate(image, deg);\n    } else {\n      advancedRotate(image, deg, mode);\n    }\n    return image;\n  }\n};\n", "import { limit255 } from \"@jimp/utils\";\nimport { methods as color } from \"@jimp/plugin-color\";\nimport { z } from \"zod\";\nconst ThresholdOptionsSchema = z.object({\n  /** A number auto limited between 0 - 255 */\n  max: z.number().min(0).max(255),\n  /** A number auto limited between 0 - 255 (default 255)  */\n  replace: z.number().min(0).max(255).optional(),\n  /** A boolean whether to apply greyscale beforehand (default true)  */\n  autoGreyscale: z.boolean().optional()\n});\nexport const methods = {\n  /**\n   * Applies a minimum color threshold to a grayscale image.\n   * Converts image to grayscale by default.\n   * @example\n   * ```ts\n   * import { Jimp } from \"jimp\";\n   *\n   * const image = await Jimp.read(\"test/image.png\");\n   *\n   * image.threshold({ max: 150 });\n   * ```\n   */\n  threshold(image, options) {\n    let {\n      max,\n      replace = 255,\n      // eslint-disable-next-line prefer-const\n      autoGreyscale = true\n    } = ThresholdOptionsSchema.parse(options);\n    max = limit255(max);\n    replace = limit255(replace);\n    if (autoGreyscale) {\n      color.greyscale(image);\n    }\n    image.scan((_, __, idx) => {\n      const grey = image.bitmap.data[idx] < max ? image.bitmap.data[idx] : replace;\n      image.bitmap.data[idx] = grey;\n      image.bitmap.data[idx + 1] = grey;\n      image.bitmap.data[idx + 2] = grey;\n    });\n    return image;\n  }\n};\n", "var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/constants/index.ts\nvar constants_exports = {};\n__export(constants_exports, {\n  bt709: () => bt709_exports\n});\n\n// src/constants/bt709.ts\nvar bt709_exports = {};\n__export(bt709_exports, {\n  Y: () => Y,\n  x: () => x,\n  y: () => y\n});\nvar Y = /* @__PURE__ */(Y2 => {\n  Y2[Y2[\"RED\"] = 0.2126] = \"RED\";\n  Y2[Y2[\"GREEN\"] = 0.7152] = \"GREEN\";\n  Y2[Y2[\"BLUE\"] = 0.0722] = \"BLUE\";\n  Y2[Y2[\"WHITE\"] = 1] = \"WHITE\";\n  return Y2;\n})(Y || {});\nvar x = /* @__PURE__ */(x2 => {\n  x2[x2[\"RED\"] = 0.64] = \"RED\";\n  x2[x2[\"GREEN\"] = 0.3] = \"GREEN\";\n  x2[x2[\"BLUE\"] = 0.15] = \"BLUE\";\n  x2[x2[\"WHITE\"] = 0.3127] = \"WHITE\";\n  return x2;\n})(x || {});\nvar y = /* @__PURE__ */(y2 => {\n  y2[y2[\"RED\"] = 0.33] = \"RED\";\n  y2[y2[\"GREEN\"] = 0.6] = \"GREEN\";\n  y2[y2[\"BLUE\"] = 0.06] = \"BLUE\";\n  y2[y2[\"WHITE\"] = 0.329] = \"WHITE\";\n  return y2;\n})(y || {});\n\n// src/conversion/index.ts\nvar conversion_exports = {};\n__export(conversion_exports, {\n  lab2rgb: () => lab2rgb,\n  lab2xyz: () => lab2xyz,\n  rgb2hsl: () => rgb2hsl,\n  rgb2lab: () => rgb2lab,\n  rgb2xyz: () => rgb2xyz,\n  xyz2lab: () => xyz2lab,\n  xyz2rgb: () => xyz2rgb\n});\n\n// src/conversion/rgb2xyz.ts\nfunction correctGamma(n) {\n  return n > 0.04045 ? ((n + 0.055) / 1.055) ** 2.4 : n / 12.92;\n}\nfunction rgb2xyz(r, g, b) {\n  r = correctGamma(r / 255);\n  g = correctGamma(g / 255);\n  b = correctGamma(b / 255);\n  return {\n    x: r * 0.4124 + g * 0.3576 + b * 0.1805,\n    y: r * 0.2126 + g * 0.7152 + b * 0.0722,\n    z: r * 0.0193 + g * 0.1192 + b * 0.9505\n  };\n}\n\n// src/utils/arithmetic.ts\nvar arithmetic_exports = {};\n__export(arithmetic_exports, {\n  degrees2radians: () => degrees2radians,\n  inRange0to255: () => inRange0to255,\n  inRange0to255Rounded: () => inRange0to255Rounded,\n  intInRange: () => intInRange,\n  max3: () => max3,\n  min3: () => min3,\n  stableSort: () => stableSort\n});\nfunction degrees2radians(n) {\n  return n * (Math.PI / 180);\n}\nfunction max3(a, b, c) {\n  let m = a;\n  if (m < b) m = b;\n  if (m < c) m = c;\n  return m;\n}\nfunction min3(a, b, c) {\n  let m = a;\n  if (m > b) m = b;\n  if (m > c) m = c;\n  return m;\n}\nfunction intInRange(value, low, high) {\n  if (value > high) value = high;\n  if (value < low) value = low;\n  return value | 0;\n}\nfunction inRange0to255Rounded(n) {\n  n = Math.round(n);\n  if (n > 255) n = 255;else if (n < 0) n = 0;\n  return n;\n}\nfunction inRange0to255(n) {\n  if (n > 255) n = 255;else if (n < 0) n = 0;\n  return n;\n}\nfunction stableSort(arrayToSort, callback) {\n  const type = typeof arrayToSort[0];\n  let sorted;\n  if (type === \"number\" || type === \"string\") {\n    const ord = /* @__PURE__ */Object.create(null);\n    for (let i = 0, l = arrayToSort.length; i < l; i++) {\n      const val = arrayToSort[i];\n      if (ord[val] || ord[val] === 0) continue;\n      ord[val] = i;\n    }\n    sorted = arrayToSort.sort((a, b) => callback(a, b) || ord[a] - ord[b]);\n  } else {\n    const ord2 = arrayToSort.slice(0);\n    sorted = arrayToSort.sort((a, b) => callback(a, b) || ord2.indexOf(a) - ord2.indexOf(b));\n  }\n  return sorted;\n}\n\n// src/conversion/rgb2hsl.ts\nfunction rgb2hsl(r, g, b) {\n  const min = min3(r, g, b);\n  const max = max3(r, g, b);\n  const delta = max - min;\n  const l = (min + max) / 510;\n  let s = 0;\n  if (l > 0 && l < 1) s = delta / (l < 0.5 ? max + min : 510 - max - min);\n  let h = 0;\n  if (delta > 0) {\n    if (max === r) {\n      h = (g - b) / delta;\n    } else if (max === g) {\n      h = 2 + (b - r) / delta;\n    } else {\n      h = 4 + (r - g) / delta;\n    }\n    h *= 60;\n    if (h < 0) h += 360;\n  }\n  return {\n    h,\n    s,\n    l\n  };\n}\n\n// src/conversion/xyz2lab.ts\nvar refX = 0.95047;\nvar refY = 1;\nvar refZ = 1.08883;\nfunction pivot(n) {\n  return n > 8856e-6 ? n ** (1 / 3) : 7.787 * n + 16 / 116;\n}\nfunction xyz2lab(x2, y2, z) {\n  x2 = pivot(x2 / refX);\n  y2 = pivot(y2 / refY);\n  z = pivot(z / refZ);\n  if (116 * y2 - 16 < 0) throw new Error(\"xxx\");\n  return {\n    L: Math.max(0, 116 * y2 - 16),\n    a: 500 * (x2 - y2),\n    b: 200 * (y2 - z)\n  };\n}\n\n// src/conversion/rgb2lab.ts\nfunction rgb2lab(r, g, b) {\n  const xyz = rgb2xyz(r, g, b);\n  return xyz2lab(xyz.x, xyz.y, xyz.z);\n}\n\n// src/conversion/lab2xyz.ts\nvar refX2 = 0.95047;\nvar refY2 = 1;\nvar refZ2 = 1.08883;\nfunction pivot2(n) {\n  return n > 0.206893034 ? n ** 3 : (n - 16 / 116) / 7.787;\n}\nfunction lab2xyz(L, a, b) {\n  const y2 = (L + 16) / 116;\n  const x2 = a / 500 + y2;\n  const z = y2 - b / 200;\n  return {\n    x: refX2 * pivot2(x2),\n    y: refY2 * pivot2(y2),\n    z: refZ2 * pivot2(z)\n  };\n}\n\n// src/conversion/xyz2rgb.ts\nfunction correctGamma2(n) {\n  return n > 31308e-7 ? 1.055 * n ** (1 / 2.4) - 0.055 : 12.92 * n;\n}\nfunction xyz2rgb(x2, y2, z) {\n  const r = correctGamma2(x2 * 3.2406 + y2 * -1.5372 + z * -0.4986);\n  const g = correctGamma2(x2 * -0.9689 + y2 * 1.8758 + z * 0.0415);\n  const b = correctGamma2(x2 * 0.0557 + y2 * -0.204 + z * 1.057);\n  return {\n    r: inRange0to255Rounded(r * 255),\n    g: inRange0to255Rounded(g * 255),\n    b: inRange0to255Rounded(b * 255)\n  };\n}\n\n// src/conversion/lab2rgb.ts\nfunction lab2rgb(L, a, b) {\n  const xyz = lab2xyz(L, a, b);\n  return xyz2rgb(xyz.x, xyz.y, xyz.z);\n}\n\n// src/distance/index.ts\nvar distance_exports = {};\n__export(distance_exports, {\n  AbstractDistanceCalculator: () => AbstractDistanceCalculator,\n  AbstractEuclidean: () => AbstractEuclidean,\n  AbstractManhattan: () => AbstractManhattan,\n  CIE94GraphicArts: () => CIE94GraphicArts,\n  CIE94Textiles: () => CIE94Textiles,\n  CIEDE2000: () => CIEDE2000,\n  CMetric: () => CMetric,\n  Euclidean: () => Euclidean,\n  EuclideanBT709: () => EuclideanBT709,\n  EuclideanBT709NoAlpha: () => EuclideanBT709NoAlpha,\n  Manhattan: () => Manhattan,\n  ManhattanBT709: () => ManhattanBT709,\n  ManhattanNommyde: () => ManhattanNommyde,\n  PNGQuant: () => PNGQuant\n});\n\n// src/distance/distanceCalculator.ts\nvar AbstractDistanceCalculator = class {\n  constructor() {\n    __publicField(this, \"_maxDistance\");\n    __publicField(this, \"_whitePoint\");\n    this._setDefaults();\n    this.setWhitePoint(255, 255, 255, 255);\n  }\n  setWhitePoint(r, g, b, a) {\n    this._whitePoint = {\n      r: r > 0 ? 255 / r : 0,\n      g: g > 0 ? 255 / g : 0,\n      b: b > 0 ? 255 / b : 0,\n      a: a > 0 ? 255 / a : 0\n    };\n    this._maxDistance = this.calculateRaw(r, g, b, a, 0, 0, 0, 0);\n  }\n  calculateNormalized(colorA, colorB) {\n    return this.calculateRaw(colorA.r, colorA.g, colorA.b, colorA.a, colorB.r, colorB.g, colorB.b, colorB.a) / this._maxDistance;\n  }\n};\n\n// src/distance/cie94.ts\nvar AbstractCIE94 = class extends AbstractDistanceCalculator {\n  calculateRaw(r1, g1, b1, a1, r2, g2, b2, a2) {\n    const lab1 = rgb2lab(inRange0to255(r1 * this._whitePoint.r), inRange0to255(g1 * this._whitePoint.g), inRange0to255(b1 * this._whitePoint.b));\n    const lab2 = rgb2lab(inRange0to255(r2 * this._whitePoint.r), inRange0to255(g2 * this._whitePoint.g), inRange0to255(b2 * this._whitePoint.b));\n    const dL = lab1.L - lab2.L;\n    const dA = lab1.a - lab2.a;\n    const dB = lab1.b - lab2.b;\n    const c1 = Math.sqrt(lab1.a * lab1.a + lab1.b * lab1.b);\n    const c2 = Math.sqrt(lab2.a * lab2.a + lab2.b * lab2.b);\n    const dC = c1 - c2;\n    let deltaH = dA * dA + dB * dB - dC * dC;\n    deltaH = deltaH < 0 ? 0 : Math.sqrt(deltaH);\n    const dAlpha = (a2 - a1) * this._whitePoint.a * this._kA;\n    return Math.sqrt((dL / this._Kl) ** 2 + (dC / (1 + this._K1 * c1)) ** 2 + (deltaH / (1 + this._K2 * c1)) ** 2 + dAlpha ** 2);\n  }\n};\nvar CIE94Textiles = class extends AbstractCIE94 {\n  _setDefaults() {\n    this._Kl = 2;\n    this._K1 = 0.048;\n    this._K2 = 0.014;\n    this._kA = 0.25 * 50 / 255;\n  }\n};\nvar CIE94GraphicArts = class extends AbstractCIE94 {\n  _setDefaults() {\n    this._Kl = 1;\n    this._K1 = 0.045;\n    this._K2 = 0.015;\n    this._kA = 0.25 * 100 / 255;\n  }\n};\n\n// src/distance/ciede2000.ts\nvar _CIEDE2000 = class extends AbstractDistanceCalculator {\n  _setDefaults() {}\n  static _calculatehp(b, ap) {\n    const hp = Math.atan2(b, ap);\n    if (hp >= 0) return hp;\n    return hp + _CIEDE2000._deg360InRad;\n  }\n  static _calculateRT(ahp, aCp) {\n    const aCp_to_7 = aCp ** 7;\n    const R_C = 2 * Math.sqrt(aCp_to_7 / (aCp_to_7 + _CIEDE2000._pow25to7));\n    const delta_theta = _CIEDE2000._deg30InRad * Math.exp(-(((ahp - _CIEDE2000._deg275InRad) / _CIEDE2000._deg25InRad) ** 2));\n    return -Math.sin(2 * delta_theta) * R_C;\n  }\n  static _calculateT(ahp) {\n    return 1 - 0.17 * Math.cos(ahp - _CIEDE2000._deg30InRad) + 0.24 * Math.cos(ahp * 2) + 0.32 * Math.cos(ahp * 3 + _CIEDE2000._deg6InRad) - 0.2 * Math.cos(ahp * 4 - _CIEDE2000._deg63InRad);\n  }\n  static _calculate_ahp(C1pC2p, h_bar, h1p, h2p) {\n    const hpSum = h1p + h2p;\n    if (C1pC2p === 0) return hpSum;\n    if (h_bar <= _CIEDE2000._deg180InRad) return hpSum / 2;\n    if (hpSum < _CIEDE2000._deg360InRad) {\n      return (hpSum + _CIEDE2000._deg360InRad) / 2;\n    }\n    return (hpSum - _CIEDE2000._deg360InRad) / 2;\n  }\n  static _calculate_dHp(C1pC2p, h_bar, h2p, h1p) {\n    let dhp;\n    if (C1pC2p === 0) {\n      dhp = 0;\n    } else if (h_bar <= _CIEDE2000._deg180InRad) {\n      dhp = h2p - h1p;\n    } else if (h2p <= h1p) {\n      dhp = h2p - h1p + _CIEDE2000._deg360InRad;\n    } else {\n      dhp = h2p - h1p - _CIEDE2000._deg360InRad;\n    }\n    return 2 * Math.sqrt(C1pC2p) * Math.sin(dhp / 2);\n  }\n  calculateRaw(r1, g1, b1, a1, r2, g2, b2, a2) {\n    const lab1 = rgb2lab(inRange0to255(r1 * this._whitePoint.r), inRange0to255(g1 * this._whitePoint.g), inRange0to255(b1 * this._whitePoint.b));\n    const lab2 = rgb2lab(inRange0to255(r2 * this._whitePoint.r), inRange0to255(g2 * this._whitePoint.g), inRange0to255(b2 * this._whitePoint.b));\n    const dA = (a2 - a1) * this._whitePoint.a * _CIEDE2000._kA;\n    const dE2 = this.calculateRawInLab(lab1, lab2);\n    return Math.sqrt(dE2 + dA * dA);\n  }\n  calculateRawInLab(Lab1, Lab2) {\n    const L1 = Lab1.L;\n    const a1 = Lab1.a;\n    const b1 = Lab1.b;\n    const L2 = Lab2.L;\n    const a2 = Lab2.a;\n    const b2 = Lab2.b;\n    const C1 = Math.sqrt(a1 * a1 + b1 * b1);\n    const C2 = Math.sqrt(a2 * a2 + b2 * b2);\n    const pow_a_C1_C2_to_7 = ((C1 + C2) / 2) ** 7;\n    const G = 0.5 * (1 - Math.sqrt(pow_a_C1_C2_to_7 / (pow_a_C1_C2_to_7 + _CIEDE2000._pow25to7)));\n    const a1p = (1 + G) * a1;\n    const a2p = (1 + G) * a2;\n    const C1p = Math.sqrt(a1p * a1p + b1 * b1);\n    const C2p = Math.sqrt(a2p * a2p + b2 * b2);\n    const C1pC2p = C1p * C2p;\n    const h1p = _CIEDE2000._calculatehp(b1, a1p);\n    const h2p = _CIEDE2000._calculatehp(b2, a2p);\n    const h_bar = Math.abs(h1p - h2p);\n    const dLp = L2 - L1;\n    const dCp = C2p - C1p;\n    const dHp = _CIEDE2000._calculate_dHp(C1pC2p, h_bar, h2p, h1p);\n    const ahp = _CIEDE2000._calculate_ahp(C1pC2p, h_bar, h1p, h2p);\n    const T = _CIEDE2000._calculateT(ahp);\n    const aCp = (C1p + C2p) / 2;\n    const aLp_minus_50_square = ((L1 + L2) / 2 - 50) ** 2;\n    const S_L = 1 + 0.015 * aLp_minus_50_square / Math.sqrt(20 + aLp_minus_50_square);\n    const S_C = 1 + 0.045 * aCp;\n    const S_H = 1 + 0.015 * T * aCp;\n    const R_T = _CIEDE2000._calculateRT(ahp, aCp);\n    const dLpSL = dLp / S_L;\n    const dCpSC = dCp / S_C;\n    const dHpSH = dHp / S_H;\n    return dLpSL ** 2 + dCpSC ** 2 + dHpSH ** 2 + R_T * dCpSC * dHpSH;\n  }\n};\nvar CIEDE2000 = _CIEDE2000;\n__publicField(CIEDE2000, \"_kA\", 0.25 * 100 / 255);\n__publicField(CIEDE2000, \"_pow25to7\", 25 ** 7);\n__publicField(CIEDE2000, \"_deg360InRad\", degrees2radians(360));\n__publicField(CIEDE2000, \"_deg180InRad\", degrees2radians(180));\n__publicField(CIEDE2000, \"_deg30InRad\", degrees2radians(30));\n__publicField(CIEDE2000, \"_deg6InRad\", degrees2radians(6));\n__publicField(CIEDE2000, \"_deg63InRad\", degrees2radians(63));\n__publicField(CIEDE2000, \"_deg275InRad\", degrees2radians(275));\n__publicField(CIEDE2000, \"_deg25InRad\", degrees2radians(25));\n\n// src/distance/cmetric.ts\nvar CMetric = class extends AbstractDistanceCalculator {\n  calculateRaw(r1, g1, b1, a1, r2, g2, b2, a2) {\n    const rmean = (r1 + r2) / 2 * this._whitePoint.r;\n    const r = (r1 - r2) * this._whitePoint.r;\n    const g = (g1 - g2) * this._whitePoint.g;\n    const b = (b1 - b2) * this._whitePoint.b;\n    const dE = ((512 + rmean) * r * r >> 8) + 4 * g * g + ((767 - rmean) * b * b >> 8);\n    const dA = (a2 - a1) * this._whitePoint.a;\n    return Math.sqrt(dE + dA * dA);\n  }\n  _setDefaults() {}\n};\n\n// src/distance/euclidean.ts\nvar AbstractEuclidean = class extends AbstractDistanceCalculator {\n  calculateRaw(r1, g1, b1, a1, r2, g2, b2, a2) {\n    const dR = r2 - r1;\n    const dG = g2 - g1;\n    const dB = b2 - b1;\n    const dA = a2 - a1;\n    return Math.sqrt(this._kR * dR * dR + this._kG * dG * dG + this._kB * dB * dB + this._kA * dA * dA);\n  }\n};\nvar Euclidean = class extends AbstractEuclidean {\n  _setDefaults() {\n    this._kR = 1;\n    this._kG = 1;\n    this._kB = 1;\n    this._kA = 1;\n  }\n};\nvar EuclideanBT709 = class extends AbstractEuclidean {\n  _setDefaults() {\n    this._kR = 0.2126 /* RED */;\n    this._kG = 0.7152 /* GREEN */;\n    this._kB = 0.0722 /* BLUE */;\n    this._kA = 1;\n  }\n};\nvar EuclideanBT709NoAlpha = class extends AbstractEuclidean {\n  _setDefaults() {\n    this._kR = 0.2126 /* RED */;\n    this._kG = 0.7152 /* GREEN */;\n    this._kB = 0.0722 /* BLUE */;\n    this._kA = 0;\n  }\n};\n\n// src/distance/manhattan.ts\nvar AbstractManhattan = class extends AbstractDistanceCalculator {\n  calculateRaw(r1, g1, b1, a1, r2, g2, b2, a2) {\n    let dR = r2 - r1;\n    let dG = g2 - g1;\n    let dB = b2 - b1;\n    let dA = a2 - a1;\n    if (dR < 0) dR = 0 - dR;\n    if (dG < 0) dG = 0 - dG;\n    if (dB < 0) dB = 0 - dB;\n    if (dA < 0) dA = 0 - dA;\n    return this._kR * dR + this._kG * dG + this._kB * dB + this._kA * dA;\n  }\n};\nvar Manhattan = class extends AbstractManhattan {\n  _setDefaults() {\n    this._kR = 1;\n    this._kG = 1;\n    this._kB = 1;\n    this._kA = 1;\n  }\n};\nvar ManhattanNommyde = class extends AbstractManhattan {\n  _setDefaults() {\n    this._kR = 0.4984;\n    this._kG = 0.8625;\n    this._kB = 0.2979;\n    this._kA = 1;\n  }\n};\nvar ManhattanBT709 = class extends AbstractManhattan {\n  _setDefaults() {\n    this._kR = 0.2126 /* RED */;\n    this._kG = 0.7152 /* GREEN */;\n    this._kB = 0.0722 /* BLUE */;\n    this._kA = 1;\n  }\n};\n\n// src/distance/pngQuant.ts\nvar PNGQuant = class extends AbstractDistanceCalculator {\n  calculateRaw(r1, g1, b1, a1, r2, g2, b2, a2) {\n    const alphas = (a2 - a1) * this._whitePoint.a;\n    return this._colordifferenceCh(r1 * this._whitePoint.r, r2 * this._whitePoint.r, alphas) + this._colordifferenceCh(g1 * this._whitePoint.g, g2 * this._whitePoint.g, alphas) + this._colordifferenceCh(b1 * this._whitePoint.b, b2 * this._whitePoint.b, alphas);\n  }\n  _colordifferenceCh(x2, y2, alphas) {\n    const black = x2 - y2;\n    const white = black + alphas;\n    return black * black + white * white;\n  }\n  _setDefaults() {}\n};\n\n// src/palette/index.ts\nvar palette_exports = {};\n__export(palette_exports, {\n  AbstractPaletteQuantizer: () => AbstractPaletteQuantizer,\n  ColorHistogram: () => ColorHistogram,\n  NeuQuant: () => NeuQuant,\n  NeuQuantFloat: () => NeuQuantFloat,\n  RGBQuant: () => RGBQuant,\n  WuColorCube: () => WuColorCube,\n  WuQuant: () => WuQuant\n});\n\n// src/palette/paletteQuantizer.ts\nvar AbstractPaletteQuantizer = class {\n  quantizeSync() {\n    for (const value of this.quantize()) {\n      if (value.palette) {\n        return value.palette;\n      }\n    }\n    throw new Error(\"unreachable\");\n  }\n};\n\n// src/utils/point.ts\nvar Point = class {\n  constructor() {\n    __publicField(this, \"r\");\n    __publicField(this, \"g\");\n    __publicField(this, \"b\");\n    __publicField(this, \"a\");\n    __publicField(this, \"uint32\");\n    __publicField(this, \"rgba\");\n    this.uint32 = -1 >>> 0;\n    this.r = this.g = this.b = this.a = 0;\n    this.rgba = new Array(4);\n    this.rgba[0] = 0;\n    this.rgba[1] = 0;\n    this.rgba[2] = 0;\n    this.rgba[3] = 0;\n  }\n  static createByQuadruplet(quadruplet) {\n    const point = new Point();\n    point.r = quadruplet[0] | 0;\n    point.g = quadruplet[1] | 0;\n    point.b = quadruplet[2] | 0;\n    point.a = quadruplet[3] | 0;\n    point._loadUINT32();\n    point._loadQuadruplet();\n    return point;\n  }\n  static createByRGBA(red, green, blue, alpha) {\n    const point = new Point();\n    point.r = red | 0;\n    point.g = green | 0;\n    point.b = blue | 0;\n    point.a = alpha | 0;\n    point._loadUINT32();\n    point._loadQuadruplet();\n    return point;\n  }\n  static createByUint32(uint32) {\n    const point = new Point();\n    point.uint32 = uint32 >>> 0;\n    point._loadRGBA();\n    point._loadQuadruplet();\n    return point;\n  }\n  from(point) {\n    this.r = point.r;\n    this.g = point.g;\n    this.b = point.b;\n    this.a = point.a;\n    this.uint32 = point.uint32;\n    this.rgba[0] = point.r;\n    this.rgba[1] = point.g;\n    this.rgba[2] = point.b;\n    this.rgba[3] = point.a;\n  }\n  getLuminosity(useAlphaChannel) {\n    let r = this.r;\n    let g = this.g;\n    let b = this.b;\n    if (useAlphaChannel) {\n      r = Math.min(255, 255 - this.a + this.a * r / 255);\n      g = Math.min(255, 255 - this.a + this.a * g / 255);\n      b = Math.min(255, 255 - this.a + this.a * b / 255);\n    }\n    return r * 0.2126 /* RED */ + g * 0.7152 /* GREEN */ + b * 0.0722 /* BLUE */;\n  }\n  _loadUINT32() {\n    this.uint32 = (this.a << 24 | this.b << 16 | this.g << 8 | this.r) >>> 0;\n  }\n  _loadRGBA() {\n    this.r = this.uint32 & 255;\n    this.g = this.uint32 >>> 8 & 255;\n    this.b = this.uint32 >>> 16 & 255;\n    this.a = this.uint32 >>> 24 & 255;\n  }\n  _loadQuadruplet() {\n    this.rgba[0] = this.r;\n    this.rgba[1] = this.g;\n    this.rgba[2] = this.b;\n    this.rgba[3] = this.a;\n  }\n};\n\n// src/utils/pointContainer.ts\nvar PointContainer = class {\n  constructor() {\n    __publicField(this, \"_pointArray\");\n    __publicField(this, \"_width\");\n    __publicField(this, \"_height\");\n    this._width = 0;\n    this._height = 0;\n    this._pointArray = [];\n  }\n  getWidth() {\n    return this._width;\n  }\n  getHeight() {\n    return this._height;\n  }\n  setWidth(width) {\n    this._width = width;\n  }\n  setHeight(height) {\n    this._height = height;\n  }\n  getPointArray() {\n    return this._pointArray;\n  }\n  clone() {\n    const clone = new PointContainer();\n    clone._width = this._width;\n    clone._height = this._height;\n    for (let i = 0, l = this._pointArray.length; i < l; i++) {\n      clone._pointArray[i] = Point.createByUint32(this._pointArray[i].uint32 | 0);\n    }\n    return clone;\n  }\n  toUint32Array() {\n    const l = this._pointArray.length;\n    const uint32Array = new Uint32Array(l);\n    for (let i = 0; i < l; i++) {\n      uint32Array[i] = this._pointArray[i].uint32;\n    }\n    return uint32Array;\n  }\n  toUint8Array() {\n    return new Uint8Array(this.toUint32Array().buffer);\n  }\n  static fromHTMLImageElement(img) {\n    const width = img.naturalWidth;\n    const height = img.naturalHeight;\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0, width, height, 0, 0, width, height);\n    return PointContainer.fromHTMLCanvasElement(canvas);\n  }\n  static fromHTMLCanvasElement(canvas) {\n    const width = canvas.width;\n    const height = canvas.height;\n    const ctx = canvas.getContext(\"2d\");\n    const imgData = ctx.getImageData(0, 0, width, height);\n    return PointContainer.fromImageData(imgData);\n  }\n  static fromImageData(imageData) {\n    const width = imageData.width;\n    const height = imageData.height;\n    return PointContainer.fromUint8Array(imageData.data, width, height);\n  }\n  static fromUint8Array(uint8Array, width, height) {\n    switch (Object.prototype.toString.call(uint8Array)) {\n      case \"[object Uint8ClampedArray]\":\n      case \"[object Uint8Array]\":\n        break;\n      default:\n        uint8Array = new Uint8Array(uint8Array);\n    }\n    const uint32Array = new Uint32Array(uint8Array.buffer);\n    return PointContainer.fromUint32Array(uint32Array, width, height);\n  }\n  static fromUint32Array(uint32Array, width, height) {\n    const container = new PointContainer();\n    container._width = width;\n    container._height = height;\n    for (let i = 0, l = uint32Array.length; i < l; i++) {\n      container._pointArray[i] = Point.createByUint32(uint32Array[i] | 0);\n    }\n    return container;\n  }\n  static fromBuffer(buffer, width, height) {\n    const uint32Array = new Uint32Array(buffer.buffer, buffer.byteOffset, buffer.byteLength / Uint32Array.BYTES_PER_ELEMENT);\n    return PointContainer.fromUint32Array(uint32Array, width, height);\n  }\n};\n\n// src/utils/palette.ts\nvar hueGroups = 10;\nfunction hueGroup(hue, segmentsNumber) {\n  const maxHue = 360;\n  const seg = maxHue / segmentsNumber;\n  const half = seg / 2;\n  for (let i = 1, mid = seg - half; i < segmentsNumber; i++, mid += seg) {\n    if (hue >= mid && hue < mid + seg) return i;\n  }\n  return 0;\n}\nvar Palette = class {\n  constructor() {\n    __publicField(this, \"_pointContainer\");\n    __publicField(this, \"_pointArray\", []);\n    __publicField(this, \"_i32idx\", {});\n    this._pointContainer = new PointContainer();\n    this._pointContainer.setHeight(1);\n    this._pointArray = this._pointContainer.getPointArray();\n  }\n  add(color) {\n    this._pointArray.push(color);\n    this._pointContainer.setWidth(this._pointArray.length);\n  }\n  has(color) {\n    for (let i = this._pointArray.length - 1; i >= 0; i--) {\n      if (color.uint32 === this._pointArray[i].uint32) return true;\n    }\n    return false;\n  }\n  getNearestColor(colorDistanceCalculator, color) {\n    return this._pointArray[this._getNearestIndex(colorDistanceCalculator, color) | 0];\n  }\n  getPointContainer() {\n    return this._pointContainer;\n  }\n  _nearestPointFromCache(key) {\n    return typeof this._i32idx[key] === \"number\" ? this._i32idx[key] : -1;\n  }\n  _getNearestIndex(colorDistanceCalculator, point) {\n    let idx = this._nearestPointFromCache(\"\" + point.uint32);\n    if (idx >= 0) return idx;\n    let minimalDistance = Number.MAX_VALUE;\n    idx = 0;\n    for (let i = 0, l = this._pointArray.length; i < l; i++) {\n      const p = this._pointArray[i];\n      const distance = colorDistanceCalculator.calculateRaw(point.r, point.g, point.b, point.a, p.r, p.g, p.b, p.a);\n      if (distance < minimalDistance) {\n        minimalDistance = distance;\n        idx = i;\n      }\n    }\n    this._i32idx[point.uint32] = idx;\n    return idx;\n  }\n  sort() {\n    this._i32idx = {};\n    this._pointArray.sort((a, b) => {\n      const hslA = rgb2hsl(a.r, a.g, a.b);\n      const hslB = rgb2hsl(b.r, b.g, b.b);\n      const hueA = a.r === a.g && a.g === a.b ? 0 : 1 + hueGroup(hslA.h, hueGroups);\n      const hueB = b.r === b.g && b.g === b.b ? 0 : 1 + hueGroup(hslB.h, hueGroups);\n      const hueDiff = hueB - hueA;\n      if (hueDiff) return -hueDiff;\n      const lA = a.getLuminosity(true);\n      const lB = b.getLuminosity(true);\n      if (lB - lA !== 0) return lB - lA;\n      const satDiff = (hslB.s * 100 | 0) - (hslA.s * 100 | 0);\n      if (satDiff) return -satDiff;\n      return 0;\n    });\n  }\n};\n\n// src/utils/index.ts\nvar utils_exports = {};\n__export(utils_exports, {\n  HueStatistics: () => HueStatistics,\n  Palette: () => Palette,\n  Point: () => Point,\n  PointContainer: () => PointContainer,\n  ProgressTracker: () => ProgressTracker,\n  arithmetic: () => arithmetic_exports\n});\n\n// src/utils/hueStatistics.ts\nvar HueGroup = class {\n  constructor() {\n    __publicField(this, \"num\", 0);\n    __publicField(this, \"cols\", []);\n  }\n};\nvar HueStatistics = class {\n  constructor(numGroups, minCols) {\n    __publicField(this, \"_numGroups\");\n    __publicField(this, \"_minCols\");\n    __publicField(this, \"_stats\");\n    __publicField(this, \"_groupsFull\");\n    this._numGroups = numGroups;\n    this._minCols = minCols;\n    this._stats = [];\n    for (let i = 0; i <= numGroups; i++) {\n      this._stats[i] = new HueGroup();\n    }\n    this._groupsFull = 0;\n  }\n  check(i32) {\n    if (this._groupsFull === this._numGroups + 1) {\n      this.check = () => {};\n    }\n    const r = i32 & 255;\n    const g = i32 >>> 8 & 255;\n    const b = i32 >>> 16 & 255;\n    const hg = r === g && g === b ? 0 : 1 + hueGroup(rgb2hsl(r, g, b).h, this._numGroups);\n    const gr = this._stats[hg];\n    const min = this._minCols;\n    gr.num++;\n    if (gr.num > min) {\n      return;\n    }\n    if (gr.num === min) {\n      this._groupsFull++;\n    }\n    if (gr.num <= min) {\n      this._stats[hg].cols.push(i32);\n    }\n  }\n  injectIntoDictionary(histG) {\n    for (let i = 0; i <= this._numGroups; i++) {\n      if (this._stats[i].num <= this._minCols) {\n        this._stats[i].cols.forEach(col => {\n          if (!histG[col]) {\n            histG[col] = 1;\n          } else {\n            histG[col]++;\n          }\n        });\n      }\n    }\n  }\n  injectIntoArray(histG) {\n    for (let i = 0; i <= this._numGroups; i++) {\n      if (this._stats[i].num <= this._minCols) {\n        this._stats[i].cols.forEach(col => {\n          if (histG.indexOf(col) === -1) {\n            histG.push(col);\n          }\n        });\n      }\n    }\n  }\n};\n\n// src/utils/progressTracker.ts\nvar _ProgressTracker = class {\n  constructor(valueRange, progressRange) {\n    __publicField(this, \"progress\");\n    __publicField(this, \"_step\");\n    __publicField(this, \"_range\");\n    __publicField(this, \"_last\");\n    __publicField(this, \"_progressRange\");\n    this._range = valueRange;\n    this._progressRange = progressRange;\n    this._step = Math.max(1, this._range / (_ProgressTracker.steps + 1) | 0);\n    this._last = -this._step;\n    this.progress = 0;\n  }\n  shouldNotify(current) {\n    if (current - this._last >= this._step) {\n      this._last = current;\n      this.progress = Math.min(this._progressRange * this._last / this._range, this._progressRange);\n      return true;\n    }\n    return false;\n  }\n};\nvar ProgressTracker = _ProgressTracker;\n__publicField(ProgressTracker, \"steps\", 100);\n\n// src/palette/neuquant/neuquant.ts\nvar networkBiasShift = 3;\nvar Neuron = class {\n  constructor(defaultValue) {\n    __publicField(this, \"r\");\n    __publicField(this, \"g\");\n    __publicField(this, \"b\");\n    __publicField(this, \"a\");\n    this.r = this.g = this.b = this.a = defaultValue;\n  }\n  toPoint() {\n    return Point.createByRGBA(this.r >> networkBiasShift, this.g >> networkBiasShift, this.b >> networkBiasShift, this.a >> networkBiasShift);\n  }\n  subtract(r, g, b, a) {\n    this.r -= r | 0;\n    this.g -= g | 0;\n    this.b -= b | 0;\n    this.a -= a | 0;\n  }\n};\nvar _NeuQuant = class extends AbstractPaletteQuantizer {\n  constructor(colorDistanceCalculator, colors = 256) {\n    super();\n    __publicField(this, \"_pointArray\");\n    __publicField(this, \"_networkSize\");\n    __publicField(this, \"_network\");\n    __publicField(this, \"_sampleFactor\");\n    __publicField(this, \"_radPower\");\n    __publicField(this, \"_freq\");\n    __publicField(this, \"_bias\");\n    __publicField(this, \"_distance\");\n    this._distance = colorDistanceCalculator;\n    this._pointArray = [];\n    this._sampleFactor = 1;\n    this._networkSize = colors;\n    this._distance.setWhitePoint(255 << networkBiasShift, 255 << networkBiasShift, 255 << networkBiasShift, 255 << networkBiasShift);\n  }\n  sample(pointContainer) {\n    this._pointArray = this._pointArray.concat(pointContainer.getPointArray());\n  }\n  *quantize() {\n    this._init();\n    yield* this._learn();\n    yield {\n      palette: this._buildPalette(),\n      progress: 100\n    };\n  }\n  _init() {\n    this._freq = [];\n    this._bias = [];\n    this._radPower = [];\n    this._network = [];\n    for (let i = 0; i < this._networkSize; i++) {\n      this._network[i] = new Neuron((i << networkBiasShift + 8) / this._networkSize | 0);\n      this._freq[i] = _NeuQuant._initialBias / this._networkSize | 0;\n      this._bias[i] = 0;\n    }\n  }\n  *_learn() {\n    let sampleFactor = this._sampleFactor;\n    const pointsNumber = this._pointArray.length;\n    if (pointsNumber < _NeuQuant._minpicturebytes) sampleFactor = 1;\n    const alphadec = 30 + (sampleFactor - 1) / 3 | 0;\n    const pointsToSample = pointsNumber / sampleFactor | 0;\n    let delta = pointsToSample / _NeuQuant._nCycles | 0;\n    let alpha = _NeuQuant._initAlpha;\n    let radius = (this._networkSize >> 3) * _NeuQuant._radiusBias;\n    let rad = radius >> _NeuQuant._radiusBiasShift;\n    if (rad <= 1) rad = 0;\n    for (let i = 0; i < rad; i++) {\n      this._radPower[i] = alpha * ((rad * rad - i * i) * _NeuQuant._radBias / (rad * rad)) >>> 0;\n    }\n    let step;\n    if (pointsNumber < _NeuQuant._minpicturebytes) {\n      step = 1;\n    } else if (pointsNumber % _NeuQuant._prime1 !== 0) {\n      step = _NeuQuant._prime1;\n    } else if (pointsNumber % _NeuQuant._prime2 !== 0) {\n      step = _NeuQuant._prime2;\n    } else if (pointsNumber % _NeuQuant._prime3 !== 0) {\n      step = _NeuQuant._prime3;\n    } else {\n      step = _NeuQuant._prime4;\n    }\n    const tracker = new ProgressTracker(pointsToSample, 99);\n    for (let i = 0, pointIndex = 0; i < pointsToSample;) {\n      if (tracker.shouldNotify(i)) {\n        yield {\n          progress: tracker.progress\n        };\n      }\n      const point = this._pointArray[pointIndex];\n      const b = point.b << networkBiasShift;\n      const g = point.g << networkBiasShift;\n      const r = point.r << networkBiasShift;\n      const a = point.a << networkBiasShift;\n      const neuronIndex = this._contest(b, g, r, a);\n      this._alterSingle(alpha, neuronIndex, b, g, r, a);\n      if (rad !== 0) this._alterNeighbour(rad, neuronIndex, b, g, r, a);\n      pointIndex += step;\n      if (pointIndex >= pointsNumber) pointIndex -= pointsNumber;\n      i++;\n      if (delta === 0) delta = 1;\n      if (i % delta === 0) {\n        alpha -= alpha / alphadec | 0;\n        radius -= radius / _NeuQuant._radiusDecrease | 0;\n        rad = radius >> _NeuQuant._radiusBiasShift;\n        if (rad <= 1) rad = 0;\n        for (let j = 0; j < rad; j++) {\n          this._radPower[j] = alpha * ((rad * rad - j * j) * _NeuQuant._radBias / (rad * rad)) >>> 0;\n        }\n      }\n    }\n  }\n  _buildPalette() {\n    const palette = new Palette();\n    this._network.forEach(neuron => {\n      palette.add(neuron.toPoint());\n    });\n    palette.sort();\n    return palette;\n  }\n  _alterNeighbour(rad, i, b, g, r, al) {\n    let lo = i - rad;\n    if (lo < -1) lo = -1;\n    let hi = i + rad;\n    if (hi > this._networkSize) hi = this._networkSize;\n    let j = i + 1;\n    let k = i - 1;\n    let m = 1;\n    while (j < hi || k > lo) {\n      const a = this._radPower[m++] / _NeuQuant._alphaRadBias;\n      if (j < hi) {\n        const p = this._network[j++];\n        p.subtract(a * (p.r - r), a * (p.g - g), a * (p.b - b), a * (p.a - al));\n      }\n      if (k > lo) {\n        const p = this._network[k--];\n        p.subtract(a * (p.r - r), a * (p.g - g), a * (p.b - b), a * (p.a - al));\n      }\n    }\n  }\n  _alterSingle(alpha, i, b, g, r, a) {\n    alpha /= _NeuQuant._initAlpha;\n    const n = this._network[i];\n    n.subtract(alpha * (n.r - r), alpha * (n.g - g), alpha * (n.b - b), alpha * (n.a - a));\n  }\n  _contest(b, g, r, a) {\n    const multiplier = 255 * 4 << networkBiasShift;\n    let bestd = ~(1 << 31);\n    let bestbiasd = bestd;\n    let bestpos = -1;\n    let bestbiaspos = bestpos;\n    for (let i = 0; i < this._networkSize; i++) {\n      const n = this._network[i];\n      const dist = this._distance.calculateNormalized(n, {\n        r,\n        g,\n        b,\n        a\n      }) * multiplier | 0;\n      if (dist < bestd) {\n        bestd = dist;\n        bestpos = i;\n      }\n      const biasdist = dist - (this._bias[i] >> _NeuQuant._initialBiasShift - networkBiasShift);\n      if (biasdist < bestbiasd) {\n        bestbiasd = biasdist;\n        bestbiaspos = i;\n      }\n      const betafreq = this._freq[i] >> _NeuQuant._betaShift;\n      this._freq[i] -= betafreq;\n      this._bias[i] += betafreq << _NeuQuant._gammaShift;\n    }\n    this._freq[bestpos] += _NeuQuant._beta;\n    this._bias[bestpos] -= _NeuQuant._betaGamma;\n    return bestbiaspos;\n  }\n};\nvar NeuQuant = _NeuQuant;\n__publicField(NeuQuant, \"_prime1\", 499);\n__publicField(NeuQuant, \"_prime2\", 491);\n__publicField(NeuQuant, \"_prime3\", 487);\n__publicField(NeuQuant, \"_prime4\", 503);\n__publicField(NeuQuant, \"_minpicturebytes\", _NeuQuant._prime4);\n__publicField(NeuQuant, \"_nCycles\", 100);\n__publicField(NeuQuant, \"_initialBiasShift\", 16);\n__publicField(NeuQuant, \"_initialBias\", 1 << _NeuQuant._initialBiasShift);\n__publicField(NeuQuant, \"_gammaShift\", 10);\n__publicField(NeuQuant, \"_betaShift\", 10);\n__publicField(NeuQuant, \"_beta\", _NeuQuant._initialBias >> _NeuQuant._betaShift);\n__publicField(NeuQuant, \"_betaGamma\", _NeuQuant._initialBias << _NeuQuant._gammaShift - _NeuQuant._betaShift);\n__publicField(NeuQuant, \"_radiusBiasShift\", 6);\n__publicField(NeuQuant, \"_radiusBias\", 1 << _NeuQuant._radiusBiasShift);\n__publicField(NeuQuant, \"_radiusDecrease\", 30);\n__publicField(NeuQuant, \"_alphaBiasShift\", 10);\n__publicField(NeuQuant, \"_initAlpha\", 1 << _NeuQuant._alphaBiasShift);\n__publicField(NeuQuant, \"_radBiasShift\", 8);\n__publicField(NeuQuant, \"_radBias\", 1 << _NeuQuant._radBiasShift);\n__publicField(NeuQuant, \"_alphaRadBiasShift\", _NeuQuant._alphaBiasShift + _NeuQuant._radBiasShift);\n__publicField(NeuQuant, \"_alphaRadBias\", 1 << _NeuQuant._alphaRadBiasShift);\n\n// src/palette/neuquant/neuquantFloat.ts\nvar networkBiasShift2 = 3;\nvar NeuronFloat = class {\n  constructor(defaultValue) {\n    __publicField(this, \"r\");\n    __publicField(this, \"g\");\n    __publicField(this, \"b\");\n    __publicField(this, \"a\");\n    this.r = this.g = this.b = this.a = defaultValue;\n  }\n  toPoint() {\n    return Point.createByRGBA(this.r >> networkBiasShift2, this.g >> networkBiasShift2, this.b >> networkBiasShift2, this.a >> networkBiasShift2);\n  }\n  subtract(r, g, b, a) {\n    this.r -= r;\n    this.g -= g;\n    this.b -= b;\n    this.a -= a;\n  }\n};\nvar _NeuQuantFloat = class extends AbstractPaletteQuantizer {\n  constructor(colorDistanceCalculator, colors = 256) {\n    super();\n    __publicField(this, \"_pointArray\");\n    __publicField(this, \"_networkSize\");\n    __publicField(this, \"_network\");\n    __publicField(this, \"_sampleFactor\");\n    __publicField(this, \"_radPower\");\n    __publicField(this, \"_freq\");\n    __publicField(this, \"_bias\");\n    __publicField(this, \"_distance\");\n    this._distance = colorDistanceCalculator;\n    this._pointArray = [];\n    this._sampleFactor = 1;\n    this._networkSize = colors;\n    this._distance.setWhitePoint(255 << networkBiasShift2, 255 << networkBiasShift2, 255 << networkBiasShift2, 255 << networkBiasShift2);\n  }\n  sample(pointContainer) {\n    this._pointArray = this._pointArray.concat(pointContainer.getPointArray());\n  }\n  *quantize() {\n    this._init();\n    yield* this._learn();\n    yield {\n      palette: this._buildPalette(),\n      progress: 100\n    };\n  }\n  _init() {\n    this._freq = [];\n    this._bias = [];\n    this._radPower = [];\n    this._network = [];\n    for (let i = 0; i < this._networkSize; i++) {\n      this._network[i] = new NeuronFloat((i << networkBiasShift2 + 8) / this._networkSize);\n      this._freq[i] = _NeuQuantFloat._initialBias / this._networkSize;\n      this._bias[i] = 0;\n    }\n  }\n  *_learn() {\n    let sampleFactor = this._sampleFactor;\n    const pointsNumber = this._pointArray.length;\n    if (pointsNumber < _NeuQuantFloat._minpicturebytes) sampleFactor = 1;\n    const alphadec = 30 + (sampleFactor - 1) / 3;\n    const pointsToSample = pointsNumber / sampleFactor;\n    let delta = pointsToSample / _NeuQuantFloat._nCycles | 0;\n    let alpha = _NeuQuantFloat._initAlpha;\n    let radius = (this._networkSize >> 3) * _NeuQuantFloat._radiusBias;\n    let rad = radius >> _NeuQuantFloat._radiusBiasShift;\n    if (rad <= 1) rad = 0;\n    for (let i = 0; i < rad; i++) {\n      this._radPower[i] = alpha * ((rad * rad - i * i) * _NeuQuantFloat._radBias / (rad * rad));\n    }\n    let step;\n    if (pointsNumber < _NeuQuantFloat._minpicturebytes) {\n      step = 1;\n    } else if (pointsNumber % _NeuQuantFloat._prime1 !== 0) {\n      step = _NeuQuantFloat._prime1;\n    } else if (pointsNumber % _NeuQuantFloat._prime2 !== 0) {\n      step = _NeuQuantFloat._prime2;\n    } else if (pointsNumber % _NeuQuantFloat._prime3 !== 0) {\n      step = _NeuQuantFloat._prime3;\n    } else {\n      step = _NeuQuantFloat._prime4;\n    }\n    const tracker = new ProgressTracker(pointsToSample, 99);\n    for (let i = 0, pointIndex = 0; i < pointsToSample;) {\n      if (tracker.shouldNotify(i)) {\n        yield {\n          progress: tracker.progress\n        };\n      }\n      const point = this._pointArray[pointIndex];\n      const b = point.b << networkBiasShift2;\n      const g = point.g << networkBiasShift2;\n      const r = point.r << networkBiasShift2;\n      const a = point.a << networkBiasShift2;\n      const neuronIndex = this._contest(b, g, r, a);\n      this._alterSingle(alpha, neuronIndex, b, g, r, a);\n      if (rad !== 0) this._alterNeighbour(rad, neuronIndex, b, g, r, a);\n      pointIndex += step;\n      if (pointIndex >= pointsNumber) pointIndex -= pointsNumber;\n      i++;\n      if (delta === 0) delta = 1;\n      if (i % delta === 0) {\n        alpha -= alpha / alphadec;\n        radius -= radius / _NeuQuantFloat._radiusDecrease;\n        rad = radius >> _NeuQuantFloat._radiusBiasShift;\n        if (rad <= 1) rad = 0;\n        for (let j = 0; j < rad; j++) {\n          this._radPower[j] = alpha * ((rad * rad - j * j) * _NeuQuantFloat._radBias / (rad * rad));\n        }\n      }\n    }\n  }\n  _buildPalette() {\n    const palette = new Palette();\n    this._network.forEach(neuron => {\n      palette.add(neuron.toPoint());\n    });\n    palette.sort();\n    return palette;\n  }\n  _alterNeighbour(rad, i, b, g, r, al) {\n    let lo = i - rad;\n    if (lo < -1) lo = -1;\n    let hi = i + rad;\n    if (hi > this._networkSize) hi = this._networkSize;\n    let j = i + 1;\n    let k = i - 1;\n    let m = 1;\n    while (j < hi || k > lo) {\n      const a = this._radPower[m++] / _NeuQuantFloat._alphaRadBias;\n      if (j < hi) {\n        const p = this._network[j++];\n        p.subtract(a * (p.r - r), a * (p.g - g), a * (p.b - b), a * (p.a - al));\n      }\n      if (k > lo) {\n        const p = this._network[k--];\n        p.subtract(a * (p.r - r), a * (p.g - g), a * (p.b - b), a * (p.a - al));\n      }\n    }\n  }\n  _alterSingle(alpha, i, b, g, r, a) {\n    alpha /= _NeuQuantFloat._initAlpha;\n    const n = this._network[i];\n    n.subtract(alpha * (n.r - r), alpha * (n.g - g), alpha * (n.b - b), alpha * (n.a - a));\n  }\n  _contest(b, g, r, al) {\n    const multiplier = 255 * 4 << networkBiasShift2;\n    let bestd = ~(1 << 31);\n    let bestbiasd = bestd;\n    let bestpos = -1;\n    let bestbiaspos = bestpos;\n    for (let i = 0; i < this._networkSize; i++) {\n      const n = this._network[i];\n      const dist = this._distance.calculateNormalized(n, {\n        r,\n        g,\n        b,\n        a: al\n      }) * multiplier;\n      if (dist < bestd) {\n        bestd = dist;\n        bestpos = i;\n      }\n      const biasdist = dist - (this._bias[i] >> _NeuQuantFloat._initialBiasShift - networkBiasShift2);\n      if (biasdist < bestbiasd) {\n        bestbiasd = biasdist;\n        bestbiaspos = i;\n      }\n      const betafreq = this._freq[i] >> _NeuQuantFloat._betaShift;\n      this._freq[i] -= betafreq;\n      this._bias[i] += betafreq << _NeuQuantFloat._gammaShift;\n    }\n    this._freq[bestpos] += _NeuQuantFloat._beta;\n    this._bias[bestpos] -= _NeuQuantFloat._betaGamma;\n    return bestbiaspos;\n  }\n};\nvar NeuQuantFloat = _NeuQuantFloat;\n__publicField(NeuQuantFloat, \"_prime1\", 499);\n__publicField(NeuQuantFloat, \"_prime2\", 491);\n__publicField(NeuQuantFloat, \"_prime3\", 487);\n__publicField(NeuQuantFloat, \"_prime4\", 503);\n__publicField(NeuQuantFloat, \"_minpicturebytes\", _NeuQuantFloat._prime4);\n__publicField(NeuQuantFloat, \"_nCycles\", 100);\n__publicField(NeuQuantFloat, \"_initialBiasShift\", 16);\n__publicField(NeuQuantFloat, \"_initialBias\", 1 << _NeuQuantFloat._initialBiasShift);\n__publicField(NeuQuantFloat, \"_gammaShift\", 10);\n__publicField(NeuQuantFloat, \"_betaShift\", 10);\n__publicField(NeuQuantFloat, \"_beta\", _NeuQuantFloat._initialBias >> _NeuQuantFloat._betaShift);\n__publicField(NeuQuantFloat, \"_betaGamma\", _NeuQuantFloat._initialBias << _NeuQuantFloat._gammaShift - _NeuQuantFloat._betaShift);\n__publicField(NeuQuantFloat, \"_radiusBiasShift\", 6);\n__publicField(NeuQuantFloat, \"_radiusBias\", 1 << _NeuQuantFloat._radiusBiasShift);\n__publicField(NeuQuantFloat, \"_radiusDecrease\", 30);\n__publicField(NeuQuantFloat, \"_alphaBiasShift\", 10);\n__publicField(NeuQuantFloat, \"_initAlpha\", 1 << _NeuQuantFloat._alphaBiasShift);\n__publicField(NeuQuantFloat, \"_radBiasShift\", 8);\n__publicField(NeuQuantFloat, \"_radBias\", 1 << _NeuQuantFloat._radBiasShift);\n__publicField(NeuQuantFloat, \"_alphaRadBiasShift\", _NeuQuantFloat._alphaBiasShift + _NeuQuantFloat._radBiasShift);\n__publicField(NeuQuantFloat, \"_alphaRadBias\", 1 << _NeuQuantFloat._alphaRadBiasShift);\n\n// src/palette/rgbquant/colorHistogram.ts\nvar _ColorHistogram = class {\n  constructor(method, colors) {\n    __publicField(this, \"_method\");\n    __publicField(this, \"_hueStats\");\n    __publicField(this, \"_histogram\");\n    __publicField(this, \"_initColors\");\n    __publicField(this, \"_minHueCols\");\n    this._method = method;\n    this._minHueCols = colors << 2;\n    this._initColors = colors << 2;\n    this._hueStats = new HueStatistics(_ColorHistogram._hueGroups, this._minHueCols);\n    this._histogram = /* @__PURE__ */Object.create(null);\n  }\n  sample(pointContainer) {\n    switch (this._method) {\n      case 1:\n        this._colorStats1D(pointContainer);\n        break;\n      case 2:\n        this._colorStats2D(pointContainer);\n        break;\n    }\n  }\n  getImportanceSortedColorsIDXI32() {\n    const sorted = stableSort(Object.keys(this._histogram), (a, b) => this._histogram[b] - this._histogram[a]);\n    if (sorted.length === 0) {\n      return [];\n    }\n    let idxi32;\n    switch (this._method) {\n      case 1:\n        const initialColorsLimit = Math.min(sorted.length, this._initColors);\n        const last = sorted[initialColorsLimit - 1];\n        const freq = this._histogram[last];\n        idxi32 = sorted.slice(0, initialColorsLimit);\n        let pos = initialColorsLimit;\n        const len = sorted.length;\n        while (pos < len && this._histogram[sorted[pos]] === freq) {\n          idxi32.push(sorted[pos++]);\n        }\n        this._hueStats.injectIntoArray(idxi32);\n        break;\n      case 2:\n        idxi32 = sorted;\n        break;\n      default:\n        throw new Error(\"Incorrect method\");\n    }\n    return idxi32.map(v => +v);\n  }\n  _colorStats1D(pointContainer) {\n    const histG = this._histogram;\n    const pointArray = pointContainer.getPointArray();\n    const len = pointArray.length;\n    for (let i = 0; i < len; i++) {\n      const col = pointArray[i].uint32;\n      this._hueStats.check(col);\n      if (col in histG) {\n        histG[col]++;\n      } else {\n        histG[col] = 1;\n      }\n    }\n  }\n  _colorStats2D(pointContainer) {\n    const width = pointContainer.getWidth();\n    const height = pointContainer.getHeight();\n    const pointArray = pointContainer.getPointArray();\n    const boxW = _ColorHistogram._boxSize[0];\n    const boxH = _ColorHistogram._boxSize[1];\n    const area = boxW * boxH;\n    const boxes = this._makeBoxes(width, height, boxW, boxH);\n    const histG = this._histogram;\n    boxes.forEach(box => {\n      let effc = Math.round(box.w * box.h / area) * _ColorHistogram._boxPixels;\n      if (effc < 2) effc = 2;\n      const histL = {};\n      this._iterateBox(box, width, i => {\n        const col = pointArray[i].uint32;\n        this._hueStats.check(col);\n        if (col in histG) {\n          histG[col]++;\n        } else if (col in histL) {\n          if (++histL[col] >= effc) {\n            histG[col] = histL[col];\n          }\n        } else {\n          histL[col] = 1;\n        }\n      });\n    });\n    this._hueStats.injectIntoDictionary(histG);\n  }\n  _iterateBox(bbox, wid, fn) {\n    const b = bbox;\n    const i0 = b.y * wid + b.x;\n    const i1 = (b.y + b.h - 1) * wid + (b.x + b.w - 1);\n    const incr = wid - b.w + 1;\n    let cnt = 0;\n    let i = i0;\n    do {\n      fn.call(this, i);\n      i += ++cnt % b.w === 0 ? incr : 1;\n    } while (i <= i1);\n  }\n  _makeBoxes(width, height, stepX, stepY) {\n    const wrem = width % stepX;\n    const hrem = height % stepY;\n    const xend = width - wrem;\n    const yend = height - hrem;\n    const boxesArray = [];\n    for (let y2 = 0; y2 < height; y2 += stepY) {\n      for (let x2 = 0; x2 < width; x2 += stepX) {\n        boxesArray.push({\n          x: x2,\n          y: y2,\n          w: x2 === xend ? wrem : stepX,\n          h: y2 === yend ? hrem : stepY\n        });\n      }\n    }\n    return boxesArray;\n  }\n};\nvar ColorHistogram = _ColorHistogram;\n__publicField(ColorHistogram, \"_boxSize\", [64, 64]);\n__publicField(ColorHistogram, \"_boxPixels\", 2);\n__publicField(ColorHistogram, \"_hueGroups\", 10);\n\n// src/palette/rgbquant/rgbquant.ts\nvar RemovedColor = class {\n  constructor(index, color, distance) {\n    __publicField(this, \"index\");\n    __publicField(this, \"color\");\n    __publicField(this, \"distance\");\n    this.index = index;\n    this.color = color;\n    this.distance = distance;\n  }\n};\nvar RGBQuant = class extends AbstractPaletteQuantizer {\n  constructor(colorDistanceCalculator, colors = 256, method = 2) {\n    super();\n    __publicField(this, \"_colors\");\n    __publicField(this, \"_initialDistance\");\n    __publicField(this, \"_distanceIncrement\");\n    __publicField(this, \"_histogram\");\n    __publicField(this, \"_distance\");\n    this._distance = colorDistanceCalculator;\n    this._colors = colors;\n    this._histogram = new ColorHistogram(method, colors);\n    this._initialDistance = 0.01;\n    this._distanceIncrement = 5e-3;\n  }\n  sample(image) {\n    this._histogram.sample(image);\n  }\n  *quantize() {\n    const idxi32 = this._histogram.getImportanceSortedColorsIDXI32();\n    if (idxi32.length === 0) {\n      throw new Error(\"No colors in image\");\n    }\n    yield* this._buildPalette(idxi32);\n  }\n  *_buildPalette(idxi32) {\n    const palette = new Palette();\n    const colorArray = palette.getPointContainer().getPointArray();\n    const usageArray = new Array(idxi32.length);\n    for (let i = 0; i < idxi32.length; i++) {\n      colorArray.push(Point.createByUint32(idxi32[i]));\n      usageArray[i] = 1;\n    }\n    const len = colorArray.length;\n    const memDist = [];\n    let palLen = len;\n    let thold = this._initialDistance;\n    const tracker = new ProgressTracker(palLen - this._colors, 99);\n    while (palLen > this._colors) {\n      memDist.length = 0;\n      for (let i = 0; i < len; i++) {\n        if (tracker.shouldNotify(len - palLen)) {\n          yield {\n            progress: tracker.progress\n          };\n        }\n        if (usageArray[i] === 0) continue;\n        const pxi = colorArray[i];\n        for (let j = i + 1; j < len; j++) {\n          if (usageArray[j] === 0) continue;\n          const pxj = colorArray[j];\n          const dist = this._distance.calculateNormalized(pxi, pxj);\n          if (dist < thold) {\n            memDist.push(new RemovedColor(j, pxj, dist));\n            usageArray[j] = 0;\n            palLen--;\n          }\n        }\n      }\n      thold += palLen > this._colors * 3 ? this._initialDistance : this._distanceIncrement;\n    }\n    if (palLen < this._colors) {\n      stableSort(memDist, (a, b) => b.distance - a.distance);\n      let k = 0;\n      while (palLen < this._colors && k < memDist.length) {\n        const removedColor = memDist[k];\n        usageArray[removedColor.index] = 1;\n        palLen++;\n        k++;\n      }\n    }\n    let colors = colorArray.length;\n    for (let colorIndex = colors - 1; colorIndex >= 0; colorIndex--) {\n      if (usageArray[colorIndex] === 0) {\n        if (colorIndex !== colors - 1) {\n          colorArray[colorIndex] = colorArray[colors - 1];\n        }\n        --colors;\n      }\n    }\n    colorArray.length = colors;\n    palette.sort();\n    yield {\n      palette,\n      progress: 100\n    };\n  }\n};\n\n// src/palette/wu/wuQuant.ts\nfunction createArray1D(dimension1) {\n  const a = [];\n  for (let k = 0; k < dimension1; k++) {\n    a[k] = 0;\n  }\n  return a;\n}\nfunction createArray4D(dimension1, dimension2, dimension3, dimension4) {\n  const a = new Array(dimension1);\n  for (let i = 0; i < dimension1; i++) {\n    a[i] = new Array(dimension2);\n    for (let j = 0; j < dimension2; j++) {\n      a[i][j] = new Array(dimension3);\n      for (let k = 0; k < dimension3; k++) {\n        a[i][j][k] = new Array(dimension4);\n        for (let l = 0; l < dimension4; l++) {\n          a[i][j][k][l] = 0;\n        }\n      }\n    }\n  }\n  return a;\n}\nfunction createArray3D(dimension1, dimension2, dimension3) {\n  const a = new Array(dimension1);\n  for (let i = 0; i < dimension1; i++) {\n    a[i] = new Array(dimension2);\n    for (let j = 0; j < dimension2; j++) {\n      a[i][j] = new Array(dimension3);\n      for (let k = 0; k < dimension3; k++) {\n        a[i][j][k] = 0;\n      }\n    }\n  }\n  return a;\n}\nfunction fillArray3D(a, dimension1, dimension2, dimension3, value) {\n  for (let i = 0; i < dimension1; i++) {\n    a[i] = [];\n    for (let j = 0; j < dimension2; j++) {\n      a[i][j] = [];\n      for (let k = 0; k < dimension3; k++) {\n        a[i][j][k] = value;\n      }\n    }\n  }\n}\nfunction fillArray1D(a, dimension1, value) {\n  for (let i = 0; i < dimension1; i++) {\n    a[i] = value;\n  }\n}\nvar WuColorCube = class {\n  constructor() {\n    __publicField(this, \"redMinimum\");\n    __publicField(this, \"redMaximum\");\n    __publicField(this, \"greenMinimum\");\n    __publicField(this, \"greenMaximum\");\n    __publicField(this, \"blueMinimum\");\n    __publicField(this, \"blueMaximum\");\n    __publicField(this, \"volume\");\n    __publicField(this, \"alphaMinimum\");\n    __publicField(this, \"alphaMaximum\");\n  }\n};\nvar _WuQuant = class extends AbstractPaletteQuantizer {\n  constructor(colorDistanceCalculator, colors = 256, significantBitsPerChannel = 5) {\n    super();\n    __publicField(this, \"_reds\");\n    __publicField(this, \"_greens\");\n    __publicField(this, \"_blues\");\n    __publicField(this, \"_alphas\");\n    __publicField(this, \"_sums\");\n    __publicField(this, \"_weights\");\n    __publicField(this, \"_momentsRed\");\n    __publicField(this, \"_momentsGreen\");\n    __publicField(this, \"_momentsBlue\");\n    __publicField(this, \"_momentsAlpha\");\n    __publicField(this, \"_moments\");\n    __publicField(this, \"_table\");\n    __publicField(this, \"_pixels\");\n    __publicField(this, \"_cubes\");\n    __publicField(this, \"_colors\");\n    __publicField(this, \"_significantBitsPerChannel\");\n    __publicField(this, \"_maxSideIndex\");\n    __publicField(this, \"_alphaMaxSideIndex\");\n    __publicField(this, \"_sideSize\");\n    __publicField(this, \"_alphaSideSize\");\n    __publicField(this, \"_distance\");\n    this._distance = colorDistanceCalculator;\n    this._setQuality(significantBitsPerChannel);\n    this._initialize(colors);\n  }\n  sample(image) {\n    const pointArray = image.getPointArray();\n    for (let i = 0, l = pointArray.length; i < l; i++) {\n      this._addColor(pointArray[i]);\n    }\n    this._pixels = this._pixels.concat(pointArray);\n  }\n  *quantize() {\n    yield* this._preparePalette();\n    const palette = new Palette();\n    for (let paletteIndex = 0; paletteIndex < this._colors; paletteIndex++) {\n      if (this._sums[paletteIndex] > 0) {\n        const sum = this._sums[paletteIndex];\n        const r = this._reds[paletteIndex] / sum;\n        const g = this._greens[paletteIndex] / sum;\n        const b = this._blues[paletteIndex] / sum;\n        const a = this._alphas[paletteIndex] / sum;\n        const color = Point.createByRGBA(r | 0, g | 0, b | 0, a | 0);\n        palette.add(color);\n      }\n    }\n    palette.sort();\n    yield {\n      palette,\n      progress: 100\n    };\n  }\n  *_preparePalette() {\n    yield* this._calculateMoments();\n    let next = 0;\n    const volumeVariance = createArray1D(this._colors);\n    for (let cubeIndex = 1; cubeIndex < this._colors; ++cubeIndex) {\n      if (this._cut(this._cubes[next], this._cubes[cubeIndex])) {\n        volumeVariance[next] = this._cubes[next].volume > 1 ? this._calculateVariance(this._cubes[next]) : 0;\n        volumeVariance[cubeIndex] = this._cubes[cubeIndex].volume > 1 ? this._calculateVariance(this._cubes[cubeIndex]) : 0;\n      } else {\n        volumeVariance[next] = 0;\n        cubeIndex--;\n      }\n      next = 0;\n      let temp = volumeVariance[0];\n      for (let index = 1; index <= cubeIndex; ++index) {\n        if (volumeVariance[index] > temp) {\n          temp = volumeVariance[index];\n          next = index;\n        }\n      }\n      if (temp <= 0) {\n        this._colors = cubeIndex + 1;\n        break;\n      }\n    }\n    const lookupRed = [];\n    const lookupGreen = [];\n    const lookupBlue = [];\n    const lookupAlpha = [];\n    for (let k = 0; k < this._colors; ++k) {\n      const weight = _WuQuant._volume(this._cubes[k], this._weights);\n      if (weight > 0) {\n        lookupRed[k] = _WuQuant._volume(this._cubes[k], this._momentsRed) / weight | 0;\n        lookupGreen[k] = _WuQuant._volume(this._cubes[k], this._momentsGreen) / weight | 0;\n        lookupBlue[k] = _WuQuant._volume(this._cubes[k], this._momentsBlue) / weight | 0;\n        lookupAlpha[k] = _WuQuant._volume(this._cubes[k], this._momentsAlpha) / weight | 0;\n      } else {\n        lookupRed[k] = 0;\n        lookupGreen[k] = 0;\n        lookupBlue[k] = 0;\n        lookupAlpha[k] = 0;\n      }\n    }\n    this._reds = createArray1D(this._colors + 1);\n    this._greens = createArray1D(this._colors + 1);\n    this._blues = createArray1D(this._colors + 1);\n    this._alphas = createArray1D(this._colors + 1);\n    this._sums = createArray1D(this._colors + 1);\n    for (let index = 0, l = this._pixels.length; index < l; index++) {\n      const color = this._pixels[index];\n      const match = -1;\n      let bestMatch = match;\n      let bestDistance = Number.MAX_VALUE;\n      for (let lookup = 0; lookup < this._colors; lookup++) {\n        const foundRed = lookupRed[lookup];\n        const foundGreen = lookupGreen[lookup];\n        const foundBlue = lookupBlue[lookup];\n        const foundAlpha = lookupAlpha[lookup];\n        const distance = this._distance.calculateRaw(foundRed, foundGreen, foundBlue, foundAlpha, color.r, color.g, color.b, color.a);\n        if (distance < bestDistance) {\n          bestDistance = distance;\n          bestMatch = lookup;\n        }\n      }\n      this._reds[bestMatch] += color.r;\n      this._greens[bestMatch] += color.g;\n      this._blues[bestMatch] += color.b;\n      this._alphas[bestMatch] += color.a;\n      this._sums[bestMatch]++;\n    }\n  }\n  _addColor(color) {\n    const bitsToRemove = 8 - this._significantBitsPerChannel;\n    const indexRed = (color.r >> bitsToRemove) + 1;\n    const indexGreen = (color.g >> bitsToRemove) + 1;\n    const indexBlue = (color.b >> bitsToRemove) + 1;\n    const indexAlpha = (color.a >> bitsToRemove) + 1;\n    this._weights[indexAlpha][indexRed][indexGreen][indexBlue]++;\n    this._momentsRed[indexAlpha][indexRed][indexGreen][indexBlue] += color.r;\n    this._momentsGreen[indexAlpha][indexRed][indexGreen][indexBlue] += color.g;\n    this._momentsBlue[indexAlpha][indexRed][indexGreen][indexBlue] += color.b;\n    this._momentsAlpha[indexAlpha][indexRed][indexGreen][indexBlue] += color.a;\n    this._moments[indexAlpha][indexRed][indexGreen][indexBlue] += this._table[color.r] + this._table[color.g] + this._table[color.b] + this._table[color.a];\n  }\n  *_calculateMoments() {\n    const area = [];\n    const areaRed = [];\n    const areaGreen = [];\n    const areaBlue = [];\n    const areaAlpha = [];\n    const area2 = [];\n    const xarea = createArray3D(this._sideSize, this._sideSize, this._sideSize);\n    const xareaRed = createArray3D(this._sideSize, this._sideSize, this._sideSize);\n    const xareaGreen = createArray3D(this._sideSize, this._sideSize, this._sideSize);\n    const xareaBlue = createArray3D(this._sideSize, this._sideSize, this._sideSize);\n    const xareaAlpha = createArray3D(this._sideSize, this._sideSize, this._sideSize);\n    const xarea2 = createArray3D(this._sideSize, this._sideSize, this._sideSize);\n    let trackerProgress = 0;\n    const tracker = new ProgressTracker(this._alphaMaxSideIndex * this._maxSideIndex, 99);\n    for (let alphaIndex = 1; alphaIndex <= this._alphaMaxSideIndex; ++alphaIndex) {\n      fillArray3D(xarea, this._sideSize, this._sideSize, this._sideSize, 0);\n      fillArray3D(xareaRed, this._sideSize, this._sideSize, this._sideSize, 0);\n      fillArray3D(xareaGreen, this._sideSize, this._sideSize, this._sideSize, 0);\n      fillArray3D(xareaBlue, this._sideSize, this._sideSize, this._sideSize, 0);\n      fillArray3D(xareaAlpha, this._sideSize, this._sideSize, this._sideSize, 0);\n      fillArray3D(xarea2, this._sideSize, this._sideSize, this._sideSize, 0);\n      for (let redIndex = 1; redIndex <= this._maxSideIndex; ++redIndex, ++trackerProgress) {\n        if (tracker.shouldNotify(trackerProgress)) {\n          yield {\n            progress: tracker.progress\n          };\n        }\n        fillArray1D(area, this._sideSize, 0);\n        fillArray1D(areaRed, this._sideSize, 0);\n        fillArray1D(areaGreen, this._sideSize, 0);\n        fillArray1D(areaBlue, this._sideSize, 0);\n        fillArray1D(areaAlpha, this._sideSize, 0);\n        fillArray1D(area2, this._sideSize, 0);\n        for (let greenIndex = 1; greenIndex <= this._maxSideIndex; ++greenIndex) {\n          let line = 0;\n          let lineRed = 0;\n          let lineGreen = 0;\n          let lineBlue = 0;\n          let lineAlpha = 0;\n          let line2 = 0;\n          for (let blueIndex = 1; blueIndex <= this._maxSideIndex; ++blueIndex) {\n            line += this._weights[alphaIndex][redIndex][greenIndex][blueIndex];\n            lineRed += this._momentsRed[alphaIndex][redIndex][greenIndex][blueIndex];\n            lineGreen += this._momentsGreen[alphaIndex][redIndex][greenIndex][blueIndex];\n            lineBlue += this._momentsBlue[alphaIndex][redIndex][greenIndex][blueIndex];\n            lineAlpha += this._momentsAlpha[alphaIndex][redIndex][greenIndex][blueIndex];\n            line2 += this._moments[alphaIndex][redIndex][greenIndex][blueIndex];\n            area[blueIndex] += line;\n            areaRed[blueIndex] += lineRed;\n            areaGreen[blueIndex] += lineGreen;\n            areaBlue[blueIndex] += lineBlue;\n            areaAlpha[blueIndex] += lineAlpha;\n            area2[blueIndex] += line2;\n            xarea[redIndex][greenIndex][blueIndex] = xarea[redIndex - 1][greenIndex][blueIndex] + area[blueIndex];\n            xareaRed[redIndex][greenIndex][blueIndex] = xareaRed[redIndex - 1][greenIndex][blueIndex] + areaRed[blueIndex];\n            xareaGreen[redIndex][greenIndex][blueIndex] = xareaGreen[redIndex - 1][greenIndex][blueIndex] + areaGreen[blueIndex];\n            xareaBlue[redIndex][greenIndex][blueIndex] = xareaBlue[redIndex - 1][greenIndex][blueIndex] + areaBlue[blueIndex];\n            xareaAlpha[redIndex][greenIndex][blueIndex] = xareaAlpha[redIndex - 1][greenIndex][blueIndex] + areaAlpha[blueIndex];\n            xarea2[redIndex][greenIndex][blueIndex] = xarea2[redIndex - 1][greenIndex][blueIndex] + area2[blueIndex];\n            this._weights[alphaIndex][redIndex][greenIndex][blueIndex] = this._weights[alphaIndex - 1][redIndex][greenIndex][blueIndex] + xarea[redIndex][greenIndex][blueIndex];\n            this._momentsRed[alphaIndex][redIndex][greenIndex][blueIndex] = this._momentsRed[alphaIndex - 1][redIndex][greenIndex][blueIndex] + xareaRed[redIndex][greenIndex][blueIndex];\n            this._momentsGreen[alphaIndex][redIndex][greenIndex][blueIndex] = this._momentsGreen[alphaIndex - 1][redIndex][greenIndex][blueIndex] + xareaGreen[redIndex][greenIndex][blueIndex];\n            this._momentsBlue[alphaIndex][redIndex][greenIndex][blueIndex] = this._momentsBlue[alphaIndex - 1][redIndex][greenIndex][blueIndex] + xareaBlue[redIndex][greenIndex][blueIndex];\n            this._momentsAlpha[alphaIndex][redIndex][greenIndex][blueIndex] = this._momentsAlpha[alphaIndex - 1][redIndex][greenIndex][blueIndex] + xareaAlpha[redIndex][greenIndex][blueIndex];\n            this._moments[alphaIndex][redIndex][greenIndex][blueIndex] = this._moments[alphaIndex - 1][redIndex][greenIndex][blueIndex] + xarea2[redIndex][greenIndex][blueIndex];\n          }\n        }\n      }\n    }\n  }\n  static _volumeFloat(cube, moment) {\n    return moment[cube.alphaMaximum][cube.redMaximum][cube.greenMaximum][cube.blueMaximum] - moment[cube.alphaMaximum][cube.redMaximum][cube.greenMinimum][cube.blueMaximum] - moment[cube.alphaMaximum][cube.redMinimum][cube.greenMaximum][cube.blueMaximum] + moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][cube.blueMaximum] - moment[cube.alphaMinimum][cube.redMaximum][cube.greenMaximum][cube.blueMaximum] + moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][cube.blueMaximum] + moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][cube.blueMaximum] - moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][cube.blueMaximum] - (moment[cube.alphaMaximum][cube.redMaximum][cube.greenMaximum][cube.blueMinimum] - moment[cube.alphaMinimum][cube.redMaximum][cube.greenMaximum][cube.blueMinimum] - moment[cube.alphaMaximum][cube.redMaximum][cube.greenMinimum][cube.blueMinimum] + moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][cube.blueMinimum] - moment[cube.alphaMaximum][cube.redMinimum][cube.greenMaximum][cube.blueMinimum] + moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][cube.blueMinimum] + moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][cube.blueMinimum] - moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][cube.blueMinimum]);\n  }\n  static _volume(cube, moment) {\n    return _WuQuant._volumeFloat(cube, moment) | 0;\n  }\n  static _top(cube, direction, position, moment) {\n    let result;\n    switch (direction) {\n      case _WuQuant._alpha:\n        result = moment[position][cube.redMaximum][cube.greenMaximum][cube.blueMaximum] - moment[position][cube.redMaximum][cube.greenMinimum][cube.blueMaximum] - moment[position][cube.redMinimum][cube.greenMaximum][cube.blueMaximum] + moment[position][cube.redMinimum][cube.greenMinimum][cube.blueMaximum] - (moment[position][cube.redMaximum][cube.greenMaximum][cube.blueMinimum] - moment[position][cube.redMaximum][cube.greenMinimum][cube.blueMinimum] - moment[position][cube.redMinimum][cube.greenMaximum][cube.blueMinimum] + moment[position][cube.redMinimum][cube.greenMinimum][cube.blueMinimum]);\n        break;\n      case _WuQuant._red:\n        result = moment[cube.alphaMaximum][position][cube.greenMaximum][cube.blueMaximum] - moment[cube.alphaMaximum][position][cube.greenMinimum][cube.blueMaximum] - moment[cube.alphaMinimum][position][cube.greenMaximum][cube.blueMaximum] + moment[cube.alphaMinimum][position][cube.greenMinimum][cube.blueMaximum] - (moment[cube.alphaMaximum][position][cube.greenMaximum][cube.blueMinimum] - moment[cube.alphaMaximum][position][cube.greenMinimum][cube.blueMinimum] - moment[cube.alphaMinimum][position][cube.greenMaximum][cube.blueMinimum] + moment[cube.alphaMinimum][position][cube.greenMinimum][cube.blueMinimum]);\n        break;\n      case _WuQuant._green:\n        result = moment[cube.alphaMaximum][cube.redMaximum][position][cube.blueMaximum] - moment[cube.alphaMaximum][cube.redMinimum][position][cube.blueMaximum] - moment[cube.alphaMinimum][cube.redMaximum][position][cube.blueMaximum] + moment[cube.alphaMinimum][cube.redMinimum][position][cube.blueMaximum] - (moment[cube.alphaMaximum][cube.redMaximum][position][cube.blueMinimum] - moment[cube.alphaMaximum][cube.redMinimum][position][cube.blueMinimum] - moment[cube.alphaMinimum][cube.redMaximum][position][cube.blueMinimum] + moment[cube.alphaMinimum][cube.redMinimum][position][cube.blueMinimum]);\n        break;\n      case _WuQuant._blue:\n        result = moment[cube.alphaMaximum][cube.redMaximum][cube.greenMaximum][position] - moment[cube.alphaMaximum][cube.redMaximum][cube.greenMinimum][position] - moment[cube.alphaMaximum][cube.redMinimum][cube.greenMaximum][position] + moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][position] - (moment[cube.alphaMinimum][cube.redMaximum][cube.greenMaximum][position] - moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][position] - moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][position] + moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][position]);\n        break;\n      default:\n        throw new Error(\"impossible\");\n    }\n    return result | 0;\n  }\n  static _bottom(cube, direction, moment) {\n    switch (direction) {\n      case _WuQuant._alpha:\n        return -moment[cube.alphaMinimum][cube.redMaximum][cube.greenMaximum][cube.blueMaximum] + moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][cube.blueMaximum] + moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][cube.blueMaximum] - moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][cube.blueMaximum] - (-moment[cube.alphaMinimum][cube.redMaximum][cube.greenMaximum][cube.blueMinimum] + moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][cube.blueMinimum] + moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][cube.blueMinimum] - moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][cube.blueMinimum]);\n      case _WuQuant._red:\n        return -moment[cube.alphaMaximum][cube.redMinimum][cube.greenMaximum][cube.blueMaximum] + moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][cube.blueMaximum] + moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][cube.blueMaximum] - moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][cube.blueMaximum] - (-moment[cube.alphaMaximum][cube.redMinimum][cube.greenMaximum][cube.blueMinimum] + moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][cube.blueMinimum] + moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][cube.blueMinimum] - moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][cube.blueMinimum]);\n      case _WuQuant._green:\n        return -moment[cube.alphaMaximum][cube.redMaximum][cube.greenMinimum][cube.blueMaximum] + moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][cube.blueMaximum] + moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][cube.blueMaximum] - moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][cube.blueMaximum] - (-moment[cube.alphaMaximum][cube.redMaximum][cube.greenMinimum][cube.blueMinimum] + moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][cube.blueMinimum] + moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][cube.blueMinimum] - moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][cube.blueMinimum]);\n      case _WuQuant._blue:\n        return -moment[cube.alphaMaximum][cube.redMaximum][cube.greenMaximum][cube.blueMinimum] + moment[cube.alphaMaximum][cube.redMaximum][cube.greenMinimum][cube.blueMinimum] + moment[cube.alphaMaximum][cube.redMinimum][cube.greenMaximum][cube.blueMinimum] - moment[cube.alphaMaximum][cube.redMinimum][cube.greenMinimum][cube.blueMinimum] - (-moment[cube.alphaMinimum][cube.redMaximum][cube.greenMaximum][cube.blueMinimum] + moment[cube.alphaMinimum][cube.redMaximum][cube.greenMinimum][cube.blueMinimum] + moment[cube.alphaMinimum][cube.redMinimum][cube.greenMaximum][cube.blueMinimum] - moment[cube.alphaMinimum][cube.redMinimum][cube.greenMinimum][cube.blueMinimum]);\n      default:\n        return 0;\n    }\n  }\n  _calculateVariance(cube) {\n    const volumeRed = _WuQuant._volume(cube, this._momentsRed);\n    const volumeGreen = _WuQuant._volume(cube, this._momentsGreen);\n    const volumeBlue = _WuQuant._volume(cube, this._momentsBlue);\n    const volumeAlpha = _WuQuant._volume(cube, this._momentsAlpha);\n    const volumeMoment = _WuQuant._volumeFloat(cube, this._moments);\n    const volumeWeight = _WuQuant._volume(cube, this._weights);\n    const distance = volumeRed * volumeRed + volumeGreen * volumeGreen + volumeBlue * volumeBlue + volumeAlpha * volumeAlpha;\n    return volumeMoment - distance / volumeWeight;\n  }\n  _maximize(cube, direction, first, last, wholeRed, wholeGreen, wholeBlue, wholeAlpha, wholeWeight) {\n    const bottomRed = _WuQuant._bottom(cube, direction, this._momentsRed) | 0;\n    const bottomGreen = _WuQuant._bottom(cube, direction, this._momentsGreen) | 0;\n    const bottomBlue = _WuQuant._bottom(cube, direction, this._momentsBlue) | 0;\n    const bottomAlpha = _WuQuant._bottom(cube, direction, this._momentsAlpha) | 0;\n    const bottomWeight = _WuQuant._bottom(cube, direction, this._weights) | 0;\n    let result = 0;\n    let cutPosition = -1;\n    for (let position = first; position < last; ++position) {\n      let halfRed = bottomRed + _WuQuant._top(cube, direction, position, this._momentsRed);\n      let halfGreen = bottomGreen + _WuQuant._top(cube, direction, position, this._momentsGreen);\n      let halfBlue = bottomBlue + _WuQuant._top(cube, direction, position, this._momentsBlue);\n      let halfAlpha = bottomAlpha + _WuQuant._top(cube, direction, position, this._momentsAlpha);\n      let halfWeight = bottomWeight + _WuQuant._top(cube, direction, position, this._weights);\n      if (halfWeight !== 0) {\n        let halfDistance = halfRed * halfRed + halfGreen * halfGreen + halfBlue * halfBlue + halfAlpha * halfAlpha;\n        let temp = halfDistance / halfWeight;\n        halfRed = wholeRed - halfRed;\n        halfGreen = wholeGreen - halfGreen;\n        halfBlue = wholeBlue - halfBlue;\n        halfAlpha = wholeAlpha - halfAlpha;\n        halfWeight = wholeWeight - halfWeight;\n        if (halfWeight !== 0) {\n          halfDistance = halfRed * halfRed + halfGreen * halfGreen + halfBlue * halfBlue + halfAlpha * halfAlpha;\n          temp += halfDistance / halfWeight;\n          if (temp > result) {\n            result = temp;\n            cutPosition = position;\n          }\n        }\n      }\n    }\n    return {\n      max: result,\n      position: cutPosition\n    };\n  }\n  _cut(first, second) {\n    let direction;\n    const wholeRed = _WuQuant._volume(first, this._momentsRed);\n    const wholeGreen = _WuQuant._volume(first, this._momentsGreen);\n    const wholeBlue = _WuQuant._volume(first, this._momentsBlue);\n    const wholeAlpha = _WuQuant._volume(first, this._momentsAlpha);\n    const wholeWeight = _WuQuant._volume(first, this._weights);\n    const red = this._maximize(first, _WuQuant._red, first.redMinimum + 1, first.redMaximum, wholeRed, wholeGreen, wholeBlue, wholeAlpha, wholeWeight);\n    const green = this._maximize(first, _WuQuant._green, first.greenMinimum + 1, first.greenMaximum, wholeRed, wholeGreen, wholeBlue, wholeAlpha, wholeWeight);\n    const blue = this._maximize(first, _WuQuant._blue, first.blueMinimum + 1, first.blueMaximum, wholeRed, wholeGreen, wholeBlue, wholeAlpha, wholeWeight);\n    const alpha = this._maximize(first, _WuQuant._alpha, first.alphaMinimum + 1, first.alphaMaximum, wholeRed, wholeGreen, wholeBlue, wholeAlpha, wholeWeight);\n    if (alpha.max >= red.max && alpha.max >= green.max && alpha.max >= blue.max) {\n      direction = _WuQuant._alpha;\n      if (alpha.position < 0) return false;\n    } else if (red.max >= alpha.max && red.max >= green.max && red.max >= blue.max) {\n      direction = _WuQuant._red;\n    } else if (green.max >= alpha.max && green.max >= red.max && green.max >= blue.max) {\n      direction = _WuQuant._green;\n    } else {\n      direction = _WuQuant._blue;\n    }\n    second.redMaximum = first.redMaximum;\n    second.greenMaximum = first.greenMaximum;\n    second.blueMaximum = first.blueMaximum;\n    second.alphaMaximum = first.alphaMaximum;\n    switch (direction) {\n      case _WuQuant._red:\n        second.redMinimum = first.redMaximum = red.position;\n        second.greenMinimum = first.greenMinimum;\n        second.blueMinimum = first.blueMinimum;\n        second.alphaMinimum = first.alphaMinimum;\n        break;\n      case _WuQuant._green:\n        second.greenMinimum = first.greenMaximum = green.position;\n        second.redMinimum = first.redMinimum;\n        second.blueMinimum = first.blueMinimum;\n        second.alphaMinimum = first.alphaMinimum;\n        break;\n      case _WuQuant._blue:\n        second.blueMinimum = first.blueMaximum = blue.position;\n        second.redMinimum = first.redMinimum;\n        second.greenMinimum = first.greenMinimum;\n        second.alphaMinimum = first.alphaMinimum;\n        break;\n      case _WuQuant._alpha:\n        second.alphaMinimum = first.alphaMaximum = alpha.position;\n        second.blueMinimum = first.blueMinimum;\n        second.redMinimum = first.redMinimum;\n        second.greenMinimum = first.greenMinimum;\n        break;\n    }\n    first.volume = (first.redMaximum - first.redMinimum) * (first.greenMaximum - first.greenMinimum) * (first.blueMaximum - first.blueMinimum) * (first.alphaMaximum - first.alphaMinimum);\n    second.volume = (second.redMaximum - second.redMinimum) * (second.greenMaximum - second.greenMinimum) * (second.blueMaximum - second.blueMinimum) * (second.alphaMaximum - second.alphaMinimum);\n    return true;\n  }\n  _initialize(colors) {\n    this._colors = colors;\n    this._cubes = [];\n    for (let cubeIndex = 0; cubeIndex < colors; cubeIndex++) {\n      this._cubes[cubeIndex] = new WuColorCube();\n    }\n    this._cubes[0].redMinimum = 0;\n    this._cubes[0].greenMinimum = 0;\n    this._cubes[0].blueMinimum = 0;\n    this._cubes[0].alphaMinimum = 0;\n    this._cubes[0].redMaximum = this._maxSideIndex;\n    this._cubes[0].greenMaximum = this._maxSideIndex;\n    this._cubes[0].blueMaximum = this._maxSideIndex;\n    this._cubes[0].alphaMaximum = this._alphaMaxSideIndex;\n    this._weights = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\n    this._momentsRed = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\n    this._momentsGreen = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\n    this._momentsBlue = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\n    this._momentsAlpha = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\n    this._moments = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\n    this._table = [];\n    for (let tableIndex = 0; tableIndex < 256; ++tableIndex) {\n      this._table[tableIndex] = tableIndex * tableIndex;\n    }\n    this._pixels = [];\n  }\n  _setQuality(significantBitsPerChannel = 5) {\n    this._significantBitsPerChannel = significantBitsPerChannel;\n    this._maxSideIndex = 1 << this._significantBitsPerChannel;\n    this._alphaMaxSideIndex = this._maxSideIndex;\n    this._sideSize = this._maxSideIndex + 1;\n    this._alphaSideSize = this._alphaMaxSideIndex + 1;\n  }\n};\nvar WuQuant = _WuQuant;\n__publicField(WuQuant, \"_alpha\", 3);\n__publicField(WuQuant, \"_red\", 2);\n__publicField(WuQuant, \"_green\", 1);\n__publicField(WuQuant, \"_blue\", 0);\n\n// src/image/index.ts\nvar image_exports = {};\n__export(image_exports, {\n  AbstractImageQuantizer: () => AbstractImageQuantizer,\n  ErrorDiffusionArray: () => ErrorDiffusionArray,\n  ErrorDiffusionArrayKernel: () => ErrorDiffusionArrayKernel,\n  ErrorDiffusionRiemersma: () => ErrorDiffusionRiemersma,\n  NearestColor: () => NearestColor\n});\n\n// src/image/imageQuantizer.ts\nvar AbstractImageQuantizer = class {\n  quantizeSync(pointContainer, palette) {\n    for (const value of this.quantize(pointContainer, palette)) {\n      if (value.pointContainer) {\n        return value.pointContainer;\n      }\n    }\n    throw new Error(\"unreachable\");\n  }\n};\n\n// src/image/nearestColor.ts\nvar NearestColor = class extends AbstractImageQuantizer {\n  constructor(colorDistanceCalculator) {\n    super();\n    __publicField(this, \"_distance\");\n    this._distance = colorDistanceCalculator;\n  }\n  *quantize(pointContainer, palette) {\n    const pointArray = pointContainer.getPointArray();\n    const width = pointContainer.getWidth();\n    const height = pointContainer.getHeight();\n    const tracker = new ProgressTracker(height, 99);\n    for (let y2 = 0; y2 < height; y2++) {\n      if (tracker.shouldNotify(y2)) {\n        yield {\n          progress: tracker.progress\n        };\n      }\n      for (let x2 = 0, idx = y2 * width; x2 < width; x2++, idx++) {\n        const point = pointArray[idx];\n        point.from(palette.getNearestColor(this._distance, point));\n      }\n    }\n    yield {\n      pointContainer,\n      progress: 100\n    };\n  }\n};\n\n// src/image/array.ts\nvar ErrorDiffusionArrayKernel = /* @__PURE__ */(ErrorDiffusionArrayKernel2 => {\n  ErrorDiffusionArrayKernel2[ErrorDiffusionArrayKernel2[\"FloydSteinberg\"] = 0] = \"FloydSteinberg\";\n  ErrorDiffusionArrayKernel2[ErrorDiffusionArrayKernel2[\"FalseFloydSteinberg\"] = 1] = \"FalseFloydSteinberg\";\n  ErrorDiffusionArrayKernel2[ErrorDiffusionArrayKernel2[\"Stucki\"] = 2] = \"Stucki\";\n  ErrorDiffusionArrayKernel2[ErrorDiffusionArrayKernel2[\"Atkinson\"] = 3] = \"Atkinson\";\n  ErrorDiffusionArrayKernel2[ErrorDiffusionArrayKernel2[\"Jarvis\"] = 4] = \"Jarvis\";\n  ErrorDiffusionArrayKernel2[ErrorDiffusionArrayKernel2[\"Burkes\"] = 5] = \"Burkes\";\n  ErrorDiffusionArrayKernel2[ErrorDiffusionArrayKernel2[\"Sierra\"] = 6] = \"Sierra\";\n  ErrorDiffusionArrayKernel2[ErrorDiffusionArrayKernel2[\"TwoSierra\"] = 7] = \"TwoSierra\";\n  ErrorDiffusionArrayKernel2[ErrorDiffusionArrayKernel2[\"SierraLite\"] = 8] = \"SierraLite\";\n  return ErrorDiffusionArrayKernel2;\n})(ErrorDiffusionArrayKernel || {});\nvar ErrorDiffusionArray = class extends AbstractImageQuantizer {\n  constructor(colorDistanceCalculator, kernel, serpentine = true, minimumColorDistanceToDither = 0, calculateErrorLikeGIMP = false) {\n    super();\n    __publicField(this, \"_minColorDistance\");\n    __publicField(this, \"_serpentine\");\n    __publicField(this, \"_kernel\");\n    __publicField(this, \"_calculateErrorLikeGIMP\");\n    __publicField(this, \"_distance\");\n    this._setKernel(kernel);\n    this._distance = colorDistanceCalculator;\n    this._minColorDistance = minimumColorDistanceToDither;\n    this._serpentine = serpentine;\n    this._calculateErrorLikeGIMP = calculateErrorLikeGIMP;\n  }\n  *quantize(pointContainer, palette) {\n    const pointArray = pointContainer.getPointArray();\n    const originalPoint = new Point();\n    const width = pointContainer.getWidth();\n    const height = pointContainer.getHeight();\n    const errorLines = [];\n    let dir = 1;\n    let maxErrorLines = 1;\n    for (const kernel of this._kernel) {\n      const kernelErrorLines = kernel[2] + 1;\n      if (maxErrorLines < kernelErrorLines) maxErrorLines = kernelErrorLines;\n    }\n    for (let i = 0; i < maxErrorLines; i++) {\n      this._fillErrorLine(errorLines[i] = [], width);\n    }\n    const tracker = new ProgressTracker(height, 99);\n    for (let y2 = 0; y2 < height; y2++) {\n      if (tracker.shouldNotify(y2)) {\n        yield {\n          progress: tracker.progress\n        };\n      }\n      if (this._serpentine) dir *= -1;\n      const lni = y2 * width;\n      const xStart = dir === 1 ? 0 : width - 1;\n      const xEnd = dir === 1 ? width : -1;\n      this._fillErrorLine(errorLines[0], width);\n      errorLines.push(errorLines.shift());\n      const errorLine = errorLines[0];\n      for (let x2 = xStart, idx = lni + xStart; x2 !== xEnd; x2 += dir, idx += dir) {\n        const point = pointArray[idx];\n        const error = errorLine[x2];\n        originalPoint.from(point);\n        const correctedPoint = Point.createByRGBA(inRange0to255Rounded(point.r + error[0]), inRange0to255Rounded(point.g + error[1]), inRange0to255Rounded(point.b + error[2]), inRange0to255Rounded(point.a + error[3]));\n        const palettePoint = palette.getNearestColor(this._distance, correctedPoint);\n        point.from(palettePoint);\n        if (this._minColorDistance) {\n          const dist = this._distance.calculateNormalized(originalPoint, palettePoint);\n          if (dist < this._minColorDistance) continue;\n        }\n        let er;\n        let eg;\n        let eb;\n        let ea;\n        if (this._calculateErrorLikeGIMP) {\n          er = correctedPoint.r - palettePoint.r;\n          eg = correctedPoint.g - palettePoint.g;\n          eb = correctedPoint.b - palettePoint.b;\n          ea = correctedPoint.a - palettePoint.a;\n        } else {\n          er = originalPoint.r - palettePoint.r;\n          eg = originalPoint.g - palettePoint.g;\n          eb = originalPoint.b - palettePoint.b;\n          ea = originalPoint.a - palettePoint.a;\n        }\n        const dStart = dir === 1 ? 0 : this._kernel.length - 1;\n        const dEnd = dir === 1 ? this._kernel.length : -1;\n        for (let i = dStart; i !== dEnd; i += dir) {\n          const x1 = this._kernel[i][1] * dir;\n          const y1 = this._kernel[i][2];\n          if (x1 + x2 >= 0 && x1 + x2 < width && y1 + y2 >= 0 && y1 + y2 < height) {\n            const d = this._kernel[i][0];\n            const e = errorLines[y1][x1 + x2];\n            e[0] += er * d;\n            e[1] += eg * d;\n            e[2] += eb * d;\n            e[3] += ea * d;\n          }\n        }\n      }\n    }\n    yield {\n      pointContainer,\n      progress: 100\n    };\n  }\n  _fillErrorLine(errorLine, width) {\n    if (errorLine.length > width) {\n      errorLine.length = width;\n    }\n    const l = errorLine.length;\n    for (let i = 0; i < l; i++) {\n      const error = errorLine[i];\n      error[0] = error[1] = error[2] = error[3] = 0;\n    }\n    for (let i = l; i < width; i++) {\n      errorLine[i] = [0, 0, 0, 0];\n    }\n  }\n  _setKernel(kernel) {\n    switch (kernel) {\n      case 0 /* FloydSteinberg */:\n        this._kernel = [[7 / 16, 1, 0], [3 / 16, -1, 1], [5 / 16, 0, 1], [1 / 16, 1, 1]];\n        break;\n      case 1 /* FalseFloydSteinberg */:\n        this._kernel = [[3 / 8, 1, 0], [3 / 8, 0, 1], [2 / 8, 1, 1]];\n        break;\n      case 2 /* Stucki */:\n        this._kernel = [[8 / 42, 1, 0], [4 / 42, 2, 0], [2 / 42, -2, 1], [4 / 42, -1, 1], [8 / 42, 0, 1], [4 / 42, 1, 1], [2 / 42, 2, 1], [1 / 42, -2, 2], [2 / 42, -1, 2], [4 / 42, 0, 2], [2 / 42, 1, 2], [1 / 42, 2, 2]];\n        break;\n      case 3 /* Atkinson */:\n        this._kernel = [[1 / 8, 1, 0], [1 / 8, 2, 0], [1 / 8, -1, 1], [1 / 8, 0, 1], [1 / 8, 1, 1], [1 / 8, 0, 2]];\n        break;\n      case 4 /* Jarvis */:\n        this._kernel = [[7 / 48, 1, 0], [5 / 48, 2, 0], [3 / 48, -2, 1], [5 / 48, -1, 1], [7 / 48, 0, 1], [5 / 48, 1, 1], [3 / 48, 2, 1], [1 / 48, -2, 2], [3 / 48, -1, 2], [5 / 48, 0, 2], [3 / 48, 1, 2], [1 / 48, 2, 2]];\n        break;\n      case 5 /* Burkes */:\n        this._kernel = [[8 / 32, 1, 0], [4 / 32, 2, 0], [2 / 32, -2, 1], [4 / 32, -1, 1], [8 / 32, 0, 1], [4 / 32, 1, 1], [2 / 32, 2, 1]];\n        break;\n      case 6 /* Sierra */:\n        this._kernel = [[5 / 32, 1, 0], [3 / 32, 2, 0], [2 / 32, -2, 1], [4 / 32, -1, 1], [5 / 32, 0, 1], [4 / 32, 1, 1], [2 / 32, 2, 1], [2 / 32, -1, 2], [3 / 32, 0, 2], [2 / 32, 1, 2]];\n        break;\n      case 7 /* TwoSierra */:\n        this._kernel = [[4 / 16, 1, 0], [3 / 16, 2, 0], [1 / 16, -2, 1], [2 / 16, -1, 1], [3 / 16, 0, 1], [2 / 16, 1, 1], [1 / 16, 2, 1]];\n        break;\n      case 8 /* SierraLite */:\n        this._kernel = [[2 / 4, 1, 0], [1 / 4, -1, 1], [1 / 4, 0, 1]];\n        break;\n      default:\n        throw new Error(`ErrorDiffusionArray: unknown kernel = ${kernel}`);\n    }\n  }\n};\n\n// src/image/spaceFillingCurves/hilbertCurve.ts\nfunction* hilbertCurve(width, height, callback) {\n  const maxBound = Math.max(width, height);\n  const level = Math.floor(Math.log(maxBound) / Math.log(2) + 1);\n  const tracker = new ProgressTracker(width * height, 99);\n  const data = {\n    width,\n    height,\n    level,\n    callback,\n    tracker,\n    index: 0,\n    x: 0,\n    y: 0\n  };\n  yield* walkHilbert(data, 1 /* UP */);\n  visit(data, 0 /* NONE */);\n}\nfunction* walkHilbert(data, direction) {\n  if (data.level < 1) return;\n  if (data.tracker.shouldNotify(data.index)) {\n    yield {\n      progress: data.tracker.progress\n    };\n  }\n  data.level--;\n  switch (direction) {\n    case 2 /* LEFT */:\n      yield* walkHilbert(data, 1 /* UP */);\n      visit(data, 3 /* RIGHT */);\n      yield* walkHilbert(data, 2 /* LEFT */);\n      visit(data, 4 /* DOWN */);\n      yield* walkHilbert(data, 2 /* LEFT */);\n      visit(data, 2 /* LEFT */);\n      yield* walkHilbert(data, 4 /* DOWN */);\n      break;\n    case 3 /* RIGHT */:\n      yield* walkHilbert(data, 4 /* DOWN */);\n      visit(data, 2 /* LEFT */);\n      yield* walkHilbert(data, 3 /* RIGHT */);\n      visit(data, 1 /* UP */);\n      yield* walkHilbert(data, 3 /* RIGHT */);\n      visit(data, 3 /* RIGHT */);\n      yield* walkHilbert(data, 1 /* UP */);\n      break;\n    case 1 /* UP */:\n      yield* walkHilbert(data, 2 /* LEFT */);\n      visit(data, 4 /* DOWN */);\n      yield* walkHilbert(data, 1 /* UP */);\n      visit(data, 3 /* RIGHT */);\n      yield* walkHilbert(data, 1 /* UP */);\n      visit(data, 1 /* UP */);\n      yield* walkHilbert(data, 3 /* RIGHT */);\n      break;\n    case 4 /* DOWN */:\n      yield* walkHilbert(data, 3 /* RIGHT */);\n      visit(data, 1 /* UP */);\n      yield* walkHilbert(data, 4 /* DOWN */);\n      visit(data, 2 /* LEFT */);\n      yield* walkHilbert(data, 4 /* DOWN */);\n      visit(data, 4 /* DOWN */);\n      yield* walkHilbert(data, 2 /* LEFT */);\n      break;\n    default:\n      break;\n  }\n  data.level++;\n}\nfunction visit(data, direction) {\n  if (data.x >= 0 && data.x < data.width && data.y >= 0 && data.y < data.height) {\n    data.callback(data.x, data.y);\n    data.index++;\n  }\n  switch (direction) {\n    case 2 /* LEFT */:\n      data.x--;\n      break;\n    case 3 /* RIGHT */:\n      data.x++;\n      break;\n    case 1 /* UP */:\n      data.y--;\n      break;\n    case 4 /* DOWN */:\n      data.y++;\n      break;\n  }\n}\n\n// src/image/riemersma.ts\nvar ErrorDiffusionRiemersma = class extends AbstractImageQuantizer {\n  constructor(colorDistanceCalculator, errorQueueSize = 16, errorPropagation = 1) {\n    super();\n    __publicField(this, \"_distance\");\n    __publicField(this, \"_weights\");\n    __publicField(this, \"_errorQueueSize\");\n    this._distance = colorDistanceCalculator;\n    this._errorQueueSize = errorQueueSize;\n    this._weights = ErrorDiffusionRiemersma._createWeights(errorPropagation, errorQueueSize);\n  }\n  *quantize(pointContainer, palette) {\n    const pointArray = pointContainer.getPointArray();\n    const width = pointContainer.getWidth();\n    const height = pointContainer.getHeight();\n    const errorQueue = [];\n    let head = 0;\n    for (let i = 0; i < this._errorQueueSize; i++) {\n      errorQueue[i] = {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 0\n      };\n    }\n    yield* hilbertCurve(width, height, (x2, y2) => {\n      const p = pointArray[x2 + y2 * width];\n      let {\n        r,\n        g,\n        b,\n        a\n      } = p;\n      for (let i = 0; i < this._errorQueueSize; i++) {\n        const weight = this._weights[i];\n        const e = errorQueue[(i + head) % this._errorQueueSize];\n        r += e.r * weight;\n        g += e.g * weight;\n        b += e.b * weight;\n        a += e.a * weight;\n      }\n      const correctedPoint = Point.createByRGBA(inRange0to255Rounded(r), inRange0to255Rounded(g), inRange0to255Rounded(b), inRange0to255Rounded(a));\n      const quantizedPoint = palette.getNearestColor(this._distance, correctedPoint);\n      head = (head + 1) % this._errorQueueSize;\n      const tail = (head + this._errorQueueSize - 1) % this._errorQueueSize;\n      errorQueue[tail].r = p.r - quantizedPoint.r;\n      errorQueue[tail].g = p.g - quantizedPoint.g;\n      errorQueue[tail].b = p.b - quantizedPoint.b;\n      errorQueue[tail].a = p.a - quantizedPoint.a;\n      p.from(quantizedPoint);\n    });\n    yield {\n      pointContainer,\n      progress: 100\n    };\n  }\n  static _createWeights(errorPropagation, errorQueueSize) {\n    const weights = [];\n    const multiplier = Math.exp(Math.log(errorQueueSize) / (errorQueueSize - 1));\n    for (let i = 0, next = 1; i < errorQueueSize; i++) {\n      weights[i] = (next + 0.5 | 0) / errorQueueSize * errorPropagation;\n      next *= multiplier;\n    }\n    return weights;\n  }\n};\n\n// src/quality/index.ts\nvar quality_exports = {};\n__export(quality_exports, {\n  ssim: () => ssim\n});\n\n// src/quality/ssim.ts\nvar K1 = 0.01;\nvar K2 = 0.03;\nfunction ssim(image1, image2) {\n  if (image1.getHeight() !== image2.getHeight() || image1.getWidth() !== image2.getWidth()) {\n    throw new Error(\"Images have different sizes!\");\n  }\n  const bitsPerComponent = 8;\n  const L = (1 << bitsPerComponent) - 1;\n  const c1 = (K1 * L) ** 2;\n  const c2 = (K2 * L) ** 2;\n  let numWindows = 0;\n  let mssim = 0;\n  iterate(image1, image2, (lumaValues1, lumaValues2, averageLumaValue1, averageLumaValue2) => {\n    let sigxy = 0;\n    let sigsqx = 0;\n    let sigsqy = 0;\n    for (let i = 0; i < lumaValues1.length; i++) {\n      sigsqx += (lumaValues1[i] - averageLumaValue1) ** 2;\n      sigsqy += (lumaValues2[i] - averageLumaValue2) ** 2;\n      sigxy += (lumaValues1[i] - averageLumaValue1) * (lumaValues2[i] - averageLumaValue2);\n    }\n    const numPixelsInWin = lumaValues1.length - 1;\n    sigsqx /= numPixelsInWin;\n    sigsqy /= numPixelsInWin;\n    sigxy /= numPixelsInWin;\n    const numerator = (2 * averageLumaValue1 * averageLumaValue2 + c1) * (2 * sigxy + c2);\n    const denominator = (averageLumaValue1 ** 2 + averageLumaValue2 ** 2 + c1) * (sigsqx + sigsqy + c2);\n    const ssim2 = numerator / denominator;\n    mssim += ssim2;\n    numWindows++;\n  });\n  return mssim / numWindows;\n}\nfunction iterate(image1, image2, callback) {\n  const windowSize = 8;\n  const width = image1.getWidth();\n  const height = image1.getHeight();\n  for (let y2 = 0; y2 < height; y2 += windowSize) {\n    for (let x2 = 0; x2 < width; x2 += windowSize) {\n      const windowWidth = Math.min(windowSize, width - x2);\n      const windowHeight = Math.min(windowSize, height - y2);\n      const lumaValues1 = calculateLumaValuesForWindow(image1, x2, y2, windowWidth, windowHeight);\n      const lumaValues2 = calculateLumaValuesForWindow(image2, x2, y2, windowWidth, windowHeight);\n      const averageLuma1 = calculateAverageLuma(lumaValues1);\n      const averageLuma2 = calculateAverageLuma(lumaValues2);\n      callback(lumaValues1, lumaValues2, averageLuma1, averageLuma2);\n    }\n  }\n}\nfunction calculateLumaValuesForWindow(image, x2, y2, width, height) {\n  const pointArray = image.getPointArray();\n  const lumaValues = [];\n  let counter = 0;\n  for (let j = y2; j < y2 + height; j++) {\n    const offset = j * image.getWidth();\n    for (let i = x2; i < x2 + width; i++) {\n      const point = pointArray[offset + i];\n      lumaValues[counter] = point.r * 0.2126 /* RED */ + point.g * 0.7152 /* GREEN */ + point.b * 0.0722 /* BLUE */;\n      counter++;\n    }\n  }\n  return lumaValues;\n}\nfunction calculateAverageLuma(lumaValues) {\n  let sumLuma = 0;\n  for (const luma of lumaValues) {\n    sumLuma += luma;\n  }\n  return sumLuma / lumaValues.length;\n}\n\n// src/basicAPI.ts\nvar setImmediateImpl = typeof setImmediate === \"function\" ? setImmediate : typeof process !== \"undefined\" && typeof (process == null ? void 0 : process.nextTick) === \"function\" ? callback => process.nextTick(callback) : callback => setTimeout(callback, 0);\nfunction buildPaletteSync(images, {\n  colorDistanceFormula,\n  paletteQuantization,\n  colors\n} = {}) {\n  const distanceCalculator = colorDistanceFormulaToColorDistance(colorDistanceFormula);\n  const paletteQuantizer = paletteQuantizationToPaletteQuantizer(distanceCalculator, paletteQuantization, colors);\n  images.forEach(image => paletteQuantizer.sample(image));\n  return paletteQuantizer.quantizeSync();\n}\nasync function buildPalette(images, {\n  colorDistanceFormula,\n  paletteQuantization,\n  colors,\n  onProgress\n} = {}) {\n  return new Promise((resolve, reject) => {\n    const distanceCalculator = colorDistanceFormulaToColorDistance(colorDistanceFormula);\n    const paletteQuantizer = paletteQuantizationToPaletteQuantizer(distanceCalculator, paletteQuantization, colors);\n    images.forEach(image => paletteQuantizer.sample(image));\n    let palette;\n    const iterator = paletteQuantizer.quantize();\n    const next = () => {\n      try {\n        const result = iterator.next();\n        if (result.done) {\n          resolve(palette);\n        } else {\n          if (result.value.palette) palette = result.value.palette;\n          if (onProgress) onProgress(result.value.progress);\n          setImmediateImpl(next);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    };\n    setImmediateImpl(next);\n  });\n}\nfunction applyPaletteSync(image, palette, {\n  colorDistanceFormula,\n  imageQuantization\n} = {}) {\n  const distanceCalculator = colorDistanceFormulaToColorDistance(colorDistanceFormula);\n  const imageQuantizer = imageQuantizationToImageQuantizer(distanceCalculator, imageQuantization);\n  return imageQuantizer.quantizeSync(image, palette);\n}\nasync function applyPalette(image, palette, {\n  colorDistanceFormula,\n  imageQuantization,\n  onProgress\n} = {}) {\n  return new Promise((resolve, reject) => {\n    const distanceCalculator = colorDistanceFormulaToColorDistance(colorDistanceFormula);\n    const imageQuantizer = imageQuantizationToImageQuantizer(distanceCalculator, imageQuantization);\n    let outPointContainer;\n    const iterator = imageQuantizer.quantize(image, palette);\n    const next = () => {\n      try {\n        const result = iterator.next();\n        if (result.done) {\n          resolve(outPointContainer);\n        } else {\n          if (result.value.pointContainer) {\n            outPointContainer = result.value.pointContainer;\n          }\n          if (onProgress) onProgress(result.value.progress);\n          setImmediateImpl(next);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    };\n    setImmediateImpl(next);\n  });\n}\nfunction colorDistanceFormulaToColorDistance(colorDistanceFormula = \"euclidean-bt709\") {\n  switch (colorDistanceFormula) {\n    case \"cie94-graphic-arts\":\n      return new CIE94GraphicArts();\n    case \"cie94-textiles\":\n      return new CIE94Textiles();\n    case \"ciede2000\":\n      return new CIEDE2000();\n    case \"color-metric\":\n      return new CMetric();\n    case \"euclidean\":\n      return new Euclidean();\n    case \"euclidean-bt709\":\n      return new EuclideanBT709();\n    case \"euclidean-bt709-noalpha\":\n      return new EuclideanBT709NoAlpha();\n    case \"manhattan\":\n      return new Manhattan();\n    case \"manhattan-bt709\":\n      return new ManhattanBT709();\n    case \"manhattan-nommyde\":\n      return new ManhattanNommyde();\n    case \"pngquant\":\n      return new PNGQuant();\n    default:\n      throw new Error(`Unknown colorDistanceFormula ${colorDistanceFormula}`);\n  }\n}\nfunction imageQuantizationToImageQuantizer(distanceCalculator, imageQuantization = \"floyd-steinberg\") {\n  switch (imageQuantization) {\n    case \"nearest\":\n      return new NearestColor(distanceCalculator);\n    case \"riemersma\":\n      return new ErrorDiffusionRiemersma(distanceCalculator);\n    case \"floyd-steinberg\":\n      return new ErrorDiffusionArray(distanceCalculator, 0 /* FloydSteinberg */);\n    case \"false-floyd-steinberg\":\n      return new ErrorDiffusionArray(distanceCalculator, 1 /* FalseFloydSteinberg */);\n    case \"stucki\":\n      return new ErrorDiffusionArray(distanceCalculator, 2 /* Stucki */);\n    case \"atkinson\":\n      return new ErrorDiffusionArray(distanceCalculator, 3 /* Atkinson */);\n    case \"jarvis\":\n      return new ErrorDiffusionArray(distanceCalculator, 4 /* Jarvis */);\n    case \"burkes\":\n      return new ErrorDiffusionArray(distanceCalculator, 5 /* Burkes */);\n    case \"sierra\":\n      return new ErrorDiffusionArray(distanceCalculator, 6 /* Sierra */);\n    case \"two-sierra\":\n      return new ErrorDiffusionArray(distanceCalculator, 7 /* TwoSierra */);\n    case \"sierra-lite\":\n      return new ErrorDiffusionArray(distanceCalculator, 8 /* SierraLite */);\n    default:\n      throw new Error(`Unknown imageQuantization ${imageQuantization}`);\n  }\n}\nfunction paletteQuantizationToPaletteQuantizer(distanceCalculator, paletteQuantization = \"wuquant\", colors = 256) {\n  switch (paletteQuantization) {\n    case \"neuquant\":\n      return new NeuQuant(distanceCalculator, colors);\n    case \"rgbquant\":\n      return new RGBQuant(distanceCalculator, colors);\n    case \"wuquant\":\n      return new WuQuant(distanceCalculator, colors);\n    case \"neuquant-float\":\n      return new NeuQuantFloat(distanceCalculator, colors);\n    default:\n      throw new Error(`Unknown paletteQuantization ${paletteQuantization}`);\n  }\n}\nexport { applyPalette, applyPaletteSync, buildPalette, buildPaletteSync, constants_exports as constants, conversion_exports as conversion, distance_exports as distance, image_exports as image, palette_exports as palette, quality_exports as quality, utils_exports as utils };\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * cie94.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * ciede2000.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * cmetric.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * common.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * constants.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * ditherErrorDiffusionArray.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * euclidean.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * helper.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * hueStatistics.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * iq.ts - Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * lab2rgb.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * lab2xyz.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * manhattanNeuQuant.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * nearestColor.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * palette.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * pngQuant.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * point.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * pointContainer.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * rgb2hsl.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * rgb2lab.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * rgb2xyz.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * ssim.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * wuQuant.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * xyz2lab.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * xyz2rgb.ts - part of Image Quantization Library\n */\n/**\n * @preserve\n * MIT License\n *\n * Copyright 2015-2018 Igor Bezkrovnyi\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n * riemersma.ts - part of Image Quantization Library\n */\n/**\n * @preserve TypeScript port:\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * colorHistogram.ts - part of Image Quantization Library\n */\n/**\n * @preserve TypeScript port:\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * neuquant.ts - part of Image Quantization Library\n */\n/**\n * @preserve TypeScript port:\n * Copyright 2015-2018 Igor Bezkrovnyi\n * All rights reserved. (MIT Licensed)\n *\n * rgbquant.ts - part of Image Quantization Library\n */\n", "import { applyPaletteSync, buildPaletteSync, utils } from \"image-q\";\nimport z from \"zod\";\nconst QuantizeOptionsSchema = z.object({\n  colors: z.number().optional(),\n  colorDistanceFormula: z.union([z.literal(\"cie94-textiles\"), z.literal(\"cie94-graphic-arts\"), z.literal(\"ciede2000\"), z.literal(\"color-metric\"), z.literal(\"euclidean\"), z.literal(\"euclidean-bt709-noalpha\"), z.literal(\"euclidean-bt709\"), z.literal(\"manhattan\"), z.literal(\"manhattan-bt709\"), z.literal(\"manhattan-nommyde\"), z.literal(\"pngquant\")]).optional(),\n  paletteQuantization: z.union([z.literal(\"neuquant\"), z.literal(\"neuquant-float\"), z.literal(\"rgbquant\"), z.literal(\"wuquant\")]).optional(),\n  imageQuantization: z.union([z.literal(\"nearest\"), z.literal(\"riemersma\"), z.literal(\"floyd-steinberg\"), z.literal(\"false-floyd-steinberg\"), z.literal(\"stucki\"), z.literal(\"atkinson\"), z.literal(\"jarvis\"), z.literal(\"burkes\"), z.literal(\"sierra\"), z.literal(\"two-sierra\"), z.literal(\"sierra-lite\")]).optional()\n});\nexport const methods = {\n  /**\n   * Image color number reduction.\n   */\n  quantize(image, options) {\n    const {\n      colors,\n      colorDistanceFormula,\n      paletteQuantization,\n      imageQuantization\n    } = QuantizeOptionsSchema.parse(options);\n    const inPointContainer = utils.PointContainer.fromUint8Array(image.bitmap.data, image.bitmap.width, image.bitmap.height);\n    const palette = buildPaletteSync([inPointContainer], {\n      colors,\n      colorDistanceFormula,\n      paletteQuantization\n    });\n    const outPointContainer = applyPaletteSync(inPointContainer, palette, {\n      colorDistanceFormula,\n      imageQuantization\n    });\n    image.bitmap.data = Buffer.from(outPointContainer.toUint8Array());\n    return image;\n  }\n};\n", "import parseASCII from \"parse-bmfont-ascii\";\nimport parseXML from \"parse-bmfont-xml\";\nimport readBinary from \"parse-bmfont-binary\";\nimport png from \"@jimp/js-png\";\nimport { createJimp } from \"@jimp/core\";\nimport path from \"path\";\nimport xmlPackage from \"simple-xml-to-json\";\nconst {\n  convertXML\n} = xmlPackage;\nexport const isWebWorker = typeof self !== \"undefined\" && self.document === undefined;\nconst CharacterJimp = createJimp({\n  formats: [png]\n});\nconst HEADER = Buffer.from([66, 77, 70, 3]);\nfunction isBinary(buf) {\n  if (typeof buf === \"string\") {\n    return buf.substring(0, 3) === \"BMF\";\n  }\n  const startOfHeader = buf.slice(0, 4);\n  return buf.length > 4 && startOfHeader[0] === HEADER[0] && startOfHeader[1] === HEADER[1] && startOfHeader[2] === HEADER[2];\n}\nfunction parseFont(file, data) {\n  if (isBinary(data)) {\n    if (typeof data === \"string\") {\n      data = Buffer.from(data, \"binary\");\n    }\n    return readBinary(data);\n  }\n  data = data.toString().trim();\n  if (/.json$/.test(file) || data.charAt(0) === \"{\") {\n    return JSON.parse(data);\n  }\n  if (/.xml$/.test(file) || data.charAt(0) === \"<\") {\n    return parseXML(data);\n  }\n  return parseASCII(data);\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction parseNumbersInObject(obj) {\n  for (const key in obj) {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      obj[key] = parseInt(obj[key], 10);\n    } catch {\n      // do nothing\n    }\n    if (typeof obj[key] === \"object\") {\n      parseNumbersInObject(obj[key]);\n    }\n  }\n  return obj;\n}\n/**\n *\n * @param bufferOrUrl A URL to a file or a buffer\n * @returns\n */\nexport async function loadBitmapFontData(bufferOrUrl) {\n  if (isWebWorker && typeof bufferOrUrl === \"string\") {\n    const res = await fetch(bufferOrUrl);\n    const text = await res.text();\n    const json = convertXML(text);\n    const font = json.font.children.reduce(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (acc, i) => ({\n      ...acc,\n      ...i\n    }), {});\n    const pages = [];\n    const chars = [];\n    const kernings = [];\n    for (let i = 0; i < font.pages.children.length; i++) {\n      const p = font.pages.children[i].page;\n      const id = parseInt(p.id, 10);\n      pages[id] = parseNumbersInObject(p.file);\n    }\n    for (let i = 0; i < font.chars.children.length; i++) {\n      chars.push(parseNumbersInObject(font.chars.children[i].char));\n    }\n    for (let i = 0; i < font.kernings.children.length; i++) {\n      kernings.push(parseNumbersInObject(font.kernings.children[i].kerning));\n    }\n    return {\n      info: font.info,\n      common: font.common,\n      pages,\n      chars,\n      kernings\n    };\n  } else if (typeof bufferOrUrl === \"string\") {\n    const res = await fetch(bufferOrUrl);\n    const text = await res.text();\n    return parseFont(bufferOrUrl, text);\n  } else {\n    return parseFont(\"\", bufferOrUrl);\n  }\n}\nexport async function processBitmapFont(file, font) {\n  const chars = {};\n  const kernings = {};\n  for (let i = 0; i < font.chars.length; i++) {\n    const char = font.chars[i];\n    chars[String.fromCharCode(char.id)] = char;\n  }\n  for (let i = 0; i < font.kernings.length; i++) {\n    const firstString = String.fromCharCode(font.kernings[i].first);\n    kernings[firstString] = kernings[firstString] || {};\n    kernings[firstString][String.fromCharCode(font.kernings[i].second)] = font.kernings[i].amount;\n  }\n  return {\n    ...font,\n    chars,\n    kernings,\n    pages: await Promise.all(font.pages.map(async page => CharacterJimp.read(path.join(path.dirname(file), page))))\n  };\n}\n", "import { isWebWorker, loadBitmapFontData, processBitmapFont } from \"./load-bitmap-font.js\";\n/**\n * Loads a Bitmap Font from a file.\n * @param file A path or URL to a font file\n * @returns A collection of Jimp images that can be used to print text\n * @example\n * ```ts\n * import { Jimp, loadFont } from \"jimp\";\n * import { SANS_10_BLACK } from \"jimp/fonts\";\n *\n * const font = await loadFont(SANS_10_BLACK);\n * const image = new Jimp({ width: 200, height: 100, color: 0xffffffff });\n *\n * image.print(font, 10, 10, \"Hello world!\");\n * ```\n */\nexport async function loadFont(file) {\n  let fileOrBuffer = file;\n  if (typeof window === \"undefined\" && !isWebWorker) {\n    const {\n      existsSync,\n      promises: fs\n    } = await import(\"fs\");\n    if (existsSync(file)) {\n      fileOrBuffer = await fs.readFile(file);\n    }\n  }\n  const data = await loadBitmapFontData(fileOrBuffer);\n  return processBitmapFont(file, data);\n}\n", "import { methods } from \"@jimp/plugin-resize\";\nimport { clone } from \"@jimp/utils\";\nimport pixelMatch from \"pixelmatch\";\n/**\n * Diffs two images and returns\n * @param img1 A Jimp image to compare\n * @param img2 A Jimp image to compare\n * @param threshold A number, 0 to 1, the smaller the value the more sensitive the comparison (default: 0.1)\n * @returns An object with the following properties:\n * - percent: The proportion of different pixels (0-1), where 0 means the two images are pixel identical\n * - image: A Jimp image showing differences\n * @example\n * ```ts\n * import { Jimp, diff } from \"jimp\";\n *\n * const image1 = await Jimp.read(\"test/image.png\");\n * const image2 = await Jimp.read(\"test/image.png\");\n *\n * const diff = diff(image1, image2);\n *\n * diff.percent; // 0.5\n * diff.image; // a Jimp image showing differences\n * ```\n */\nexport function diff(img1, img2, threshold = 0.1) {\n  let bmp1 = img1.bitmap;\n  let bmp2 = img2.bitmap;\n  if (bmp1.width !== bmp2.width || bmp1.height !== bmp2.height) {\n    if (bmp1.width * bmp1.height > bmp2.width * bmp2.height) {\n      // img1 is bigger\n      bmp1 = methods.resize(clone(img1), {\n        w: bmp2.width,\n        h: bmp2.height\n      }).bitmap;\n    } else {\n      // img2 is bigger (or they are the same in area)\n      bmp2 = methods.resize(clone(img2), {\n        w: bmp1.width,\n        h: bmp1.height\n      }).bitmap;\n    }\n  }\n  if (typeof threshold !== \"number\" || threshold < 0 || threshold > 1) {\n    throw new Error(\"threshold must be a number between 0 and 1\");\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const diff = new img1.constructor({\n    width: bmp1.width,\n    height: bmp1.height,\n    color: 0xffffffff\n  });\n  const numDiffPixels = pixelMatch(bmp1.data, bmp2.data, diff.bitmap.data, diff.bitmap.width, diff.bitmap.height, {\n    threshold\n  });\n  return {\n    percent: numDiffPixels / (diff.bitmap.width * diff.bitmap.height),\n    image: diff\n  };\n}\n", "/**\n * @module jimp\n */\n// import { Jimp } from \"@jimp/core\";\nimport bmp, { msBmp } from \"@jimp/js-bmp\";\nimport gif from \"@jimp/js-gif\";\nimport jpeg from \"@jimp/js-jpeg\";\nimport png from \"@jimp/js-png\";\nimport tiff from \"@jimp/js-tiff\";\nimport * as blit from \"@jimp/plugin-blit\";\nimport * as blur from \"@jimp/plugin-blur\";\nimport * as circle from \"@jimp/plugin-circle\";\nimport * as color from \"@jimp/plugin-color\";\nimport * as contain from \"@jimp/plugin-contain\";\nimport * as cover from \"@jimp/plugin-cover\";\nimport * as crop from \"@jimp/plugin-crop\";\nimport * as displace from \"@jimp/plugin-displace\";\nimport * as dither from \"@jimp/plugin-dither\";\nimport * as fisheye from \"@jimp/plugin-fisheye\";\nimport * as flip from \"@jimp/plugin-flip\";\nimport * as hash from \"@jimp/plugin-hash\";\nimport * as mask from \"@jimp/plugin-mask\";\nimport * as print from \"@jimp/plugin-print\";\nimport * as resize from \"@jimp/plugin-resize\";\nimport * as rotate from \"@jimp/plugin-rotate\";\nimport * as threshold from \"@jimp/plugin-threshold\";\nimport * as quantize from \"@jimp/plugin-quantize\";\nimport { createJimp } from \"@jimp/core\";\nexport const defaultPlugins = [blit.methods, blur.methods, circle.methods, color.methods, contain.methods, cover.methods, crop.methods, displace.methods, dither.methods, fisheye.methods, flip.methods, hash.methods, mask.methods, print.methods, resize.methods, rotate.methods, threshold.methods, quantize.methods];\nexport const defaultFormats = [bmp, msBmp, gif, jpeg, png, tiff];\n/** Convenience object for getting the MIME types of the default formats */\nexport const JimpMime = {\n  bmp: bmp().mime,\n  gif: gif().mime,\n  jpeg: jpeg().mime,\n  png: png().mime,\n  tiff: tiff().mime\n};\n// TODO: This doesn't document the constructor of the class\n/**\n * @class\n *\n * A `Jimp` class enables you to:class\n *\n * - Read an image into a \"bit map\" (a collection of pixels)\n * - Modify the bit map through methods that change the pixels\n * - Write the bit map back to an image buffer\n *\n * @example\n *\n * #### Basic\n *\n * You can use the Jimp class to make empty images.\n * This is useful for when you want to create an image that composed of other images on top of a background.\n *\n * ```ts\n * import { Jimp } from \"jimp\";\n *\n * const image = new Jimp({ width: 256, height: 256, color: 0xffffffff });\n * const image2 = new Jimp({ width: 100, height: 100, color: 0xff0000ff });\n *\n * image.composite(image2, 50, 50);\n * ```\n *\n * #### Node\n *\n * You can use jimp in Node.js.\n * For example you can read an image from a file and resize it and\n * then write it back to a file.\n *\n * ```ts\n * import { Jimp } from \"jimp\";\n * import { promises as fs } from \"fs\";\n *\n * const image = await Jimp.read(\"test/image.png\");\n *\n * image.resize(256, 100);\n * image.greyscale();\n *\n * await image.write('test/output.png');\n * ```\n *\n * #### Browser\n *\n * You can use jimp in the browser by reading files from URLs\n *\n * ```ts\n * import { Jimp } from \"jimp\";\n *\n * const image = await Jimp.read(\"https://upload.wikimedia.org/wikipedia/commons/0/01/Bot-Test.jpg\");\n *\n * image.resize(256, 100);\n * image.greyscale();\n *\n * const output = await image.getBuffer(\"test/image.png\");\n *\n * const canvas = document.createElement(\"canvas\");\n *\n * canvas.width = image.bitmap.width;\n * canvas.height = image.bitmap.height;\n *\n * const ctx = canvas.getContext(\"2d\");\n * ctx.putImageData(image.bitmap, 0, 0);\n *\n * document.body.appendChild(canvas);\n * ```\n */\nexport const Jimp = createJimp({\n  formats: defaultFormats,\n  plugins: defaultPlugins\n});\nexport { ResizeStrategy } from \"@jimp/plugin-resize\";\nexport { distance, compareHashes } from \"@jimp/plugin-hash\";\nexport { PNGColorType, PNGFilterType } from \"@jimp/js-png\";\nexport { BmpCompression } from \"@jimp/js-bmp\";\nexport { HorizontalAlign, VerticalAlign, BlendMode } from \"@jimp/core\";\nexport { loadFont } from \"@jimp/plugin-print/load-font\";\nexport { measureText, measureTextHeight } from \"@jimp/plugin-print\";\nexport { diff } from \"@jimp/diff\";\nexport { intToRGBA, rgbaToInt, colorDiff, limit255, cssColorToHex } from \"@jimp/utils\";\n"],
  "mappings": "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,GAAG,IAAI,IAAI,OAAO,GAAG,IAAI,IAAI,OAAO,GAAG,IAAI,IAAI,OAAO,GAAG,IAAI,IAAI,OAAO,GAAG,IAAI,IAAI,OAAO,GAAG,IAAI,IAAI,OAAO,GAAG,IAAI,IAAI,OAAO,GAAG,IAAI,IAAI,OAAO,GAAG,IAAI,IAAI,OAAO,GAAG,IAAI,IAAI,OAAO,GAAG,IAAI,IAAI,OAAO,GAAG,IAAI,IAAI,OAAO,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI,IAAI,SAAS,GAAG,IAAI,IAAI,SAAS,GAAG,IAAI,IAAI,SAAS,GAAG,IAAI,IAAI,SAAS,GAAG,IAAI,IAAI,SAAS,GAAG,IAAI,IAAI,SAAS,GAAG,IAAI,IAAI,SAAS,GAAG,IAAI,IAAI,SAAS,GAAG,IAAI,IAAI,SAAS,GAAG,IAAI,IAAI,SAAS,GAAG,IAAI,IAAI,SAAS,GAAG,KAAK,IAAI,SAAS,GAAG,IAAI,IAAI,SAAS,GAAG,IAAI,IAAI,SAAS,GAAG,IAAI,IAAI,SAAS,GAAG,IAAI,IAAI,SAAS,GAAG,IAAI,IAAI,SAAS,GAAG,KAAK,IAAI,SAAS,GAAG,KAAK,IAAI,SAAS,GAAG,KAAK,IAAI,SAAS,GAAG,KAAK,IAAI,SAAS,GAAG,KAAK,IAAI,SAAS,GAAG,KAAK,IAAI,SAAS,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,IAAI,UAAU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",
  "names": ["exports", "palette", "x", "y", "i", "il", "rgb", "c", "palette_offset", "exports", "module", "BitmapImage", "x", "y", "image", "exports", "GifError", "exports", "module", "__defProp", "__defNormalProp", "__export", "module2", "__publicField", "applyPaletteSync", "buildPaletteSync", "constants_exports", "conversion_exports", "distance_exports", "image_exports", "palette_exports", "quality_exports", "utils_exports", "bt709_exports", "Y", "x", "y", "Y2", "x2", "y2", "lab2rgb", "lab2xyz", "rgb2hsl", "rgb2lab", "rgb2xyz", "xyz2lab", "xyz2rgb", "correctGamma", "arithmetic_exports", "degrees2radians", "inRange0to255", "inRange0to255Rounded", "intInRange", "max3", "min3", "stableSort", "c", "refX", "refY", "refZ", "pivot", "z", "refX2", "refY2", "refZ2", "pivot2", "correctGamma2", "AbstractDistanceCalculator", "AbstractEuclidean", "AbstractManhattan", "CIE94GraphicArts", "CIE94Textiles", "CIEDE2000", "CMetric", "Euclidean", "EuclideanBT709", "EuclideanBT709NoAlpha", "Manhattan", "ManhattanBT709", "ManhattanNommyde", "PNGQuant", "AbstractCIE94", "_CIEDE2000", "AbstractPaletteQuantizer", "ColorHistogram", "NeuQuant", "NeuQuantFloat", "RGBQuant", "WuColorCube", "WuQuant", "Point", "PointContainer", "clone", "hueGroups", "hueGroup", "Palette", "distance", "HueStatistics", "ProgressTracker", "HueGroup", "_ProgressTracker", "networkBiasShift", "Neuron", "_NeuQuant", "palette", "networkBiasShift2", "NeuronFloat", "_NeuQuantFloat", "_ColorHistogram", "RemovedColor", "image", "createArray1D", "createArray4D", "createArray3D", "fillArray3D", "fillArray1D", "_WuQuant", "AbstractImageQuantizer", "ErrorDiffusionArray", "ErrorDiffusionArrayKernel", "ErrorDiffusionRiemersma", "NearestColor", "ErrorDiffusionArrayKernel2", "hilbertCurve", "walkHilbert", "visit", "ssim", "K1", "K2", "iterate", "ssim2", "calculateLumaValuesForWindow", "calculateAverageLuma", "setImmediateImpl", "colorDistanceFormulaToColorDistance", "paletteQuantizationToPaletteQuantizer", "resolve", "reject", "imageQuantizationToImageQuantizer", "exports", "BitmapImage", "GifError", "GifFrame", "exports", "fs", "BitmapImage", "GifFrame", "GifError", "GifCodec", "palette", "histogram", "path", "gif", "image", "resolve", "reject", "exports", "GifError", "GifUtil", "GifFrame", "GifCodec", "palette", "exports", "module", "BitmapImage", "GifError", "GifCodec", "GifFrame", "GifUtil", "exports", "module", "quality", "self", "fDCTQuant", "image", "x", "y", "encode", "exports", "module", "n", "component", "diff", "k", "z", "decode", "mcu", "i", "sample", "path", "length", "frame", "maxH", "maxV", "componentId", "j", "x", "y", "Y", "image", "exports", "module", "encode", "decode", "exports", "module", "util", "exports", "x", "y", "exports", "module", "exports", "module", "x", "exports", "module", "util", "exports", "module", "exports", "module", "exports", "module", "constants", "exports", "image", "y", "x", "exports", "module", "palette", "y", "x", "exports", "module", "util", "palette", "exports", "module", "constants", "y", "x", "exports", "module", "x", "y", "exports", "module", "constants", "exports", "module", "util", "constants", "exports", "module", "util", "self", "exports", "module", "exports", "exports", "module", "palette", "inflatedData", "exports", "module", "constants", "exports", "png", "exports", "util", "PNG", "y", "x", "exports", "exports", "utils", "c", "exports", "module", "exports", "module", "c", "exports", "module", "exports", "utils", "scan", "exports", "utils", "c", "c2", "exports", "module", "require_deflate", "exports", "utils", "toString", "exports", "module", "exports", "module", "utils", "exports", "utils", "require_constants", "exports", "module", "exports", "module", "require_inflate", "exports", "utils", "c", "toString", "exports", "module", "constants", "exports", "module", "UTIF", "pako", "W", "ak", "z", "x", "c", "Y", "e", "X", "N", "y", "V", "F", "arr_a", "arr_b", "i", "diff", "EOI", "SOS", "sosMarker", "exports", "c", "exports", "exports", "exports", "resolve", "reject", "exports", "require_lib", "exports", "exports", "exports", "stream", "exports", "exports", "fromStream", "stream", "fromBuffer", "exports", "exports", "module", "require_core", "stream", "buffer", "children", "fileType", "exports", "module", "path", "exports", "module", "exports", "module", "exports", "module", "stream", "exports", "module", "stream", "c", "exports", "module", "hours", "minutes", "exports", "module", "exports", "module", "require_parser", "exports", "module", "jpeg", "mime", "stream", "exports", "module", "self", "exports", "module", "self", "exports", "module", "exports", "module", "exports", "module", "anyBase", "exports", "module", "exports", "exports", "module", "exports", "module", "XMLDOMImplementation", "exports", "module", "XMLDOMErrorHandler", "exports", "module", "XMLDOMStringList", "exports", "module", "XMLDOMConfiguration", "exports", "module", "exports", "module", "XMLAttribute", "exports", "module", "XMLNamedNodeMap", "exports", "module", "XMLElement", "exports", "module", "XMLCharacterData", "exports", "module", "XMLCData", "exports", "module", "XMLComment", "exports", "module", "XMLDeclaration", "exports", "module", "XMLDTDAttList", "exports", "module", "XMLDTDEntity", "exports", "module", "XMLDTDElement", "exports", "module", "XMLDTDNotation", "exports", "module", "XMLDocType", "exports", "module", "XMLRaw", "exports", "module", "XMLText", "exports", "module", "XMLProcessingInstruction", "exports", "module", "XMLDummy", "exports", "module", "XMLNodeList", "exports", "module", "exports", "module", "XMLNode", "exports", "module", "XMLStringifier", "exports", "module", "exports", "module", "XMLWriterBase", "exports", "module", "XMLStringWriter", "exports", "module", "XMLDocument", "exports", "module", "XMLDocumentCB", "exports", "module", "XMLStreamWriter", "stream", "require_lib", "exports", "module", "stream", "exports", "exports", "c", "s", "x", "exports", "exports", "require_parser", "exports", "setImmediate", "processors", "process", "err", "resolve", "reject", "exports", "exports", "module", "require_lib", "exports", "module", "exports", "module", "HEADER", "i", "c", "exports", "module", "e", "n", "a", "u", "c", "t", "r", "s", "T", "i", "p", "N", "E", "f", "l", "y", "x", "exports", "module", "diff", "y", "x", "c", "HeaderTypes", "x", "BmpCompression", "x", "y", "c", "x", "c", "y", "obj", "p", "q", "c", "clone", "image", "x", "y", "encode", "image", "decode", "gif", "GIF", "quality", "JPEG", "PNGFilterType", "PNGColorType", "png", "tiff", "utif", "util", "objectUtil", "path", "x", "isValid", "errorUtil", "path", "isValid", "errorMap", "ctx", "result", "issues", "x", "elements", "processed", "ZodFirstPartyTypeKind", "Edge", "image", "x", "y", "methods", "image", "x", "y", "idx", "methods", "image", "x", "y", "image", "x", "y", "histogram", "methods", "clone", "HorizontalAlign", "VerticalAlign", "BlendMode", "darken", "lighten", "names", "x", "y", "x", "y", "image", "EXIFParser", "methods", "mime", "fileType", "format", "image", "path", "x", "y", "ResizeStrategy", "x", "y", "x2", "y2", "methods", "image", "methods", "image", "c", "clone", "methods", "image", "x", "y", "methods", "image", "methods", "image", "clone", "x", "y", "methods", "image", "x", "y", "methods", "image", "clone", "x", "y", "methods", "image", "x", "y", "methods", "clone", "x", "y", "intToRGBA", "anyBase", "methods", "image", "distance", "methods", "image", "x", "y", "x", "length", "image", "x", "y", "methods", "c", "x", "y", "image", "c", "clone", "methods", "methods", "image", "__export", "c", "z", "clone", "distance", "palette", "image", "image", "palette", "methods", "image", "palette", "xmlPackage", "readBinary", "parseXML", "parseASCII", "existsSync", "fs", "methods", "clone", "diff", "pixelMatch", "methods"]
}
